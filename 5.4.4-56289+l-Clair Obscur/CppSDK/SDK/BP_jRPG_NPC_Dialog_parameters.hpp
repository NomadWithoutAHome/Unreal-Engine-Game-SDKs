#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_jRPG_NPC_Dialog

#include "Basic.hpp"

#include "EDialogueCameraType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "E_NPC_SpolightTypes_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "S_jRPG_WorldCharacters_structs.hpp"
#include "S_GameplayPauseParameters_structs.hpp"
#include "FLevelDataEntry_structs.hpp"
#include "E_CharacterList_structs.hpp"
#include "S_InputLockParameters_structs.hpp"
#include "S_DialogueParameters_structs.hpp"
#include "SandFall_structs.hpp"


namespace SDK::Params
{

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.BPI_GetDialogueAudioComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_BPI_GetDialogueAudioComponent final
{
public:
	class UAudioComponent*                        AudioComponent;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_BPI_GetDialogueAudioComponent) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_BPI_GetDialogueAudioComponent");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_BPI_GetDialogueAudioComponent) == 0x000008, "Wrong size on BP_jRPG_NPC_Dialog_C_BPI_GetDialogueAudioComponent");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_GetDialogueAudioComponent, AudioComponent) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_BPI_GetDialogueAudioComponent::AudioComponent' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.BPI_GetDialogueCameraByType
// 0x0040 (0x0040 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_BPI_GetDialogueCameraByType final
{
public:
	EDialogueCameraType                           CameraType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       CameraComponent;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EDialogueCameraType                           Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       Temp_object_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       Temp_object_Variable_2;                            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       Temp_object_Variable_3;                            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_BPI_GetDialogueCameraByType) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_BPI_GetDialogueCameraByType");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_BPI_GetDialogueCameraByType) == 0x000040, "Wrong size on BP_jRPG_NPC_Dialog_C_BPI_GetDialogueCameraByType");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_GetDialogueCameraByType, CameraType) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_BPI_GetDialogueCameraByType::CameraType' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_GetDialogueCameraByType, CameraComponent) == 0x000008, "Member 'BP_jRPG_NPC_Dialog_C_BPI_GetDialogueCameraByType::CameraComponent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_GetDialogueCameraByType, Temp_byte_Variable) == 0x000010, "Member 'BP_jRPG_NPC_Dialog_C_BPI_GetDialogueCameraByType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_GetDialogueCameraByType, Temp_object_Variable) == 0x000018, "Member 'BP_jRPG_NPC_Dialog_C_BPI_GetDialogueCameraByType::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_GetDialogueCameraByType, Temp_object_Variable_1) == 0x000020, "Member 'BP_jRPG_NPC_Dialog_C_BPI_GetDialogueCameraByType::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_GetDialogueCameraByType, Temp_object_Variable_2) == 0x000028, "Member 'BP_jRPG_NPC_Dialog_C_BPI_GetDialogueCameraByType::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_GetDialogueCameraByType, Temp_object_Variable_3) == 0x000030, "Member 'BP_jRPG_NPC_Dialog_C_BPI_GetDialogueCameraByType::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_GetDialogueCameraByType, K2Node_Select_Default) == 0x000038, "Member 'BP_jRPG_NPC_Dialog_C_BPI_GetDialogueCameraByType::K2Node_Select_Default' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.BPI_HasLightingAuthority
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_BPI_HasLightingAuthority final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_BPI_HasLightingAuthority) == 0x000001, "Wrong alignment on BP_jRPG_NPC_Dialog_C_BPI_HasLightingAuthority");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_BPI_HasLightingAuthority) == 0x000001, "Wrong size on BP_jRPG_NPC_Dialog_C_BPI_HasLightingAuthority");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_HasLightingAuthority, ReturnValue) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_BPI_HasLightingAuthority::ReturnValue' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.BPI_ShouldMoveCameraPresetsToOtherSide
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_BPI_ShouldMoveCameraPresetsToOtherSide final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_BPI_ShouldMoveCameraPresetsToOtherSide) == 0x000001, "Wrong alignment on BP_jRPG_NPC_Dialog_C_BPI_ShouldMoveCameraPresetsToOtherSide");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_BPI_ShouldMoveCameraPresetsToOtherSide) == 0x000001, "Wrong size on BP_jRPG_NPC_Dialog_C_BPI_ShouldMoveCameraPresetsToOtherSide");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_ShouldMoveCameraPresetsToOtherSide, ReturnValue) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_BPI_ShouldMoveCameraPresetsToOtherSide::ReturnValue' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.BPI_GetInteractingCharacter
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_BPI_GetInteractingCharacter final
{
public:
	TScriptInterface<class IBPI_DialogueCharacter_C> ReturnValue;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_BPI_GetInteractingCharacter) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_BPI_GetInteractingCharacter");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_BPI_GetInteractingCharacter) == 0x000010, "Wrong size on BP_jRPG_NPC_Dialog_C_BPI_GetInteractingCharacter");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_GetInteractingCharacter, ReturnValue) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_BPI_GetInteractingCharacter::ReturnValue' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.BPI_GetDialogueCameraOffset
// 0x0018 (0x0018 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_BPI_GetDialogueCameraOffset final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_BPI_GetDialogueCameraOffset) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_BPI_GetDialogueCameraOffset");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_BPI_GetDialogueCameraOffset) == 0x000018, "Wrong size on BP_jRPG_NPC_Dialog_C_BPI_GetDialogueCameraOffset");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_GetDialogueCameraOffset, ReturnValue) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_BPI_GetDialogueCameraOffset::ReturnValue' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.BPI_GetReverseSpotlightReceiver
// 0x0038 (0x0038 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_BPI_GetReverseSpotlightReceiver final
{
public:
	TScriptInterface<class IBPI_DialogueCharacter_C> ReturnValue;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_DialogueCharacter_C> Temp_interface_Variable;                        // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_DialogueCharacter_C> K2Node_Select_Default;                          // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_BPI_GetReverseSpotlightReceiver) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_BPI_GetReverseSpotlightReceiver");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_BPI_GetReverseSpotlightReceiver) == 0x000038, "Wrong size on BP_jRPG_NPC_Dialog_C_BPI_GetReverseSpotlightReceiver");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_GetReverseSpotlightReceiver, ReturnValue) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_BPI_GetReverseSpotlightReceiver::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_GetReverseSpotlightReceiver, Temp_bool_Variable) == 0x000010, "Member 'BP_jRPG_NPC_Dialog_C_BPI_GetReverseSpotlightReceiver::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_GetReverseSpotlightReceiver, Temp_interface_Variable) == 0x000018, "Member 'BP_jRPG_NPC_Dialog_C_BPI_GetReverseSpotlightReceiver::Temp_interface_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_GetReverseSpotlightReceiver, K2Node_Select_Default) == 0x000028, "Member 'BP_jRPG_NPC_Dialog_C_BPI_GetReverseSpotlightReceiver::K2Node_Select_Default' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.BPI_GetLightDirection
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_BPI_GetLightDirection final
{
public:
	E_NPC_SpolightTypes                           ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_BPI_GetLightDirection) == 0x000001, "Wrong alignment on BP_jRPG_NPC_Dialog_C_BPI_GetLightDirection");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_BPI_GetLightDirection) == 0x000001, "Wrong size on BP_jRPG_NPC_Dialog_C_BPI_GetLightDirection");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_GetLightDirection, ReturnValue) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_BPI_GetLightDirection::ReturnValue' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.BPI_GetLightingSet
// 0x0048 (0x0048 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_BPI_GetLightingSet final
{
public:
	E_NPC_SpolightTypes                           LightDirection;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULightComponent*                        FrontLight;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ULightComponent*                        RimLight;                                          // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_NPC_SpolightTypes                           Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULightComponent*                        Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_NPC_SpolightTypes                           Temp_byte_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULightComponent*                        Temp_object_Variable_1;                            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ULightComponent*                        K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ULightComponent*                        K2Node_Select_Default_1;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_BPI_GetLightingSet) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_BPI_GetLightingSet");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_BPI_GetLightingSet) == 0x000048, "Wrong size on BP_jRPG_NPC_Dialog_C_BPI_GetLightingSet");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_GetLightingSet, LightDirection) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_BPI_GetLightingSet::LightDirection' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_GetLightingSet, FrontLight) == 0x000008, "Member 'BP_jRPG_NPC_Dialog_C_BPI_GetLightingSet::FrontLight' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_GetLightingSet, RimLight) == 0x000010, "Member 'BP_jRPG_NPC_Dialog_C_BPI_GetLightingSet::RimLight' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_GetLightingSet, Temp_byte_Variable) == 0x000018, "Member 'BP_jRPG_NPC_Dialog_C_BPI_GetLightingSet::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_GetLightingSet, Temp_object_Variable) == 0x000020, "Member 'BP_jRPG_NPC_Dialog_C_BPI_GetLightingSet::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_GetLightingSet, Temp_byte_Variable_1) == 0x000028, "Member 'BP_jRPG_NPC_Dialog_C_BPI_GetLightingSet::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_GetLightingSet, Temp_object_Variable_1) == 0x000030, "Member 'BP_jRPG_NPC_Dialog_C_BPI_GetLightingSet::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_GetLightingSet, K2Node_Select_Default) == 0x000038, "Member 'BP_jRPG_NPC_Dialog_C_BPI_GetLightingSet::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_GetLightingSet, K2Node_Select_Default_1) == 0x000040, "Member 'BP_jRPG_NPC_Dialog_C_BPI_GetLightingSet::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.BPI_GetAllDialogueCameras
// 0x0020 (0x0020 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_BPI_GetAllDialogueCameras final
{
public:
	TArray<class UCineCameraComponent*>           CineCameraComponents;                              // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UCineCameraComponent*>           CallFunc_GetAllDialogueCameras_Array;              // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_BPI_GetAllDialogueCameras) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_BPI_GetAllDialogueCameras");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_BPI_GetAllDialogueCameras) == 0x000020, "Wrong size on BP_jRPG_NPC_Dialog_C_BPI_GetAllDialogueCameras");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_GetAllDialogueCameras, CineCameraComponents) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_BPI_GetAllDialogueCameras::CineCameraComponents' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_GetAllDialogueCameras, CallFunc_GetAllDialogueCameras_Array) == 0x000010, "Member 'BP_jRPG_NPC_Dialog_C_BPI_GetAllDialogueCameras::CallFunc_GetAllDialogueCameras_Array' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.BPI_GetDialogueFocusPoint
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_BPI_GetDialogueFocusPoint final
{
public:
	class USceneComponent*                        SceneComponent;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_BPI_GetDialogueFocusPoint) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_BPI_GetDialogueFocusPoint");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_BPI_GetDialogueFocusPoint) == 0x000008, "Wrong size on BP_jRPG_NPC_Dialog_C_BPI_GetDialogueFocusPoint");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_GetDialogueFocusPoint, SceneComponent) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_BPI_GetDialogueFocusPoint::SceneComponent' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.BPI_GetSpotlightsToActivateDuringDialogue
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_BPI_GetSpotlightsToActivateDuringDialogue final
{
public:
	TArray<TSoftObjectPtr<class ASpotLight>>      SpotLightActors;                                   // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_BPI_GetSpotlightsToActivateDuringDialogue) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_BPI_GetSpotlightsToActivateDuringDialogue");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_BPI_GetSpotlightsToActivateDuringDialogue) == 0x000010, "Wrong size on BP_jRPG_NPC_Dialog_C_BPI_GetSpotlightsToActivateDuringDialogue");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BPI_GetSpotlightsToActivateDuringDialogue, SpotLightActors) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_BPI_GetSpotlightsToActivateDuringDialogue::SpotLightActors' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.GetDialogueCharacterInterface
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_GetDialogueCharacterInterface final
{
public:
	TScriptInterface<class IBPI_DialogueCharacter_C> ReturnValue;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_GetDialogueCharacterInterface) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_GetDialogueCharacterInterface");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_GetDialogueCharacterInterface) == 0x000010, "Wrong size on BP_jRPG_NPC_Dialog_C_GetDialogueCharacterInterface");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GetDialogueCharacterInterface, ReturnValue) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_GetDialogueCharacterInterface::ReturnValue' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.AreDependenciesLoaded
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_AreDependenciesLoaded final
{
public:
	bool                                          AreLoaded;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_AreDependenciesLoaded) == 0x000001, "Wrong alignment on BP_jRPG_NPC_Dialog_C_AreDependenciesLoaded");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_AreDependenciesLoaded) == 0x000001, "Wrong size on BP_jRPG_NPC_Dialog_C_AreDependenciesLoaded");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_AreDependenciesLoaded, AreLoaded) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_AreDependenciesLoaded::AreLoaded' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.GetCharacterActor
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_GetCharacterActor final
{
public:
	class AActor*                                 Character;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_GetCharacterActor) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_GetCharacterActor");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_GetCharacterActor) == 0x000008, "Wrong size on BP_jRPG_NPC_Dialog_C_GetCharacterActor");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GetCharacterActor, Character) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_GetCharacterActor::Character' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.GetCameraComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_GetCameraComponent final
{
public:
	class UCameraComponent*                       Camera;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_GetCameraComponent) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_GetCameraComponent");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_GetCameraComponent) == 0x000008, "Wrong size on BP_jRPG_NPC_Dialog_C_GetCameraComponent");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GetCameraComponent, Camera) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_GetCameraComponent::Camera' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.GetAssetDialogueCharacter
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_GetAssetDialogueCharacter final
{
public:
	class UBP_DataAsset_DialogueCharacter_C*      DialogueCharacter_0;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_GetAssetDialogueCharacter) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_GetAssetDialogueCharacter");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_GetAssetDialogueCharacter) == 0x000008, "Wrong size on BP_jRPG_NPC_Dialog_C_GetAssetDialogueCharacter");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GetAssetDialogueCharacter, DialogueCharacter_0) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_GetAssetDialogueCharacter::DialogueCharacter_0' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.ForceLODDuringDialogue
// 0x0048 (0x0048 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_ForceLODDuringDialogue final
{
public:
	bool                                          CallFunc_IsCurrentConsoleTypeLockheart_ReturnValue; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0008(0x0020)()
	struct FGameplayTag                           CallFunc_GetPlatformNameAsTag_ReturnValue;         // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue;   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_ForceLODDuringDialogue) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_ForceLODDuringDialogue");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_ForceLODDuringDialogue) == 0x000048, "Wrong size on BP_jRPG_NPC_Dialog_C_ForceLODDuringDialogue");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ForceLODDuringDialogue, CallFunc_IsCurrentConsoleTypeLockheart_ReturnValue) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_ForceLODDuringDialogue::CallFunc_IsCurrentConsoleTypeLockheart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ForceLODDuringDialogue, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000008, "Member 'BP_jRPG_NPC_Dialog_C_ForceLODDuringDialogue::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ForceLODDuringDialogue, CallFunc_GetPlatformNameAsTag_ReturnValue) == 0x000028, "Member 'BP_jRPG_NPC_Dialog_C_ForceLODDuringDialogue::CallFunc_GetPlatformNameAsTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ForceLODDuringDialogue, CallFunc_HasTag_ReturnValue) == 0x000030, "Member 'BP_jRPG_NPC_Dialog_C_ForceLODDuringDialogue::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ForceLODDuringDialogue, CallFunc_GetConsoleVariableIntValue_ReturnValue) == 0x000034, "Member 'BP_jRPG_NPC_Dialog_C_ForceLODDuringDialogue::CallFunc_GetConsoleVariableIntValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ForceLODDuringDialogue, CallFunc_Subtract_IntInt_ReturnValue) == 0x000038, "Member 'BP_jRPG_NPC_Dialog_C_ForceLODDuringDialogue::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ForceLODDuringDialogue, CallFunc_Abs_Int_ReturnValue) == 0x00003C, "Member 'BP_jRPG_NPC_Dialog_C_ForceLODDuringDialogue::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ForceLODDuringDialogue, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_jRPG_NPC_Dialog_C_ForceLODDuringDialogue::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.UnpauseGameplayAfterDialog
// 0x0048 (0x0048 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_UnpauseGameplayAfterDialog final
{
public:
	struct FS_GameplayPauseParameters             K2Node_MakeStruct_S_GameplayPauseParameters;       // 0x0000(0x0030)(HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            K2Node_DynamicCast_AsBP_J_RPG_Controller_World;    // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_UnpauseGameplayAfterDialog) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_UnpauseGameplayAfterDialog");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_UnpauseGameplayAfterDialog) == 0x000048, "Wrong size on BP_jRPG_NPC_Dialog_C_UnpauseGameplayAfterDialog");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UnpauseGameplayAfterDialog, K2Node_MakeStruct_S_GameplayPauseParameters) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_UnpauseGameplayAfterDialog::K2Node_MakeStruct_S_GameplayPauseParameters' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UnpauseGameplayAfterDialog, CallFunc_GetPlayerController_ReturnValue) == 0x000030, "Member 'BP_jRPG_NPC_Dialog_C_UnpauseGameplayAfterDialog::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UnpauseGameplayAfterDialog, K2Node_DynamicCast_AsBP_J_RPG_Controller_World) == 0x000038, "Member 'BP_jRPG_NPC_Dialog_C_UnpauseGameplayAfterDialog::K2Node_DynamicCast_AsBP_J_RPG_Controller_World' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UnpauseGameplayAfterDialog, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_jRPG_NPC_Dialog_C_UnpauseGameplayAfterDialog::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.PauseGameplayBeforeDialog
// 0x0058 (0x0058 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_PauseGameplayBeforeDialog final
{
public:
	TArray<class UClass*>                         K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm)
	struct FS_GameplayPauseParameters             K2Node_MakeStruct_S_GameplayPauseParameters;       // 0x0010(0x0030)(HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            K2Node_DynamicCast_AsBP_J_RPG_Controller_World;    // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_PauseGameplayBeforeDialog) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_PauseGameplayBeforeDialog");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_PauseGameplayBeforeDialog) == 0x000058, "Wrong size on BP_jRPG_NPC_Dialog_C_PauseGameplayBeforeDialog");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_PauseGameplayBeforeDialog, K2Node_MakeArray_Array) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_PauseGameplayBeforeDialog::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_PauseGameplayBeforeDialog, K2Node_MakeStruct_S_GameplayPauseParameters) == 0x000010, "Member 'BP_jRPG_NPC_Dialog_C_PauseGameplayBeforeDialog::K2Node_MakeStruct_S_GameplayPauseParameters' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_PauseGameplayBeforeDialog, CallFunc_GetPlayerController_ReturnValue) == 0x000040, "Member 'BP_jRPG_NPC_Dialog_C_PauseGameplayBeforeDialog::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_PauseGameplayBeforeDialog, K2Node_DynamicCast_AsBP_J_RPG_Controller_World) == 0x000048, "Member 'BP_jRPG_NPC_Dialog_C_PauseGameplayBeforeDialog::K2Node_DynamicCast_AsBP_J_RPG_Controller_World' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_PauseGameplayBeforeDialog, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_jRPG_NPC_Dialog_C_PauseGameplayBeforeDialog::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.Validate Hidden Actors Visiblity Array
// 0x0188 (0x0188 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array final
{
public:
	TArray<TSoftObjectPtr<class AActor>>          Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AActor>                  CallFunc_Array_Get_Item;                           // 0x0028(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0078(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0088(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0098(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00E0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0128(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0138(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue_1;                     // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ConditionCheckerComponent_C*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array) == 0x000188, "Wrong size on BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array, Array) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array::Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000050, "Member 'BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array, K2Node_DynamicCast_AsActor) == 0x000058, "Member 'BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array, CallFunc_IsValid_ReturnValue) == 0x000061, "Member 'BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array, CallFunc_GetDisplayName_ReturnValue) == 0x000068, "Member 'BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array, CallFunc_Conv_StringToText_ReturnValue) == 0x000078, "Member 'BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000088, "Member 'BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array, K2Node_MakeStruct_FormatArgumentData) == 0x000098, "Member 'BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000E0, "Member 'BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array, K2Node_MakeArray_Array) == 0x000128, "Member 'BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array, K2Node_MakeArray_Array_1) == 0x000138, "Member 'BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array, CallFunc_Format_ReturnValue) == 0x000148, "Member 'BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array, CallFunc_Format_ReturnValue_1) == 0x000158, "Member 'BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array, K2Node_DynamicCast_AsPawn) == 0x000168, "Member 'BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array, K2Node_DynamicCast_bSuccess_1) == 0x000170, "Member 'BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array, CallFunc_GetComponentByClass_ReturnValue) == 0x000178, "Member 'BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array, CallFunc_IsValid_ReturnValue_1) == 0x000180, "Member 'BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.ForceActorsToUnhideVisibility
// 0x0060 (0x0060 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_ForceActorsToUnhideVisibility final
{
public:
	bool                                          NewHidden;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AActor>                  CallFunc_Array_Get_Item;                           // 0x0018(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_ForceActorsToUnhideVisibility) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_ForceActorsToUnhideVisibility");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_ForceActorsToUnhideVisibility) == 0x000060, "Wrong size on BP_jRPG_NPC_Dialog_C_ForceActorsToUnhideVisibility");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ForceActorsToUnhideVisibility, NewHidden) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_ForceActorsToUnhideVisibility::NewHidden' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ForceActorsToUnhideVisibility, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_jRPG_NPC_Dialog_C_ForceActorsToUnhideVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ForceActorsToUnhideVisibility, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_jRPG_NPC_Dialog_C_ForceActorsToUnhideVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ForceActorsToUnhideVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_jRPG_NPC_Dialog_C_ForceActorsToUnhideVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ForceActorsToUnhideVisibility, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_jRPG_NPC_Dialog_C_ForceActorsToUnhideVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ForceActorsToUnhideVisibility, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_jRPG_NPC_Dialog_C_ForceActorsToUnhideVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ForceActorsToUnhideVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_jRPG_NPC_Dialog_C_ForceActorsToUnhideVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ForceActorsToUnhideVisibility, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000048, "Member 'BP_jRPG_NPC_Dialog_C_ForceActorsToUnhideVisibility::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ForceActorsToUnhideVisibility, K2Node_DynamicCast_AsActor) == 0x000050, "Member 'BP_jRPG_NPC_Dialog_C_ForceActorsToUnhideVisibility::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ForceActorsToUnhideVisibility, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_jRPG_NPC_Dialog_C_ForceActorsToUnhideVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ForceActorsToUnhideVisibility, CallFunc_IsValid_ReturnValue) == 0x000059, "Member 'BP_jRPG_NPC_Dialog_C_ForceActorsToUnhideVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.SetActorsVisibilityForDialogue
// 0x00C0 (0x00C0 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue final
{
public:
	bool                                          ShouldBeVisible;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AActor>                  CallFunc_Array_Get_Item;                           // 0x0020(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AActor>                  CallFunc_Array_Get_Item_1;                         // 0x0078(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor_1;                      // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue) == 0x0000C0, "Wrong size on BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue, ShouldBeVisible) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue::ShouldBeVisible' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000009, "Member 'BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000A, "Member 'BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000050, "Member 'BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue, K2Node_DynamicCast_AsActor) == 0x000060, "Member 'BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue, CallFunc_Add_IntInt_ReturnValue_1) == 0x00006C, "Member 'BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue, CallFunc_Array_Length_ReturnValue_1) == 0x000070, "Member 'BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A0, "Member 'BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x0000A8, "Member 'BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue, K2Node_DynamicCast_AsActor_1) == 0x0000B0, "Member 'BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue::K2Node_DynamicCast_AsActor_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue, K2Node_DynamicCast_bSuccess_1) == 0x0000B8, "Member 'BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue, CallFunc_IsValid_ReturnValue_1) == 0x0000B9, "Member 'BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.CanInteractWithMount
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_CanInteractWithMount final
{
public:
	bool                                          CanInteract;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_CanInteractWithMount) == 0x000001, "Wrong alignment on BP_jRPG_NPC_Dialog_C_CanInteractWithMount");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_CanInteractWithMount) == 0x000001, "Wrong size on BP_jRPG_NPC_Dialog_C_CanInteractWithMount");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_CanInteractWithMount, CanInteract) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_CanInteractWithMount::CanInteract' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.GoBackToOriginalLocationAfterDialogue
// 0x0150 (0x0150 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_GoBackToOriginalLocationAfterDialogue final
{
public:
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0050(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_GoBackToOriginalLocationAfterDialogue) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_GoBackToOriginalLocationAfterDialogue");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_GoBackToOriginalLocationAfterDialogue) == 0x000150, "Wrong size on BP_jRPG_NPC_Dialog_C_GoBackToOriginalLocationAfterDialogue");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GoBackToOriginalLocationAfterDialogue, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_GoBackToOriginalLocationAfterDialogue::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GoBackToOriginalLocationAfterDialogue, CallFunc_BreakTransform_Location) == 0x000008, "Member 'BP_jRPG_NPC_Dialog_C_GoBackToOriginalLocationAfterDialogue::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GoBackToOriginalLocationAfterDialogue, CallFunc_BreakTransform_Rotation) == 0x000020, "Member 'BP_jRPG_NPC_Dialog_C_GoBackToOriginalLocationAfterDialogue::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GoBackToOriginalLocationAfterDialogue, CallFunc_BreakTransform_Scale) == 0x000038, "Member 'BP_jRPG_NPC_Dialog_C_GoBackToOriginalLocationAfterDialogue::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GoBackToOriginalLocationAfterDialogue, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000050, "Member 'BP_jRPG_NPC_Dialog_C_GoBackToOriginalLocationAfterDialogue::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GoBackToOriginalLocationAfterDialogue, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000148, "Member 'BP_jRPG_NPC_Dialog_C_GoBackToOriginalLocationAfterDialogue::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.RuntimeCheckSimulationAndPauseAnim
// 0x0003 (0x0003 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_RuntimeCheckSimulationAndPauseAnim final
{
public:
	bool                                          CallFunc_WasRecentlyRendered_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsClothingSimulationSuspended_ReturnValue; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsClothingSimulationSuspended_ReturnValue_1; // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_RuntimeCheckSimulationAndPauseAnim) == 0x000001, "Wrong alignment on BP_jRPG_NPC_Dialog_C_RuntimeCheckSimulationAndPauseAnim");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_RuntimeCheckSimulationAndPauseAnim) == 0x000003, "Wrong size on BP_jRPG_NPC_Dialog_C_RuntimeCheckSimulationAndPauseAnim");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_RuntimeCheckSimulationAndPauseAnim, CallFunc_WasRecentlyRendered_ReturnValue) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_RuntimeCheckSimulationAndPauseAnim::CallFunc_WasRecentlyRendered_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_RuntimeCheckSimulationAndPauseAnim, CallFunc_IsClothingSimulationSuspended_ReturnValue) == 0x000001, "Member 'BP_jRPG_NPC_Dialog_C_RuntimeCheckSimulationAndPauseAnim::CallFunc_IsClothingSimulationSuspended_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_RuntimeCheckSimulationAndPauseAnim, CallFunc_IsClothingSimulationSuspended_ReturnValue_1) == 0x000002, "Member 'BP_jRPG_NPC_Dialog_C_RuntimeCheckSimulationAndPauseAnim::CallFunc_IsClothingSimulationSuspended_ReturnValue_1' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.UpdateWorldCharacterIfNeeded
// 0x0048 (0x0048 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_UpdateWorldCharacterIfNeeded final
{
public:
	E_CharacterList                               Character;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_ToHardcodedName_HardcodedName;            // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentWorldCharacter_Found;           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_WorldCharacters                CallFunc_GetCurrentWorldCharacter_WorldCharacter;  // 0x0010(0x0030)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_UpdateWorldCharacterIfNeeded) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_UpdateWorldCharacterIfNeeded");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_UpdateWorldCharacterIfNeeded) == 0x000048, "Wrong size on BP_jRPG_NPC_Dialog_C_UpdateWorldCharacterIfNeeded");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UpdateWorldCharacterIfNeeded, Character) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_UpdateWorldCharacterIfNeeded::Character' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UpdateWorldCharacterIfNeeded, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_jRPG_NPC_Dialog_C_UpdateWorldCharacterIfNeeded::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UpdateWorldCharacterIfNeeded, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'BP_jRPG_NPC_Dialog_C_UpdateWorldCharacterIfNeeded::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UpdateWorldCharacterIfNeeded, CallFunc_ToHardcodedName_HardcodedName) == 0x000004, "Member 'BP_jRPG_NPC_Dialog_C_UpdateWorldCharacterIfNeeded::CallFunc_ToHardcodedName_HardcodedName' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UpdateWorldCharacterIfNeeded, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'BP_jRPG_NPC_Dialog_C_UpdateWorldCharacterIfNeeded::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UpdateWorldCharacterIfNeeded, CallFunc_GetCurrentWorldCharacter_Found) == 0x00000D, "Member 'BP_jRPG_NPC_Dialog_C_UpdateWorldCharacterIfNeeded::CallFunc_GetCurrentWorldCharacter_Found' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UpdateWorldCharacterIfNeeded, CallFunc_GetCurrentWorldCharacter_WorldCharacter) == 0x000010, "Member 'BP_jRPG_NPC_Dialog_C_UpdateWorldCharacterIfNeeded::CallFunc_GetCurrentWorldCharacter_WorldCharacter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UpdateWorldCharacterIfNeeded, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x000040, "Member 'BP_jRPG_NPC_Dialog_C_UpdateWorldCharacterIfNeeded::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UpdateWorldCharacterIfNeeded, CallFunc_BooleanAND_ReturnValue_1) == 0x000041, "Member 'BP_jRPG_NPC_Dialog_C_UpdateWorldCharacterIfNeeded::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.ComputeDialogueParameters
// 0x01D8 (0x01D8 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_ComputeDialogueParameters final
{
public:
	struct FS_DialogueParameters                  S_DialogueParameters;                              // 0x0000(0x0008)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentLevelData_Found;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFLevelDataEntry                       CallFunc_GetCurrentLevelData_LevelData;            // 0x0010(0x01B0)(HasGetValueTypeHash)
	class FName                                   CallFunc_GetCurrentLevelData_RowName;              // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CA[0x2];                                      // 0x01CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_DialogueParameters                  K2Node_MakeStruct_S_DialogueParameters;            // 0x01CC(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_ComputeDialogueParameters) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_ComputeDialogueParameters");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_ComputeDialogueParameters) == 0x0001D8, "Wrong size on BP_jRPG_NPC_Dialog_C_ComputeDialogueParameters");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ComputeDialogueParameters, S_DialogueParameters) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_ComputeDialogueParameters::S_DialogueParameters' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ComputeDialogueParameters, CallFunc_GetCurrentLevelData_Found) == 0x000008, "Member 'BP_jRPG_NPC_Dialog_C_ComputeDialogueParameters::CallFunc_GetCurrentLevelData_Found' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ComputeDialogueParameters, CallFunc_GetCurrentLevelData_LevelData) == 0x000010, "Member 'BP_jRPG_NPC_Dialog_C_ComputeDialogueParameters::CallFunc_GetCurrentLevelData_LevelData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ComputeDialogueParameters, CallFunc_GetCurrentLevelData_RowName) == 0x0001C0, "Member 'BP_jRPG_NPC_Dialog_C_ComputeDialogueParameters::CallFunc_GetCurrentLevelData_RowName' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ComputeDialogueParameters, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001C8, "Member 'BP_jRPG_NPC_Dialog_C_ComputeDialogueParameters::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ComputeDialogueParameters, CallFunc_Not_PreBool_ReturnValue) == 0x0001C9, "Member 'BP_jRPG_NPC_Dialog_C_ComputeDialogueParameters::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ComputeDialogueParameters, K2Node_MakeStruct_S_DialogueParameters) == 0x0001CC, "Member 'BP_jRPG_NPC_Dialog_C_ComputeDialogueParameters::K2Node_MakeStruct_S_DialogueParameters' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.GetUseReversedSpotlightForWorldCharacter
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_GetUseReversedSpotlightForWorldCharacter final
{
public:
	bool                                          UseReversedSpotlightForWorldCharacter_0;           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_GetUseReversedSpotlightForWorldCharacter) == 0x000001, "Wrong alignment on BP_jRPG_NPC_Dialog_C_GetUseReversedSpotlightForWorldCharacter");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_GetUseReversedSpotlightForWorldCharacter) == 0x000001, "Wrong size on BP_jRPG_NPC_Dialog_C_GetUseReversedSpotlightForWorldCharacter");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GetUseReversedSpotlightForWorldCharacter, UseReversedSpotlightForWorldCharacter_0) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_GetUseReversedSpotlightForWorldCharacter::UseReversedSpotlightForWorldCharacter_0' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.GetTurnOnSpotlights
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_GetTurnOnSpotlights final
{
public:
	E_NPC_SpolightTypes                           TurnOnSpotlights_0;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_GetTurnOnSpotlights) == 0x000001, "Wrong alignment on BP_jRPG_NPC_Dialog_C_GetTurnOnSpotlights");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_GetTurnOnSpotlights) == 0x000001, "Wrong size on BP_jRPG_NPC_Dialog_C_GetTurnOnSpotlights");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GetTurnOnSpotlights, TurnOnSpotlights_0) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_GetTurnOnSpotlights::TurnOnSpotlights_0' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.GetAllDialogueCameras
// 0x0020 (0x0020 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_GetAllDialogueCameras final
{
public:
	TArray<class UCineCameraComponent*>           Array;                                             // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UCineCameraComponent*>           K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_GetAllDialogueCameras) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_GetAllDialogueCameras");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_GetAllDialogueCameras) == 0x000020, "Wrong size on BP_jRPG_NPC_Dialog_C_GetAllDialogueCameras");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GetAllDialogueCameras, Array) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_GetAllDialogueCameras::Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GetAllDialogueCameras, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_jRPG_NPC_Dialog_C_GetAllDialogueCameras::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.GetMovePresetCamerasToOtherSide
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_GetMovePresetCamerasToOtherSide final
{
public:
	bool                                          MovePresetCamerasToOtherSide_0;                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_GetMovePresetCamerasToOtherSide) == 0x000001, "Wrong alignment on BP_jRPG_NPC_Dialog_C_GetMovePresetCamerasToOtherSide");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_GetMovePresetCamerasToOtherSide) == 0x000001, "Wrong size on BP_jRPG_NPC_Dialog_C_GetMovePresetCamerasToOtherSide");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GetMovePresetCamerasToOtherSide, MovePresetCamerasToOtherSide_0) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_GetMovePresetCamerasToOtherSide::MovePresetCamerasToOtherSide_0' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.GetSpotlightsToActivateDuringDialogue
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_GetSpotlightsToActivateDuringDialogue final
{
public:
	TArray<TSoftObjectPtr<class ASpotLight>>      SpotlightsToActivateDuringDialogues_0;             // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_GetSpotlightsToActivateDuringDialogue) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_GetSpotlightsToActivateDuringDialogue");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_GetSpotlightsToActivateDuringDialogue) == 0x000010, "Wrong size on BP_jRPG_NPC_Dialog_C_GetSpotlightsToActivateDuringDialogue");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GetSpotlightsToActivateDuringDialogue, SpotlightsToActivateDuringDialogues_0) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_GetSpotlightsToActivateDuringDialogue::SpotlightsToActivateDuringDialogues_0' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.GetAllSpeakers
// 0x00A8 (0x00A8 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_GetAllSpeakers final
{
public:
	TArray<class AActor*>                         Speakers;                                          // 0x0000(0x0010)(Parm, OutParm)
	TArray<class AActor*>                         local_Speakers;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AActor>                  CallFunc_Array_Get_Item;                           // 0x0038(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Dialogue_SpeakerSlot_C> K2Node_DynamicCast_AsBPI_Dialogue_Speaker_Slot; // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCharacterActor_Character;              // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_GetAllSpeakers) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_GetAllSpeakers");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_GetAllSpeakers) == 0x0000A8, "Wrong size on BP_jRPG_NPC_Dialog_C_GetAllSpeakers");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GetAllSpeakers, Speakers) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_GetAllSpeakers::Speakers' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GetAllSpeakers, local_Speakers) == 0x000010, "Member 'BP_jRPG_NPC_Dialog_C_GetAllSpeakers::local_Speakers' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GetAllSpeakers, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_jRPG_NPC_Dialog_C_GetAllSpeakers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GetAllSpeakers, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_jRPG_NPC_Dialog_C_GetAllSpeakers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GetAllSpeakers, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_jRPG_NPC_Dialog_C_GetAllSpeakers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GetAllSpeakers, CallFunc_Array_Add_ReturnValue) == 0x00002C, "Member 'BP_jRPG_NPC_Dialog_C_GetAllSpeakers::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GetAllSpeakers, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_jRPG_NPC_Dialog_C_GetAllSpeakers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GetAllSpeakers, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_jRPG_NPC_Dialog_C_GetAllSpeakers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GetAllSpeakers, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_jRPG_NPC_Dialog_C_GetAllSpeakers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GetAllSpeakers, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000068, "Member 'BP_jRPG_NPC_Dialog_C_GetAllSpeakers::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GetAllSpeakers, K2Node_DynamicCast_AsActor) == 0x000070, "Member 'BP_jRPG_NPC_Dialog_C_GetAllSpeakers::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GetAllSpeakers, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_jRPG_NPC_Dialog_C_GetAllSpeakers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GetAllSpeakers, CallFunc_IsValid_ReturnValue) == 0x000079, "Member 'BP_jRPG_NPC_Dialog_C_GetAllSpeakers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GetAllSpeakers, K2Node_DynamicCast_AsBPI_Dialogue_Speaker_Slot) == 0x000080, "Member 'BP_jRPG_NPC_Dialog_C_GetAllSpeakers::K2Node_DynamicCast_AsBPI_Dialogue_Speaker_Slot' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GetAllSpeakers, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'BP_jRPG_NPC_Dialog_C_GetAllSpeakers::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GetAllSpeakers, CallFunc_GetCharacterActor_Character) == 0x000098, "Member 'BP_jRPG_NPC_Dialog_C_GetAllSpeakers::CallFunc_GetCharacterActor_Character' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GetAllSpeakers, CallFunc_IsValid_ReturnValue_1) == 0x0000A0, "Member 'BP_jRPG_NPC_Dialog_C_GetAllSpeakers::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_GetAllSpeakers, CallFunc_Array_Add_ReturnValue_1) == 0x0000A4, "Member 'BP_jRPG_NPC_Dialog_C_GetAllSpeakers::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.UpdateInteractingCharactersVisibility
// 0x0002 (0x0002 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_UpdateInteractingCharactersVisibility final
{
public:
	bool                                          ShouldBeVisible;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_UpdateInteractingCharactersVisibility) == 0x000001, "Wrong alignment on BP_jRPG_NPC_Dialog_C_UpdateInteractingCharactersVisibility");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_UpdateInteractingCharactersVisibility) == 0x000002, "Wrong size on BP_jRPG_NPC_Dialog_C_UpdateInteractingCharactersVisibility");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UpdateInteractingCharactersVisibility, ShouldBeVisible) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_UpdateInteractingCharactersVisibility::ShouldBeVisible' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UpdateInteractingCharactersVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_jRPG_NPC_Dialog_C_UpdateInteractingCharactersVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.PrepareInteractingCharacterAfterDialogue
// 0x0030 (0x0030 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterAfterDialogue final
{
public:
	struct FS_DialogueParameters                  DialogueParameters;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_NPCAnimationComponent_C*            local_NPCAnimationComponent;                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_InputLockParameters                 K2Node_MakeStruct_S_InputLockParameters;           // 0x0010(0x0002)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InputLockComponent_C*               CallFunc_GetInputLockSystem_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_NPCAnimationComponent_C*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_InteractionSystem_C*                CallFunc_GetInteractionSystem_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterAfterDialogue) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterAfterDialogue");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterAfterDialogue) == 0x000030, "Wrong size on BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterAfterDialogue");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterAfterDialogue, DialogueParameters) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterAfterDialogue::DialogueParameters' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterAfterDialogue, local_NPCAnimationComponent) == 0x000008, "Member 'BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterAfterDialogue::local_NPCAnimationComponent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterAfterDialogue, K2Node_MakeStruct_S_InputLockParameters) == 0x000010, "Member 'BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterAfterDialogue::K2Node_MakeStruct_S_InputLockParameters' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterAfterDialogue, CallFunc_GetInputLockSystem_ReturnValue) == 0x000018, "Member 'BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterAfterDialogue::CallFunc_GetInputLockSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterAfterDialogue, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterAfterDialogue::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterAfterDialogue, CallFunc_GetInteractionSystem_ReturnValue) == 0x000028, "Member 'BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterAfterDialogue::CallFunc_GetInteractionSystem_ReturnValue' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.PrepareInteractingCharacterForDialogue
// 0x0280 (0x0280 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue final
{
public:
	struct FS_DialogueParameters                  DialogueParameters;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FS_InputLockParameters                 K2Node_MakeStruct_S_InputLockParameters;           // 0x0088(0x0002)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InputLockComponent_C*               CallFunc_GetInputLockSystem_ReturnValue;           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_DialogCustomLocation_C*             K2Node_DynamicCast_AsBP_Dialog_Custom_Location;    // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x00B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_InteractionSystem_C*                CallFunc_GetInteractionSystem_ReturnValue;         // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0160(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_ConsumeInputVector_ReturnValue;           // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue) == 0x000010, "Wrong alignment on BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue) == 0x000280, "Wrong size on BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue, DialogueParameters) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue::DialogueParameters' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue, CallFunc_GetControlRotation_ReturnValue) == 0x000070, "Member 'BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue, K2Node_MakeStruct_S_InputLockParameters) == 0x000088, "Member 'BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue::K2Node_MakeStruct_S_InputLockParameters' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue, CallFunc_GetInputLockSystem_ReturnValue) == 0x000090, "Member 'BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue::CallFunc_GetInputLockSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000098, "Member 'BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue, K2Node_DynamicCast_AsBP_Dialog_Custom_Location) == 0x0000A0, "Member 'BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue::K2Node_DynamicCast_AsBP_Dialog_Custom_Location' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue, CallFunc_IsValid_ReturnValue) == 0x0000A9, "Member 'BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0000B0, "Member 'BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue, CallFunc_BreakTransform_Location) == 0x000110, "Member 'BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue, CallFunc_BreakTransform_Rotation) == 0x000128, "Member 'BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue, CallFunc_BreakTransform_Scale) == 0x000140, "Member 'BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue, CallFunc_GetInteractionSystem_ReturnValue) == 0x000158, "Member 'BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue::CallFunc_GetInteractionSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000160, "Member 'BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000258, "Member 'BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue, CallFunc_ConsumeInputVector_ReturnValue) == 0x000260, "Member 'BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue::CallFunc_ConsumeInputVector_ReturnValue' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.UnloadAllDependencies
// 0x0070 (0x0070 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_UnloadAllDependencies final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class AActor>                  CallFunc_Array_Get_Item;                           // 0x0010(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Dialogue_SpeakerSlot_C> K2Node_DynamicCast_AsBPI_Dialogue_Speaker_Slot; // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_UnloadAllDependencies) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_UnloadAllDependencies");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_UnloadAllDependencies) == 0x000070, "Wrong size on BP_jRPG_NPC_Dialog_C_UnloadAllDependencies");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UnloadAllDependencies, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_UnloadAllDependencies::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UnloadAllDependencies, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_jRPG_NPC_Dialog_C_UnloadAllDependencies::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UnloadAllDependencies, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_jRPG_NPC_Dialog_C_UnloadAllDependencies::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UnloadAllDependencies, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_jRPG_NPC_Dialog_C_UnloadAllDependencies::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UnloadAllDependencies, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_jRPG_NPC_Dialog_C_UnloadAllDependencies::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UnloadAllDependencies, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_jRPG_NPC_Dialog_C_UnloadAllDependencies::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UnloadAllDependencies, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000040, "Member 'BP_jRPG_NPC_Dialog_C_UnloadAllDependencies::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UnloadAllDependencies, K2Node_DynamicCast_AsActor) == 0x000048, "Member 'BP_jRPG_NPC_Dialog_C_UnloadAllDependencies::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UnloadAllDependencies, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_jRPG_NPC_Dialog_C_UnloadAllDependencies::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UnloadAllDependencies, K2Node_DynamicCast_AsBPI_Dialogue_Speaker_Slot) == 0x000058, "Member 'BP_jRPG_NPC_Dialog_C_UnloadAllDependencies::K2Node_DynamicCast_AsBPI_Dialogue_Speaker_Slot' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UnloadAllDependencies, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_jRPG_NPC_Dialog_C_UnloadAllDependencies::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.LoadAllDependencies
// 0x0070 (0x0070 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_LoadAllDependencies final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class AActor>                  CallFunc_Array_Get_Item;                           // 0x0010(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Dialogue_SpeakerSlot_C> K2Node_DynamicCast_AsBPI_Dialogue_Speaker_Slot; // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_LoadAllDependencies) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_LoadAllDependencies");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_LoadAllDependencies) == 0x000070, "Wrong size on BP_jRPG_NPC_Dialog_C_LoadAllDependencies");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_LoadAllDependencies, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_LoadAllDependencies::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_LoadAllDependencies, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_jRPG_NPC_Dialog_C_LoadAllDependencies::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_LoadAllDependencies, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_jRPG_NPC_Dialog_C_LoadAllDependencies::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_LoadAllDependencies, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_jRPG_NPC_Dialog_C_LoadAllDependencies::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_LoadAllDependencies, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_jRPG_NPC_Dialog_C_LoadAllDependencies::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_LoadAllDependencies, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_jRPG_NPC_Dialog_C_LoadAllDependencies::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_LoadAllDependencies, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000040, "Member 'BP_jRPG_NPC_Dialog_C_LoadAllDependencies::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_LoadAllDependencies, K2Node_DynamicCast_AsActor) == 0x000048, "Member 'BP_jRPG_NPC_Dialog_C_LoadAllDependencies::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_LoadAllDependencies, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_jRPG_NPC_Dialog_C_LoadAllDependencies::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_LoadAllDependencies, K2Node_DynamicCast_AsBPI_Dialogue_Speaker_Slot) == 0x000058, "Member 'BP_jRPG_NPC_Dialog_C_LoadAllDependencies::K2Node_DynamicCast_AsBPI_Dialogue_Speaker_Slot' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_LoadAllDependencies, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_jRPG_NPC_Dialog_C_LoadAllDependencies::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.IsInteractionAvailable
// 0x0007 (0x0007 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_IsInteractionAvailable final
{
public:
	bool                                          Available;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_IsInteractionAvailable) == 0x000001, "Wrong alignment on BP_jRPG_NPC_Dialog_C_IsInteractionAvailable");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_IsInteractionAvailable) == 0x000007, "Wrong size on BP_jRPG_NPC_Dialog_C_IsInteractionAvailable");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_IsInteractionAvailable, Available) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_IsInteractionAvailable::Available' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_IsInteractionAvailable, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000001, "Member 'BP_jRPG_NPC_Dialog_C_IsInteractionAvailable::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_IsInteractionAvailable, CallFunc_IsValidClass_ReturnValue) == 0x000002, "Member 'BP_jRPG_NPC_Dialog_C_IsInteractionAvailable::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_IsInteractionAvailable, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BP_jRPG_NPC_Dialog_C_IsInteractionAvailable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_IsInteractionAvailable, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'BP_jRPG_NPC_Dialog_C_IsInteractionAvailable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_IsInteractionAvailable, CallFunc_BooleanAND_ReturnValue_1) == 0x000005, "Member 'BP_jRPG_NPC_Dialog_C_IsInteractionAvailable::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_IsInteractionAvailable, CallFunc_BooleanAND_ReturnValue_2) == 0x000006, "Member 'BP_jRPG_NPC_Dialog_C_IsInteractionAvailable::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.UserConstructionScript
// 0x0098 (0x0098 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_UserConstructionScript final
{
public:
	TArray<TSoftObjectPtr<class AActor>>          local_ExternalSpeakersArray;                       // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	EComponentMobility                            Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EComponentMobility                            Temp_byte_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDialogueSpeakerSlotReferences         K2Node_MakeStruct_DialogueSpeakerSlotReferences;   // 0x0028(0x0010)()
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EComponentMobility                            K2Node_Select_Default;                             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AActor>                  CallFunc_Array_Get_Item;                           // 0x0040(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_UserConstructionScript");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_UserConstructionScript) == 0x000098, "Wrong size on BP_jRPG_NPC_Dialog_C_UserConstructionScript");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UserConstructionScript, local_ExternalSpeakersArray) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_UserConstructionScript::local_ExternalSpeakersArray' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UserConstructionScript, Temp_byte_Variable) == 0x000010, "Member 'BP_jRPG_NPC_Dialog_C_UserConstructionScript::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_jRPG_NPC_Dialog_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_jRPG_NPC_Dialog_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'BP_jRPG_NPC_Dialog_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UserConstructionScript, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000020, "Member 'BP_jRPG_NPC_Dialog_C_UserConstructionScript::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UserConstructionScript, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000021, "Member 'BP_jRPG_NPC_Dialog_C_UserConstructionScript::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UserConstructionScript, Temp_byte_Variable_1) == 0x000022, "Member 'BP_jRPG_NPC_Dialog_C_UserConstructionScript::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UserConstructionScript, K2Node_MakeStruct_DialogueSpeakerSlotReferences) == 0x000028, "Member 'BP_jRPG_NPC_Dialog_C_UserConstructionScript::K2Node_MakeStruct_DialogueSpeakerSlotReferences' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UserConstructionScript, Temp_bool_Variable) == 0x000038, "Member 'BP_jRPG_NPC_Dialog_C_UserConstructionScript::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UserConstructionScript, K2Node_Select_Default) == 0x000039, "Member 'BP_jRPG_NPC_Dialog_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_jRPG_NPC_Dialog_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_jRPG_NPC_Dialog_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UserConstructionScript, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000070, "Member 'BP_jRPG_NPC_Dialog_C_UserConstructionScript::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_jRPG_NPC_Dialog_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UserConstructionScript, K2Node_DynamicCast_AsActor) == 0x000080, "Member 'BP_jRPG_NPC_Dialog_C_UserConstructionScript::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_jRPG_NPC_Dialog_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UserConstructionScript, CallFunc_Max_ReturnValue) == 0x00008C, "Member 'BP_jRPG_NPC_Dialog_C_UserConstructionScript::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UserConstructionScript, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000090, "Member 'BP_jRPG_NPC_Dialog_C_UserConstructionScript::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_UserConstructionScript, CallFunc_Array_AddUnique_ReturnValue) == 0x000094, "Member 'BP_jRPG_NPC_Dialog_C_UserConstructionScript::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.OnInteractionRequested
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_OnInteractionRequested final
{
public:
	class ABP_jRPG_Character_World_C*             InteractingWorldCharacter_0;                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Instant;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_OnInteractionRequested) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_OnInteractionRequested");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_OnInteractionRequested) == 0x000010, "Wrong size on BP_jRPG_NPC_Dialog_C_OnInteractionRequested");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_OnInteractionRequested, InteractingWorldCharacter_0) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_OnInteractionRequested::InteractingWorldCharacter_0' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_OnInteractionRequested, Instant) == 0x000008, "Member 'BP_jRPG_NPC_Dialog_C_OnInteractionRequested::Instant' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.TriggerDialogInternal
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_TriggerDialogInternal final
{
public:
	struct FS_DialogueParameters                  DialogueParameters;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_TriggerDialogInternal) == 0x000004, "Wrong alignment on BP_jRPG_NPC_Dialog_C_TriggerDialogInternal");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_TriggerDialogInternal) == 0x000008, "Wrong size on BP_jRPG_NPC_Dialog_C_TriggerDialogInternal");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_TriggerDialogInternal, DialogueParameters) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_TriggerDialogInternal::DialogueParameters' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.TeleportAndTriggerDialogue
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_TeleportAndTriggerDialogue final
{
public:
	class ABP_jRPG_Character_World_C*             InteractingWorldCharacter_0;                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_DialogueParameters                  DialogueParameters;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_TeleportAndTriggerDialogue) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Dialog_C_TeleportAndTriggerDialogue");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_TeleportAndTriggerDialogue) == 0x000010, "Wrong size on BP_jRPG_NPC_Dialog_C_TeleportAndTriggerDialogue");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_TeleportAndTriggerDialogue, InteractingWorldCharacter_0) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_TeleportAndTriggerDialogue::InteractingWorldCharacter_0' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_TeleportAndTriggerDialogue, DialogueParameters) == 0x000008, "Member 'BP_jRPG_NPC_Dialog_C_TeleportAndTriggerDialogue::DialogueParameters' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.BndEvt__BP_jRPG_NPC_Dialog_BP_ConditionCheckerComponent_K2Node_ComponentBoundEvent_0_OnConditionChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_BndEvt__BP_jRPG_NPC_Dialog_BP_ConditionCheckerComponent_K2Node_ComponentBoundEvent_0_OnConditionChanged__DelegateSignature final
{
public:
	bool                                          Condition;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_BndEvt__BP_jRPG_NPC_Dialog_BP_ConditionCheckerComponent_K2Node_ComponentBoundEvent_0_OnConditionChanged__DelegateSignature) == 0x000001, "Wrong alignment on BP_jRPG_NPC_Dialog_C_BndEvt__BP_jRPG_NPC_Dialog_BP_ConditionCheckerComponent_K2Node_ComponentBoundEvent_0_OnConditionChanged__DelegateSignature");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_BndEvt__BP_jRPG_NPC_Dialog_BP_ConditionCheckerComponent_K2Node_ComponentBoundEvent_0_OnConditionChanged__DelegateSignature) == 0x000001, "Wrong size on BP_jRPG_NPC_Dialog_C_BndEvt__BP_jRPG_NPC_Dialog_BP_ConditionCheckerComponent_K2Node_ComponentBoundEvent_0_OnConditionChanged__DelegateSignature");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_BndEvt__BP_jRPG_NPC_Dialog_BP_ConditionCheckerComponent_K2Node_ComponentBoundEvent_0_OnConditionChanged__DelegateSignature, Condition) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_BndEvt__BP_jRPG_NPC_Dialog_BP_ConditionCheckerComponent_K2Node_ComponentBoundEvent_0_OnConditionChanged__DelegateSignature::Condition' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.MoveInteractingCharacterToPosition
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_MoveInteractingCharacterToPosition final
{
public:
	struct FS_DialogueParameters                  DialogueParameters;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_MoveInteractingCharacterToPosition) == 0x000004, "Wrong alignment on BP_jRPG_NPC_Dialog_C_MoveInteractingCharacterToPosition");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_MoveInteractingCharacterToPosition) == 0x000008, "Wrong size on BP_jRPG_NPC_Dialog_C_MoveInteractingCharacterToPosition");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_MoveInteractingCharacterToPosition, DialogueParameters) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_MoveInteractingCharacterToPosition::DialogueParameters' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_jRPG_NPC_Dialog_C_ReceiveTick");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_ReceiveTick) == 0x000004, "Wrong size on BP_jRPG_NPC_Dialog_C_ReceiveTick");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.ExecuteUbergraph_BP_jRPG_NPC_Dialog
// 0x03B0 (0x03B0 - 0x0000)
struct BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USF_BlueprintLatentAction*              CallFunc_ReleaseAndWaitGameFlowTransition_LatentAction; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DialogueSystemComponent_C*          CallFunc_GetDialogueSystemComponent_DialogueSystem; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasManualTransitionInProgress_ReturnValue; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Temp_wildcard_Variable;                            // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_World_C*             K2Node_Event_InteractingWorldCharacter;            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Instant;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0xD];                                       // 0x0053(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Dialogue_C*                         CallFunc_FinishSpawningActor_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_DialogueParameters                  K2Node_CustomEvent_DialogueParameters_2;           // 0x00D8(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_World_C*             K2Node_CustomEvent_InteractingWorldCharacter;      // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_DialogueParameters                  K2Node_CustomEvent_DialogueParameters_1;           // 0x00F0(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F8[0x8];                                       // 0x00F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0100(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0160(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Condition;              // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_172[0x2];                                      // 0x0172(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class AActor>                  CallFunc_Array_Get_Item;                           // 0x0178(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Dialogue_SpeakerSlot_C> K2Node_DynamicCast_AsBPI_Dialogue_Speaker_Slot; // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AreDependenciesLoaded_AreLoaded;          // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CB[0x1];                                      // 0x01CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_DialogueParameters                  CallFunc_ComputeDialogueParameters_S_DialogueParameters; // 0x01CC(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_DialogueParameters                  CallFunc_GetDialogueParameters_DialogueParameters; // 0x01D4(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_DialogueParameters                  K2Node_CustomEvent_DialogueParameters;             // 0x01DC(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InteractionSystem_C*                CallFunc_GetInteractionSystem_ReturnValue;         // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Interaction_C>    CallFunc_RegisterDistantInteractiveObject_InteractiveObject_CastInput; // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0220(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_DialogCustomLocation_C*             K2Node_DynamicCast_AsBP_Dialog_Custom_Location;    // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C2[0x6];                                      // 0x02C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        K2Node_Select_Default;                             // 0x02C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x02D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0390(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog) == 0x000010, "Wrong alignment on BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog");
static_assert(sizeof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog) == 0x0003B0, "Wrong size on BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, EntryPoint) == 0x000000, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, Temp_bool_Variable) == 0x000004, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_ReleaseAndWaitGameFlowTransition_LatentAction) == 0x000008, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_ReleaseAndWaitGameFlowTransition_LatentAction' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_GetDialogueSystemComponent_DialogueSystem) == 0x000018, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_GetDialogueSystemComponent_DialogueSystem' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_HasManualTransitionInProgress_ReturnValue) == 0x000020, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_HasManualTransitionInProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, Temp_wildcard_Variable) == 0x000028, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, K2Node_Event_InteractingWorldCharacter) == 0x000048, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::K2Node_Event_InteractingWorldCharacter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, K2Node_Event_Instant) == 0x000050, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::K2Node_Event_Instant' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_IsValid_ReturnValue_1) == 0x000052, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000C0, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000C8, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_Less_IntInt_ReturnValue) == 0x0000D4, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, K2Node_CustomEvent_DialogueParameters_2) == 0x0000D8, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::K2Node_CustomEvent_DialogueParameters_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_IsValid_ReturnValue_2) == 0x0000E0, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, K2Node_CustomEvent_InteractingWorldCharacter) == 0x0000E8, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::K2Node_CustomEvent_InteractingWorldCharacter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, K2Node_CustomEvent_DialogueParameters_1) == 0x0000F0, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::K2Node_CustomEvent_DialogueParameters_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000100, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, K2Node_CreateDelegate_OutputDelegate) == 0x000160, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_Not_PreBool_ReturnValue_1) == 0x000170, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, K2Node_ComponentBoundEvent_Condition) == 0x000171, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::K2Node_ComponentBoundEvent_Condition' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, Temp_int_Array_Index_Variable) == 0x000174, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_Array_Get_Item) == 0x000178, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0001A0, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, K2Node_DynamicCast_AsActor) == 0x0001A8, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, K2Node_DynamicCast_bSuccess) == 0x0001B0, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, K2Node_DynamicCast_AsBPI_Dialogue_Speaker_Slot) == 0x0001B8, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::K2Node_DynamicCast_AsBPI_Dialogue_Speaker_Slot' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, K2Node_DynamicCast_bSuccess_1) == 0x0001C8, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_AreDependenciesLoaded_AreLoaded) == 0x0001C9, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_AreDependenciesLoaded_AreLoaded' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_BooleanAND_ReturnValue) == 0x0001CA, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_ComputeDialogueParameters_S_DialogueParameters) == 0x0001CC, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_ComputeDialogueParameters_S_DialogueParameters' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_GetDialogueParameters_DialogueParameters) == 0x0001D4, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_GetDialogueParameters_DialogueParameters' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, K2Node_CustomEvent_DialogueParameters) == 0x0001DC, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::K2Node_CustomEvent_DialogueParameters' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, Temp_bool_Variable_1) == 0x0001E4, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_GetInteractionSystem_ReturnValue) == 0x0001E8, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_GetInteractionSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001F0, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_RegisterDistantInteractiveObject_InteractiveObject_CastInput) == 0x000208, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_RegisterDistantInteractiveObject_InteractiveObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, K2Node_Event_DeltaSeconds) == 0x000218, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_GetTransform_ReturnValue) == 0x000220, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000280, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000298, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_FindLookAtRotation_ReturnValue) == 0x0002A0, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, K2Node_DynamicCast_AsBP_Dialog_Custom_Location) == 0x0002B8, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::K2Node_DynamicCast_AsBP_Dialog_Custom_Location' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, K2Node_DynamicCast_bSuccess_2) == 0x0002C0, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_IsValid_ReturnValue_3) == 0x0002C1, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, K2Node_Select_Default) == 0x0002C8, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x0002D0, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000330, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_BreakTransform_Location) == 0x000348, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_BreakTransform_Rotation) == 0x000360, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_BreakTransform_Scale) == 0x000378, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_RLerp_ReturnValue) == 0x000390, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0003A8, "Member 'BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

}

