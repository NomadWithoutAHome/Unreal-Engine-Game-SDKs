#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkillState

#include "Basic.hpp"

#include "EAttackType_structs.hpp"
#include "Engine_structs.hpp"
#include "SandFall_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_SkillState.BP_SkillState_C.AddSkillCostModifier
// 0x0048 (0x0048 - 0x0000)
struct BP_SkillState_C_AddSkillCostModifier final
{
public:
	int32                                         DeltaCost;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSF_ModifierStackEntryHandle           OutModifierHandle;                                 // 0x0008(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 DebugName;                                         // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillState_C_AddSkillCostModifier) == 0x000008, "Wrong alignment on BP_SkillState_C_AddSkillCostModifier");
static_assert(sizeof(BP_SkillState_C_AddSkillCostModifier) == 0x000048, "Wrong size on BP_SkillState_C_AddSkillCostModifier");
static_assert(offsetof(BP_SkillState_C_AddSkillCostModifier, DeltaCost) == 0x000000, "Member 'BP_SkillState_C_AddSkillCostModifier::DeltaCost' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_AddSkillCostModifier, OutModifierHandle) == 0x000008, "Member 'BP_SkillState_C_AddSkillCostModifier::OutModifierHandle' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_AddSkillCostModifier, DebugName) == 0x000038, "Member 'BP_SkillState_C_AddSkillCostModifier::DebugName' has a wrong offset!");

// Function BP_SkillState.BP_SkillState_C.FindComponentScriptsByClass
// 0x0090 (0x0090 - 0x0000)
struct BP_SkillState_C_FindComponentScriptsByClass final
{
public:
	class UClass*                                 ScriptClass;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_SkillDataComponentScript_C*> Array;                                             // 0x0008(0x0010)(Parm, OutParm)
	TArray<class UBP_SkillDataComponentScript_C*> Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0018(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_SkillDataComponentScript_C*> Temp_wildcard_Temp_buffer_array_Variable;          // 0x0038(0x0010)(ConstParm, ReferenceParm)
	TArray<class UBP_SkillDataComponent_Base_C*>  CallFunc_Map_Keys_Keys;                            // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SkillDataComponent_Base_C*          CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SkillDataComponentScript_C*         CallFunc_Map_Find_Value;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillState_C_FindComponentScriptsByClass) == 0x000008, "Wrong alignment on BP_SkillState_C_FindComponentScriptsByClass");
static_assert(sizeof(BP_SkillState_C_FindComponentScriptsByClass) == 0x000090, "Wrong size on BP_SkillState_C_FindComponentScriptsByClass");
static_assert(offsetof(BP_SkillState_C_FindComponentScriptsByClass, ScriptClass) == 0x000000, "Member 'BP_SkillState_C_FindComponentScriptsByClass::ScriptClass' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_FindComponentScriptsByClass, Array) == 0x000008, "Member 'BP_SkillState_C_FindComponentScriptsByClass::Array' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_FindComponentScriptsByClass, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000018, "Member 'BP_SkillState_C_FindComponentScriptsByClass::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_FindComponentScriptsByClass, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_SkillState_C_FindComponentScriptsByClass::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_FindComponentScriptsByClass, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_SkillState_C_FindComponentScriptsByClass::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_FindComponentScriptsByClass, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_SkillState_C_FindComponentScriptsByClass::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_FindComponentScriptsByClass, Temp_wildcard_Temp_buffer_array_Variable) == 0x000038, "Member 'BP_SkillState_C_FindComponentScriptsByClass::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_FindComponentScriptsByClass, CallFunc_Map_Keys_Keys) == 0x000048, "Member 'BP_SkillState_C_FindComponentScriptsByClass::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_FindComponentScriptsByClass, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_SkillState_C_FindComponentScriptsByClass::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_FindComponentScriptsByClass, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_SkillState_C_FindComponentScriptsByClass::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_FindComponentScriptsByClass, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BP_SkillState_C_FindComponentScriptsByClass::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_FindComponentScriptsByClass, CallFunc_Map_Find_Value) == 0x000070, "Member 'BP_SkillState_C_FindComponentScriptsByClass::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_FindComponentScriptsByClass, CallFunc_Map_Find_ReturnValue) == 0x000078, "Member 'BP_SkillState_C_FindComponentScriptsByClass::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_FindComponentScriptsByClass, CallFunc_Array_Add_ReturnValue) == 0x00007C, "Member 'BP_SkillState_C_FindComponentScriptsByClass::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_FindComponentScriptsByClass, CallFunc_GetObjectClass_ReturnValue) == 0x000080, "Member 'BP_SkillState_C_FindComponentScriptsByClass::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_FindComponentScriptsByClass, CallFunc_ClassIsChildOf_ReturnValue) == 0x000088, "Member 'BP_SkillState_C_FindComponentScriptsByClass::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");

// Function BP_SkillState.BP_SkillState_C.GetScriptForComponent
// 0x0020 (0x0020 - 0x0000)
struct BP_SkillState_C_GetScriptForComponent final
{
public:
	const class UBP_SkillDataComponent_Base_C*    SkillComponent;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UBP_SkillDataComponentScript_C*         SkillComponentScript;                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SkillDataComponentScript_C*         CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillState_C_GetScriptForComponent) == 0x000008, "Wrong alignment on BP_SkillState_C_GetScriptForComponent");
static_assert(sizeof(BP_SkillState_C_GetScriptForComponent) == 0x000020, "Wrong size on BP_SkillState_C_GetScriptForComponent");
static_assert(offsetof(BP_SkillState_C_GetScriptForComponent, SkillComponent) == 0x000000, "Member 'BP_SkillState_C_GetScriptForComponent::SkillComponent' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_GetScriptForComponent, SkillComponentScript) == 0x000008, "Member 'BP_SkillState_C_GetScriptForComponent::SkillComponentScript' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_GetScriptForComponent, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_SkillState_C_GetScriptForComponent::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_GetScriptForComponent, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'BP_SkillState_C_GetScriptForComponent::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_SkillState.BP_SkillState_C.GetSkillCost
// 0x0038 (0x0038 - 0x0000)
struct BP_SkillState_C_GetSkillCost final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_apCost;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UModifierStack_Float*                   CallFunc_GetSkillCostModifier_Stack;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillCostOverride_Override;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSkillCostOverride_NewValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentValue_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSkillBaseCost_ReturnValue;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Round_A_ImplicitCast;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillState_C_GetSkillCost) == 0x000008, "Wrong alignment on BP_SkillState_C_GetSkillCost");
static_assert(sizeof(BP_SkillState_C_GetSkillCost) == 0x000038, "Wrong size on BP_SkillState_C_GetSkillCost");
static_assert(offsetof(BP_SkillState_C_GetSkillCost, ReturnValue) == 0x000000, "Member 'BP_SkillState_C_GetSkillCost::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_GetSkillCost, local_apCost) == 0x000004, "Member 'BP_SkillState_C_GetSkillCost::local_apCost' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_GetSkillCost, CallFunc_GetSkillCostModifier_Stack) == 0x000008, "Member 'BP_SkillState_C_GetSkillCost::CallFunc_GetSkillCostModifier_Stack' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_GetSkillCost, CallFunc_GetSkillCostOverride_Override) == 0x000010, "Member 'BP_SkillState_C_GetSkillCost::CallFunc_GetSkillCostOverride_Override' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_GetSkillCost, CallFunc_GetSkillCostOverride_NewValue) == 0x000014, "Member 'BP_SkillState_C_GetSkillCost::CallFunc_GetSkillCostOverride_NewValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_GetSkillCost, CallFunc_GetCurrentValue_ReturnValue) == 0x000018, "Member 'BP_SkillState_C_GetSkillCost::CallFunc_GetCurrentValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_GetSkillCost, CallFunc_Round_ReturnValue) == 0x00001C, "Member 'BP_SkillState_C_GetSkillCost::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_GetSkillCost, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_SkillState_C_GetSkillCost::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_GetSkillCost, CallFunc_Max_ReturnValue) == 0x000024, "Member 'BP_SkillState_C_GetSkillCost::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_GetSkillCost, CallFunc_GetSkillBaseCost_ReturnValue) == 0x000028, "Member 'BP_SkillState_C_GetSkillCost::CallFunc_GetSkillBaseCost_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_GetSkillCost, CallFunc_Round_A_ImplicitCast) == 0x000030, "Member 'BP_SkillState_C_GetSkillCost::CallFunc_Round_A_ImplicitCast' has a wrong offset!");

// Function BP_SkillState.BP_SkillState_C.GetSkillCostModifier
// 0x0008 (0x0008 - 0x0000)
struct BP_SkillState_C_GetSkillCostModifier final
{
public:
	class UModifierStack_Float*                   Stack;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillState_C_GetSkillCostModifier) == 0x000008, "Wrong alignment on BP_SkillState_C_GetSkillCostModifier");
static_assert(sizeof(BP_SkillState_C_GetSkillCostModifier) == 0x000008, "Wrong size on BP_SkillState_C_GetSkillCostModifier");
static_assert(offsetof(BP_SkillState_C_GetSkillCostModifier, Stack) == 0x000000, "Member 'BP_SkillState_C_GetSkillCostModifier::Stack' has a wrong offset!");

// Function BP_SkillState.BP_SkillState_C.GetSkillRuntimeElement
// 0x0001 (0x0001 - 0x0000)
struct BP_SkillState_C_GetSkillRuntimeElement final
{
public:
	EAttackType                                   ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillState_C_GetSkillRuntimeElement) == 0x000001, "Wrong alignment on BP_SkillState_C_GetSkillRuntimeElement");
static_assert(sizeof(BP_SkillState_C_GetSkillRuntimeElement) == 0x000001, "Wrong size on BP_SkillState_C_GetSkillRuntimeElement");
static_assert(offsetof(BP_SkillState_C_GetSkillRuntimeElement, ReturnValue) == 0x000000, "Member 'BP_SkillState_C_GetSkillRuntimeElement::ReturnValue' has a wrong offset!");

// Function BP_SkillState.BP_SkillState_C.Initialize
// 0x0060 (0x0060 - 0x0000)
struct BP_SkillState_C_Initialize final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterData_C*                    CallFunc_GetCharacterData_CharacterData;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EAttackType                                   CallFunc_GetElementForSkill_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_SkillDataComponent_Base_C*>  CallFunc_GetSkillComponentsAsBP_Array;             // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SkillDataComponent_Base_C*          CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetScriptClass_ScriptClass;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SkillDataComponentScript_C*         CallFunc_SpawnObject_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillState_C_Initialize) == 0x000008, "Wrong alignment on BP_SkillState_C_Initialize");
static_assert(sizeof(BP_SkillState_C_Initialize) == 0x000060, "Wrong size on BP_SkillState_C_Initialize");
static_assert(offsetof(BP_SkillState_C_Initialize, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_SkillState_C_Initialize::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_Initialize, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_SkillState_C_Initialize::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_Initialize, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_SkillState_C_Initialize::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_Initialize, CallFunc_GetCharacterData_CharacterData) == 0x000010, "Member 'BP_SkillState_C_Initialize::CallFunc_GetCharacterData_CharacterData' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_Initialize, CallFunc_GetElementForSkill_ReturnValue) == 0x000018, "Member 'BP_SkillState_C_Initialize::CallFunc_GetElementForSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_Initialize, CallFunc_GetSkillComponentsAsBP_Array) == 0x000020, "Member 'BP_SkillState_C_Initialize::CallFunc_GetSkillComponentsAsBP_Array' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_Initialize, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_SkillState_C_Initialize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_Initialize, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_SkillState_C_Initialize::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_Initialize, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_SkillState_C_Initialize::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_Initialize, CallFunc_GetScriptClass_ScriptClass) == 0x000048, "Member 'BP_SkillState_C_Initialize::CallFunc_GetScriptClass_ScriptClass' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_Initialize, CallFunc_SpawnObject_ReturnValue) == 0x000050, "Member 'BP_SkillState_C_Initialize::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_Initialize, CallFunc_IsValidClass_ReturnValue) == 0x000058, "Member 'BP_SkillState_C_Initialize::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function BP_SkillState.BP_SkillState_C.InitializeSkillScriptActor
// 0x0150 (0x0150 - 0x0000)
struct BP_SkillState_C_InitializeSkillScriptActor final
{
public:
	TSubclassOf<class UObject>                    CallFunc_Conv_SoftClassReferenceToClass_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Battle_Skill_Script;  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_SoftClassReferenceToString_ReturnValue; // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0048)(HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm)
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Battle_Skill_Script_1; // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C0(0x0010)()
	class UClass*                                 Temp_wildcard_Variable;                            // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Battle_SkillScript_C*               CallFunc_FinishSpawningActor_ReturnValue;          // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillState_C_InitializeSkillScriptActor) == 0x000010, "Wrong alignment on BP_SkillState_C_InitializeSkillScriptActor");
static_assert(sizeof(BP_SkillState_C_InitializeSkillScriptActor) == 0x000150, "Wrong size on BP_SkillState_C_InitializeSkillScriptActor");
static_assert(offsetof(BP_SkillState_C_InitializeSkillScriptActor, CallFunc_Conv_SoftClassReferenceToClass_ReturnValue) == 0x000000, "Member 'BP_SkillState_C_InitializeSkillScriptActor::CallFunc_Conv_SoftClassReferenceToClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_InitializeSkillScriptActor, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000008, "Member 'BP_SkillState_C_InitializeSkillScriptActor::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_InitializeSkillScriptActor, CallFunc_GetCharacterBattleBase_IsValid) == 0x000010, "Member 'BP_SkillState_C_InitializeSkillScriptActor::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_InitializeSkillScriptActor, K2Node_ClassDynamicCast_AsBP_Battle_Skill_Script) == 0x000018, "Member 'BP_SkillState_C_InitializeSkillScriptActor::K2Node_ClassDynamicCast_AsBP_Battle_Skill_Script' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_InitializeSkillScriptActor, K2Node_ClassDynamicCast_bSuccess) == 0x000020, "Member 'BP_SkillState_C_InitializeSkillScriptActor::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_InitializeSkillScriptActor, CallFunc_Conv_SoftClassReferenceToString_ReturnValue) == 0x000028, "Member 'BP_SkillState_C_InitializeSkillScriptActor::CallFunc_Conv_SoftClassReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_InitializeSkillScriptActor, CallFunc_IsValidClass_ReturnValue) == 0x000038, "Member 'BP_SkillState_C_InitializeSkillScriptActor::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_InitializeSkillScriptActor, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'BP_SkillState_C_InitializeSkillScriptActor::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_InitializeSkillScriptActor, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'BP_SkillState_C_InitializeSkillScriptActor::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_InitializeSkillScriptActor, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000098, "Member 'BP_SkillState_C_InitializeSkillScriptActor::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_InitializeSkillScriptActor, K2Node_MakeArray_Array) == 0x0000A0, "Member 'BP_SkillState_C_InitializeSkillScriptActor::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_InitializeSkillScriptActor, K2Node_ClassDynamicCast_AsBP_Battle_Skill_Script_1) == 0x0000B0, "Member 'BP_SkillState_C_InitializeSkillScriptActor::K2Node_ClassDynamicCast_AsBP_Battle_Skill_Script_1' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_InitializeSkillScriptActor, K2Node_ClassDynamicCast_bSuccess_1) == 0x0000B8, "Member 'BP_SkillState_C_InitializeSkillScriptActor::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_InitializeSkillScriptActor, CallFunc_Format_ReturnValue) == 0x0000C0, "Member 'BP_SkillState_C_InitializeSkillScriptActor::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_InitializeSkillScriptActor, Temp_wildcard_Variable) == 0x0000D0, "Member 'BP_SkillState_C_InitializeSkillScriptActor::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_InitializeSkillScriptActor, CallFunc_GetBattleManager_ReturnValue) == 0x0000D8, "Member 'BP_SkillState_C_InitializeSkillScriptActor::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_InitializeSkillScriptActor, CallFunc_MakeTransform_ReturnValue) == 0x0000E0, "Member 'BP_SkillState_C_InitializeSkillScriptActor::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_InitializeSkillScriptActor, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000140, "Member 'BP_SkillState_C_InitializeSkillScriptActor::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_InitializeSkillScriptActor, CallFunc_FinishSpawningActor_ReturnValue) == 0x000148, "Member 'BP_SkillState_C_InitializeSkillScriptActor::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_SkillState.BP_SkillState_C.IsSkillOvercharged
// 0x0001 (0x0001 - 0x0000)
struct BP_SkillState_C_IsSkillOvercharged final
{
public:
	bool                                          IsOvercharged_0;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillState_C_IsSkillOvercharged) == 0x000001, "Wrong alignment on BP_SkillState_C_IsSkillOvercharged");
static_assert(sizeof(BP_SkillState_C_IsSkillOvercharged) == 0x000001, "Wrong size on BP_SkillState_C_IsSkillOvercharged");
static_assert(offsetof(BP_SkillState_C_IsSkillOvercharged, IsOvercharged_0) == 0x000000, "Member 'BP_SkillState_C_IsSkillOvercharged::IsOvercharged_0' has a wrong offset!");

// Function BP_SkillState.BP_SkillState_C.RemoveSkillCostModifier
// 0x0030 (0x0030 - 0x0000)
struct BP_SkillState_C_RemoveSkillCostModifier final
{
public:
	struct FSF_ModifierStackEntryHandle           ModifierHandle;                                    // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_SkillState_C_RemoveSkillCostModifier) == 0x000008, "Wrong alignment on BP_SkillState_C_RemoveSkillCostModifier");
static_assert(sizeof(BP_SkillState_C_RemoveSkillCostModifier) == 0x000030, "Wrong size on BP_SkillState_C_RemoveSkillCostModifier");
static_assert(offsetof(BP_SkillState_C_RemoveSkillCostModifier, ModifierHandle) == 0x000000, "Member 'BP_SkillState_C_RemoveSkillCostModifier::ModifierHandle' has a wrong offset!");

// Function BP_SkillState.BP_SkillState_C.SetOvercharge
// 0x000A (0x000A - 0x0000)
struct BP_SkillState_C_SetOvercharge final
{
public:
	bool                                          IsOvercharged_0;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForcedOverchargeFeedback;                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_NewFeedbackState;                            // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_PreviousFeedbackState;                       // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowAsOvercharged_ReturnValue;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowAsOvercharged_ReturnValue_1;    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_2;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillState_C_SetOvercharge) == 0x000001, "Wrong alignment on BP_SkillState_C_SetOvercharge");
static_assert(sizeof(BP_SkillState_C_SetOvercharge) == 0x00000A, "Wrong size on BP_SkillState_C_SetOvercharge");
static_assert(offsetof(BP_SkillState_C_SetOvercharge, IsOvercharged_0) == 0x000000, "Member 'BP_SkillState_C_SetOvercharge::IsOvercharged_0' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_SetOvercharge, ForcedOverchargeFeedback) == 0x000001, "Member 'BP_SkillState_C_SetOvercharge::ForcedOverchargeFeedback' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_SetOvercharge, local_NewFeedbackState) == 0x000002, "Member 'BP_SkillState_C_SetOvercharge::local_NewFeedbackState' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_SetOvercharge, local_PreviousFeedbackState) == 0x000003, "Member 'BP_SkillState_C_SetOvercharge::local_PreviousFeedbackState' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_SetOvercharge, CallFunc_ShouldShowAsOvercharged_ReturnValue) == 0x000004, "Member 'BP_SkillState_C_SetOvercharge::CallFunc_ShouldShowAsOvercharged_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_SetOvercharge, CallFunc_ShouldShowAsOvercharged_ReturnValue_1) == 0x000005, "Member 'BP_SkillState_C_SetOvercharge::CallFunc_ShouldShowAsOvercharged_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_SetOvercharge, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000006, "Member 'BP_SkillState_C_SetOvercharge::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_SetOvercharge, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x000007, "Member 'BP_SkillState_C_SetOvercharge::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_SetOvercharge, CallFunc_NotEqual_BoolBool_ReturnValue_2) == 0x000008, "Member 'BP_SkillState_C_SetOvercharge::CallFunc_NotEqual_BoolBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_SetOvercharge, CallFunc_BooleanOR_ReturnValue) == 0x000009, "Member 'BP_SkillState_C_SetOvercharge::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_SkillState.BP_SkillState_C.ShouldShowAsOvercharged
// 0x0005 (0x0005 - 0x0000)
struct BP_SkillState_C_ShouldShowAsOvercharged final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldBlockForcedOverchargeFeedback_ReturnValue; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillState_C_ShouldShowAsOvercharged) == 0x000001, "Wrong alignment on BP_SkillState_C_ShouldShowAsOvercharged");
static_assert(sizeof(BP_SkillState_C_ShouldShowAsOvercharged) == 0x000005, "Wrong size on BP_SkillState_C_ShouldShowAsOvercharged");
static_assert(offsetof(BP_SkillState_C_ShouldShowAsOvercharged, ReturnValue) == 0x000000, "Member 'BP_SkillState_C_ShouldShowAsOvercharged::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_ShouldShowAsOvercharged, CallFunc_ShouldBlockForcedOverchargeFeedback_ReturnValue) == 0x000001, "Member 'BP_SkillState_C_ShouldShowAsOvercharged::CallFunc_ShouldBlockForcedOverchargeFeedback_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_ShouldShowAsOvercharged, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_SkillState_C_ShouldShowAsOvercharged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_ShouldShowAsOvercharged, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_SkillState_C_ShouldShowAsOvercharged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_ShouldShowAsOvercharged, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'BP_SkillState_C_ShouldShowAsOvercharged::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_SkillState.BP_SkillState_C.UpdateSkillState
// 0x0058 (0x0058 - 0x0000)
struct BP_SkillState_C_UpdateSkillState final
{
public:
	bool                                          local_isOverchargeFeedbackForced;                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_isOvercharged;                               // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_SkillDataComponentScript_C*> CallFunc_Map_Values_Values;                        // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_SkillDataComponent_Base_C*>  CallFunc_GetSkillComponentsAsBP_Array;             // 0x0038(0x0010)(ReferenceParm)
	class UBP_SkillDataComponent_Base_C*          CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverchargeActiveFeedbackForced_Active;  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverchargeActive_Active;                // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillState_C_UpdateSkillState) == 0x000008, "Wrong alignment on BP_SkillState_C_UpdateSkillState");
static_assert(sizeof(BP_SkillState_C_UpdateSkillState) == 0x000058, "Wrong size on BP_SkillState_C_UpdateSkillState");
static_assert(offsetof(BP_SkillState_C_UpdateSkillState, local_isOverchargeFeedbackForced) == 0x000000, "Member 'BP_SkillState_C_UpdateSkillState::local_isOverchargeFeedbackForced' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_UpdateSkillState, local_isOvercharged) == 0x000001, "Member 'BP_SkillState_C_UpdateSkillState::local_isOvercharged' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_UpdateSkillState, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_SkillState_C_UpdateSkillState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_UpdateSkillState, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_SkillState_C_UpdateSkillState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_UpdateSkillState, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SkillState_C_UpdateSkillState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_UpdateSkillState, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'BP_SkillState_C_UpdateSkillState::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_UpdateSkillState, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'BP_SkillState_C_UpdateSkillState::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_UpdateSkillState, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_SkillState_C_UpdateSkillState::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_UpdateSkillState, CallFunc_Map_Values_Values) == 0x000020, "Member 'BP_SkillState_C_UpdateSkillState::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_UpdateSkillState, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_SkillState_C_UpdateSkillState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_UpdateSkillState, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_SkillState_C_UpdateSkillState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_UpdateSkillState, CallFunc_GetSkillComponentsAsBP_Array) == 0x000038, "Member 'BP_SkillState_C_UpdateSkillState::CallFunc_GetSkillComponentsAsBP_Array' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_UpdateSkillState, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_SkillState_C_UpdateSkillState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_UpdateSkillState, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'BP_SkillState_C_UpdateSkillState::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_UpdateSkillState, CallFunc_IsOverchargeActiveFeedbackForced_Active) == 0x000054, "Member 'BP_SkillState_C_UpdateSkillState::CallFunc_IsOverchargeActiveFeedbackForced_Active' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_UpdateSkillState, CallFunc_Less_IntInt_ReturnValue_1) == 0x000055, "Member 'BP_SkillState_C_UpdateSkillState::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkillState_C_UpdateSkillState, CallFunc_IsOverchargeActive_Active) == 0x000056, "Member 'BP_SkillState_C_UpdateSkillState::CallFunc_IsOverchargeActive_Active' has a wrong offset!");

}

