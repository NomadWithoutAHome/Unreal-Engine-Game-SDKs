#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattleCheckContext

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_BattleCheckContext.BP_BattleCheckContext_C.Add Check
// 0x00E0 (0x00E0 - 0x0000)
struct BP_BattleCheckContext_C_Add_Check final
{
public:
	class FName                                   CheckName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CheckMode;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0058(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0068(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C8(0x0010)()
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldAssert_ReturnValue;                 // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleCheckContext_C_Add_Check) == 0x000008, "Wrong alignment on BP_BattleCheckContext_C_Add_Check");
static_assert(sizeof(BP_BattleCheckContext_C_Add_Check) == 0x0000E0, "Wrong size on BP_BattleCheckContext_C_Add_Check");
static_assert(offsetof(BP_BattleCheckContext_C_Add_Check, CheckName) == 0x000000, "Member 'BP_BattleCheckContext_C_Add_Check::CheckName' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_Add_Check, CheckMode) == 0x000008, "Member 'BP_BattleCheckContext_C_Add_Check::CheckMode' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_Add_Check, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'BP_BattleCheckContext_C_Add_Check::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_Add_Check, CallFunc_Conv_NameToText_ReturnValue) == 0x000058, "Member 'BP_BattleCheckContext_C_Add_Check::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_Add_Check, K2Node_MakeStruct_FormatArgumentData_1) == 0x000068, "Member 'BP_BattleCheckContext_C_Add_Check::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_Add_Check, K2Node_MakeArray_Array) == 0x0000B0, "Member 'BP_BattleCheckContext_C_Add_Check::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_Add_Check, CallFunc_Array_AddUnique_ReturnValue) == 0x0000C0, "Member 'BP_BattleCheckContext_C_Add_Check::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_Add_Check, CallFunc_Format_ReturnValue) == 0x0000C8, "Member 'BP_BattleCheckContext_C_Add_Check::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_Add_Check, CallFunc_Array_Find_ReturnValue) == 0x0000D8, "Member 'BP_BattleCheckContext_C_Add_Check::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_Add_Check, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000DC, "Member 'BP_BattleCheckContext_C_Add_Check::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_Add_Check, CallFunc_ShouldAssert_ReturnValue) == 0x0000DD, "Member 'BP_BattleCheckContext_C_Add_Check::CallFunc_ShouldAssert_ReturnValue' has a wrong offset!");

// Function BP_BattleCheckContext.BP_BattleCheckContext_C.CheckCanRecoverActionPoint
// 0x0005 (0x0005 - 0x0000)
struct BP_BattleCheckContext_C_CheckCanRecoverActionPoint final
{
public:
	bool                                          CheckMode;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BecauseDead;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIsAlive_Value;                       // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleCheckContext_C_CheckCanRecoverActionPoint) == 0x000001, "Wrong alignment on BP_BattleCheckContext_C_CheckCanRecoverActionPoint");
static_assert(sizeof(BP_BattleCheckContext_C_CheckCanRecoverActionPoint) == 0x000005, "Wrong size on BP_BattleCheckContext_C_CheckCanRecoverActionPoint");
static_assert(offsetof(BP_BattleCheckContext_C_CheckCanRecoverActionPoint, CheckMode) == 0x000000, "Member 'BP_BattleCheckContext_C_CheckCanRecoverActionPoint::CheckMode' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_CheckCanRecoverActionPoint, ReturnValue) == 0x000001, "Member 'BP_BattleCheckContext_C_CheckCanRecoverActionPoint::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_CheckCanRecoverActionPoint, BecauseDead) == 0x000002, "Member 'BP_BattleCheckContext_C_CheckCanRecoverActionPoint::BecauseDead' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_CheckCanRecoverActionPoint, CallFunc_CheckIsAlive_Value) == 0x000003, "Member 'BP_BattleCheckContext_C_CheckCanRecoverActionPoint::CallFunc_CheckIsAlive_Value' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_CheckCanRecoverActionPoint, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'BP_BattleCheckContext_C_CheckCanRecoverActionPoint::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_BattleCheckContext.BP_BattleCheckContext_C.CheckCanRecoverHP
// 0x0005 (0x0005 - 0x0000)
struct BP_BattleCheckContext_C_CheckCanRecoverHP final
{
public:
	bool                                          CheckMode;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BecauseDead;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIsAlive_Value;                       // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleCheckContext_C_CheckCanRecoverHP) == 0x000001, "Wrong alignment on BP_BattleCheckContext_C_CheckCanRecoverHP");
static_assert(sizeof(BP_BattleCheckContext_C_CheckCanRecoverHP) == 0x000005, "Wrong size on BP_BattleCheckContext_C_CheckCanRecoverHP");
static_assert(offsetof(BP_BattleCheckContext_C_CheckCanRecoverHP, CheckMode) == 0x000000, "Member 'BP_BattleCheckContext_C_CheckCanRecoverHP::CheckMode' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_CheckCanRecoverHP, ReturnValue) == 0x000001, "Member 'BP_BattleCheckContext_C_CheckCanRecoverHP::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_CheckCanRecoverHP, BecauseDead) == 0x000002, "Member 'BP_BattleCheckContext_C_CheckCanRecoverHP::BecauseDead' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_CheckCanRecoverHP, CallFunc_CheckIsAlive_Value) == 0x000003, "Member 'BP_BattleCheckContext_C_CheckCanRecoverHP::CallFunc_CheckIsAlive_Value' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_CheckCanRecoverHP, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'BP_BattleCheckContext_C_CheckCanRecoverHP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_BattleCheckContext.BP_BattleCheckContext_C.CheckCanResurrect
// 0x0004 (0x0004 - 0x0000)
struct BP_BattleCheckContext_C_CheckCanResurrect final
{
public:
	bool                                          CheckMode;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIsAlive_Value;                       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleCheckContext_C_CheckCanResurrect) == 0x000001, "Wrong alignment on BP_BattleCheckContext_C_CheckCanResurrect");
static_assert(sizeof(BP_BattleCheckContext_C_CheckCanResurrect) == 0x000004, "Wrong size on BP_BattleCheckContext_C_CheckCanResurrect");
static_assert(offsetof(BP_BattleCheckContext_C_CheckCanResurrect, CheckMode) == 0x000000, "Member 'BP_BattleCheckContext_C_CheckCanResurrect::CheckMode' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_CheckCanResurrect, ReturnValue) == 0x000001, "Member 'BP_BattleCheckContext_C_CheckCanResurrect::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_CheckCanResurrect, CallFunc_CheckIsAlive_Value) == 0x000002, "Member 'BP_BattleCheckContext_C_CheckCanResurrect::CallFunc_CheckIsAlive_Value' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_CheckCanResurrect, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BP_BattleCheckContext_C_CheckCanResurrect::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_BattleCheckContext.BP_BattleCheckContext_C.CheckIsAlive
// 0x0018 (0x0018 - 0x0000)
struct BP_BattleCheckContext_C_CheckIsAlive final
{
public:
	bool                                          CheckMode;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Bypass;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Value;                                             // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleCheckContext_C_CheckIsAlive) == 0x000008, "Wrong alignment on BP_BattleCheckContext_C_CheckIsAlive");
static_assert(sizeof(BP_BattleCheckContext_C_CheckIsAlive) == 0x000018, "Wrong size on BP_BattleCheckContext_C_CheckIsAlive");
static_assert(offsetof(BP_BattleCheckContext_C_CheckIsAlive, CheckMode) == 0x000000, "Member 'BP_BattleCheckContext_C_CheckIsAlive::CheckMode' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_CheckIsAlive, Bypass) == 0x000001, "Member 'BP_BattleCheckContext_C_CheckIsAlive::Bypass' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_CheckIsAlive, Value) == 0x000002, "Member 'BP_BattleCheckContext_C_CheckIsAlive::Value' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_CheckIsAlive, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BP_BattleCheckContext_C_CheckIsAlive::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_CheckIsAlive, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000008, "Member 'BP_BattleCheckContext_C_CheckIsAlive::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_CheckIsAlive, CallFunc_GetCharacterBattleBase_IsValid) == 0x000010, "Member 'BP_BattleCheckContext_C_CheckIsAlive::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_CheckIsAlive, CallFunc_Not_PreBool_ReturnValue_1) == 0x000011, "Member 'BP_BattleCheckContext_C_CheckIsAlive::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function BP_BattleCheckContext.BP_BattleCheckContext_C.ClearCheckList
// 0x0030 (0x0030 - 0x0000)
struct BP_BattleCheckContext_C_ClearCheckList final
{
public:
	TArray<class FName>                           CheckNames;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0024(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleCheckContext_C_ClearCheckList) == 0x000008, "Wrong alignment on BP_BattleCheckContext_C_ClearCheckList");
static_assert(sizeof(BP_BattleCheckContext_C_ClearCheckList) == 0x000030, "Wrong size on BP_BattleCheckContext_C_ClearCheckList");
static_assert(offsetof(BP_BattleCheckContext_C_ClearCheckList, CheckNames) == 0x000000, "Member 'BP_BattleCheckContext_C_ClearCheckList::CheckNames' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_ClearCheckList, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_BattleCheckContext_C_ClearCheckList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_ClearCheckList, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_BattleCheckContext_C_ClearCheckList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_ClearCheckList, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_BattleCheckContext_C_ClearCheckList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_ClearCheckList, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_BattleCheckContext_C_ClearCheckList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_ClearCheckList, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_BattleCheckContext_C_ClearCheckList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_ClearCheckList, Temp_name_Variable) == 0x000024, "Member 'BP_BattleCheckContext_C_ClearCheckList::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_ClearCheckList, CallFunc_Array_RemoveItem_ReturnValue) == 0x00002C, "Member 'BP_BattleCheckContext_C_ClearCheckList::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_BattleCheckContext.BP_BattleCheckContext_C.GetAllConstants
// 0x0020 (0x0020 - 0x0000)
struct BP_BattleCheckContext_C_GetAllConstants final
{
public:
	TArray<class FName>                           Array;                                             // 0x0000(0x0010)(Parm, OutParm)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_BattleCheckContext_C_GetAllConstants) == 0x000008, "Wrong alignment on BP_BattleCheckContext_C_GetAllConstants");
static_assert(sizeof(BP_BattleCheckContext_C_GetAllConstants) == 0x000020, "Wrong size on BP_BattleCheckContext_C_GetAllConstants");
static_assert(offsetof(BP_BattleCheckContext_C_GetAllConstants, Array) == 0x000000, "Member 'BP_BattleCheckContext_C_GetAllConstants::Array' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_GetAllConstants, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_BattleCheckContext_C_GetAllConstants::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_BattleCheckContext.BP_BattleCheckContext_C.HasCheck
// 0x0014 (0x0014 - 0x0000)
struct BP_BattleCheckContext_C_HasCheck final
{
public:
	class FName                                   ItemToFind;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleCheckContext_C_HasCheck) == 0x000004, "Wrong alignment on BP_BattleCheckContext_C_HasCheck");
static_assert(sizeof(BP_BattleCheckContext_C_HasCheck) == 0x000014, "Wrong size on BP_BattleCheckContext_C_HasCheck");
static_assert(offsetof(BP_BattleCheckContext_C_HasCheck, ItemToFind) == 0x000000, "Member 'BP_BattleCheckContext_C_HasCheck::ItemToFind' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_HasCheck, ReturnValue) == 0x000008, "Member 'BP_BattleCheckContext_C_HasCheck::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_HasCheck, CallFunc_Array_Find_ReturnValue) == 0x00000C, "Member 'BP_BattleCheckContext_C_HasCheck::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_HasCheck, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_BattleCheckContext_C_HasCheck::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BattleCheckContext.BP_BattleCheckContext_C.IsCheckDeclared
// 0x01A0 (0x01A0 - 0x0000)
struct BP_BattleCheckContext_C_IsCheckDeclared final
{
public:
	class FName                                   CheckName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0008(0x0010)()
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0088(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A8(0x0048)(HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetAllConstants_Array;                    // 0x0100(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0110(0x0010)()
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0128(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0178(0x0010)(ReferenceParm)
	bool                                          CallFunc_ShouldAssert_ReturnValue;                 // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0190(0x0010)()
};
static_assert(alignof(BP_BattleCheckContext_C_IsCheckDeclared) == 0x000008, "Wrong alignment on BP_BattleCheckContext_C_IsCheckDeclared");
static_assert(sizeof(BP_BattleCheckContext_C_IsCheckDeclared) == 0x0001A0, "Wrong size on BP_BattleCheckContext_C_IsCheckDeclared");
static_assert(offsetof(BP_BattleCheckContext_C_IsCheckDeclared, CheckName) == 0x000000, "Member 'BP_BattleCheckContext_C_IsCheckDeclared::CheckName' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_IsCheckDeclared, CallFunc_Conv_NameToText_ReturnValue) == 0x000008, "Member 'BP_BattleCheckContext_C_IsCheckDeclared::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_IsCheckDeclared, CallFunc_GetObjectClass_ReturnValue) == 0x000018, "Member 'BP_BattleCheckContext_C_IsCheckDeclared::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_IsCheckDeclared, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'BP_BattleCheckContext_C_IsCheckDeclared::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_IsCheckDeclared, CallFunc_GetClassDisplayName_ReturnValue) == 0x000068, "Member 'BP_BattleCheckContext_C_IsCheckDeclared::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_IsCheckDeclared, K2Node_MakeArray_Array) == 0x000078, "Member 'BP_BattleCheckContext_C_IsCheckDeclared::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_IsCheckDeclared, CallFunc_Conv_StringToText_ReturnValue) == 0x000088, "Member 'BP_BattleCheckContext_C_IsCheckDeclared::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_IsCheckDeclared, CallFunc_Format_ReturnValue) == 0x000098, "Member 'BP_BattleCheckContext_C_IsCheckDeclared::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_IsCheckDeclared, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A8, "Member 'BP_BattleCheckContext_C_IsCheckDeclared::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_IsCheckDeclared, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x0000F0, "Member 'BP_BattleCheckContext_C_IsCheckDeclared::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_IsCheckDeclared, CallFunc_GetCharacterBattleBase_IsValid) == 0x0000F8, "Member 'BP_BattleCheckContext_C_IsCheckDeclared::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_IsCheckDeclared, CallFunc_GetAllConstants_Array) == 0x000100, "Member 'BP_BattleCheckContext_C_IsCheckDeclared::CallFunc_GetAllConstants_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_IsCheckDeclared, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000110, "Member 'BP_BattleCheckContext_C_IsCheckDeclared::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_IsCheckDeclared, CallFunc_Array_Find_ReturnValue) == 0x000120, "Member 'BP_BattleCheckContext_C_IsCheckDeclared::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_IsCheckDeclared, K2Node_MakeStruct_FormatArgumentData_2) == 0x000128, "Member 'BP_BattleCheckContext_C_IsCheckDeclared::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_IsCheckDeclared, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000170, "Member 'BP_BattleCheckContext_C_IsCheckDeclared::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_IsCheckDeclared, K2Node_MakeArray_Array_1) == 0x000178, "Member 'BP_BattleCheckContext_C_IsCheckDeclared::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_IsCheckDeclared, CallFunc_ShouldAssert_ReturnValue) == 0x000188, "Member 'BP_BattleCheckContext_C_IsCheckDeclared::CallFunc_ShouldAssert_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_IsCheckDeclared, CallFunc_Format_ReturnValue_1) == 0x000190, "Member 'BP_BattleCheckContext_C_IsCheckDeclared::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function BP_BattleCheckContext.BP_BattleCheckContext_C.MergeFrom
// 0x0028 (0x0028 - 0x0000)
struct BP_BattleCheckContext_C_MergeFrom final
{
public:
	class UBP_BattleCheckContext_C*               Other;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasCheck_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleCheckContext_C_MergeFrom) == 0x000008, "Wrong alignment on BP_BattleCheckContext_C_MergeFrom");
static_assert(sizeof(BP_BattleCheckContext_C_MergeFrom) == 0x000028, "Wrong size on BP_BattleCheckContext_C_MergeFrom");
static_assert(offsetof(BP_BattleCheckContext_C_MergeFrom, Other) == 0x000000, "Member 'BP_BattleCheckContext_C_MergeFrom::Other' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_MergeFrom, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_BattleCheckContext_C_MergeFrom::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_MergeFrom, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_BattleCheckContext_C_MergeFrom::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_MergeFrom, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_BattleCheckContext_C_MergeFrom::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_MergeFrom, CallFunc_HasCheck_ReturnValue) == 0x000018, "Member 'BP_BattleCheckContext_C_MergeFrom::CallFunc_HasCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_MergeFrom, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_BattleCheckContext_C_MergeFrom::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_MergeFrom, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BP_BattleCheckContext_C_MergeFrom::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_MergeFrom, CallFunc_Less_IntInt_ReturnValue) == 0x000021, "Member 'BP_BattleCheckContext_C_MergeFrom::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_MergeFrom, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_BattleCheckContext_C_MergeFrom::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BattleCheckContext.BP_BattleCheckContext_C.OnConstruct
// 0x0168 (0x0168 - 0x0000)
struct BP_BattleCheckContext_C_OnConstruct final
{
public:
	TArray<class FName>                           local_KnownNames;                                  // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           Temp_wildcard_Variable;                            // 0x0010(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0050(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0010)()
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldAssert_ReturnValue;                 // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00E0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0128(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0138(0x0010)()
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A[0x2];                                      // 0x014A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldAssert_ReturnValue_1;               // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetAllConstants_Array;                    // 0x0158(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_BattleCheckContext_C_OnConstruct) == 0x000008, "Wrong alignment on BP_BattleCheckContext_C_OnConstruct");
static_assert(sizeof(BP_BattleCheckContext_C_OnConstruct) == 0x000168, "Wrong size on BP_BattleCheckContext_C_OnConstruct");
static_assert(offsetof(BP_BattleCheckContext_C_OnConstruct, local_KnownNames) == 0x000000, "Member 'BP_BattleCheckContext_C_OnConstruct::local_KnownNames' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_OnConstruct, Temp_wildcard_Variable) == 0x000010, "Member 'BP_BattleCheckContext_C_OnConstruct::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_OnConstruct, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_BattleCheckContext_C_OnConstruct::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_OnConstruct, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_BattleCheckContext_C_OnConstruct::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_OnConstruct, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_BattleCheckContext_C_OnConstruct::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_OnConstruct, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_BattleCheckContext_C_OnConstruct::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_OnConstruct, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_BattleCheckContext_C_OnConstruct::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_OnConstruct, CallFunc_Array_Get_Item) == 0x000034, "Member 'BP_BattleCheckContext_C_OnConstruct::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_OnConstruct, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000040, "Member 'BP_BattleCheckContext_C_OnConstruct::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_OnConstruct, CallFunc_GetCharacterBattleBase_IsValid) == 0x000048, "Member 'BP_BattleCheckContext_C_OnConstruct::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_OnConstruct, CallFunc_Conv_NameToText_ReturnValue) == 0x000050, "Member 'BP_BattleCheckContext_C_OnConstruct::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_OnConstruct, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'BP_BattleCheckContext_C_OnConstruct::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_OnConstruct, K2Node_MakeArray_Array) == 0x0000A8, "Member 'BP_BattleCheckContext_C_OnConstruct::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_OnConstruct, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'BP_BattleCheckContext_C_OnConstruct::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_OnConstruct, CallFunc_NotEqual_NameName_ReturnValue) == 0x0000C8, "Member 'BP_BattleCheckContext_C_OnConstruct::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_OnConstruct, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0000D0, "Member 'BP_BattleCheckContext_C_OnConstruct::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_OnConstruct, CallFunc_ShouldAssert_ReturnValue) == 0x0000D8, "Member 'BP_BattleCheckContext_C_OnConstruct::CallFunc_ShouldAssert_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_OnConstruct, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000E0, "Member 'BP_BattleCheckContext_C_OnConstruct::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_OnConstruct, K2Node_MakeArray_Array_1) == 0x000128, "Member 'BP_BattleCheckContext_C_OnConstruct::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_OnConstruct, CallFunc_Format_ReturnValue_1) == 0x000138, "Member 'BP_BattleCheckContext_C_OnConstruct::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_OnConstruct, CallFunc_Array_Contains_ReturnValue) == 0x000148, "Member 'BP_BattleCheckContext_C_OnConstruct::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_OnConstruct, CallFunc_Not_PreBool_ReturnValue) == 0x000149, "Member 'BP_BattleCheckContext_C_OnConstruct::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_OnConstruct, CallFunc_Array_Add_ReturnValue) == 0x00014C, "Member 'BP_BattleCheckContext_C_OnConstruct::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_OnConstruct, CallFunc_ShouldAssert_ReturnValue_1) == 0x000150, "Member 'BP_BattleCheckContext_C_OnConstruct::CallFunc_ShouldAssert_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_OnConstruct, CallFunc_GetAllConstants_Array) == 0x000158, "Member 'BP_BattleCheckContext_C_OnConstruct::CallFunc_GetAllConstants_Array' has a wrong offset!");

// Function BP_BattleCheckContext.BP_BattleCheckContext_C.OnHPChanged
// 0x0010 (0x0010 - 0x0000)
struct BP_BattleCheckContext_C_OnHPChanged final
{
public:
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_BattleCheckContext_C_OnHPChanged) == 0x000008, "Wrong alignment on BP_BattleCheckContext_C_OnHPChanged");
static_assert(sizeof(BP_BattleCheckContext_C_OnHPChanged) == 0x000010, "Wrong size on BP_BattleCheckContext_C_OnHPChanged");
static_assert(offsetof(BP_BattleCheckContext_C_OnHPChanged, K2Node_MakeArray_Array) == 0x000000, "Member 'BP_BattleCheckContext_C_OnHPChanged::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_BattleCheckContext.BP_BattleCheckContext_C.ShouldAssert
// 0x0004 (0x0004 - 0x0000)
struct BP_BattleCheckContext_C_ShouldAssert final
{
public:
	bool                                          Bool;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleCheckContext_C_ShouldAssert) == 0x000001, "Wrong alignment on BP_BattleCheckContext_C_ShouldAssert");
static_assert(sizeof(BP_BattleCheckContext_C_ShouldAssert) == 0x000004, "Wrong size on BP_BattleCheckContext_C_ShouldAssert");
static_assert(offsetof(BP_BattleCheckContext_C_ShouldAssert, Bool) == 0x000000, "Member 'BP_BattleCheckContext_C_ShouldAssert::Bool' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_ShouldAssert, ReturnValue) == 0x000001, "Member 'BP_BattleCheckContext_C_ShouldAssert::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_ShouldAssert, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_BattleCheckContext_C_ShouldAssert::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleCheckContext_C_ShouldAssert, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BP_BattleCheckContext_C_ShouldAssert::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

