#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_DialogueCharacter

#include "Basic.hpp"

#include "EDialogueCameraType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_NPC_SpolightTypes_structs.hpp"


namespace SDK::Params
{

// Function BPI_DialogueCharacter.BPI_DialogueCharacter_C.BPI_GetAllDialogueCameras
// 0x0010 (0x0010 - 0x0000)
struct BPI_DialogueCharacter_C_BPI_GetAllDialogueCameras final
{
public:
	TArray<class UCineCameraComponent*>           CineCameraComponents;                              // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
};
static_assert(alignof(BPI_DialogueCharacter_C_BPI_GetAllDialogueCameras) == 0x000008, "Wrong alignment on BPI_DialogueCharacter_C_BPI_GetAllDialogueCameras");
static_assert(sizeof(BPI_DialogueCharacter_C_BPI_GetAllDialogueCameras) == 0x000010, "Wrong size on BPI_DialogueCharacter_C_BPI_GetAllDialogueCameras");
static_assert(offsetof(BPI_DialogueCharacter_C_BPI_GetAllDialogueCameras, CineCameraComponents) == 0x000000, "Member 'BPI_DialogueCharacter_C_BPI_GetAllDialogueCameras::CineCameraComponents' has a wrong offset!");

// Function BPI_DialogueCharacter.BPI_DialogueCharacter_C.BPI_GetDialogueAudioComponent
// 0x0008 (0x0008 - 0x0000)
struct BPI_DialogueCharacter_C_BPI_GetDialogueAudioComponent final
{
public:
	class UAudioComponent*                        AudioComponent;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_DialogueCharacter_C_BPI_GetDialogueAudioComponent) == 0x000008, "Wrong alignment on BPI_DialogueCharacter_C_BPI_GetDialogueAudioComponent");
static_assert(sizeof(BPI_DialogueCharacter_C_BPI_GetDialogueAudioComponent) == 0x000008, "Wrong size on BPI_DialogueCharacter_C_BPI_GetDialogueAudioComponent");
static_assert(offsetof(BPI_DialogueCharacter_C_BPI_GetDialogueAudioComponent, AudioComponent) == 0x000000, "Member 'BPI_DialogueCharacter_C_BPI_GetDialogueAudioComponent::AudioComponent' has a wrong offset!");

// Function BPI_DialogueCharacter.BPI_DialogueCharacter_C.BPI_GetDialogueCameraByType
// 0x0010 (0x0010 - 0x0000)
struct BPI_DialogueCharacter_C_BPI_GetDialogueCameraByType final
{
public:
	EDialogueCameraType                           CameraType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       CameraComponent;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_DialogueCharacter_C_BPI_GetDialogueCameraByType) == 0x000008, "Wrong alignment on BPI_DialogueCharacter_C_BPI_GetDialogueCameraByType");
static_assert(sizeof(BPI_DialogueCharacter_C_BPI_GetDialogueCameraByType) == 0x000010, "Wrong size on BPI_DialogueCharacter_C_BPI_GetDialogueCameraByType");
static_assert(offsetof(BPI_DialogueCharacter_C_BPI_GetDialogueCameraByType, CameraType) == 0x000000, "Member 'BPI_DialogueCharacter_C_BPI_GetDialogueCameraByType::CameraType' has a wrong offset!");
static_assert(offsetof(BPI_DialogueCharacter_C_BPI_GetDialogueCameraByType, CameraComponent) == 0x000008, "Member 'BPI_DialogueCharacter_C_BPI_GetDialogueCameraByType::CameraComponent' has a wrong offset!");

// Function BPI_DialogueCharacter.BPI_DialogueCharacter_C.BPI_GetDialogueCameraOffset
// 0x0018 (0x0018 - 0x0000)
struct BPI_DialogueCharacter_C_BPI_GetDialogueCameraOffset final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_DialogueCharacter_C_BPI_GetDialogueCameraOffset) == 0x000008, "Wrong alignment on BPI_DialogueCharacter_C_BPI_GetDialogueCameraOffset");
static_assert(sizeof(BPI_DialogueCharacter_C_BPI_GetDialogueCameraOffset) == 0x000018, "Wrong size on BPI_DialogueCharacter_C_BPI_GetDialogueCameraOffset");
static_assert(offsetof(BPI_DialogueCharacter_C_BPI_GetDialogueCameraOffset, ReturnValue) == 0x000000, "Member 'BPI_DialogueCharacter_C_BPI_GetDialogueCameraOffset::ReturnValue' has a wrong offset!");

// Function BPI_DialogueCharacter.BPI_DialogueCharacter_C.BPI_GetDialogueFocusPoint
// 0x0008 (0x0008 - 0x0000)
struct BPI_DialogueCharacter_C_BPI_GetDialogueFocusPoint final
{
public:
	class USceneComponent*                        SceneComponent;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_DialogueCharacter_C_BPI_GetDialogueFocusPoint) == 0x000008, "Wrong alignment on BPI_DialogueCharacter_C_BPI_GetDialogueFocusPoint");
static_assert(sizeof(BPI_DialogueCharacter_C_BPI_GetDialogueFocusPoint) == 0x000008, "Wrong size on BPI_DialogueCharacter_C_BPI_GetDialogueFocusPoint");
static_assert(offsetof(BPI_DialogueCharacter_C_BPI_GetDialogueFocusPoint, SceneComponent) == 0x000000, "Member 'BPI_DialogueCharacter_C_BPI_GetDialogueFocusPoint::SceneComponent' has a wrong offset!");

// Function BPI_DialogueCharacter.BPI_DialogueCharacter_C.BPI_GetInteractingCharacter
// 0x0010 (0x0010 - 0x0000)
struct BPI_DialogueCharacter_C_BPI_GetInteractingCharacter final
{
public:
	TScriptInterface<class IBPI_DialogueCharacter_C> ReturnValue;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_DialogueCharacter_C_BPI_GetInteractingCharacter) == 0x000008, "Wrong alignment on BPI_DialogueCharacter_C_BPI_GetInteractingCharacter");
static_assert(sizeof(BPI_DialogueCharacter_C_BPI_GetInteractingCharacter) == 0x000010, "Wrong size on BPI_DialogueCharacter_C_BPI_GetInteractingCharacter");
static_assert(offsetof(BPI_DialogueCharacter_C_BPI_GetInteractingCharacter, ReturnValue) == 0x000000, "Member 'BPI_DialogueCharacter_C_BPI_GetInteractingCharacter::ReturnValue' has a wrong offset!");

// Function BPI_DialogueCharacter.BPI_DialogueCharacter_C.BPI_GetLightDirection
// 0x0001 (0x0001 - 0x0000)
struct BPI_DialogueCharacter_C_BPI_GetLightDirection final
{
public:
	E_NPC_SpolightTypes                           ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_DialogueCharacter_C_BPI_GetLightDirection) == 0x000001, "Wrong alignment on BPI_DialogueCharacter_C_BPI_GetLightDirection");
static_assert(sizeof(BPI_DialogueCharacter_C_BPI_GetLightDirection) == 0x000001, "Wrong size on BPI_DialogueCharacter_C_BPI_GetLightDirection");
static_assert(offsetof(BPI_DialogueCharacter_C_BPI_GetLightDirection, ReturnValue) == 0x000000, "Member 'BPI_DialogueCharacter_C_BPI_GetLightDirection::ReturnValue' has a wrong offset!");

// Function BPI_DialogueCharacter.BPI_DialogueCharacter_C.BPI_GetLightingSet
// 0x0018 (0x0018 - 0x0000)
struct BPI_DialogueCharacter_C_BPI_GetLightingSet final
{
public:
	E_NPC_SpolightTypes                           LightDirection;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULightComponent*                        FrontLight;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ULightComponent*                        RimLight;                                          // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_DialogueCharacter_C_BPI_GetLightingSet) == 0x000008, "Wrong alignment on BPI_DialogueCharacter_C_BPI_GetLightingSet");
static_assert(sizeof(BPI_DialogueCharacter_C_BPI_GetLightingSet) == 0x000018, "Wrong size on BPI_DialogueCharacter_C_BPI_GetLightingSet");
static_assert(offsetof(BPI_DialogueCharacter_C_BPI_GetLightingSet, LightDirection) == 0x000000, "Member 'BPI_DialogueCharacter_C_BPI_GetLightingSet::LightDirection' has a wrong offset!");
static_assert(offsetof(BPI_DialogueCharacter_C_BPI_GetLightingSet, FrontLight) == 0x000008, "Member 'BPI_DialogueCharacter_C_BPI_GetLightingSet::FrontLight' has a wrong offset!");
static_assert(offsetof(BPI_DialogueCharacter_C_BPI_GetLightingSet, RimLight) == 0x000010, "Member 'BPI_DialogueCharacter_C_BPI_GetLightingSet::RimLight' has a wrong offset!");

// Function BPI_DialogueCharacter.BPI_DialogueCharacter_C.BPI_GetReverseSpotlightReceiver
// 0x0010 (0x0010 - 0x0000)
struct BPI_DialogueCharacter_C_BPI_GetReverseSpotlightReceiver final
{
public:
	TScriptInterface<class IBPI_DialogueCharacter_C> ReturnValue;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_DialogueCharacter_C_BPI_GetReverseSpotlightReceiver) == 0x000008, "Wrong alignment on BPI_DialogueCharacter_C_BPI_GetReverseSpotlightReceiver");
static_assert(sizeof(BPI_DialogueCharacter_C_BPI_GetReverseSpotlightReceiver) == 0x000010, "Wrong size on BPI_DialogueCharacter_C_BPI_GetReverseSpotlightReceiver");
static_assert(offsetof(BPI_DialogueCharacter_C_BPI_GetReverseSpotlightReceiver, ReturnValue) == 0x000000, "Member 'BPI_DialogueCharacter_C_BPI_GetReverseSpotlightReceiver::ReturnValue' has a wrong offset!");

// Function BPI_DialogueCharacter.BPI_DialogueCharacter_C.BPI_GetSpotlightsToActivateDuringDialogue
// 0x0010 (0x0010 - 0x0000)
struct BPI_DialogueCharacter_C_BPI_GetSpotlightsToActivateDuringDialogue final
{
public:
	TArray<TSoftObjectPtr<class ASpotLight>>      SpotLightActors;                                   // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BPI_DialogueCharacter_C_BPI_GetSpotlightsToActivateDuringDialogue) == 0x000008, "Wrong alignment on BPI_DialogueCharacter_C_BPI_GetSpotlightsToActivateDuringDialogue");
static_assert(sizeof(BPI_DialogueCharacter_C_BPI_GetSpotlightsToActivateDuringDialogue) == 0x000010, "Wrong size on BPI_DialogueCharacter_C_BPI_GetSpotlightsToActivateDuringDialogue");
static_assert(offsetof(BPI_DialogueCharacter_C_BPI_GetSpotlightsToActivateDuringDialogue, SpotLightActors) == 0x000000, "Member 'BPI_DialogueCharacter_C_BPI_GetSpotlightsToActivateDuringDialogue::SpotLightActors' has a wrong offset!");

// Function BPI_DialogueCharacter.BPI_DialogueCharacter_C.BPI_HasLightingAuthority
// 0x0001 (0x0001 - 0x0000)
struct BPI_DialogueCharacter_C_BPI_HasLightingAuthority final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_DialogueCharacter_C_BPI_HasLightingAuthority) == 0x000001, "Wrong alignment on BPI_DialogueCharacter_C_BPI_HasLightingAuthority");
static_assert(sizeof(BPI_DialogueCharacter_C_BPI_HasLightingAuthority) == 0x000001, "Wrong size on BPI_DialogueCharacter_C_BPI_HasLightingAuthority");
static_assert(offsetof(BPI_DialogueCharacter_C_BPI_HasLightingAuthority, ReturnValue) == 0x000000, "Member 'BPI_DialogueCharacter_C_BPI_HasLightingAuthority::ReturnValue' has a wrong offset!");

// Function BPI_DialogueCharacter.BPI_DialogueCharacter_C.BPI_ShouldMoveCameraPresetsToOtherSide
// 0x0001 (0x0001 - 0x0000)
struct BPI_DialogueCharacter_C_BPI_ShouldMoveCameraPresetsToOtherSide final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_DialogueCharacter_C_BPI_ShouldMoveCameraPresetsToOtherSide) == 0x000001, "Wrong alignment on BPI_DialogueCharacter_C_BPI_ShouldMoveCameraPresetsToOtherSide");
static_assert(sizeof(BPI_DialogueCharacter_C_BPI_ShouldMoveCameraPresetsToOtherSide) == 0x000001, "Wrong size on BPI_DialogueCharacter_C_BPI_ShouldMoveCameraPresetsToOtherSide");
static_assert(offsetof(BPI_DialogueCharacter_C_BPI_ShouldMoveCameraPresetsToOtherSide, ReturnValue) == 0x000000, "Member 'BPI_DialogueCharacter_C_BPI_ShouldMoveCameraPresetsToOtherSide::ReturnValue' has a wrong offset!");

}

