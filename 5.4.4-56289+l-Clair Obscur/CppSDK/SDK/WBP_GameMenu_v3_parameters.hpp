#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GameMenu_v3

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "S_jRPG_Item_StaticData_structs.hpp"
#include "E_GameMenuPage_structs.hpp"


namespace SDK::Params
{

// Function WBP_GameMenu_v3.WBP_GameMenu_v3_C.BndEvt__WBP_GameMenu_v3_WBP_GM_CharacterMenuContainer_K2Node_ComponentBoundEvent_4_OnActivePageChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_CharacterMenuContainer_K2Node_ComponentBoundEvent_4_OnActivePageChanged__DelegateSignature final
{
public:
	E_GameMenuPage                                InActivePage;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_CharacterMenuContainer_K2Node_ComponentBoundEvent_4_OnActivePageChanged__DelegateSignature) == 0x000001, "Wrong alignment on WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_CharacterMenuContainer_K2Node_ComponentBoundEvent_4_OnActivePageChanged__DelegateSignature");
static_assert(sizeof(WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_CharacterMenuContainer_K2Node_ComponentBoundEvent_4_OnActivePageChanged__DelegateSignature) == 0x000001, "Wrong size on WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_CharacterMenuContainer_K2Node_ComponentBoundEvent_4_OnActivePageChanged__DelegateSignature");
static_assert(offsetof(WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_CharacterMenuContainer_K2Node_ComponentBoundEvent_4_OnActivePageChanged__DelegateSignature, InActivePage) == 0x000000, "Member 'WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_CharacterMenuContainer_K2Node_ComponentBoundEvent_4_OnActivePageChanged__DelegateSignature::InActivePage' has a wrong offset!");

// Function WBP_GameMenu_v3.WBP_GameMenu_v3_C.BndEvt__WBP_GameMenu_v3_WBP_GM_MainMenu_K2Node_ComponentBoundEvent_1_OnCharacterSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_MainMenu_K2Node_ComponentBoundEvent_1_OnCharacterSelected__DelegateSignature final
{
public:
	class UBP_CharacterData_C*                    CharacterData;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_MainMenu_K2Node_ComponentBoundEvent_1_OnCharacterSelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_MainMenu_K2Node_ComponentBoundEvent_1_OnCharacterSelected__DelegateSignature");
static_assert(sizeof(WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_MainMenu_K2Node_ComponentBoundEvent_1_OnCharacterSelected__DelegateSignature) == 0x000008, "Wrong size on WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_MainMenu_K2Node_ComponentBoundEvent_1_OnCharacterSelected__DelegateSignature");
static_assert(offsetof(WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_MainMenu_K2Node_ComponentBoundEvent_1_OnCharacterSelected__DelegateSignature, CharacterData) == 0x000000, "Member 'WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_MainMenu_K2Node_ComponentBoundEvent_1_OnCharacterSelected__DelegateSignature::CharacterData' has a wrong offset!");

// Function WBP_GameMenu_v3.WBP_GameMenu_v3_C.BndEvt__WBP_GameMenu_v3_WBP_GM_MainMenuContainer_K2Node_ComponentBoundEvent_5_OnActivePageChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_MainMenuContainer_K2Node_ComponentBoundEvent_5_OnActivePageChanged__DelegateSignature final
{
public:
	E_GameMenuPage                                InActivePage;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_MainMenuContainer_K2Node_ComponentBoundEvent_5_OnActivePageChanged__DelegateSignature) == 0x000001, "Wrong alignment on WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_MainMenuContainer_K2Node_ComponentBoundEvent_5_OnActivePageChanged__DelegateSignature");
static_assert(sizeof(WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_MainMenuContainer_K2Node_ComponentBoundEvent_5_OnActivePageChanged__DelegateSignature) == 0x000001, "Wrong size on WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_MainMenuContainer_K2Node_ComponentBoundEvent_5_OnActivePageChanged__DelegateSignature");
static_assert(offsetof(WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_MainMenuContainer_K2Node_ComponentBoundEvent_5_OnActivePageChanged__DelegateSignature, InActivePage) == 0x000000, "Member 'WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_MainMenuContainer_K2Node_ComponentBoundEvent_5_OnActivePageChanged__DelegateSignature::InActivePage' has a wrong offset!");

// Function WBP_GameMenu_v3.WBP_GameMenu_v3_C.BndEvt__WBP_GameMenu_v3_WBP_GM_MainMenuContainer_K2Node_ComponentBoundEvent_6_OnCharacterFocused__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_MainMenuContainer_K2Node_ComponentBoundEvent_6_OnCharacterFocused__DelegateSignature final
{
public:
	class UBP_CharacterData_C*                    CharacterData;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_MainMenuContainer_K2Node_ComponentBoundEvent_6_OnCharacterFocused__DelegateSignature) == 0x000008, "Wrong alignment on WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_MainMenuContainer_K2Node_ComponentBoundEvent_6_OnCharacterFocused__DelegateSignature");
static_assert(sizeof(WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_MainMenuContainer_K2Node_ComponentBoundEvent_6_OnCharacterFocused__DelegateSignature) == 0x000008, "Wrong size on WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_MainMenuContainer_K2Node_ComponentBoundEvent_6_OnCharacterFocused__DelegateSignature");
static_assert(offsetof(WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_MainMenuContainer_K2Node_ComponentBoundEvent_6_OnCharacterFocused__DelegateSignature, CharacterData) == 0x000000, "Member 'WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_MainMenuContainer_K2Node_ComponentBoundEvent_6_OnCharacterFocused__DelegateSignature::CharacterData' has a wrong offset!");

// Function WBP_GameMenu_v3.WBP_GameMenu_v3_C.BndEvt__WBP_GameMenu_v3_WBP_GM_TeamMenu_K2Node_ComponentBoundEvent_3_OnSelectedCharacterChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_TeamMenu_K2Node_ComponentBoundEvent_3_OnSelectedCharacterChanged__DelegateSignature final
{
public:
	class UBP_CharacterData_C*                    NewCharacter;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_TeamMenu_K2Node_ComponentBoundEvent_3_OnSelectedCharacterChanged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_TeamMenu_K2Node_ComponentBoundEvent_3_OnSelectedCharacterChanged__DelegateSignature");
static_assert(sizeof(WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_TeamMenu_K2Node_ComponentBoundEvent_3_OnSelectedCharacterChanged__DelegateSignature) == 0x000008, "Wrong size on WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_TeamMenu_K2Node_ComponentBoundEvent_3_OnSelectedCharacterChanged__DelegateSignature");
static_assert(offsetof(WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_TeamMenu_K2Node_ComponentBoundEvent_3_OnSelectedCharacterChanged__DelegateSignature, NewCharacter) == 0x000000, "Member 'WBP_GameMenu_v3_C_BndEvt__WBP_GameMenu_v3_WBP_GM_TeamMenu_K2Node_ComponentBoundEvent_3_OnSelectedCharacterChanged__DelegateSignature::NewCharacter' has a wrong offset!");

// Function WBP_GameMenu_v3.WBP_GameMenu_v3_C.ExecuteUbergraph_WBP_GameMenu_v3
// 0x0078 (0x0078 - 0x0000)
struct WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USF_BlueprintLatentAction*              K2Node_CustomEvent_LatentAction;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    K2Node_ComponentBoundEvent_CharacterData_1;        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    K2Node_ComponentBoundEvent_NewCharacter;           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    K2Node_CustomEvent_SelectedCharacter;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_PreSelectedPage;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GameMenuPage                                K2Node_ComponentBoundEvent_InActivePage_1;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GameMenuPage                                K2Node_ComponentBoundEvent_InActivePage;           // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterData_C*                    K2Node_ComponentBoundEvent_CharacterData;          // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            K2Node_DynamicCast_AsBP_J_RPG_Controller_World;    // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNameValid_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3) == 0x000008, "Wrong alignment on WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3");
static_assert(sizeof(WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3) == 0x000078, "Wrong size on WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3");
static_assert(offsetof(WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3, EntryPoint) == 0x000000, "Member 'WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3, K2Node_CustomEvent_LatentAction) == 0x000008, "Member 'WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3::K2Node_CustomEvent_LatentAction' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3, K2Node_ComponentBoundEvent_CharacterData_1) == 0x000030, "Member 'WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3::K2Node_ComponentBoundEvent_CharacterData_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3, K2Node_ComponentBoundEvent_NewCharacter) == 0x000038, "Member 'WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3::K2Node_ComponentBoundEvent_NewCharacter' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3, K2Node_CustomEvent_SelectedCharacter) == 0x000040, "Member 'WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3::K2Node_CustomEvent_SelectedCharacter' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3, K2Node_CustomEvent_PreSelectedPage) == 0x000048, "Member 'WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3::K2Node_CustomEvent_PreSelectedPage' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3, K2Node_ComponentBoundEvent_InActivePage_1) == 0x000050, "Member 'WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3::K2Node_ComponentBoundEvent_InActivePage_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3, K2Node_ComponentBoundEvent_InActivePage) == 0x000051, "Member 'WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3::K2Node_ComponentBoundEvent_InActivePage' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3, K2Node_ComponentBoundEvent_CharacterData) == 0x000058, "Member 'WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3::K2Node_ComponentBoundEvent_CharacterData' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3, CallFunc_GetPlayerController_ReturnValue) == 0x000060, "Member 'WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3, K2Node_DynamicCast_AsBP_J_RPG_Controller_World) == 0x000068, "Member 'WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3::K2Node_DynamicCast_AsBP_J_RPG_Controller_World' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3, CallFunc_IsNameValid_ReturnValue) == 0x000071, "Member 'WBP_GameMenu_v3_C_ExecuteUbergraph_WBP_GameMenu_v3::CallFunc_IsNameValid_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_v3.WBP_GameMenu_v3_C.FadeOutAndDeactivate
// 0x0008 (0x0008 - 0x0000)
struct WBP_GameMenu_v3_C_FadeOutAndDeactivate final
{
public:
	class USF_BlueprintLatentAction*              LatentAction;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_v3_C_FadeOutAndDeactivate) == 0x000008, "Wrong alignment on WBP_GameMenu_v3_C_FadeOutAndDeactivate");
static_assert(sizeof(WBP_GameMenu_v3_C_FadeOutAndDeactivate) == 0x000008, "Wrong size on WBP_GameMenu_v3_C_FadeOutAndDeactivate");
static_assert(offsetof(WBP_GameMenu_v3_C_FadeOutAndDeactivate, LatentAction) == 0x000000, "Member 'WBP_GameMenu_v3_C_FadeOutAndDeactivate::LatentAction' has a wrong offset!");

// Function WBP_GameMenu_v3.WBP_GameMenu_v3_C.GoToPictosFromInventory
// 0x0130 (0x0130 - 0x0000)
struct WBP_GameMenu_v3_C_GoToPictosFromInventory final
{
public:
	struct FS_jRPG_Item_StaticData                ItemStaticData;                                    // 0x0000(0x0130)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_v3_C_GoToPictosFromInventory) == 0x000008, "Wrong alignment on WBP_GameMenu_v3_C_GoToPictosFromInventory");
static_assert(sizeof(WBP_GameMenu_v3_C_GoToPictosFromInventory) == 0x000130, "Wrong size on WBP_GameMenu_v3_C_GoToPictosFromInventory");
static_assert(offsetof(WBP_GameMenu_v3_C_GoToPictosFromInventory, ItemStaticData) == 0x000000, "Member 'WBP_GameMenu_v3_C_GoToPictosFromInventory::ItemStaticData' has a wrong offset!");

// Function WBP_GameMenu_v3.WBP_GameMenu_v3_C.GoToWeaponsFromInventory
// 0x0178 (0x0178 - 0x0000)
struct WBP_GameMenu_v3_C_GoToWeaponsFromInventory final
{
public:
	struct FS_jRPG_Item_StaticData                ItemStaticData;                                    // 0x0000(0x0130)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetNameFromItemSubtype_Name;              // 0x0134(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x013E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13F[0x1];                                      // 0x013F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_CharacterData_C*>            CallFunc_GetCharactersDataLeftToRight_OrderedCharacters; // 0x0150(0x0010)(ReferenceParm)
	class UBP_CharacterData_C*                    CallFunc_Array_Get_Item;                           // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x016E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x016F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_3;        // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_4;        // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_v3_C_GoToWeaponsFromInventory) == 0x000008, "Wrong alignment on WBP_GameMenu_v3_C_GoToWeaponsFromInventory");
static_assert(sizeof(WBP_GameMenu_v3_C_GoToWeaponsFromInventory) == 0x000178, "Wrong size on WBP_GameMenu_v3_C_GoToWeaponsFromInventory");
static_assert(offsetof(WBP_GameMenu_v3_C_GoToWeaponsFromInventory, ItemStaticData) == 0x000000, "Member 'WBP_GameMenu_v3_C_GoToWeaponsFromInventory::ItemStaticData' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_GoToWeaponsFromInventory, Temp_bool_True_if_break_was_hit_Variable) == 0x000130, "Member 'WBP_GameMenu_v3_C_GoToWeaponsFromInventory::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_GoToWeaponsFromInventory, CallFunc_GetNameFromItemSubtype_Name) == 0x000134, "Member 'WBP_GameMenu_v3_C_GoToWeaponsFromInventory::CallFunc_GetNameFromItemSubtype_Name' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_GoToWeaponsFromInventory, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00013C, "Member 'WBP_GameMenu_v3_C_GoToWeaponsFromInventory::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_GoToWeaponsFromInventory, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x00013D, "Member 'WBP_GameMenu_v3_C_GoToWeaponsFromInventory::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_GoToWeaponsFromInventory, CallFunc_Not_PreBool_ReturnValue) == 0x00013E, "Member 'WBP_GameMenu_v3_C_GoToWeaponsFromInventory::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_GoToWeaponsFromInventory, Temp_int_Array_Index_Variable) == 0x000140, "Member 'WBP_GameMenu_v3_C_GoToWeaponsFromInventory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_GoToWeaponsFromInventory, Temp_int_Loop_Counter_Variable) == 0x000144, "Member 'WBP_GameMenu_v3_C_GoToWeaponsFromInventory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_GoToWeaponsFromInventory, CallFunc_Add_IntInt_ReturnValue) == 0x000148, "Member 'WBP_GameMenu_v3_C_GoToWeaponsFromInventory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_GoToWeaponsFromInventory, CallFunc_GetCharactersDataLeftToRight_OrderedCharacters) == 0x000150, "Member 'WBP_GameMenu_v3_C_GoToWeaponsFromInventory::CallFunc_GetCharactersDataLeftToRight_OrderedCharacters' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_GoToWeaponsFromInventory, CallFunc_Array_Get_Item) == 0x000160, "Member 'WBP_GameMenu_v3_C_GoToWeaponsFromInventory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_GoToWeaponsFromInventory, CallFunc_Array_Length_ReturnValue) == 0x000168, "Member 'WBP_GameMenu_v3_C_GoToWeaponsFromInventory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_GoToWeaponsFromInventory, CallFunc_Less_IntInt_ReturnValue) == 0x00016C, "Member 'WBP_GameMenu_v3_C_GoToWeaponsFromInventory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_GoToWeaponsFromInventory, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x00016D, "Member 'WBP_GameMenu_v3_C_GoToWeaponsFromInventory::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_GoToWeaponsFromInventory, CallFunc_BooleanAND_ReturnValue) == 0x00016E, "Member 'WBP_GameMenu_v3_C_GoToWeaponsFromInventory::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_GoToWeaponsFromInventory, CallFunc_BooleanAND_ReturnValue_1) == 0x00016F, "Member 'WBP_GameMenu_v3_C_GoToWeaponsFromInventory::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_GoToWeaponsFromInventory, CallFunc_EqualEqual_NameName_ReturnValue_3) == 0x000170, "Member 'WBP_GameMenu_v3_C_GoToWeaponsFromInventory::CallFunc_EqualEqual_NameName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_GoToWeaponsFromInventory, CallFunc_EqualEqual_NameName_ReturnValue_4) == 0x000171, "Member 'WBP_GameMenu_v3_C_GoToWeaponsFromInventory::CallFunc_EqualEqual_NameName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_GoToWeaponsFromInventory, CallFunc_BooleanAND_ReturnValue_2) == 0x000172, "Member 'WBP_GameMenu_v3_C_GoToWeaponsFromInventory::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_GoToWeaponsFromInventory, CallFunc_BooleanOR_ReturnValue) == 0x000173, "Member 'WBP_GameMenu_v3_C_GoToWeaponsFromInventory::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_v3.WBP_GameMenu_v3_C.OnCharacterSelected
// 0x0008 (0x0008 - 0x0000)
struct WBP_GameMenu_v3_C_OnCharacterSelected final
{
public:
	class UBP_CharacterData_C*                    SelectedCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_v3_C_OnCharacterSelected) == 0x000008, "Wrong alignment on WBP_GameMenu_v3_C_OnCharacterSelected");
static_assert(sizeof(WBP_GameMenu_v3_C_OnCharacterSelected) == 0x000008, "Wrong size on WBP_GameMenu_v3_C_OnCharacterSelected");
static_assert(offsetof(WBP_GameMenu_v3_C_OnCharacterSelected, SelectedCharacter) == 0x000000, "Member 'WBP_GameMenu_v3_C_OnCharacterSelected::SelectedCharacter' has a wrong offset!");

// Function WBP_GameMenu_v3.WBP_GameMenu_v3_C.OnPageSelected
// 0x0050 (0x0050 - 0x0000)
struct WBP_GameMenu_v3_C_OnPageSelected final
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_CharacterData_C*>            CallFunc_GetCharacterCollection_Characters;        // 0x0018(0x0010)(ReferenceParm)
	class UBP_CharacterData_C*                    CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_v3_C_OnPageSelected) == 0x000008, "Wrong alignment on WBP_GameMenu_v3_C_OnPageSelected");
static_assert(sizeof(WBP_GameMenu_v3_C_OnPageSelected) == 0x000050, "Wrong size on WBP_GameMenu_v3_C_OnPageSelected");
static_assert(offsetof(WBP_GameMenu_v3_C_OnPageSelected, PageName) == 0x000000, "Member 'WBP_GameMenu_v3_C_OnPageSelected::PageName' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_OnPageSelected, CallFunc_GetCustomGI_ReturnValue) == 0x000008, "Member 'WBP_GameMenu_v3_C_OnPageSelected::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_OnPageSelected, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000010, "Member 'WBP_GameMenu_v3_C_OnPageSelected::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_OnPageSelected, CallFunc_GetCharacterCollection_Characters) == 0x000018, "Member 'WBP_GameMenu_v3_C_OnPageSelected::CallFunc_GetCharacterCollection_Characters' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_OnPageSelected, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_GameMenu_v3_C_OnPageSelected::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_OnPageSelected, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000030, "Member 'WBP_GameMenu_v3_C_OnPageSelected::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_OnPageSelected, K2Node_CreateDelegate_OutputDelegate) == 0x000034, "Member 'WBP_GameMenu_v3_C_OnPageSelected::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_OnPageSelected, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000048, "Member 'WBP_GameMenu_v3_C_OnPageSelected::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function WBP_GameMenu_v3.WBP_GameMenu_v3_C.QueuePreSelectedPage
// 0x0008 (0x0008 - 0x0000)
struct WBP_GameMenu_v3_C_QueuePreSelectedPage final
{
public:
	class FName                                   PreSelectedPage_0;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_v3_C_QueuePreSelectedPage) == 0x000004, "Wrong alignment on WBP_GameMenu_v3_C_QueuePreSelectedPage");
static_assert(sizeof(WBP_GameMenu_v3_C_QueuePreSelectedPage) == 0x000008, "Wrong size on WBP_GameMenu_v3_C_QueuePreSelectedPage");
static_assert(offsetof(WBP_GameMenu_v3_C_QueuePreSelectedPage, PreSelectedPage_0) == 0x000000, "Member 'WBP_GameMenu_v3_C_QueuePreSelectedPage::PreSelectedPage_0' has a wrong offset!");

// Function WBP_GameMenu_v3.WBP_GameMenu_v3_C.BP_GetDesiredFocusTarget
// 0x0010 (0x0010 - 0x0000)
struct WBP_GameMenu_v3_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetDesiredFocusTarget_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GameMenu_v3_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_GameMenu_v3_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_GameMenu_v3_C_BP_GetDesiredFocusTarget) == 0x000010, "Wrong size on WBP_GameMenu_v3_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_GameMenu_v3_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_GameMenu_v3_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GameMenu_v3_C_BP_GetDesiredFocusTarget, CallFunc_GetDesiredFocusTarget_ReturnValue) == 0x000008, "Member 'WBP_GameMenu_v3_C_BP_GetDesiredFocusTarget::CallFunc_GetDesiredFocusTarget_ReturnValue' has a wrong offset!");

}

