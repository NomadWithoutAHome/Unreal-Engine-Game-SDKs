#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Bubbles

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Bubbles.BP_Bubbles_C
// 0x0098 (0x0328 - 0x0290)
class ABP_Bubbles_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        AC_Bubble_Idle;                                    // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Bubbles;                                           // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        SpawnRate;                                         // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Alpha;                                             // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Size;                                              // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SphereRadius;                                      // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Refraction;                                        // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NoiseStrength;                                     // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NoiseFrequency;                                    // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LifetimeMin;                                       // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LifetimeMax;                                       // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Gravity;                                           // 0x0308(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Monochromatic;                                     // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void ReceiveBeginPlay();
	void ExecuteUbergraph_BP_Bubbles(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Bubbles_C">();
	}
	static class ABP_Bubbles_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Bubbles_C>();
	}
};
static_assert(alignof(ABP_Bubbles_C) == 0x000008, "Wrong alignment on ABP_Bubbles_C");
static_assert(sizeof(ABP_Bubbles_C) == 0x000328, "Wrong size on ABP_Bubbles_C");
static_assert(offsetof(ABP_Bubbles_C, UberGraphFrame) == 0x000290, "Member 'ABP_Bubbles_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Bubbles_C, AC_Bubble_Idle) == 0x000298, "Member 'ABP_Bubbles_C::AC_Bubble_Idle' has a wrong offset!");
static_assert(offsetof(ABP_Bubbles_C, Bubbles) == 0x0002A0, "Member 'ABP_Bubbles_C::Bubbles' has a wrong offset!");
static_assert(offsetof(ABP_Bubbles_C, DefaultSceneRoot) == 0x0002A8, "Member 'ABP_Bubbles_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Bubbles_C, SpawnRate) == 0x0002B0, "Member 'ABP_Bubbles_C::SpawnRate' has a wrong offset!");
static_assert(offsetof(ABP_Bubbles_C, Alpha) == 0x0002B8, "Member 'ABP_Bubbles_C::Alpha' has a wrong offset!");
static_assert(offsetof(ABP_Bubbles_C, Size) == 0x0002C0, "Member 'ABP_Bubbles_C::Size' has a wrong offset!");
static_assert(offsetof(ABP_Bubbles_C, SphereRadius) == 0x0002C8, "Member 'ABP_Bubbles_C::SphereRadius' has a wrong offset!");
static_assert(offsetof(ABP_Bubbles_C, Refraction) == 0x0002D0, "Member 'ABP_Bubbles_C::Refraction' has a wrong offset!");
static_assert(offsetof(ABP_Bubbles_C, NoiseStrength) == 0x0002D8, "Member 'ABP_Bubbles_C::NoiseStrength' has a wrong offset!");
static_assert(offsetof(ABP_Bubbles_C, NoiseFrequency) == 0x0002E0, "Member 'ABP_Bubbles_C::NoiseFrequency' has a wrong offset!");
static_assert(offsetof(ABP_Bubbles_C, LifetimeMin) == 0x0002E8, "Member 'ABP_Bubbles_C::LifetimeMin' has a wrong offset!");
static_assert(offsetof(ABP_Bubbles_C, LifetimeMax) == 0x0002F0, "Member 'ABP_Bubbles_C::LifetimeMax' has a wrong offset!");
static_assert(offsetof(ABP_Bubbles_C, Color) == 0x0002F8, "Member 'ABP_Bubbles_C::Color' has a wrong offset!");
static_assert(offsetof(ABP_Bubbles_C, Gravity) == 0x000308, "Member 'ABP_Bubbles_C::Gravity' has a wrong offset!");
static_assert(offsetof(ABP_Bubbles_C, Monochromatic) == 0x000320, "Member 'ABP_Bubbles_C::Monochromatic' has a wrong offset!");

}

