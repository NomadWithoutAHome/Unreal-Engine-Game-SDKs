#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LevelSequenceExecutor

#include "Basic.hpp"

#include "MovieScene_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LevelSequenceExecutor.BP_LevelSequenceExecutor_C
// 0x0098 (0x0328 - 0x0290)
class ABP_LevelSequenceExecutor_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_LevelSequenceExecutor_SerializableComponent_C* BP_LevelSequencePlayer_SerializableComponent; // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard;                                         // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          LevelSequence;                                     // 0x02B0(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FMovieSceneSequencePlaybackSettings    PlaybackSettings;                                  // 0x02D8(0x0028)(Edit, BlueprintVisible, NoDestructor)
	TMulticastInlineDelegate<void()>              OnLevelSequenceExecuted;                           // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class ALevelSequenceActor*                    LevelSequenceActor;                                // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   LevelSequencePlayer;                               // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          HasPlayedSequence;                                 // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldResetSequenceOnRest;                         // 0x0321(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUpdatePositionMethod                         UpdateMethodWhenLoadingState;                      // 0x0322(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ResetState();
	void ResetSequence();
	void ReceiveBeginPlay();
	void PlaySequence();
	void OnSequenceStateLoaded(bool State);
	void OnSequencePlayed();
	void OnLoaded_8738431E4CA73E2081042690EE2C35AC(class UObject* Loaded);
	void OnLoaded_8738431E4CA73E20810426908D00A7C4(class UObject* Loaded);
	void OnLoaded_8738431E4CA73E20810426903BE07941(class UObject* Loaded);
	bool IsSequencePlayed();
	void GetFrameForLoading(struct FMovieSceneSequencePlaybackParams* MovieSceneSequencePlaybackParams);
	void GetFirstFrame(struct FMovieSceneSequencePlaybackParams* MovieSceneSequencePlaybackParams);
	void ExecuteUbergraph_BP_LevelSequenceExecutor(int32 EntryPoint);
	void EditorResetSequence();
	void EditorPlaySequence();
	void CreateLevelSequencePlayer(class ULevelSequence* LevelSequence_0);
	bool CheckForErrors(TArray<class FText>& ErrorMessages);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LevelSequenceExecutor_C">();
	}
	static class ABP_LevelSequenceExecutor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LevelSequenceExecutor_C>();
	}
};
static_assert(alignof(ABP_LevelSequenceExecutor_C) == 0x000008, "Wrong alignment on ABP_LevelSequenceExecutor_C");
static_assert(sizeof(ABP_LevelSequenceExecutor_C) == 0x000328, "Wrong size on ABP_LevelSequenceExecutor_C");
static_assert(offsetof(ABP_LevelSequenceExecutor_C, UberGraphFrame) == 0x000290, "Member 'ABP_LevelSequenceExecutor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_LevelSequenceExecutor_C, BP_LevelSequencePlayer_SerializableComponent) == 0x000298, "Member 'ABP_LevelSequenceExecutor_C::BP_LevelSequencePlayer_SerializableComponent' has a wrong offset!");
static_assert(offsetof(ABP_LevelSequenceExecutor_C, Billboard) == 0x0002A0, "Member 'ABP_LevelSequenceExecutor_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_LevelSequenceExecutor_C, DefaultSceneRoot) == 0x0002A8, "Member 'ABP_LevelSequenceExecutor_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_LevelSequenceExecutor_C, LevelSequence) == 0x0002B0, "Member 'ABP_LevelSequenceExecutor_C::LevelSequence' has a wrong offset!");
static_assert(offsetof(ABP_LevelSequenceExecutor_C, PlaybackSettings) == 0x0002D8, "Member 'ABP_LevelSequenceExecutor_C::PlaybackSettings' has a wrong offset!");
static_assert(offsetof(ABP_LevelSequenceExecutor_C, OnLevelSequenceExecuted) == 0x000300, "Member 'ABP_LevelSequenceExecutor_C::OnLevelSequenceExecuted' has a wrong offset!");
static_assert(offsetof(ABP_LevelSequenceExecutor_C, LevelSequenceActor) == 0x000310, "Member 'ABP_LevelSequenceExecutor_C::LevelSequenceActor' has a wrong offset!");
static_assert(offsetof(ABP_LevelSequenceExecutor_C, LevelSequencePlayer) == 0x000318, "Member 'ABP_LevelSequenceExecutor_C::LevelSequencePlayer' has a wrong offset!");
static_assert(offsetof(ABP_LevelSequenceExecutor_C, HasPlayedSequence) == 0x000320, "Member 'ABP_LevelSequenceExecutor_C::HasPlayedSequence' has a wrong offset!");
static_assert(offsetof(ABP_LevelSequenceExecutor_C, ShouldResetSequenceOnRest) == 0x000321, "Member 'ABP_LevelSequenceExecutor_C::ShouldResetSequenceOnRest' has a wrong offset!");
static_assert(offsetof(ABP_LevelSequenceExecutor_C, UpdateMethodWhenLoadingState) == 0x000322, "Member 'ABP_LevelSequenceExecutor_C::UpdateMethodWhenLoadingState' has a wrong offset!");

}

