#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CreditOverlay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FCreditsParagraph_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CreditOverlay.WBP_CreditOverlay_C
// 0x0040 (0x0320 - 0x02E0)
class UWBP_CreditOverlay_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCanvasPanel*                           CanvasPanel_35;                                    // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<struct FFCreditsParagraph>             CurrentCredits;                                    // 0x02F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void()>              OnCreditsFinished;                                 // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class USF_BlueprintLatentAction*              Latent_Action;                                     // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CurrentTimer;                                      // 0x0318(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_CreditOverlay(int32 EntryPoint);
	void SetGameplayPaused(bool Paused);
	void ShowCredits(const TArray<struct FFCreditsParagraph>& CreditParagraphs, class USF_BlueprintLatentAction* Latent_Action_0);
	void ShowCreditsAsset(class UBP_DataAsset_GameCredits_C* Credits, class USF_BlueprintLatentAction* LatentAction);
	void ShowNextCreditParagraph();
	void TimerComplete();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CreditOverlay_C">();
	}
	static class UWBP_CreditOverlay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CreditOverlay_C>();
	}
};
static_assert(alignof(UWBP_CreditOverlay_C) == 0x000008, "Wrong alignment on UWBP_CreditOverlay_C");
static_assert(sizeof(UWBP_CreditOverlay_C) == 0x000320, "Wrong size on UWBP_CreditOverlay_C");
static_assert(offsetof(UWBP_CreditOverlay_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_CreditOverlay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CreditOverlay_C, CanvasPanel_35) == 0x0002E8, "Member 'UWBP_CreditOverlay_C::CanvasPanel_35' has a wrong offset!");
static_assert(offsetof(UWBP_CreditOverlay_C, CurrentCredits) == 0x0002F0, "Member 'UWBP_CreditOverlay_C::CurrentCredits' has a wrong offset!");
static_assert(offsetof(UWBP_CreditOverlay_C, OnCreditsFinished) == 0x000300, "Member 'UWBP_CreditOverlay_C::OnCreditsFinished' has a wrong offset!");
static_assert(offsetof(UWBP_CreditOverlay_C, Latent_Action) == 0x000310, "Member 'UWBP_CreditOverlay_C::Latent_Action' has a wrong offset!");
static_assert(offsetof(UWBP_CreditOverlay_C, CurrentTimer) == 0x000318, "Member 'UWBP_CreditOverlay_C::CurrentTimer' has a wrong offset!");

}

