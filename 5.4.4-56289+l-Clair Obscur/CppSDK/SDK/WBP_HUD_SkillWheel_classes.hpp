#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HUD_SkillWheel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EBattleForbiddenActionReason_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_HUD_SkillWheel.WBP_HUD_SkillWheel_C
// 0x0178 (0x0458 - 0x02E0)
class UWBP_HUD_SkillWheel_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_State_Prompt_RightSide;                       // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_PromptSwitchSide;                             // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Reduce_Left;                                  // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_State_Reduce_Right;                           // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Reduce_Right;                                 // 0x0308(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Appear;                                       // 0x0310(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_Arrow_Left;                            // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_Arrow_Right;                           // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_SwitchWheelContainer;                  // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CicleCenter;                                       // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CicleCenter_1;                                     // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CicleIn;                                           // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Cicleout;                                          // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Cicleout_1;                                        // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CircleDot_In;                                      // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CircleDot_In_1;                                    // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Deco_In;                                           // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Deco_Out;                                          // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Arrow_In;                                    // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Arrow_In_1;                                  // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Arrow_Out;                                   // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Arrow_Out_1;                                 // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_LeftCircle;                                  // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_RightCircle;                                 // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_126;                                   // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ButtonBinding_C*                   WBP_ButtonBinding_ToggleColumn;                    // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_HUD_AP_ICO_C*                      WBP_HUD_AP_ICO_GlobalCount;                        // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_HUD_SkillList_Active_C*            WBP_HUD_SkillList_Left;                            // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_HUD_SkillList_Active_C*            WBP_HUD_SkillList_Right;                           // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class FName SkillID)> OnSkillChosen;                               // 0x03D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsLeftColumnActive;                                // 0x03E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ResetToLeftOnNextAppear;                           // 0x03E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E2[0x6];                                      // 0x03E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnBackClicked;                                     // 0x03E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(EBattleForbiddenActionReason Reason)> OnSkillForbidden;            // 0x03F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          HasTwoColumns;                                     // 0x0408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    SD_WheelSwitch;                                    // 0x0410(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    SD_WheelBack;                                      // 0x0420(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          IsBattleContext;                                   // 0x0430(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(int32 WheelIndex, int32 ButtonIndex)> OnSkillButtonClicked;        // 0x0438(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsInputEnabled;                                    // 0x0448(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllowEmptySlots;                                   // 0x0449(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44A[0x6];                                      // 0x044A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DataAsset_Skill_C*                  ForcedSkill;                                       // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Appear();
	void BndEvt__WBP_HUD_SkillWheel_WBP_ButtonBinding_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature(class UWBP_ButtonBinding_C* PromptWidget);
	void BndEvt__WBP_HUD_SkillWheel_WBP_ButtonBinding_ToggleColumn_K2Node_ComponentBoundEvent_6_OnReleased__DelegateSignature(class UWBP_ButtonBinding_C* PromptWidget);
	void BndEvt__WBP_HUD_SkillWheel_WBP_HUD_SkillList_Left_K2Node_ComponentBoundEvent_0_OnSkillChosen__DelegateSignature(class FName SkillID);
	void BndEvt__WBP_HUD_SkillWheel_WBP_HUD_SkillList_Left_K2Node_ComponentBoundEvent_3_OnButtonChosen__DelegateSignature(int32 ButtonIndex);
	void BndEvt__WBP_HUD_SkillWheel_WBP_HUD_SkillList_Left_K2Node_ComponentBoundEvent_4_OnSkillDenied__DelegateSignature(EBattleForbiddenActionReason ForbiddenReason);
	void BndEvt__WBP_HUD_SkillWheel_WBP_HUD_SkillList_Right_K2Node_ComponentBoundEvent_1_OnSkillChosen__DelegateSignature(class FName SkillID);
	void BndEvt__WBP_HUD_SkillWheel_WBP_HUD_SkillList_Right_K2Node_ComponentBoundEvent_5_OnSkillDenied__DelegateSignature(EBattleForbiddenActionReason ForbiddenReason);
	void BndEvt__WBP_HUD_SkillWheel_WBP_HUD_SkillList_Right_K2Node_ComponentBoundEvent_7_OnButtonChosen__DelegateSignature(int32 ButtonIndex);
	void ClearForcedSkillButton();
	void Construct();
	void Disappear();
	void Event_IsReducedState();
	void Event_Prompt_SwitchWheel_RightState(bool SetArrowRight);
	void ExecuteUbergraph_WBP_HUD_SkillWheel(int32 EntryPoint);
	void FindSkillButtonBySkill(class UBP_DataAsset_Skill_C* SkillDefinition, class UWBP_HUD_SkillButton_Big_C** SkillButton, class UWBP_HUD_SkillList_Active_C** SkillList);
	void ForceSkillButton(class UBP_DataAsset_Skill_C* SkillDefinition);
	class UWBP_HUD_SkillButton_Big_C* GetSkillButtonByIndex(int32 WheelIndex, int32 ButtonIndex);
	void HighlightColumn(bool LeftColumn);
	void LoadSkillListData(class UAC_jRPG_CharacterBattleStats_C* CharacterStats, TArray<class UBP_DataAsset_Skill_C*>& Skills);
	void OnBackButtonClicked(class UCommonButtonBase* Button);
	void OnSkillButtonChosen(int32 WheelIndex, int32 ButtonIndex);
	void PlayAnim_SetReduced();
	void PlayAnim_SwitchPrompt_LeftToRight();
	void PlayAnim_SwitchPrompt_RightToLeft();
	void PreConstruct(bool IsDesignTime);
	void ResetColumnToLeft();
	void ResetColumnToRight();
	void SetAllowEmptyButtons(bool Allow);
	void SetInputsEnabled(bool Enabled);
	void SetReducedWithAnim_LeftColumn();
	void SetReducedWithAnim_RightColumn();
	void UpdateEnabledInputColumn();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_HUD_SkillWheel_C">();
	}
	static class UWBP_HUD_SkillWheel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_HUD_SkillWheel_C>();
	}
};
static_assert(alignof(UWBP_HUD_SkillWheel_C) == 0x000008, "Wrong alignment on UWBP_HUD_SkillWheel_C");
static_assert(sizeof(UWBP_HUD_SkillWheel_C) == 0x000458, "Wrong size on UWBP_HUD_SkillWheel_C");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_HUD_SkillWheel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, Anim_State_Prompt_RightSide) == 0x0002E8, "Member 'UWBP_HUD_SkillWheel_C::Anim_State_Prompt_RightSide' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, Anim_PromptSwitchSide) == 0x0002F0, "Member 'UWBP_HUD_SkillWheel_C::Anim_PromptSwitchSide' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, Anim_Reduce_Left) == 0x0002F8, "Member 'UWBP_HUD_SkillWheel_C::Anim_Reduce_Left' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, Anim_State_Reduce_Right) == 0x000300, "Member 'UWBP_HUD_SkillWheel_C::Anim_State_Reduce_Right' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, Anim_Reduce_Right) == 0x000308, "Member 'UWBP_HUD_SkillWheel_C::Anim_Reduce_Right' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, Anim_Appear) == 0x000310, "Member 'UWBP_HUD_SkillWheel_C::Anim_Appear' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, CanvasPanel_Arrow_Left) == 0x000318, "Member 'UWBP_HUD_SkillWheel_C::CanvasPanel_Arrow_Left' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, CanvasPanel_Arrow_Right) == 0x000320, "Member 'UWBP_HUD_SkillWheel_C::CanvasPanel_Arrow_Right' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, CanvasPanel_SwitchWheelContainer) == 0x000328, "Member 'UWBP_HUD_SkillWheel_C::CanvasPanel_SwitchWheelContainer' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, CicleCenter) == 0x000330, "Member 'UWBP_HUD_SkillWheel_C::CicleCenter' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, CicleCenter_1) == 0x000338, "Member 'UWBP_HUD_SkillWheel_C::CicleCenter_1' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, CicleIn) == 0x000340, "Member 'UWBP_HUD_SkillWheel_C::CicleIn' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, Cicleout) == 0x000348, "Member 'UWBP_HUD_SkillWheel_C::Cicleout' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, Cicleout_1) == 0x000350, "Member 'UWBP_HUD_SkillWheel_C::Cicleout_1' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, CircleDot_In) == 0x000358, "Member 'UWBP_HUD_SkillWheel_C::CircleDot_In' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, CircleDot_In_1) == 0x000360, "Member 'UWBP_HUD_SkillWheel_C::CircleDot_In_1' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, Deco_In) == 0x000368, "Member 'UWBP_HUD_SkillWheel_C::Deco_In' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, Deco_Out) == 0x000370, "Member 'UWBP_HUD_SkillWheel_C::Deco_Out' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, Image_Arrow_In) == 0x000378, "Member 'UWBP_HUD_SkillWheel_C::Image_Arrow_In' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, Image_Arrow_In_1) == 0x000380, "Member 'UWBP_HUD_SkillWheel_C::Image_Arrow_In_1' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, Image_Arrow_Out) == 0x000388, "Member 'UWBP_HUD_SkillWheel_C::Image_Arrow_Out' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, Image_Arrow_Out_1) == 0x000390, "Member 'UWBP_HUD_SkillWheel_C::Image_Arrow_Out_1' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, Image_LeftCircle) == 0x000398, "Member 'UWBP_HUD_SkillWheel_C::Image_LeftCircle' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, Image_RightCircle) == 0x0003A0, "Member 'UWBP_HUD_SkillWheel_C::Image_RightCircle' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, RetainerBox_126) == 0x0003A8, "Member 'UWBP_HUD_SkillWheel_C::RetainerBox_126' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, WBP_ButtonBinding_ToggleColumn) == 0x0003B0, "Member 'UWBP_HUD_SkillWheel_C::WBP_ButtonBinding_ToggleColumn' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, WBP_HUD_AP_ICO_GlobalCount) == 0x0003B8, "Member 'UWBP_HUD_SkillWheel_C::WBP_HUD_AP_ICO_GlobalCount' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, WBP_HUD_SkillList_Left) == 0x0003C0, "Member 'UWBP_HUD_SkillWheel_C::WBP_HUD_SkillList_Left' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, WBP_HUD_SkillList_Right) == 0x0003C8, "Member 'UWBP_HUD_SkillWheel_C::WBP_HUD_SkillList_Right' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, OnSkillChosen) == 0x0003D0, "Member 'UWBP_HUD_SkillWheel_C::OnSkillChosen' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, IsLeftColumnActive) == 0x0003E0, "Member 'UWBP_HUD_SkillWheel_C::IsLeftColumnActive' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, ResetToLeftOnNextAppear) == 0x0003E1, "Member 'UWBP_HUD_SkillWheel_C::ResetToLeftOnNextAppear' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, OnBackClicked) == 0x0003E8, "Member 'UWBP_HUD_SkillWheel_C::OnBackClicked' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, OnSkillForbidden) == 0x0003F8, "Member 'UWBP_HUD_SkillWheel_C::OnSkillForbidden' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, HasTwoColumns) == 0x000408, "Member 'UWBP_HUD_SkillWheel_C::HasTwoColumns' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, SD_WheelSwitch) == 0x000410, "Member 'UWBP_HUD_SkillWheel_C::SD_WheelSwitch' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, SD_WheelBack) == 0x000420, "Member 'UWBP_HUD_SkillWheel_C::SD_WheelBack' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, IsBattleContext) == 0x000430, "Member 'UWBP_HUD_SkillWheel_C::IsBattleContext' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, OnSkillButtonClicked) == 0x000438, "Member 'UWBP_HUD_SkillWheel_C::OnSkillButtonClicked' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, IsInputEnabled) == 0x000448, "Member 'UWBP_HUD_SkillWheel_C::IsInputEnabled' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, AllowEmptySlots) == 0x000449, "Member 'UWBP_HUD_SkillWheel_C::AllowEmptySlots' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_SkillWheel_C, ForcedSkill) == 0x000450, "Member 'UWBP_HUD_SkillWheel_C::ForcedSkill' has a wrong offset!");

}

