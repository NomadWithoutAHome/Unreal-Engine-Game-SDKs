#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTDecorator_CompareValuesWithHysteresis

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTDecorator_CompareValuesWithHysteresis.BTDecorator_CompareValuesWithHysteresis_C
// 0x0038 (0x00D8 - 0x00A0)
class UBTDecorator_CompareValuesWithHysteresis_C final : public UBTDecorator_BlueprintBase
{
public:
	double                                        ThresholdValue;                                    // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBlackboardKeySelector                 ValueBlackboardKeySelector;                        // 0x00A8(0x0028)(Edit, BlueprintVisible)
	double                                        Hysteresis;                                        // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool PerformConditionCheckAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTDecorator_CompareValuesWithHysteresis_C">();
	}
	static class UBTDecorator_CompareValuesWithHysteresis_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTDecorator_CompareValuesWithHysteresis_C>();
	}
};
static_assert(alignof(UBTDecorator_CompareValuesWithHysteresis_C) == 0x000008, "Wrong alignment on UBTDecorator_CompareValuesWithHysteresis_C");
static_assert(sizeof(UBTDecorator_CompareValuesWithHysteresis_C) == 0x0000D8, "Wrong size on UBTDecorator_CompareValuesWithHysteresis_C");
static_assert(offsetof(UBTDecorator_CompareValuesWithHysteresis_C, ThresholdValue) == 0x0000A0, "Member 'UBTDecorator_CompareValuesWithHysteresis_C::ThresholdValue' has a wrong offset!");
static_assert(offsetof(UBTDecorator_CompareValuesWithHysteresis_C, ValueBlackboardKeySelector) == 0x0000A8, "Member 'UBTDecorator_CompareValuesWithHysteresis_C::ValueBlackboardKeySelector' has a wrong offset!");
static_assert(offsetof(UBTDecorator_CompareValuesWithHysteresis_C, Hysteresis) == 0x0000D0, "Member 'UBTDecorator_CompareValuesWithHysteresis_C::Hysteresis' has a wrong offset!");

}

