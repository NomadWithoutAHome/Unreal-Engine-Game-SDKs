#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemFilter_Pictos

#include "Basic.hpp"

#include "E_jRPG_ItemType_structs.hpp"


namespace SDK::Params
{

// Function BP_ItemFilter_Pictos.BP_ItemFilter_Pictos_C.GetCompatibleItemSorters
// 0x0040 (0x0040 - 0x0000)
struct BP_ItemFilter_Pictos_C_GetCompatibleItemSorters final
{
public:
	TArray<class UClass*>                         ItemSorters;                                       // 0x0000(0x0010)(Parm, OutParm)
	TArray<class UClass*>                         Temp_wildcard_Variable;                            // 0x0010(0x0010)(ReferenceParm)
	TArray<class UClass*>                         K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm)
	TArray<class UClass*>                         CallFunc_GetCompatibleItemSorters_ItemSorters;     // 0x0030(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_ItemFilter_Pictos_C_GetCompatibleItemSorters) == 0x000008, "Wrong alignment on BP_ItemFilter_Pictos_C_GetCompatibleItemSorters");
static_assert(sizeof(BP_ItemFilter_Pictos_C_GetCompatibleItemSorters) == 0x000040, "Wrong size on BP_ItemFilter_Pictos_C_GetCompatibleItemSorters");
static_assert(offsetof(BP_ItemFilter_Pictos_C_GetCompatibleItemSorters, ItemSorters) == 0x000000, "Member 'BP_ItemFilter_Pictos_C_GetCompatibleItemSorters::ItemSorters' has a wrong offset!");
static_assert(offsetof(BP_ItemFilter_Pictos_C_GetCompatibleItemSorters, Temp_wildcard_Variable) == 0x000010, "Member 'BP_ItemFilter_Pictos_C_GetCompatibleItemSorters::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemFilter_Pictos_C_GetCompatibleItemSorters, K2Node_MakeArray_Array) == 0x000020, "Member 'BP_ItemFilter_Pictos_C_GetCompatibleItemSorters::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ItemFilter_Pictos_C_GetCompatibleItemSorters, CallFunc_GetCompatibleItemSorters_ItemSorters) == 0x000030, "Member 'BP_ItemFilter_Pictos_C_GetCompatibleItemSorters::CallFunc_GetCompatibleItemSorters_ItemSorters' has a wrong offset!");

// Function BP_ItemFilter_Pictos.BP_ItemFilter_Pictos_C.GetDisplayName
// 0x0010 (0x0010 - 0x0000)
struct BP_ItemFilter_Pictos_C_GetDisplayName final
{
public:
	class FText                                   DisplayName;                                       // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_ItemFilter_Pictos_C_GetDisplayName) == 0x000008, "Wrong alignment on BP_ItemFilter_Pictos_C_GetDisplayName");
static_assert(sizeof(BP_ItemFilter_Pictos_C_GetDisplayName) == 0x000010, "Wrong size on BP_ItemFilter_Pictos_C_GetDisplayName");
static_assert(offsetof(BP_ItemFilter_Pictos_C_GetDisplayName, DisplayName) == 0x000000, "Member 'BP_ItemFilter_Pictos_C_GetDisplayName::DisplayName' has a wrong offset!");

// Function BP_ItemFilter_Pictos.BP_ItemFilter_Pictos_C.GetFilteredTypes
// 0x0020 (0x0020 - 0x0000)
struct BP_ItemFilter_Pictos_C_GetFilteredTypes final
{
public:
	TArray<E_jRPG_ItemType>                       FilteredType;                                      // 0x0000(0x0010)(Parm, OutParm)
	TArray<E_jRPG_ItemType>                       K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_ItemFilter_Pictos_C_GetFilteredTypes) == 0x000008, "Wrong alignment on BP_ItemFilter_Pictos_C_GetFilteredTypes");
static_assert(sizeof(BP_ItemFilter_Pictos_C_GetFilteredTypes) == 0x000020, "Wrong size on BP_ItemFilter_Pictos_C_GetFilteredTypes");
static_assert(offsetof(BP_ItemFilter_Pictos_C_GetFilteredTypes, FilteredType) == 0x000000, "Member 'BP_ItemFilter_Pictos_C_GetFilteredTypes::FilteredType' has a wrong offset!");
static_assert(offsetof(BP_ItemFilter_Pictos_C_GetFilteredTypes, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_ItemFilter_Pictos_C_GetFilteredTypes::K2Node_MakeArray_Array' has a wrong offset!");

}

