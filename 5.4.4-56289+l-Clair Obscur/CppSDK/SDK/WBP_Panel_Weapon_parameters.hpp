#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Panel_Weapon

#include "Basic.hpp"

#include "S_jRPG_Item_StaticData_structs.hpp"
#include "SandFall_structs.hpp"
#include "Engine_structs.hpp"
#include "S_jRPG_Item_DynamicData_structs.hpp"
#include "UMG_structs.hpp"
#include "FEquipmentSlot_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_Panel_Weapon.WBP_Panel_Weapon_C.BndEvt__WBP_Panel_Weapon_WBP_CommonBoundActionButton_HideTooltip_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Panel_Weapon_C_BndEvt__WBP_Panel_Weapon_WBP_CommonBoundActionButton_HideTooltip_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_Weapon_C_BndEvt__WBP_Panel_Weapon_WBP_CommonBoundActionButton_HideTooltip_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Panel_Weapon_C_BndEvt__WBP_Panel_Weapon_WBP_CommonBoundActionButton_HideTooltip_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_Panel_Weapon_C_BndEvt__WBP_Panel_Weapon_WBP_CommonBoundActionButton_HideTooltip_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_Panel_Weapon_C_BndEvt__WBP_Panel_Weapon_WBP_CommonBoundActionButton_HideTooltip_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_Panel_Weapon_C_BndEvt__WBP_Panel_Weapon_WBP_CommonBoundActionButton_HideTooltip_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_Panel_Weapon_C_BndEvt__WBP_Panel_Weapon_WBP_CommonBoundActionButton_HideTooltip_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_Panel_Weapon.WBP_Panel_Weapon_C.BndEvt__WBP_Panel_Weapon_WeaponsList_K2Node_ComponentBoundEvent_1_OnWeaponItemNavigated__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WBP_Panel_Weapon_C_BndEvt__WBP_Panel_Weapon_WeaponsList_K2Node_ComponentBoundEvent_1_OnWeaponItemNavigated__DelegateSignature final
{
public:
	class UBP_WeaponViewItem_C*                   InWeaponViewItem;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              AbsolutePos;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_Weapon_C_BndEvt__WBP_Panel_Weapon_WeaponsList_K2Node_ComponentBoundEvent_1_OnWeaponItemNavigated__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Panel_Weapon_C_BndEvt__WBP_Panel_Weapon_WeaponsList_K2Node_ComponentBoundEvent_1_OnWeaponItemNavigated__DelegateSignature");
static_assert(sizeof(WBP_Panel_Weapon_C_BndEvt__WBP_Panel_Weapon_WeaponsList_K2Node_ComponentBoundEvent_1_OnWeaponItemNavigated__DelegateSignature) == 0x000018, "Wrong size on WBP_Panel_Weapon_C_BndEvt__WBP_Panel_Weapon_WeaponsList_K2Node_ComponentBoundEvent_1_OnWeaponItemNavigated__DelegateSignature");
static_assert(offsetof(WBP_Panel_Weapon_C_BndEvt__WBP_Panel_Weapon_WeaponsList_K2Node_ComponentBoundEvent_1_OnWeaponItemNavigated__DelegateSignature, InWeaponViewItem) == 0x000000, "Member 'WBP_Panel_Weapon_C_BndEvt__WBP_Panel_Weapon_WeaponsList_K2Node_ComponentBoundEvent_1_OnWeaponItemNavigated__DelegateSignature::InWeaponViewItem' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_BndEvt__WBP_Panel_Weapon_WeaponsList_K2Node_ComponentBoundEvent_1_OnWeaponItemNavigated__DelegateSignature, AbsolutePos) == 0x000008, "Member 'WBP_Panel_Weapon_C_BndEvt__WBP_Panel_Weapon_WeaponsList_K2Node_ComponentBoundEvent_1_OnWeaponItemNavigated__DelegateSignature::AbsolutePos' has a wrong offset!");

// Function WBP_Panel_Weapon.WBP_Panel_Weapon_C.BndEvt__WBP_Panel_Weapon_WeaponsList_K2Node_ComponentBoundEvent_9_OnWeaponItemClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Panel_Weapon_C_BndEvt__WBP_Panel_Weapon_WeaponsList_K2Node_ComponentBoundEvent_9_OnWeaponItemClicked__DelegateSignature final
{
public:
	class UBP_WeaponViewItem_C*                   InWeaponViewItem;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_Weapon_C_BndEvt__WBP_Panel_Weapon_WeaponsList_K2Node_ComponentBoundEvent_9_OnWeaponItemClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Panel_Weapon_C_BndEvt__WBP_Panel_Weapon_WeaponsList_K2Node_ComponentBoundEvent_9_OnWeaponItemClicked__DelegateSignature");
static_assert(sizeof(WBP_Panel_Weapon_C_BndEvt__WBP_Panel_Weapon_WeaponsList_K2Node_ComponentBoundEvent_9_OnWeaponItemClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_Panel_Weapon_C_BndEvt__WBP_Panel_Weapon_WeaponsList_K2Node_ComponentBoundEvent_9_OnWeaponItemClicked__DelegateSignature");
static_assert(offsetof(WBP_Panel_Weapon_C_BndEvt__WBP_Panel_Weapon_WeaponsList_K2Node_ComponentBoundEvent_9_OnWeaponItemClicked__DelegateSignature, InWeaponViewItem) == 0x000000, "Member 'WBP_Panel_Weapon_C_BndEvt__WBP_Panel_Weapon_WeaponsList_K2Node_ComponentBoundEvent_9_OnWeaponItemClicked__DelegateSignature::InWeaponViewItem' has a wrong offset!");

// Function WBP_Panel_Weapon.WBP_Panel_Weapon_C.BPI_GetCharacterNotificationState
// 0x0010 (0x0010 - 0x0000)
struct WBP_Panel_Weapon_C_BPI_GetCharacterNotificationState final
{
public:
	class UBP_CharacterData_C*                    CharacterData;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          HasNotification;                                   // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_Weapon_C_BPI_GetCharacterNotificationState) == 0x000008, "Wrong alignment on WBP_Panel_Weapon_C_BPI_GetCharacterNotificationState");
static_assert(sizeof(WBP_Panel_Weapon_C_BPI_GetCharacterNotificationState) == 0x000010, "Wrong size on WBP_Panel_Weapon_C_BPI_GetCharacterNotificationState");
static_assert(offsetof(WBP_Panel_Weapon_C_BPI_GetCharacterNotificationState, CharacterData) == 0x000000, "Member 'WBP_Panel_Weapon_C_BPI_GetCharacterNotificationState::CharacterData' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_BPI_GetCharacterNotificationState, HasNotification) == 0x000008, "Member 'WBP_Panel_Weapon_C_BPI_GetCharacterNotificationState::HasNotification' has a wrong offset!");

// Function WBP_Panel_Weapon.WBP_Panel_Weapon_C.BPI_LoadCharacter
// 0x0008 (0x0008 - 0x0000)
struct WBP_Panel_Weapon_C_BPI_LoadCharacter final
{
public:
	class UBP_CharacterData_C*                    CharacterData;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_Weapon_C_BPI_LoadCharacter) == 0x000008, "Wrong alignment on WBP_Panel_Weapon_C_BPI_LoadCharacter");
static_assert(sizeof(WBP_Panel_Weapon_C_BPI_LoadCharacter) == 0x000008, "Wrong size on WBP_Panel_Weapon_C_BPI_LoadCharacter");
static_assert(offsetof(WBP_Panel_Weapon_C_BPI_LoadCharacter, CharacterData) == 0x000000, "Member 'WBP_Panel_Weapon_C_BPI_LoadCharacter::CharacterData' has a wrong offset!");

// Function WBP_Panel_Weapon.WBP_Panel_Weapon_C.CreateModalWindowForExcludedCharacter
// 0x0270 (0x0270 - 0x0000)
struct WBP_Panel_Weapon_C_CreateModalWindowForExcludedCharacter final
{
public:
	struct FS_jRPG_Item_StaticData                Item;                                              // 0x0000(0x0130)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    OtherCharacter;                                    // 0x0130(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_ModalPopup_C*                      ModalWindow;                                       // 0x0138(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetCharacterDisplayName_CharacterDisplayName; // 0x0140(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0150(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0198(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01E0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0228(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0238(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0248(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0258(0x0010)()
	class UWBP_ModalPopup_C*                      CallFunc_CreateModalWindow_OutputPin;              // 0x0268(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_Weapon_C_CreateModalWindowForExcludedCharacter) == 0x000008, "Wrong alignment on WBP_Panel_Weapon_C_CreateModalWindowForExcludedCharacter");
static_assert(sizeof(WBP_Panel_Weapon_C_CreateModalWindowForExcludedCharacter) == 0x000270, "Wrong size on WBP_Panel_Weapon_C_CreateModalWindowForExcludedCharacter");
static_assert(offsetof(WBP_Panel_Weapon_C_CreateModalWindowForExcludedCharacter, Item) == 0x000000, "Member 'WBP_Panel_Weapon_C_CreateModalWindowForExcludedCharacter::Item' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_CreateModalWindowForExcludedCharacter, OtherCharacter) == 0x000130, "Member 'WBP_Panel_Weapon_C_CreateModalWindowForExcludedCharacter::OtherCharacter' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_CreateModalWindowForExcludedCharacter, ModalWindow) == 0x000138, "Member 'WBP_Panel_Weapon_C_CreateModalWindowForExcludedCharacter::ModalWindow' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_CreateModalWindowForExcludedCharacter, CallFunc_GetCharacterDisplayName_CharacterDisplayName) == 0x000140, "Member 'WBP_Panel_Weapon_C_CreateModalWindowForExcludedCharacter::CallFunc_GetCharacterDisplayName_CharacterDisplayName' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_CreateModalWindowForExcludedCharacter, K2Node_MakeStruct_FormatArgumentData) == 0x000150, "Member 'WBP_Panel_Weapon_C_CreateModalWindowForExcludedCharacter::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_CreateModalWindowForExcludedCharacter, K2Node_MakeStruct_FormatArgumentData_1) == 0x000198, "Member 'WBP_Panel_Weapon_C_CreateModalWindowForExcludedCharacter::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_CreateModalWindowForExcludedCharacter, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001E0, "Member 'WBP_Panel_Weapon_C_CreateModalWindowForExcludedCharacter::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_CreateModalWindowForExcludedCharacter, K2Node_MakeArray_Array) == 0x000228, "Member 'WBP_Panel_Weapon_C_CreateModalWindowForExcludedCharacter::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_CreateModalWindowForExcludedCharacter, K2Node_MakeArray_Array_1) == 0x000238, "Member 'WBP_Panel_Weapon_C_CreateModalWindowForExcludedCharacter::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_CreateModalWindowForExcludedCharacter, CallFunc_Format_ReturnValue) == 0x000248, "Member 'WBP_Panel_Weapon_C_CreateModalWindowForExcludedCharacter::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_CreateModalWindowForExcludedCharacter, CallFunc_Format_ReturnValue_1) == 0x000258, "Member 'WBP_Panel_Weapon_C_CreateModalWindowForExcludedCharacter::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_CreateModalWindowForExcludedCharacter, CallFunc_CreateModalWindow_OutputPin) == 0x000268, "Member 'WBP_Panel_Weapon_C_CreateModalWindowForExcludedCharacter::CallFunc_CreateModalWindow_OutputPin' has a wrong offset!");

// Function WBP_Panel_Weapon.WBP_Panel_Weapon_C.ExecuteUbergraph_WBP_Panel_Weapon
// 0x0370 (0x0370 - 0x0000)
struct WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0018(0x0010)()
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterData_C*                    K2Node_Event_CharacterData;                        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_CommonActionBarContainer_C*        CallFunc_GetGameMenuActionBarFromPanel_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_CommonActionBarContainer_C*        K2Node_CustomEvent_ActionBarContainerWidget;       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_WeaponViewItem_C*                   K2Node_ComponentBoundEvent_InWeaponViewItem_1;     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_CommonBoundActionButton_C*         CallFunc_FindActionButtonFromButton_CommonButtonBase; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0068(0x0010)()
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_CommonActionBarContainer_C*        CallFunc_GetGameMenuActionBarFromPanel_ReturnValue_1; // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93[0x1];                                       // 0x0093(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UWBP_CommonActionBarContainer_C* ActionBarContainerWidget)> K2Node_CreateDelegate_OutputDelegate; // 0x0094(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WeaponViewItem_C*                   K2Node_ComponentBoundEvent_InWeaponViewItem;       // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_AbsolutePos;            // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoundEventDataTableRowHandle          K2Node_Select_Default_2;                           // 0x00C0(0x0010)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_DynamicData               CallFunc_GetItemDynamicData_ItemDynamicData;       // 0x00D8(0x0138)(ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    CallFunc_GetOwnerData_OwnerData;                   // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasItemEquipped_IsEquipped;               // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21A[0x2];                                      // 0x021A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEquipmentSlot                        CallFunc_HasItemEquipped_Slot;                     // 0x021C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_225[0x3];                                      // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WeaponViewItem_C*                   K2Node_CustomEvent_WeaponToUpgrade;                // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_WeaponViewItem_C*                   K2Node_CustomEvent_WeaponToFocus;                  // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_jRPG_Item_DynamicData               CallFunc_GetItemDynamicData_ItemDynamicData_1;     // 0x0238(0x0138)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon) == 0x000008, "Wrong alignment on WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon");
static_assert(sizeof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon) == 0x000370, "Wrong size on WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, EntryPoint) == 0x000000, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, Temp_text_Variable) == 0x000008, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, Temp_text_Variable_1) == 0x000018, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, Temp_bool_Variable) == 0x000028, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, Temp_byte_Variable) == 0x000029, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, Temp_byte_Variable_1) == 0x00002A, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, Temp_bool_Variable_1) == 0x00002B, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, Temp_bool_Variable_2) == 0x00002C, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, K2Node_Event_CharacterData) == 0x000030, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::K2Node_Event_CharacterData' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, CallFunc_GetGameMenuActionBarFromPanel_ReturnValue) == 0x000038, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::CallFunc_GetGameMenuActionBarFromPanel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, K2Node_CustomEvent_ActionBarContainerWidget) == 0x000048, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::K2Node_CustomEvent_ActionBarContainerWidget' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, K2Node_ComponentBoundEvent_InWeaponViewItem_1) == 0x000050, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::K2Node_ComponentBoundEvent_InWeaponViewItem_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, CallFunc_FindActionButtonFromButton_CommonButtonBase) == 0x000058, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::CallFunc_FindActionButtonFromButton_CommonButtonBase' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, CallFunc_IsVisible_ReturnValue) == 0x000061, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, CallFunc_GetIsEnabled_ReturnValue) == 0x000062, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, K2Node_Select_Default) == 0x000068, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, K2Node_ComponentBoundEvent_Button) == 0x000078, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, CallFunc_IsVisible_ReturnValue_1) == 0x000080, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, CallFunc_GetGameMenuActionBarFromPanel_ReturnValue_1) == 0x000088, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::CallFunc_GetGameMenuActionBarFromPanel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, CallFunc_IsValid_ReturnValue_2) == 0x000090, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, K2Node_Select_Default_1) == 0x000091, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, CallFunc_Not_PreBool_ReturnValue) == 0x000092, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, K2Node_CreateDelegate_OutputDelegate) == 0x000094, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, K2Node_ComponentBoundEvent_InWeaponViewItem) == 0x0000A8, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::K2Node_ComponentBoundEvent_InWeaponViewItem' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, K2Node_ComponentBoundEvent_AbsolutePos) == 0x0000B0, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::K2Node_ComponentBoundEvent_AbsolutePos' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, K2Node_Select_Default_2) == 0x0000C0, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, CallFunc_IsValid_ReturnValue_3) == 0x0000D0, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, CallFunc_GetItemDynamicData_ItemDynamicData) == 0x0000D8, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::CallFunc_GetItemDynamicData_ItemDynamicData' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, CallFunc_GetOwnerData_OwnerData) == 0x000210, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::CallFunc_GetOwnerData_OwnerData' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, CallFunc_Not_PreBool_ReturnValue_1) == 0x000218, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, CallFunc_HasItemEquipped_IsEquipped) == 0x000219, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::CallFunc_HasItemEquipped_IsEquipped' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, CallFunc_HasItemEquipped_Slot) == 0x00021C, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::CallFunc_HasItemEquipped_Slot' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, CallFunc_Not_PreBool_ReturnValue_2) == 0x000224, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, K2Node_CustomEvent_WeaponToUpgrade) == 0x000228, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::K2Node_CustomEvent_WeaponToUpgrade' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, K2Node_CustomEvent_WeaponToFocus) == 0x000230, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::K2Node_CustomEvent_WeaponToFocus' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon, CallFunc_GetItemDynamicData_ItemDynamicData_1) == 0x000238, "Member 'WBP_Panel_Weapon_C_ExecuteUbergraph_WBP_Panel_Weapon::CallFunc_GetItemDynamicData_ItemDynamicData_1' has a wrong offset!");

// Function WBP_Panel_Weapon.WBP_Panel_Weapon_C.LoadCharacter
// 0x0018 (0x0018 - 0x0000)
struct WBP_Panel_Weapon_C_LoadCharacter final
{
public:
	class UBP_CharacterData_C*                    CharacterData;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedWeaponItemInstance_Valid;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Gear_Weapon_C*         CallFunc_GetEquippedWeaponItemInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_Weapon_C_LoadCharacter) == 0x000008, "Wrong alignment on WBP_Panel_Weapon_C_LoadCharacter");
static_assert(sizeof(WBP_Panel_Weapon_C_LoadCharacter) == 0x000018, "Wrong size on WBP_Panel_Weapon_C_LoadCharacter");
static_assert(offsetof(WBP_Panel_Weapon_C_LoadCharacter, CharacterData) == 0x000000, "Member 'WBP_Panel_Weapon_C_LoadCharacter::CharacterData' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_LoadCharacter, CallFunc_GetEquippedWeaponItemInstance_Valid) == 0x000008, "Member 'WBP_Panel_Weapon_C_LoadCharacter::CallFunc_GetEquippedWeaponItemInstance_Valid' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_LoadCharacter, CallFunc_GetEquippedWeaponItemInstance_ReturnValue) == 0x000010, "Member 'WBP_Panel_Weapon_C_LoadCharacter::CallFunc_GetEquippedWeaponItemInstance_ReturnValue' has a wrong offset!");

// Function WBP_Panel_Weapon.WBP_Panel_Weapon_C.NavigateToFocusedWeapon
// 0x02B8 (0x02B8 - 0x0000)
struct WBP_Panel_Weapon_C_NavigateToFocusedWeapon final
{
public:
	struct FS_jRPG_Item_StaticData                ItemStaticData;                                    // 0x0000(0x0130)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        CallFunc_GetListItems_ReturnValue;                 // 0x0148(0x0010)(ConstParm, ReferenceParm)
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WeaponViewItem_C*                   K2Node_DynamicCast_AsBP_Weapon_View_Item;          // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_172[0x6];                                      // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_DynamicData               CallFunc_GetItemDynamicData_ItemDynamicData;       // 0x0178(0x0138)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_Weapon_C_NavigateToFocusedWeapon) == 0x000008, "Wrong alignment on WBP_Panel_Weapon_C_NavigateToFocusedWeapon");
static_assert(sizeof(WBP_Panel_Weapon_C_NavigateToFocusedWeapon) == 0x0002B8, "Wrong size on WBP_Panel_Weapon_C_NavigateToFocusedWeapon");
static_assert(offsetof(WBP_Panel_Weapon_C_NavigateToFocusedWeapon, ItemStaticData) == 0x000000, "Member 'WBP_Panel_Weapon_C_NavigateToFocusedWeapon::ItemStaticData' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_NavigateToFocusedWeapon, Temp_bool_True_if_break_was_hit_Variable) == 0x000130, "Member 'WBP_Panel_Weapon_C_NavigateToFocusedWeapon::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_NavigateToFocusedWeapon, Temp_int_Array_Index_Variable) == 0x000134, "Member 'WBP_Panel_Weapon_C_NavigateToFocusedWeapon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_NavigateToFocusedWeapon, CallFunc_Not_PreBool_ReturnValue) == 0x000138, "Member 'WBP_Panel_Weapon_C_NavigateToFocusedWeapon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_NavigateToFocusedWeapon, Temp_int_Loop_Counter_Variable) == 0x00013C, "Member 'WBP_Panel_Weapon_C_NavigateToFocusedWeapon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_NavigateToFocusedWeapon, CallFunc_Add_IntInt_ReturnValue) == 0x000140, "Member 'WBP_Panel_Weapon_C_NavigateToFocusedWeapon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_NavigateToFocusedWeapon, CallFunc_GetListItems_ReturnValue) == 0x000148, "Member 'WBP_Panel_Weapon_C_NavigateToFocusedWeapon::CallFunc_GetListItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_NavigateToFocusedWeapon, CallFunc_Array_Get_Item) == 0x000158, "Member 'WBP_Panel_Weapon_C_NavigateToFocusedWeapon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_NavigateToFocusedWeapon, CallFunc_Array_Length_ReturnValue) == 0x000160, "Member 'WBP_Panel_Weapon_C_NavigateToFocusedWeapon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_NavigateToFocusedWeapon, K2Node_DynamicCast_AsBP_Weapon_View_Item) == 0x000168, "Member 'WBP_Panel_Weapon_C_NavigateToFocusedWeapon::K2Node_DynamicCast_AsBP_Weapon_View_Item' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_NavigateToFocusedWeapon, K2Node_DynamicCast_bSuccess) == 0x000170, "Member 'WBP_Panel_Weapon_C_NavigateToFocusedWeapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_NavigateToFocusedWeapon, CallFunc_Less_IntInt_ReturnValue) == 0x000171, "Member 'WBP_Panel_Weapon_C_NavigateToFocusedWeapon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_NavigateToFocusedWeapon, CallFunc_GetItemDynamicData_ItemDynamicData) == 0x000178, "Member 'WBP_Panel_Weapon_C_NavigateToFocusedWeapon::CallFunc_GetItemDynamicData_ItemDynamicData' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_NavigateToFocusedWeapon, CallFunc_BooleanAND_ReturnValue) == 0x0002B0, "Member 'WBP_Panel_Weapon_C_NavigateToFocusedWeapon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_NavigateToFocusedWeapon, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0002B1, "Member 'WBP_Panel_Weapon_C_NavigateToFocusedWeapon::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function WBP_Panel_Weapon.WBP_Panel_Weapon_C.OnUpgradeFinished
// 0x0008 (0x0008 - 0x0000)
struct WBP_Panel_Weapon_C_OnUpgradeFinished final
{
public:
	class UBP_WeaponViewItem_C*                   WeaponToFocus;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_Weapon_C_OnUpgradeFinished) == 0x000008, "Wrong alignment on WBP_Panel_Weapon_C_OnUpgradeFinished");
static_assert(sizeof(WBP_Panel_Weapon_C_OnUpgradeFinished) == 0x000008, "Wrong size on WBP_Panel_Weapon_C_OnUpgradeFinished");
static_assert(offsetof(WBP_Panel_Weapon_C_OnUpgradeFinished, WeaponToFocus) == 0x000000, "Member 'WBP_Panel_Weapon_C_OnUpgradeFinished::WeaponToFocus' has a wrong offset!");

// Function WBP_Panel_Weapon.WBP_Panel_Weapon_C.OnUpgradeStart
// 0x0008 (0x0008 - 0x0000)
struct WBP_Panel_Weapon_C_OnUpgradeStart final
{
public:
	class UBP_WeaponViewItem_C*                   WeaponToUpgrade;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_Weapon_C_OnUpgradeStart) == 0x000008, "Wrong alignment on WBP_Panel_Weapon_C_OnUpgradeStart");
static_assert(sizeof(WBP_Panel_Weapon_C_OnUpgradeStart) == 0x000008, "Wrong size on WBP_Panel_Weapon_C_OnUpgradeStart");
static_assert(offsetof(WBP_Panel_Weapon_C_OnUpgradeStart, WeaponToUpgrade) == 0x000000, "Member 'WBP_Panel_Weapon_C_OnUpgradeStart::WeaponToUpgrade' has a wrong offset!");

// Function WBP_Panel_Weapon.WBP_Panel_Weapon_C.OnWeaponItemClicked
// 0x0020 (0x0020 - 0x0000)
struct WBP_Panel_Weapon_C_OnWeaponItemClicked final
{
public:
	class UBP_WeaponViewItem_C*                   InWeaponViewItem;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_InventoryManager_C*            CallFunc_GetInventoryManager_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetGearMaxUpgradeLevel_ReturnValue;       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Can_be_Upgraded_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_Weapon_C_OnWeaponItemClicked) == 0x000008, "Wrong alignment on WBP_Panel_Weapon_C_OnWeaponItemClicked");
static_assert(sizeof(WBP_Panel_Weapon_C_OnWeaponItemClicked) == 0x000020, "Wrong size on WBP_Panel_Weapon_C_OnWeaponItemClicked");
static_assert(offsetof(WBP_Panel_Weapon_C_OnWeaponItemClicked, InWeaponViewItem) == 0x000000, "Member 'WBP_Panel_Weapon_C_OnWeaponItemClicked::InWeaponViewItem' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_OnWeaponItemClicked, CallFunc_GetInventoryManager_ReturnValue) == 0x000008, "Member 'WBP_Panel_Weapon_C_OnWeaponItemClicked::CallFunc_GetInventoryManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_OnWeaponItemClicked, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_Panel_Weapon_C_OnWeaponItemClicked::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_OnWeaponItemClicked, CallFunc_GetGearMaxUpgradeLevel_ReturnValue) == 0x000014, "Member 'WBP_Panel_Weapon_C_OnWeaponItemClicked::CallFunc_GetGearMaxUpgradeLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_OnWeaponItemClicked, CallFunc_Can_be_Upgraded_ReturnValue) == 0x000018, "Member 'WBP_Panel_Weapon_C_OnWeaponItemClicked::CallFunc_Can_be_Upgraded_ReturnValue' has a wrong offset!");

// Function WBP_Panel_Weapon.WBP_Panel_Weapon_C.ProcessEquipWeapon
// 0x0030 (0x0030 - 0x0000)
struct WBP_Panel_Weapon_C_ProcessEquipWeapon final
{
public:
	class UBP_WeaponViewItem_C*                   InWeaponViewItem;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_Weapon_C*         CallFunc_GetGearWeaponInstance_Gear_Weapon_Instance_; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFEquipmentSlot                        K2Node_MakeStruct_FEquipmentSlot;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSlotUsed_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Gear_C*                CallFunc_GetItemInstanceInSlot_ItemInstance;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_Weapon_C_ProcessEquipWeapon) == 0x000008, "Wrong alignment on WBP_Panel_Weapon_C_ProcessEquipWeapon");
static_assert(sizeof(WBP_Panel_Weapon_C_ProcessEquipWeapon) == 0x000030, "Wrong size on WBP_Panel_Weapon_C_ProcessEquipWeapon");
static_assert(offsetof(WBP_Panel_Weapon_C_ProcessEquipWeapon, InWeaponViewItem) == 0x000000, "Member 'WBP_Panel_Weapon_C_ProcessEquipWeapon::InWeaponViewItem' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ProcessEquipWeapon, CallFunc_GetGearWeaponInstance_Gear_Weapon_Instance_) == 0x000008, "Member 'WBP_Panel_Weapon_C_ProcessEquipWeapon::CallFunc_GetGearWeaponInstance_Gear_Weapon_Instance_' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ProcessEquipWeapon, K2Node_MakeStruct_FEquipmentSlot) == 0x000010, "Member 'WBP_Panel_Weapon_C_ProcessEquipWeapon::K2Node_MakeStruct_FEquipmentSlot' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ProcessEquipWeapon, CallFunc_IsSlotUsed_ReturnValue) == 0x000018, "Member 'WBP_Panel_Weapon_C_ProcessEquipWeapon::CallFunc_IsSlotUsed_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ProcessEquipWeapon, CallFunc_GetItemInstanceInSlot_ItemInstance) == 0x000020, "Member 'WBP_Panel_Weapon_C_ProcessEquipWeapon::CallFunc_GetItemInstanceInSlot_ItemInstance' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ProcessEquipWeapon, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000028, "Member 'WBP_Panel_Weapon_C_ProcessEquipWeapon::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ProcessEquipWeapon, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'WBP_Panel_Weapon_C_ProcessEquipWeapon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_ProcessEquipWeapon, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'WBP_Panel_Weapon_C_ProcessEquipWeapon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_Panel_Weapon.WBP_Panel_Weapon_C.RebuildActionBarButtons
// 0x0008 (0x0008 - 0x0000)
struct WBP_Panel_Weapon_C_RebuildActionBarButtons final
{
public:
	class UWBP_CommonActionBarContainer_C*        ActionBarContainerWidget;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_Weapon_C_RebuildActionBarButtons) == 0x000008, "Wrong alignment on WBP_Panel_Weapon_C_RebuildActionBarButtons");
static_assert(sizeof(WBP_Panel_Weapon_C_RebuildActionBarButtons) == 0x000008, "Wrong size on WBP_Panel_Weapon_C_RebuildActionBarButtons");
static_assert(offsetof(WBP_Panel_Weapon_C_RebuildActionBarButtons, ActionBarContainerWidget) == 0x000000, "Member 'WBP_Panel_Weapon_C_RebuildActionBarButtons::ActionBarContainerWidget' has a wrong offset!");

// Function WBP_Panel_Weapon.WBP_Panel_Weapon_C.SetBlacksmithMode
// 0x0005 (0x0005 - 0x0000)
struct WBP_Panel_Weapon_C_SetBlacksmithMode final
{
public:
	bool                                          IsInBlacksmithMode;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_Weapon_C_SetBlacksmithMode) == 0x000001, "Wrong alignment on WBP_Panel_Weapon_C_SetBlacksmithMode");
static_assert(sizeof(WBP_Panel_Weapon_C_SetBlacksmithMode) == 0x000005, "Wrong size on WBP_Panel_Weapon_C_SetBlacksmithMode");
static_assert(offsetof(WBP_Panel_Weapon_C_SetBlacksmithMode, IsInBlacksmithMode) == 0x000000, "Member 'WBP_Panel_Weapon_C_SetBlacksmithMode::IsInBlacksmithMode' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_SetBlacksmithMode, Temp_bool_Variable) == 0x000001, "Member 'WBP_Panel_Weapon_C_SetBlacksmithMode::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_SetBlacksmithMode, Temp_byte_Variable) == 0x000002, "Member 'WBP_Panel_Weapon_C_SetBlacksmithMode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_SetBlacksmithMode, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_Panel_Weapon_C_SetBlacksmithMode::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Weapon_C_SetBlacksmithMode, K2Node_Select_Default) == 0x000004, "Member 'WBP_Panel_Weapon_C_SetBlacksmithMode::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Panel_Weapon.WBP_Panel_Weapon_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct WBP_Panel_Weapon_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_Weapon_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_Panel_Weapon_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_Panel_Weapon_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on WBP_Panel_Weapon_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_Panel_Weapon_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_Panel_Weapon_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

}

