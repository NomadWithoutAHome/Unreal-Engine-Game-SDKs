#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemInstance_Gear_Weapon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EAttributeScalingGrade_structs.hpp"
#include "EWeaponQuality_structs.hpp"
#include "S_WeaponDefinition_structs.hpp"
#include "S_WeaponInstanceHandle_structs.hpp"
#include "ECharacterAttribute_structs.hpp"
#include "E_jRPG_StatType_structs.hpp"
#include "S_WeaponInstanceData_structs.hpp"


namespace SDK::Params
{

// Function BP_ItemInstance_Gear_Weapon.BP_ItemInstance_Gear_Weapon_C.ComputeUnlockedAttributeUpgradeCount
// 0x0060 (0x0060 - 0x0000)
struct BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_unlockedUpgrades;                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponQuality                                local_currentQuality;                              // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EWeaponQuality>                        Temp_wildcard_Variable;                            // 0x0020(0x0010)(ReferenceParm)
	EWeaponQuality                                CallFunc_Array_Get_Item;                           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CompareItemQuality_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EWeaponQuality>                        CallFunc_GetAttributeUpgradeRanks_ReturnValue;     // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetCurrentLevel_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponQuality                                CallFunc_GetWeaponQualityForUpgradeLevel_Quality;  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount) == 0x000008, "Wrong alignment on BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount");
static_assert(sizeof(BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount) == 0x000060, "Wrong size on BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount, ReturnValue) == 0x000000, "Member 'BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount, local_unlockedUpgrades) == 0x000004, "Member 'BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount::local_unlockedUpgrades' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount, local_currentQuality) == 0x000008, "Member 'BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount::local_currentQuality' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount, Temp_int_Variable) == 0x000018, "Member 'BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount, Temp_wildcard_Variable) == 0x000020, "Member 'BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount, CallFunc_CompareItemQuality_ReturnValue) == 0x000040, "Member 'BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount::CallFunc_CompareItemQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount, CallFunc_GetAttributeUpgradeRanks_ReturnValue) == 0x000048, "Member 'BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount::CallFunc_GetAttributeUpgradeRanks_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount, CallFunc_GetCurrentLevel_ReturnValue) == 0x000058, "Member 'BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount::CallFunc_GetCurrentLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount, CallFunc_GetWeaponQualityForUpgradeLevel_Quality) == 0x00005C, "Member 'BP_ItemInstance_Gear_Weapon_C_ComputeUnlockedAttributeUpgradeCount::CallFunc_GetWeaponQualityForUpgradeLevel_Quality' has a wrong offset!");

// Function BP_ItemInstance_Gear_Weapon.BP_ItemInstance_Gear_Weapon_C.GetAttributeUpgradeRanks
// 0x0020 (0x0020 - 0x0000)
struct BP_ItemInstance_Gear_Weapon_C_GetAttributeUpgradeRanks final
{
public:
	TArray<EWeaponQuality>                        ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	TArray<EWeaponQuality>                        K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_ItemInstance_Gear_Weapon_C_GetAttributeUpgradeRanks) == 0x000008, "Wrong alignment on BP_ItemInstance_Gear_Weapon_C_GetAttributeUpgradeRanks");
static_assert(sizeof(BP_ItemInstance_Gear_Weapon_C_GetAttributeUpgradeRanks) == 0x000020, "Wrong size on BP_ItemInstance_Gear_Weapon_C_GetAttributeUpgradeRanks");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetAttributeUpgradeRanks, ReturnValue) == 0x000000, "Member 'BP_ItemInstance_Gear_Weapon_C_GetAttributeUpgradeRanks::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetAttributeUpgradeRanks, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_ItemInstance_Gear_Weapon_C_GetAttributeUpgradeRanks::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_ItemInstance_Gear_Weapon.BP_ItemInstance_Gear_Weapon_C.GetBaseStatsMultipliers
// 0x0150 (0x0150 - 0x0000)
struct BP_ItemInstance_Gear_Weapon_C_GetBaseStatsMultipliers final
{
public:
	TMap<E_jRPG_StatType, double>                 ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm)
	class FName                                   CallFunc_GetItemDefinitionID_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetWeaponDefinition_Found;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponDefinition                    CallFunc_GetWeaponDefinition_OutRow;               // 0x0060(0x00F0)(HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemInstance_Gear_Weapon_C_GetBaseStatsMultipliers) == 0x000008, "Wrong alignment on BP_ItemInstance_Gear_Weapon_C_GetBaseStatsMultipliers");
static_assert(sizeof(BP_ItemInstance_Gear_Weapon_C_GetBaseStatsMultipliers) == 0x000150, "Wrong size on BP_ItemInstance_Gear_Weapon_C_GetBaseStatsMultipliers");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetBaseStatsMultipliers, ReturnValue) == 0x000000, "Member 'BP_ItemInstance_Gear_Weapon_C_GetBaseStatsMultipliers::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetBaseStatsMultipliers, CallFunc_GetItemDefinitionID_ReturnValue) == 0x000050, "Member 'BP_ItemInstance_Gear_Weapon_C_GetBaseStatsMultipliers::CallFunc_GetItemDefinitionID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetBaseStatsMultipliers, CallFunc_GetWeaponDefinition_Found) == 0x000058, "Member 'BP_ItemInstance_Gear_Weapon_C_GetBaseStatsMultipliers::CallFunc_GetWeaponDefinition_Found' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetBaseStatsMultipliers, CallFunc_GetWeaponDefinition_OutRow) == 0x000060, "Member 'BP_ItemInstance_Gear_Weapon_C_GetBaseStatsMultipliers::CallFunc_GetWeaponDefinition_OutRow' has a wrong offset!");

// Function BP_ItemInstance_Gear_Weapon.BP_ItemInstance_Gear_Weapon_C.GetCurrentAttributeScaling
// 0x0050 (0x0050 - 0x0000)
struct BP_ItemInstance_Gear_Weapon_C_GetCurrentAttributeScaling final
{
public:
	TMap<ECharacterAttribute, EAttributeScalingGrade> ReturnValue;                                   // 0x0000(0x0050)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BP_ItemInstance_Gear_Weapon_C_GetCurrentAttributeScaling) == 0x000008, "Wrong alignment on BP_ItemInstance_Gear_Weapon_C_GetCurrentAttributeScaling");
static_assert(sizeof(BP_ItemInstance_Gear_Weapon_C_GetCurrentAttributeScaling) == 0x000050, "Wrong size on BP_ItemInstance_Gear_Weapon_C_GetCurrentAttributeScaling");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetCurrentAttributeScaling, ReturnValue) == 0x000000, "Member 'BP_ItemInstance_Gear_Weapon_C_GetCurrentAttributeScaling::ReturnValue' has a wrong offset!");

// Function BP_ItemInstance_Gear_Weapon.BP_ItemInstance_Gear_Weapon_C.GetScalingDataTable
// 0x0008 (0x0008 - 0x0000)
struct BP_ItemInstance_Gear_Weapon_C_GetScalingDataTable final
{
public:
	class UDataTable*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemInstance_Gear_Weapon_C_GetScalingDataTable) == 0x000008, "Wrong alignment on BP_ItemInstance_Gear_Weapon_C_GetScalingDataTable");
static_assert(sizeof(BP_ItemInstance_Gear_Weapon_C_GetScalingDataTable) == 0x000008, "Wrong size on BP_ItemInstance_Gear_Weapon_C_GetScalingDataTable");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetScalingDataTable, ReturnValue) == 0x000000, "Member 'BP_ItemInstance_Gear_Weapon_C_GetScalingDataTable::ReturnValue' has a wrong offset!");

// Function BP_ItemInstance_Gear_Weapon.BP_ItemInstance_Gear_Weapon_C.GetUnlockedPassiveEffectsIDs
// 0x0138 (0x0138 - 0x0000)
struct BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs final
{
public:
	TArray<class FName>                           PassiveEffectIDs;                                  // 0x0000(0x0010)(Parm, OutParm)
	TMap<EWeaponQuality, class FName>             local_passiveByLevel;                              // 0x0010(0x0050)(Edit, BlueprintVisible)
	EWeaponQuality                                local_weaponQuality;                               // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77[0x1];                                       // 0x0077(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Temp_wildcard_Variable;                            // 0x0088(0x0010)(ReferenceParm)
	TArray<class FName>                           Temp_wildcard_Temp_buffer_array_Variable;          // 0x0098(0x0010)(ConstParm, ReferenceParm)
	TArray<class FName>                           Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x00A8(0x0010)(ConstParm, ReferenceParm)
	EWeaponQuality                                CallFunc_GetCurrentQuality_Quality;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EWeaponQuality, class FName>             CallFunc_GetWeaponPassivesByUpgradeLevel_ReturnValue; // 0x00C0(0x0050)()
	class FName                                   CallFunc_Map_Find_Value;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CompareItemQuality_ReturnValue;           // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNameValid_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetUnlockedPassiveEffectsIDs_PassiveEffectIDs; // 0x0128(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs) == 0x000008, "Wrong alignment on BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs");
static_assert(sizeof(BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs) == 0x000138, "Wrong size on BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs, PassiveEffectIDs) == 0x000000, "Member 'BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs::PassiveEffectIDs' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs, local_passiveByLevel) == 0x000010, "Member 'BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs::local_passiveByLevel' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs, local_weaponQuality) == 0x000060, "Member 'BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs::local_weaponQuality' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs, Temp_int_Variable) == 0x000064, "Member 'BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs, Temp_int_Variable_1) == 0x000068, "Member 'BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs, CallFunc_Conv_IntToByte_ReturnValue) == 0x00006C, "Member 'BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs, CallFunc_GetValidValue_ReturnValue) == 0x000074, "Member 'BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000075, "Member 'BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000076, "Member 'BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000078, "Member 'BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs, CallFunc_MakeLiteralInt_ReturnValue) == 0x00007C, "Member 'BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs, Temp_wildcard_Variable) == 0x000088, "Member 'BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs, Temp_wildcard_Temp_buffer_array_Variable) == 0x000098, "Member 'BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x0000A8, "Member 'BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs, CallFunc_GetCurrentQuality_Quality) == 0x0000B8, "Member 'BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs::CallFunc_GetCurrentQuality_Quality' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs, CallFunc_GetWeaponPassivesByUpgradeLevel_ReturnValue) == 0x0000C0, "Member 'BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs::CallFunc_GetWeaponPassivesByUpgradeLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs, CallFunc_Map_Find_Value) == 0x000110, "Member 'BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs, CallFunc_Map_Find_ReturnValue) == 0x000118, "Member 'BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs, CallFunc_CompareItemQuality_ReturnValue) == 0x000119, "Member 'BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs::CallFunc_CompareItemQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs, CallFunc_Array_Add_ReturnValue) == 0x00011C, "Member 'BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs, CallFunc_IsNameValid_ReturnValue) == 0x000120, "Member 'BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs::CallFunc_IsNameValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs, CallFunc_GetUnlockedPassiveEffectsIDs_PassiveEffectIDs) == 0x000128, "Member 'BP_ItemInstance_Gear_Weapon_C_GetUnlockedPassiveEffectsIDs::CallFunc_GetUnlockedPassiveEffectsIDs_PassiveEffectIDs' has a wrong offset!");

// Function BP_ItemInstance_Gear_Weapon.BP_ItemInstance_Gear_Weapon_C.GetWeaponDefinition
// 0x00F0 (0x00F0 - 0x0000)
struct BP_ItemInstance_Gear_Weapon_C_GetWeaponDefinition final
{
public:
	struct FS_WeaponDefinition                    WeaponDefinition_0;                                // 0x0000(0x00F0)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemInstance_Gear_Weapon_C_GetWeaponDefinition) == 0x000008, "Wrong alignment on BP_ItemInstance_Gear_Weapon_C_GetWeaponDefinition");
static_assert(sizeof(BP_ItemInstance_Gear_Weapon_C_GetWeaponDefinition) == 0x0000F0, "Wrong size on BP_ItemInstance_Gear_Weapon_C_GetWeaponDefinition");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetWeaponDefinition, WeaponDefinition_0) == 0x000000, "Member 'BP_ItemInstance_Gear_Weapon_C_GetWeaponDefinition::WeaponDefinition_0' has a wrong offset!");

// Function BP_ItemInstance_Gear_Weapon.BP_ItemInstance_Gear_Weapon_C.GetWeaponInstanceData
// 0x0110 (0x0110 - 0x0000)
struct BP_ItemInstance_Gear_Weapon_C_GetWeaponInstanceData final
{
public:
	struct FS_WeaponInstanceData                  ReturnValue;                                       // 0x0000(0x0110)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemInstance_Gear_Weapon_C_GetWeaponInstanceData) == 0x000008, "Wrong alignment on BP_ItemInstance_Gear_Weapon_C_GetWeaponInstanceData");
static_assert(sizeof(BP_ItemInstance_Gear_Weapon_C_GetWeaponInstanceData) == 0x000110, "Wrong size on BP_ItemInstance_Gear_Weapon_C_GetWeaponInstanceData");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_GetWeaponInstanceData, ReturnValue) == 0x000000, "Member 'BP_ItemInstance_Gear_Weapon_C_GetWeaponInstanceData::ReturnValue' has a wrong offset!");

// Function BP_ItemInstance_Gear_Weapon.BP_ItemInstance_Gear_Weapon_C.LEGACY_GetWeaponInstanceHandle
// 0x0024 (0x0024 - 0x0000)
struct BP_ItemInstance_Gear_Weapon_C_LEGACY_GetWeaponInstanceHandle final
{
public:
	struct FS_WeaponInstanceHandle                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentLevel_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetItemDefinitionID_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_WeaponInstanceHandle                K2Node_MakeStruct_S_WeaponInstanceHandle;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemInstance_Gear_Weapon_C_LEGACY_GetWeaponInstanceHandle) == 0x000004, "Wrong alignment on BP_ItemInstance_Gear_Weapon_C_LEGACY_GetWeaponInstanceHandle");
static_assert(sizeof(BP_ItemInstance_Gear_Weapon_C_LEGACY_GetWeaponInstanceHandle) == 0x000024, "Wrong size on BP_ItemInstance_Gear_Weapon_C_LEGACY_GetWeaponInstanceHandle");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_LEGACY_GetWeaponInstanceHandle, ReturnValue) == 0x000000, "Member 'BP_ItemInstance_Gear_Weapon_C_LEGACY_GetWeaponInstanceHandle::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_LEGACY_GetWeaponInstanceHandle, CallFunc_GetCurrentLevel_ReturnValue) == 0x00000C, "Member 'BP_ItemInstance_Gear_Weapon_C_LEGACY_GetWeaponInstanceHandle::CallFunc_GetCurrentLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_LEGACY_GetWeaponInstanceHandle, CallFunc_GetItemDefinitionID_ReturnValue) == 0x000010, "Member 'BP_ItemInstance_Gear_Weapon_C_LEGACY_GetWeaponInstanceHandle::CallFunc_GetItemDefinitionID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_LEGACY_GetWeaponInstanceHandle, K2Node_MakeStruct_S_WeaponInstanceHandle) == 0x000018, "Member 'BP_ItemInstance_Gear_Weapon_C_LEGACY_GetWeaponInstanceHandle::K2Node_MakeStruct_S_WeaponInstanceHandle' has a wrong offset!");

// Function BP_ItemInstance_Gear_Weapon.BP_ItemInstance_Gear_Weapon_C.LoadItemDefinition
// 0x0100 (0x0100 - 0x0000)
struct BP_ItemInstance_Gear_Weapon_C_LoadItemDefinition final
{
public:
	class FName                                   CallFunc_GetItemDefinitionID_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetWeaponDefinition_Found;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponDefinition                    CallFunc_GetWeaponDefinition_OutRow;               // 0x0010(0x00F0)(HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemInstance_Gear_Weapon_C_LoadItemDefinition) == 0x000008, "Wrong alignment on BP_ItemInstance_Gear_Weapon_C_LoadItemDefinition");
static_assert(sizeof(BP_ItemInstance_Gear_Weapon_C_LoadItemDefinition) == 0x000100, "Wrong size on BP_ItemInstance_Gear_Weapon_C_LoadItemDefinition");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_LoadItemDefinition, CallFunc_GetItemDefinitionID_ReturnValue) == 0x000000, "Member 'BP_ItemInstance_Gear_Weapon_C_LoadItemDefinition::CallFunc_GetItemDefinitionID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_LoadItemDefinition, CallFunc_GetWeaponDefinition_Found) == 0x000008, "Member 'BP_ItemInstance_Gear_Weapon_C_LoadItemDefinition::CallFunc_GetWeaponDefinition_Found' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_LoadItemDefinition, CallFunc_GetWeaponDefinition_OutRow) == 0x000010, "Member 'BP_ItemInstance_Gear_Weapon_C_LoadItemDefinition::CallFunc_GetWeaponDefinition_OutRow' has a wrong offset!");

// Function BP_ItemInstance_Gear_Weapon.BP_ItemInstance_Gear_Weapon_C.RefreshCurrentGearStats
// 0x03D0 (0x03D0 - 0x0000)
struct BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats final
{
public:
	int32                                         local_newGrade;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_rankUpgrades;                                // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_WeaponInstanceHandle                local_weaponHandle;                                // 0x0008(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetItemDefinitionID_ReturnValue;          // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0020(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ComputeUnlockedAttributeUpgradeCount_ReturnValue; // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x008F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetItemDefinitionID_ReturnValue_1;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetWeaponDefinition_Found;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponDefinition                    CallFunc_GetWeaponDefinition_OutRow;               // 0x00A0(0x00F0)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0198(0x0048)(HasGetValueTypeHash)
	TArray<ECharacterAttribute>                   CallFunc_Map_Keys_Keys;                            // 0x01E0(0x0010)(ReferenceParm)
	ECharacterAttribute                           CallFunc_Array_Get_Item;                           // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x3];                                      // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0210(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0220(0x0048)(HasGetValueTypeHash)
	EAttributeScalingGrade                        CallFunc_Map_Find_Value;                           // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26A[0x6];                                      // 0x026A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0288(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0298(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponQuality                                CallFunc_GetCurrentQuality_Quality;                // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E5[0x3];                                      // 0x02E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2; // 0x02F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0300(0x0010)()
	int32                                         CallFunc_GetCurrentLevel_ReturnValue;              // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0318(0x0048)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0368(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x03B0(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x03C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats) == 0x000008, "Wrong alignment on BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats");
static_assert(sizeof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats) == 0x0003D0, "Wrong size on BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, local_newGrade) == 0x000000, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::local_newGrade' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, local_rankUpgrades) == 0x000004, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::local_rankUpgrades' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, local_weaponHandle) == 0x000008, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::local_weaponHandle' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_GetItemDefinitionID_ReturnValue) == 0x000014, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_GetItemDefinitionID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_Conv_NameToText_ReturnValue) == 0x000020, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_MakeLiteralInt_ReturnValue) == 0x00007C, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_Subtract_IntInt_ReturnValue) == 0x000080, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_ComputeUnlockedAttributeUpgradeCount_ReturnValue) == 0x000088, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_ComputeUnlockedAttributeUpgradeCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_Conv_IntToByte_ReturnValue) == 0x00008C, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x00008D, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_GetValidValue_ReturnValue) == 0x00008E, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_Not_PreBool_ReturnValue) == 0x00008F, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_GetItemDefinitionID_ReturnValue_1) == 0x000090, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_GetItemDefinitionID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_GetWeaponDefinition_Found) == 0x000098, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_GetWeaponDefinition_Found' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_GetWeaponDefinition_OutRow) == 0x0000A0, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_GetWeaponDefinition_OutRow' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000190, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, K2Node_MakeStruct_FormatArgumentData_1) == 0x000198, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_Map_Keys_Keys) == 0x0001E0, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_Array_Get_Item) == 0x0001F0, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_Array_Length_ReturnValue) == 0x0001F4, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0001F8, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_Less_IntInt_ReturnValue) == 0x000208, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_Conv_StringToText_ReturnValue) == 0x000210, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, K2Node_MakeStruct_FormatArgumentData_2) == 0x000220, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_Map_Find_Value) == 0x000268, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_Map_Find_ReturnValue) == 0x000269, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000270, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000280, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000288, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, K2Node_MakeStruct_FormatArgumentData_3) == 0x000298, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0002E0, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_GetCurrentQuality_Quality) == 0x0002E4, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_GetCurrentQuality_Quality' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002E8, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2) == 0x0002F0, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000300, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_GetCurrentLevel_ReturnValue) == 0x000310, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_GetCurrentLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, K2Node_MakeStruct_FormatArgumentData_4) == 0x000318, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000360, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, K2Node_MakeStruct_FormatArgumentData_5) == 0x000368, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, K2Node_MakeArray_Array) == 0x0003B0, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats, CallFunc_Format_ReturnValue) == 0x0003C0, "Member 'BP_ItemInstance_Gear_Weapon_C_RefreshCurrentGearStats::CallFunc_Format_ReturnValue' has a wrong offset!");

}

