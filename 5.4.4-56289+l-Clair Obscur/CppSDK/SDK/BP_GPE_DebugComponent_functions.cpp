#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GPE_DebugComponent

#include "Basic.hpp"

#include "BP_GPE_DebugComponent_classes.hpp"
#include "BP_GPE_DebugComponent_parameters.hpp"


namespace SDK
{

// Function BP_GPE_DebugComponent.BP_GPE_DebugComponent_C.CheckForErrors
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>&                    ErrorMessages                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_GPE_DebugComponent_C::CheckForErrors(TArray<class FText>& ErrorMessages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GPE_DebugComponent_C", "CheckForErrors");

	Params::BP_GPE_DebugComponent_C_CheckForErrors Parms{};

	Parms.ErrorMessages = std::move(ErrorMessages);

	UObject::ProcessEvent(Func, &Parms);

	ErrorMessages = std::move(Parms.ErrorMessages);

	return Parms.ReturnValue;
}


// Function BP_GPE_DebugComponent.BP_GPE_DebugComponent_C.InverseGPETriggerIsActive
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GPE_DebugComponent_C::InverseGPETriggerIsActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GPE_DebugComponent_C", "InverseGPETriggerIsActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GPE_DebugComponent.BP_GPE_DebugComponent_C.AddImpulseActivation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           GPE                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_GPE_DebugComponent_C::AddImpulseActivation(class AActor* GPE)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GPE_DebugComponent_C", "AddImpulseActivation");

	Params::BP_GPE_DebugComponent_C_AddImpulseActivation Parms{};

	Parms.GPE = GPE;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GPE_DebugComponent.BP_GPE_DebugComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_GPE_DebugComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GPE_DebugComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GPE_DebugComponent.BP_GPE_DebugComponent_C.OnDebugInPlayModeChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GPE_DebugComponent_C::OnDebugInPlayModeChanged(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GPE_DebugComponent_C", "OnDebugInPlayModeChanged");

	Params::BP_GPE_DebugComponent_C_OnDebugInPlayModeChanged Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GPE_DebugComponent.BP_GPE_DebugComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GPE_DebugComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GPE_DebugComponent_C", "ReceiveTick");

	Params::BP_GPE_DebugComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GPE_DebugComponent.BP_GPE_DebugComponent_C.ExecuteUbergraph_BP_GPE_DebugComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GPE_DebugComponent_C::ExecuteUbergraph_BP_GPE_DebugComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GPE_DebugComponent_C", "ExecuteUbergraph_BP_GPE_DebugComponent");

	Params::BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GPE_DebugComponent.BP_GPE_DebugComponent_C.Editor_DrawDebugShapes
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_GPE_DebugComponent_C::Editor_DrawDebugShapes() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GPE_DebugComponent_C", "Editor_DrawDebugShapes");

	Params::BP_GPE_DebugComponent_C_Editor_DrawDebugShapes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GPE_DebugComponent.BP_GPE_DebugComponent_C.Editor_GetDebugShapes
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<struct FEditorDebugShape_Arrow>& Arrows                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FEditorDebugShape_Arrow>& Lines                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_GPE_DebugComponent_C::Editor_GetDebugShapes(TArray<struct FEditorDebugShape_Arrow>& Arrows, TArray<struct FEditorDebugShape_Arrow>& Lines) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GPE_DebugComponent_C", "Editor_GetDebugShapes");

	Params::BP_GPE_DebugComponent_C_Editor_GetDebugShapes Parms{};

	Parms.Arrows = std::move(Arrows);
	Parms.Lines = std::move(Lines);

	UObject::ProcessEvent(Func, &Parms);

	Arrows = std::move(Parms.Arrows);
	Lines = std::move(Parms.Lines);

	return Parms.ReturnValue;
}


// Function BP_GPE_DebugComponent.BP_GPE_DebugComponent_C.SelectDebugColor
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           GPE                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor*                    Color                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GPE_DebugComponent_C::SelectDebugColor(class AActor* GPE, struct FLinearColor* Color) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GPE_DebugComponent_C", "SelectDebugColor");

	Params::BP_GPE_DebugComponent_C_SelectDebugColor Parms{};

	Parms.GPE = GPE;

	UObject::ProcessEvent(Func, &Parms);

	if (Color != nullptr)
		*Color = std::move(Parms.Color);
}

}

