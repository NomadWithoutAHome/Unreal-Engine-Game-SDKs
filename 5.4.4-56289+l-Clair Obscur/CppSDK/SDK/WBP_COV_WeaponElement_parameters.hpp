#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_COV_WeaponElement

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "EWeaponQuality_structs.hpp"
#include "S_jRPG_Item_StaticData_structs.hpp"


namespace SDK::Params
{

// Function WBP_COV_WeaponElement.WBP_COV_WeaponElement_C.BndEvt__WBP_COV_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_COV_WeaponElement_C_BndEvt__WBP_COV_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_COV_WeaponElement_C_BndEvt__WBP_COV_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature) == 0x000008, "Wrong alignment on WBP_COV_WeaponElement_C_BndEvt__WBP_COV_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature");
static_assert(sizeof(WBP_COV_WeaponElement_C_BndEvt__WBP_COV_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature) == 0x000008, "Wrong size on WBP_COV_WeaponElement_C_BndEvt__WBP_COV_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature");
static_assert(offsetof(WBP_COV_WeaponElement_C_BndEvt__WBP_COV_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature, Button) == 0x000000, "Member 'WBP_COV_WeaponElement_C_BndEvt__WBP_COV_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature::Button' has a wrong offset!");

// Function WBP_COV_WeaponElement.WBP_COV_WeaponElement_C.BndEvt__WBP_COV_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_COV_WeaponElement_C_BndEvt__WBP_COV_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_COV_WeaponElement_C_BndEvt__WBP_COV_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_COV_WeaponElement_C_BndEvt__WBP_COV_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_COV_WeaponElement_C_BndEvt__WBP_COV_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_COV_WeaponElement_C_BndEvt__WBP_COV_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_COV_WeaponElement_C_BndEvt__WBP_COV_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_COV_WeaponElement_C_BndEvt__WBP_COV_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_COV_WeaponElement.WBP_COV_WeaponElement_C.BndEvt__WBP_COV_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_2_OnButtonBaseUnfocused__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_COV_WeaponElement_C_BndEvt__WBP_COV_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_2_OnButtonBaseUnfocused__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_COV_WeaponElement_C_BndEvt__WBP_COV_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_2_OnButtonBaseUnfocused__DelegateSignature) == 0x000008, "Wrong alignment on WBP_COV_WeaponElement_C_BndEvt__WBP_COV_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_2_OnButtonBaseUnfocused__DelegateSignature");
static_assert(sizeof(WBP_COV_WeaponElement_C_BndEvt__WBP_COV_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_2_OnButtonBaseUnfocused__DelegateSignature) == 0x000008, "Wrong size on WBP_COV_WeaponElement_C_BndEvt__WBP_COV_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_2_OnButtonBaseUnfocused__DelegateSignature");
static_assert(offsetof(WBP_COV_WeaponElement_C_BndEvt__WBP_COV_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_2_OnButtonBaseUnfocused__DelegateSignature, Button) == 0x000000, "Member 'WBP_COV_WeaponElement_C_BndEvt__WBP_COV_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_2_OnButtonBaseUnfocused__DelegateSignature::Button' has a wrong offset!");

// Function WBP_COV_WeaponElement.WBP_COV_WeaponElement_C.BPI_OnMarkNotificationAsRead
// 0x0008 (0x0008 - 0x0000)
struct WBP_COV_WeaponElement_C_BPI_OnMarkNotificationAsRead final
{
public:
	class UUserWidget*                            MarkCaller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_COV_WeaponElement_C_BPI_OnMarkNotificationAsRead) == 0x000008, "Wrong alignment on WBP_COV_WeaponElement_C_BPI_OnMarkNotificationAsRead");
static_assert(sizeof(WBP_COV_WeaponElement_C_BPI_OnMarkNotificationAsRead) == 0x000008, "Wrong size on WBP_COV_WeaponElement_C_BPI_OnMarkNotificationAsRead");
static_assert(offsetof(WBP_COV_WeaponElement_C_BPI_OnMarkNotificationAsRead, MarkCaller) == 0x000000, "Member 'WBP_COV_WeaponElement_C_BPI_OnMarkNotificationAsRead::MarkCaller' has a wrong offset!");

// Function WBP_COV_WeaponElement.WBP_COV_WeaponElement_C.BPI_ShouldShowNotification
// 0x0018 (0x0018 - 0x0000)
struct WBP_COV_WeaponElement_C_BPI_ShouldShowNotification final
{
public:
	bool                                          bShouldShow;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_InventoryManager_C*            CallFunc_GetInventoryManager_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsThereNotifiedWeaponForCharacter_IsNotified; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_COV_WeaponElement_C_BPI_ShouldShowNotification) == 0x000008, "Wrong alignment on WBP_COV_WeaponElement_C_BPI_ShouldShowNotification");
static_assert(sizeof(WBP_COV_WeaponElement_C_BPI_ShouldShowNotification) == 0x000018, "Wrong size on WBP_COV_WeaponElement_C_BPI_ShouldShowNotification");
static_assert(offsetof(WBP_COV_WeaponElement_C_BPI_ShouldShowNotification, bShouldShow) == 0x000000, "Member 'WBP_COV_WeaponElement_C_BPI_ShouldShowNotification::bShouldShow' has a wrong offset!");
static_assert(offsetof(WBP_COV_WeaponElement_C_BPI_ShouldShowNotification, CallFunc_GetInventoryManager_ReturnValue) == 0x000008, "Member 'WBP_COV_WeaponElement_C_BPI_ShouldShowNotification::CallFunc_GetInventoryManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_COV_WeaponElement_C_BPI_ShouldShowNotification, CallFunc_IsThereNotifiedWeaponForCharacter_IsNotified) == 0x000010, "Member 'WBP_COV_WeaponElement_C_BPI_ShouldShowNotification::CallFunc_IsThereNotifiedWeaponForCharacter_IsNotified' has a wrong offset!");

// Function WBP_COV_WeaponElement.WBP_COV_WeaponElement_C.ExecuteUbergraph_WBP_COV_WeaponElement
// 0x0028 (0x0028 - 0x0000)
struct WBP_COV_WeaponElement_C_ExecuteUbergraph_WBP_COV_WeaponElement final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_Event_MarkCaller;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_2;               // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_1;               // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_COV_WeaponElement_C_ExecuteUbergraph_WBP_COV_WeaponElement) == 0x000008, "Wrong alignment on WBP_COV_WeaponElement_C_ExecuteUbergraph_WBP_COV_WeaponElement");
static_assert(sizeof(WBP_COV_WeaponElement_C_ExecuteUbergraph_WBP_COV_WeaponElement) == 0x000028, "Wrong size on WBP_COV_WeaponElement_C_ExecuteUbergraph_WBP_COV_WeaponElement");
static_assert(offsetof(WBP_COV_WeaponElement_C_ExecuteUbergraph_WBP_COV_WeaponElement, EntryPoint) == 0x000000, "Member 'WBP_COV_WeaponElement_C_ExecuteUbergraph_WBP_COV_WeaponElement::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_COV_WeaponElement_C_ExecuteUbergraph_WBP_COV_WeaponElement, K2Node_Event_MarkCaller) == 0x000008, "Member 'WBP_COV_WeaponElement_C_ExecuteUbergraph_WBP_COV_WeaponElement::K2Node_Event_MarkCaller' has a wrong offset!");
static_assert(offsetof(WBP_COV_WeaponElement_C_ExecuteUbergraph_WBP_COV_WeaponElement, K2Node_ComponentBoundEvent_Button_2) == 0x000010, "Member 'WBP_COV_WeaponElement_C_ExecuteUbergraph_WBP_COV_WeaponElement::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(WBP_COV_WeaponElement_C_ExecuteUbergraph_WBP_COV_WeaponElement, K2Node_ComponentBoundEvent_Button_1) == 0x000018, "Member 'WBP_COV_WeaponElement_C_ExecuteUbergraph_WBP_COV_WeaponElement::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(WBP_COV_WeaponElement_C_ExecuteUbergraph_WBP_COV_WeaponElement, K2Node_ComponentBoundEvent_Button) == 0x000020, "Member 'WBP_COV_WeaponElement_C_ExecuteUbergraph_WBP_COV_WeaponElement::K2Node_ComponentBoundEvent_Button' has a wrong offset!");

// Function WBP_COV_WeaponElement.WBP_COV_WeaponElement_C.Load Weapon State from Instance
// 0x0178 (0x0178 - 0x0000)
struct WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance final
{
public:
	class UBP_ItemInstance_Gear_C*                GearInstance;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    CurrentCharacterData;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0018(0x0010)()
	int32                                         CallFunc_GetCurrentLevel_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponQuality                                CallFunc_GetCurrentQuality_Quality;                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_StaticData                CallFunc_GetItemStaticData_ItemStaticData;         // 0x0030(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0168(0x0010)()
};
static_assert(alignof(WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance) == 0x000008, "Wrong alignment on WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance");
static_assert(sizeof(WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance) == 0x000178, "Wrong size on WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance");
static_assert(offsetof(WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance, GearInstance) == 0x000000, "Member 'WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance::GearInstance' has a wrong offset!");
static_assert(offsetof(WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance, CurrentCharacterData) == 0x000008, "Member 'WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance::CurrentCharacterData' has a wrong offset!");
static_assert(offsetof(WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance, Temp_bool_Variable) == 0x000010, "Member 'WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance, Temp_byte_Variable) == 0x000011, "Member 'WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance, Temp_byte_Variable_1) == 0x000012, "Member 'WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance, Temp_bool_Variable_1) == 0x000013, "Member 'WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance, Temp_text_Variable) == 0x000018, "Member 'WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance, CallFunc_GetCurrentLevel_ReturnValue) == 0x000028, "Member 'WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance::CallFunc_GetCurrentLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance, CallFunc_GetCurrentQuality_Quality) == 0x00002C, "Member 'WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance::CallFunc_GetCurrentQuality_Quality' has a wrong offset!");
static_assert(offsetof(WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance, CallFunc_GetItemStaticData_ItemStaticData) == 0x000030, "Member 'WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance::CallFunc_GetItemStaticData_ItemStaticData' has a wrong offset!");
static_assert(offsetof(WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance, CallFunc_IsValid_ReturnValue) == 0x000160, "Member 'WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance, K2Node_Select_Default) == 0x000161, "Member 'WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance, K2Node_Select_Default_1) == 0x000168, "Member 'WBP_COV_WeaponElement_C_Load_Weapon_State_from_Instance::K2Node_Select_Default_1' has a wrong offset!");

}

