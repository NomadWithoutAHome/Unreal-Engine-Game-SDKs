#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_BattleWheel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"
#include "EAttackType_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_BattleWheel.WBP_BattleWheel_C
// 0x00D8 (0x0508 - 0x0430)
class UWBP_BattleWheel_C final : public UCommonActivatableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Disappear;                                    // 0x0438(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Appear;                                       // 0x0440(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Arrow;                                             // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Arrow_1;                                           // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_GlobalContainer;                       // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_RightContainer;                        // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CicleCenter;                                       // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CicleCenter_1;                                     // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CicleIn;                                           // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Cicleout;                                          // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Cicleout_1;                                        // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CircleDot_In;                                      // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CircleDot_In_1;                                    // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Deco_In;                                           // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Deco_Out;                                          // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_linefade_Bottom;                             // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_linefade_Top;                                // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BattleWheel_AP_Bar_C*              WBP_BattleWheel_AP_Bar;                            // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BattleWheel_Button_C*              WBP_BattleWheel_Button_Aim;                        // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BattleWheel_Button_C*              WBP_BattleWheel_Button_Attack;                     // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BattleWheel_Button_C*              WBP_BattleWheel_Button_Gradient;                   // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BattleWheel_Button_C*              WBP_BattleWheel_Button_Items;                      // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BattleWheel_Button_C*              WBP_BattleWheel_Button_Skills;                     // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(int32 ButtonIndex)> OnButtonClicked;                               // 0x04F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UWBP_BattleWheel_Button_C*              ForcedButton;                                      // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void Appear();
	void BP_OnActivated();
	void BP_OnDeactivated();
	void ClearForcedButton();
	void Construct();
	void Disappear();
	void ExecuteUbergraph_WBP_BattleWheel(int32 EntryPoint);
	void Finished_F34E3EC64C381A418E78E09EB8BF0DD6();
	TArray<class UWBP_BattleWheel_Button_C*> GetAllButtons();
	bool IsGradientButtonVisible();
	bool IsWheelButtonAvailable(class UWidget* Button);
	bool IsWheelButtonVisible(class UWidget* Button);
	void OnGradientGaugeChanged(double PreviousProgress, int32 PreviousCharges);
	void ProcessOnButtonClicked(class UWBP_BattleWheel_Button_C* ButtonWidget);
	void RefreshAP(int32 NewAP, int32 PreviousAP, class UAC_jRPG_CharacterBattleStats_C* CharacterStats);
	void SetAttackAndAimElementIcon(EAttackType WeaponElement);
	void SetForcedButton(class UWBP_BattleWheel_Button_C* ForcedButton_0);
	void SetGradientButtonFlare(int32 CurrentCharges);
	void SetupAimText();
	void SetWheelButtonDisabled(class UWBP_BattleWheel_Button_C* ButtonWidget);
	void UpdateGradientButtonVisibility();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_BattleWheel_C">();
	}
	static class UWBP_BattleWheel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_BattleWheel_C>();
	}
};
static_assert(alignof(UWBP_BattleWheel_C) == 0x000008, "Wrong alignment on UWBP_BattleWheel_C");
static_assert(sizeof(UWBP_BattleWheel_C) == 0x000508, "Wrong size on UWBP_BattleWheel_C");
static_assert(offsetof(UWBP_BattleWheel_C, UberGraphFrame) == 0x000430, "Member 'UWBP_BattleWheel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_BattleWheel_C, Anim_Disappear) == 0x000438, "Member 'UWBP_BattleWheel_C::Anim_Disappear' has a wrong offset!");
static_assert(offsetof(UWBP_BattleWheel_C, Anim_Appear) == 0x000440, "Member 'UWBP_BattleWheel_C::Anim_Appear' has a wrong offset!");
static_assert(offsetof(UWBP_BattleWheel_C, Arrow) == 0x000448, "Member 'UWBP_BattleWheel_C::Arrow' has a wrong offset!");
static_assert(offsetof(UWBP_BattleWheel_C, Arrow_1) == 0x000450, "Member 'UWBP_BattleWheel_C::Arrow_1' has a wrong offset!");
static_assert(offsetof(UWBP_BattleWheel_C, CanvasPanel_GlobalContainer) == 0x000458, "Member 'UWBP_BattleWheel_C::CanvasPanel_GlobalContainer' has a wrong offset!");
static_assert(offsetof(UWBP_BattleWheel_C, CanvasPanel_RightContainer) == 0x000460, "Member 'UWBP_BattleWheel_C::CanvasPanel_RightContainer' has a wrong offset!");
static_assert(offsetof(UWBP_BattleWheel_C, CicleCenter) == 0x000468, "Member 'UWBP_BattleWheel_C::CicleCenter' has a wrong offset!");
static_assert(offsetof(UWBP_BattleWheel_C, CicleCenter_1) == 0x000470, "Member 'UWBP_BattleWheel_C::CicleCenter_1' has a wrong offset!");
static_assert(offsetof(UWBP_BattleWheel_C, CicleIn) == 0x000478, "Member 'UWBP_BattleWheel_C::CicleIn' has a wrong offset!");
static_assert(offsetof(UWBP_BattleWheel_C, Cicleout) == 0x000480, "Member 'UWBP_BattleWheel_C::Cicleout' has a wrong offset!");
static_assert(offsetof(UWBP_BattleWheel_C, Cicleout_1) == 0x000488, "Member 'UWBP_BattleWheel_C::Cicleout_1' has a wrong offset!");
static_assert(offsetof(UWBP_BattleWheel_C, CircleDot_In) == 0x000490, "Member 'UWBP_BattleWheel_C::CircleDot_In' has a wrong offset!");
static_assert(offsetof(UWBP_BattleWheel_C, CircleDot_In_1) == 0x000498, "Member 'UWBP_BattleWheel_C::CircleDot_In_1' has a wrong offset!");
static_assert(offsetof(UWBP_BattleWheel_C, Deco_In) == 0x0004A0, "Member 'UWBP_BattleWheel_C::Deco_In' has a wrong offset!");
static_assert(offsetof(UWBP_BattleWheel_C, Deco_Out) == 0x0004A8, "Member 'UWBP_BattleWheel_C::Deco_Out' has a wrong offset!");
static_assert(offsetof(UWBP_BattleWheel_C, Image_linefade_Bottom) == 0x0004B0, "Member 'UWBP_BattleWheel_C::Image_linefade_Bottom' has a wrong offset!");
static_assert(offsetof(UWBP_BattleWheel_C, Image_linefade_Top) == 0x0004B8, "Member 'UWBP_BattleWheel_C::Image_linefade_Top' has a wrong offset!");
static_assert(offsetof(UWBP_BattleWheel_C, WBP_BattleWheel_AP_Bar) == 0x0004C0, "Member 'UWBP_BattleWheel_C::WBP_BattleWheel_AP_Bar' has a wrong offset!");
static_assert(offsetof(UWBP_BattleWheel_C, WBP_BattleWheel_Button_Aim) == 0x0004C8, "Member 'UWBP_BattleWheel_C::WBP_BattleWheel_Button_Aim' has a wrong offset!");
static_assert(offsetof(UWBP_BattleWheel_C, WBP_BattleWheel_Button_Attack) == 0x0004D0, "Member 'UWBP_BattleWheel_C::WBP_BattleWheel_Button_Attack' has a wrong offset!");
static_assert(offsetof(UWBP_BattleWheel_C, WBP_BattleWheel_Button_Gradient) == 0x0004D8, "Member 'UWBP_BattleWheel_C::WBP_BattleWheel_Button_Gradient' has a wrong offset!");
static_assert(offsetof(UWBP_BattleWheel_C, WBP_BattleWheel_Button_Items) == 0x0004E0, "Member 'UWBP_BattleWheel_C::WBP_BattleWheel_Button_Items' has a wrong offset!");
static_assert(offsetof(UWBP_BattleWheel_C, WBP_BattleWheel_Button_Skills) == 0x0004E8, "Member 'UWBP_BattleWheel_C::WBP_BattleWheel_Button_Skills' has a wrong offset!");
static_assert(offsetof(UWBP_BattleWheel_C, OnButtonClicked) == 0x0004F0, "Member 'UWBP_BattleWheel_C::OnButtonClicked' has a wrong offset!");
static_assert(offsetof(UWBP_BattleWheel_C, ForcedButton) == 0x000500, "Member 'UWBP_BattleWheel_C::ForcedButton' has a wrong offset!");

}

