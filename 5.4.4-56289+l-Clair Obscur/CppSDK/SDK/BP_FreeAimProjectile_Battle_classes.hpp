#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FreeAimProjectile_Battle

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_FreeAimProjectile_Base_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "EAttackType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FreeAimProjectile_Battle.BP_FreeAimProjectile_Battle_C
// 0x0038 (0x0330 - 0x02F8)
class ABP_FreeAimProjectile_Battle_C final : public ABP_FreeAimProjectile_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_FreeAimProjectile_Battle_C;      // 0x02F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      FX_Projectile;                                     // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocationBuffer;                                    // 0x0310(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttackType                                   DesiredElementToShoot;                             // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_FreeAimProjectile_Battle(int32 EntryPoint);
	void ReceiveActorBeginOverlap(class AActor* OtherActor);
	void ReceiveBeginPlay();
	void Shoot();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FreeAimProjectile_Battle_C">();
	}
	static class ABP_FreeAimProjectile_Battle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FreeAimProjectile_Battle_C>();
	}
};
static_assert(alignof(ABP_FreeAimProjectile_Battle_C) == 0x000008, "Wrong alignment on ABP_FreeAimProjectile_Battle_C");
static_assert(sizeof(ABP_FreeAimProjectile_Battle_C) == 0x000330, "Wrong size on ABP_FreeAimProjectile_Battle_C");
static_assert(offsetof(ABP_FreeAimProjectile_Battle_C, UberGraphFrame_BP_FreeAimProjectile_Battle_C) == 0x0002F8, "Member 'ABP_FreeAimProjectile_Battle_C::UberGraphFrame_BP_FreeAimProjectile_Battle_C' has a wrong offset!");
static_assert(offsetof(ABP_FreeAimProjectile_Battle_C, FX_Projectile) == 0x000300, "Member 'ABP_FreeAimProjectile_Battle_C::FX_Projectile' has a wrong offset!");
static_assert(offsetof(ABP_FreeAimProjectile_Battle_C, StaticMesh) == 0x000308, "Member 'ABP_FreeAimProjectile_Battle_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_FreeAimProjectile_Battle_C, LocationBuffer) == 0x000310, "Member 'ABP_FreeAimProjectile_Battle_C::LocationBuffer' has a wrong offset!");
static_assert(offsetof(ABP_FreeAimProjectile_Battle_C, DesiredElementToShoot) == 0x000328, "Member 'ABP_FreeAimProjectile_Battle_C::DesiredElementToShoot' has a wrong offset!");

}

