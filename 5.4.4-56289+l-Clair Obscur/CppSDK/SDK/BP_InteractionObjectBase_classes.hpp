#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteractionObjectBase

#include "Basic.hpp"

#include "S_Interaction_Parameters_structs.hpp"
#include "SandFall_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_InteractionObjectBase.BP_InteractionObjectBase_C
// 0x00A8 (0x0338 - 0x0290)
class ABP_InteractionObjectBase_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_GPE_InternalActivationComponent_C*  BP_GPE_InternalActivationComponent;                // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GPE_DebugComponent_C*               BP_GPE_DebugComponent;                             // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        InteractionPromptLocation;                         // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        InteractionPoint;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget;                                            // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       InteractionRange;                                  // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActivatedByDefault;                              // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Interaction_Parameters              Parameters;                                        // 0x02D8(0x0020)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FGPEInterfacesReferences               GameplayElementsToActivate;                        // 0x02F8(0x0010)(Edit, BlueprintVisible)
	struct FGPEInterfacesReferences               GameplayElementsToDeactivate;                      // 0x0308(0x0010)(Edit, BlueprintVisible)
	bool                                          ShouldDisableInteractionAfterUse;                  // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasActivatedGPEs;                                  // 0x0319(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31A[0x6];                                      // 0x031A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGPEInterfacesReferences               AllGPEInterfaces;                                  // 0x0320(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          ShouldDisplayDistantFeedback;                      // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_jRPG_InteractionObject_InteractionRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_jRPG_InteractionObject_InteractionRange_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void CanInteractWithMount(bool* CanInteract);
	void ExecuteUbergraph_BP_InteractionObjectBase(int32 EntryPoint);
	void GetInteractionPromptParams(struct FFPromptParams* PromptParams);
	void GPETrigger_GetGameplayElementsToActivate(struct FGPEInterfacesReferences* GameplayElementsToActivate_0);
	void IsInteractionAvailable(bool* Available);
	void IsInteractionDone(bool* Done);
	void OnEnemyBattleStateLoaded(bool BattleState);
	void OnInteractionDisabled();
	void OnInteractionEnabled();
	void OnInteractionRequested(class ABP_jRPG_Character_World_C* InteractingWorldCharacter, bool Instant);
	void OnObjectInteractionStateLoaded(bool InteractionState);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	bool ShouldHideDistantInteraction();
	void UserConstructionScript();

	void GetInteractionFeedbackLocation(struct FVector* Location) const;
	void GetInteractionLocation(struct FVector* Location) const;
	void GPE_GetActivationComponent(class UBP_GPE_InternalActivationComponent_C** ActivationComponent) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_InteractionObjectBase_C">();
	}
	static class ABP_InteractionObjectBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_InteractionObjectBase_C>();
	}
};
static_assert(alignof(ABP_InteractionObjectBase_C) == 0x000008, "Wrong alignment on ABP_InteractionObjectBase_C");
static_assert(sizeof(ABP_InteractionObjectBase_C) == 0x000338, "Wrong size on ABP_InteractionObjectBase_C");
static_assert(offsetof(ABP_InteractionObjectBase_C, UberGraphFrame) == 0x000290, "Member 'ABP_InteractionObjectBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_InteractionObjectBase_C, BP_GPE_InternalActivationComponent) == 0x000298, "Member 'ABP_InteractionObjectBase_C::BP_GPE_InternalActivationComponent' has a wrong offset!");
static_assert(offsetof(ABP_InteractionObjectBase_C, BP_GPE_DebugComponent) == 0x0002A0, "Member 'ABP_InteractionObjectBase_C::BP_GPE_DebugComponent' has a wrong offset!");
static_assert(offsetof(ABP_InteractionObjectBase_C, InteractionPromptLocation) == 0x0002A8, "Member 'ABP_InteractionObjectBase_C::InteractionPromptLocation' has a wrong offset!");
static_assert(offsetof(ABP_InteractionObjectBase_C, InteractionPoint) == 0x0002B0, "Member 'ABP_InteractionObjectBase_C::InteractionPoint' has a wrong offset!");
static_assert(offsetof(ABP_InteractionObjectBase_C, Widget) == 0x0002B8, "Member 'ABP_InteractionObjectBase_C::Widget' has a wrong offset!");
static_assert(offsetof(ABP_InteractionObjectBase_C, InteractionRange) == 0x0002C0, "Member 'ABP_InteractionObjectBase_C::InteractionRange' has a wrong offset!");
static_assert(offsetof(ABP_InteractionObjectBase_C, Scene) == 0x0002C8, "Member 'ABP_InteractionObjectBase_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_InteractionObjectBase_C, IsActivatedByDefault) == 0x0002D0, "Member 'ABP_InteractionObjectBase_C::IsActivatedByDefault' has a wrong offset!");
static_assert(offsetof(ABP_InteractionObjectBase_C, Parameters) == 0x0002D8, "Member 'ABP_InteractionObjectBase_C::Parameters' has a wrong offset!");
static_assert(offsetof(ABP_InteractionObjectBase_C, GameplayElementsToActivate) == 0x0002F8, "Member 'ABP_InteractionObjectBase_C::GameplayElementsToActivate' has a wrong offset!");
static_assert(offsetof(ABP_InteractionObjectBase_C, GameplayElementsToDeactivate) == 0x000308, "Member 'ABP_InteractionObjectBase_C::GameplayElementsToDeactivate' has a wrong offset!");
static_assert(offsetof(ABP_InteractionObjectBase_C, ShouldDisableInteractionAfterUse) == 0x000318, "Member 'ABP_InteractionObjectBase_C::ShouldDisableInteractionAfterUse' has a wrong offset!");
static_assert(offsetof(ABP_InteractionObjectBase_C, HasActivatedGPEs) == 0x000319, "Member 'ABP_InteractionObjectBase_C::HasActivatedGPEs' has a wrong offset!");
static_assert(offsetof(ABP_InteractionObjectBase_C, AllGPEInterfaces) == 0x000320, "Member 'ABP_InteractionObjectBase_C::AllGPEInterfaces' has a wrong offset!");
static_assert(offsetof(ABP_InteractionObjectBase_C, ShouldDisplayDistantFeedback) == 0x000330, "Member 'ABP_InteractionObjectBase_C::ShouldDisplayDistantFeedback' has a wrong offset!");

}

