#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_BattleListener

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPI_BattleListener.BPI_BattleListener_C
// 0x0000 (0x0000 - 0x0000)
class IBPI_BattleListener_C final
{
public:
	void BPI_OnAnyCharacterAP_Changed(class UBP_BattleEvent_APChange_C* AP_Change);
	void BPI_OnAnyCharacterDamaged(class UBP_BattleDamages_C* BattleDamage);
	void BPI_OnBattleStart();
	void BPI_OnReserveTeamSent();
	void IsTurnStartInProgress(bool* InProgress);
	void OnBattleStart();
	void OnBattleStop();
	void OnCharacterDealtDamages(class UAC_jRPG_CharacterBattleStats_C* CharacterStats, double Damages, double* ProcessedDamages);
	void OnCharacterKilled(class UAC_jRPG_CharacterBattleStats_C* CharacterStats);
	void OnCharacterReceivedDamages(class UAC_jRPG_CharacterBattleStats_C* TargetCharacter, class UAC_jRPG_CharacterBattleStats_C* SourceCharacter, double ReceivedDamages, class UBP_BattleDamages_C* BattleDamages);
	void OnCharacterResurrected();
	void OnCharacterTurnStart(class UAC_jRPG_CharacterBattleStats_C* CharacterStats, const class UBP_DependencyRefCounter_C*& TurnStartDependencies);
	void OnSuccessfulDodge();
	void OnSuccessfulParry();
	void ProcessAddBuffAction(const class UAction_AddBuff_C*& BuffAddAction);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPI_BattleListener_C">();
	}
	static class IBPI_BattleListener_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBPI_BattleListener_C>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
static_assert(alignof(IBPI_BattleListener_C) == 0x000001, "Wrong alignment on IBPI_BattleListener_C");
static_assert(sizeof(IBPI_BattleListener_C) == 0x000001, "Wrong size on IBPI_BattleListener_C");

}

