#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AC_jRPG_DynamicCameraManager

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayCameras_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AC_jRPG_DynamicCameraManager.AC_jRPG_DynamicCameraManager_C.ExecuteUbergraph_AC_jRPG_DynamicCameraManager
// 0x0158 (0x0158 - 0x0000)
struct AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayDebugCategoryEnabled_ReturnValue; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0030(0x0010)()
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0048)(HasGetValueTypeHash)
	class FString                                 Temp_wildcard_Variable;                            // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_jRPG_DynamicCameraPath_C*           CallFunc_Map_Find_Value;                           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00B0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C0(0x0048)(HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0120(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0140(0x0010)()
	double                                        CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast; // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager) == 0x000008, "Wrong alignment on AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager");
static_assert(sizeof(AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager) == 0x000158, "Wrong size on AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager, EntryPoint) == 0x000000, "Member 'AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager, CallFunc_IsGameplayDebugCategoryEnabled_ReturnValue) == 0x000004, "Member 'AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager::CallFunc_IsGameplayDebugCategoryEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000005, "Member 'AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager, CallFunc_GetSplineLength_ReturnValue) == 0x000028, "Member 'AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager, CallFunc_Conv_NameToText_ReturnValue) == 0x000030, "Member 'AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager, Temp_wildcard_Variable) == 0x000090, "Member 'AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager, CallFunc_Map_Find_Value) == 0x0000A0, "Member 'AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager, CallFunc_Map_Find_ReturnValue) == 0x0000A8, "Member 'AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager, CallFunc_Conv_StringToText_ReturnValue) == 0x0000B0, "Member 'AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C0, "Member 'AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000108, "Member 'AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager, K2Node_MakeArray_Array) == 0x000120, "Member 'AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager, CallFunc_Conv_VectorToString_ReturnValue) == 0x000130, "Member 'AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager, CallFunc_Format_ReturnValue) == 0x000140, "Member 'AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager, CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast) == 0x000150, "Member 'AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager::CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function AC_jRPG_DynamicCameraManager.AC_jRPG_DynamicCameraManager_C.LoadBattleMap
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_DynamicCameraManager_C_LoadBattleMap final
{
public:
	class ABP_BattleMap_C*                        BattleMapBP_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_DynamicCameraManager_C_LoadBattleMap) == 0x000008, "Wrong alignment on AC_jRPG_DynamicCameraManager_C_LoadBattleMap");
static_assert(sizeof(AC_jRPG_DynamicCameraManager_C_LoadBattleMap) == 0x000008, "Wrong size on AC_jRPG_DynamicCameraManager_C_LoadBattleMap");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_LoadBattleMap, BattleMapBP_0) == 0x000000, "Member 'AC_jRPG_DynamicCameraManager_C_LoadBattleMap::BattleMapBP_0' has a wrong offset!");

// Function AC_jRPG_DynamicCameraManager.AC_jRPG_DynamicCameraManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct AC_jRPG_DynamicCameraManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_DynamicCameraManager_C_ReceiveTick) == 0x000004, "Wrong alignment on AC_jRPG_DynamicCameraManager_C_ReceiveTick");
static_assert(sizeof(AC_jRPG_DynamicCameraManager_C_ReceiveTick) == 0x000004, "Wrong size on AC_jRPG_DynamicCameraManager_C_ReceiveTick");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'AC_jRPG_DynamicCameraManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function AC_jRPG_DynamicCameraManager.AC_jRPG_DynamicCameraManager_C.SetAsViewTargetInstant
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_DynamicCameraManager_C_SetAsViewTargetInstant final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_DynamicCameraManager_C_SetAsViewTargetInstant) == 0x000008, "Wrong alignment on AC_jRPG_DynamicCameraManager_C_SetAsViewTargetInstant");
static_assert(sizeof(AC_jRPG_DynamicCameraManager_C_SetAsViewTargetInstant) == 0x000008, "Wrong size on AC_jRPG_DynamicCameraManager_C_SetAsViewTargetInstant");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetAsViewTargetInstant, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'AC_jRPG_DynamicCameraManager_C_SetAsViewTargetInstant::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function AC_jRPG_DynamicCameraManager.AC_jRPG_DynamicCameraManager_C.SetNewDynamicPath
// 0x0328 (0x0328 - 0x0000)
struct AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath final
{
public:
	class FName                                   PathID;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RandomStartDistance;                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Loop;                                              // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UpdatePathLocation;                                // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                NewLocation;                                       // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   local_RequestedPathID;                             // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   local_PatchedPathID;                               // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameplayCamerasSubsystem*              CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldEnableBattleCameraMovements_Enable; // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTurnCount_TurnCount;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraAnimationParams                 K2Node_MakeStruct_CameraAnimationParams;           // 0x0060(0x0048)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCameraAnimationHandle                 CallFunc_PlayCameraAnimation_ReturnValue;          // 0x00C0(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            K2Node_DynamicCast_AsBP_J_RPG_Controller_World;    // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0100(0x0010)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0110(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0120(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0168(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01C0(0x0010)()
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x01D8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x02E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x02F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_DynamicCameraPath_C*           CallFunc_Map_Find_Value;                           // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath) == 0x000008, "Wrong alignment on AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath");
static_assert(sizeof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath) == 0x000328, "Wrong size on AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, PathID) == 0x000000, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::PathID' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, RandomStartDistance) == 0x000008, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::RandomStartDistance' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, Loop) == 0x000009, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::Loop' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, UpdatePathLocation) == 0x00000A, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::UpdatePathLocation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, NewLocation) == 0x000010, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::NewLocation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, local_RequestedPathID) == 0x000028, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::local_RequestedPathID' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, local_PatchedPathID) == 0x000030, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::local_PatchedPathID' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000038, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, CallFunc_ShouldEnableBattleCameraMovements_Enable) == 0x000040, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::CallFunc_ShouldEnableBattleCameraMovements_Enable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000041, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, Temp_name_Variable) == 0x000044, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, CallFunc_GetBattleManager_ReturnValue) == 0x000050, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, CallFunc_GetTurnCount_TurnCount) == 0x000058, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::CallFunc_GetTurnCount_TurnCount' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, K2Node_MakeStruct_CameraAnimationParams) == 0x000060, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::K2Node_MakeStruct_CameraAnimationParams' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, Temp_bool_Variable) == 0x0000A9, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, CallFunc_GetPlayerController_ReturnValue) == 0x0000B0, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, K2Node_Select_Default) == 0x0000B8, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, CallFunc_PlayCameraAnimation_ReturnValue) == 0x0000C0, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::CallFunc_PlayCameraAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, K2Node_SwitchName_CmpSuccess) == 0x0000C4, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, CallFunc_Conv_NameToString_ReturnValue) == 0x0000C8, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, CallFunc_GetPlayerController_ReturnValue_1) == 0x0000D8, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, K2Node_DynamicCast_AsBP_J_RPG_Controller_World) == 0x0000E0, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::K2Node_DynamicCast_AsBP_J_RPG_Controller_World' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, CallFunc_Conv_VectorToString_ReturnValue) == 0x0000F0, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, CallFunc_Conv_StringToText_ReturnValue) == 0x000100, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, CallFunc_Conv_NameToText_ReturnValue) == 0x000110, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, K2Node_MakeStruct_FormatArgumentData) == 0x000120, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, K2Node_MakeStruct_FormatArgumentData_1) == 0x000168, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, K2Node_MakeArray_Array) == 0x0001B0, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, CallFunc_Format_ReturnValue) == 0x0001C0, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, CallFunc_GetSplineLength_ReturnValue) == 0x0001D0, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0001D8, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0002D0, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, CallFunc_RandomFloatInRange_ReturnValue) == 0x0002D8, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, CallFunc_Conv_NameToString_ReturnValue_1) == 0x0002E0, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0002F0, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, CallFunc_Concat_StrStr_ReturnValue) == 0x0002F8, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, CallFunc_SelectFloat_ReturnValue) == 0x000308, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, CallFunc_Map_Find_Value) == 0x000310, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, CallFunc_Map_Find_ReturnValue) == 0x000318, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000320, "Member 'AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function AC_jRPG_DynamicCameraManager.AC_jRPG_DynamicCameraManager_C.StoreDynamicPathActors
// 0x0100 (0x0100 - 0x0000)
struct AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors final
{
public:
	TArray<class ABP_jRPG_DynamicCameraPath_C*>   local_PrefabCameraList;                            // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_wildcard_Variable;                            // 0x0020(0x0010)(ReferenceParm)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACineCameraActor*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_DynamicCameraPath_C*           K2Node_DynamicCast_AsBP_J_RPG_Dynamic_Camera_Path; // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllChildActors_ChildActors;            // 0x00C8(0x0010)(ReferenceParm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_DynamicCameraPath_C*           CallFunc_Array_Get_Item_1;                         // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors) == 0x000010, "Wrong alignment on AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors");
static_assert(sizeof(AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors) == 0x000100, "Wrong size on AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors, local_PrefabCameraList) == 0x000000, "Member 'AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors::local_PrefabCameraList' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors, Temp_int_Array_Index_Variable) == 0x000010, "Member 'AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors, Temp_wildcard_Variable) == 0x000020, "Member 'AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000098, "Member 'AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors, Temp_int_Array_Index_Variable_1) == 0x0000A0, "Member 'AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000A8, "Member 'AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors, K2Node_DynamicCast_AsBP_J_RPG_Dynamic_Camera_Path) == 0x0000B8, "Member 'AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors::K2Node_DynamicCast_AsBP_J_RPG_Dynamic_Camera_Path' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors, CallFunc_Array_Add_ReturnValue) == 0x0000C4, "Member 'AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors, CallFunc_GetAllChildActors_ChildActors) == 0x0000C8, "Member 'AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors::CallFunc_GetAllChildActors_ChildActors' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors, CallFunc_GetPlayerController_ReturnValue) == 0x0000D8, "Member 'AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors, CallFunc_Array_Get_Item_1) == 0x0000E0, "Member 'AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors, CallFunc_Array_Length_ReturnValue_1) == 0x0000E8, "Member 'AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors, CallFunc_Less_IntInt_ReturnValue) == 0x0000EC, "Member 'AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors, Temp_int_Loop_Counter_Variable_1) == 0x0000F0, "Member 'AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000F4, "Member 'AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000F8, "Member 'AC_jRPG_DynamicCameraManager_C_StoreDynamicPathActors::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_DynamicCameraManager.AC_jRPG_DynamicCameraManager_C.UpdateCameraLocAndRot
// 0x01B0 (0x01B0 - 0x0000)
struct AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot final
{
public:
	double                                        PathTime;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTargeting_0;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldEnableBattleCameraMovements_Enable; // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraFocusPoint_FocusLocation;        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue_1;        // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPathLocationAtDistance_WorldLocation;  // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x00B0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot) == 0x000008, "Wrong alignment on AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot");
static_assert(sizeof(AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot) == 0x0001B0, "Wrong size on AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot, PathTime) == 0x000000, "Member 'AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot::PathTime' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot, IsTargeting_0) == 0x000008, "Member 'AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot::IsTargeting_0' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot, Temp_bool_Variable) == 0x000009, "Member 'AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000010, "Member 'AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000028, "Member 'AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot, CallFunc_ShouldEnableBattleCameraMovements_Enable) == 0x00002A, "Member 'AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot::CallFunc_ShouldEnableBattleCameraMovements_Enable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot, Temp_real_Variable) == 0x000030, "Member 'AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot, K2Node_Select_Default) == 0x000040, "Member 'AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot, CallFunc_GetCameraFocusPoint_FocusLocation) == 0x000048, "Member 'AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot::CallFunc_GetCameraFocusPoint_FocusLocation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot, CallFunc_FindLookAtRotation_ReturnValue) == 0x000078, "Member 'AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot, CallFunc_K2_SetActorRotation_ReturnValue_1) == 0x000090, "Member 'AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot::CallFunc_K2_SetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot, CallFunc_GetPathLocationAtDistance_WorldLocation) == 0x000098, "Member 'AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot::CallFunc_GetPathLocationAtDistance_WorldLocation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0000B0, "Member 'AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0001A8, "Member 'AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

}

