#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Face_AnimBP_Human_Battle

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Face_AnimBP_Human_Battle.Face_AnimBP_Human_Battle_C.ExecuteUbergraph_Face_AnimBP_Human_Battle
// 0x0020 (0x0020 - 0x0000)
struct Face_AnimBP_Human_Battle_C_ExecuteUbergraph_Face_AnimBP_Human_Battle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_BlinkStrength_ImplicitCast;     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Face_AnimBP_Human_Battle_C_ExecuteUbergraph_Face_AnimBP_Human_Battle) == 0x000008, "Wrong alignment on Face_AnimBP_Human_Battle_C_ExecuteUbergraph_Face_AnimBP_Human_Battle");
static_assert(sizeof(Face_AnimBP_Human_Battle_C_ExecuteUbergraph_Face_AnimBP_Human_Battle) == 0x000020, "Wrong size on Face_AnimBP_Human_Battle_C_ExecuteUbergraph_Face_AnimBP_Human_Battle");
static_assert(offsetof(Face_AnimBP_Human_Battle_C_ExecuteUbergraph_Face_AnimBP_Human_Battle, EntryPoint) == 0x000000, "Member 'Face_AnimBP_Human_Battle_C_ExecuteUbergraph_Face_AnimBP_Human_Battle::EntryPoint' has a wrong offset!");
static_assert(offsetof(Face_AnimBP_Human_Battle_C_ExecuteUbergraph_Face_AnimBP_Human_Battle, CallFunc_RandomFloatInRange_ReturnValue) == 0x000008, "Member 'Face_AnimBP_Human_Battle_C_ExecuteUbergraph_Face_AnimBP_Human_Battle::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Face_AnimBP_Human_Battle_C_ExecuteUbergraph_Face_AnimBP_Human_Battle, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000010, "Member 'Face_AnimBP_Human_Battle_C_ExecuteUbergraph_Face_AnimBP_Human_Battle::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Face_AnimBP_Human_Battle_C_ExecuteUbergraph_Face_AnimBP_Human_Battle, CallFunc_Delay_Duration_ImplicitCast) == 0x000018, "Member 'Face_AnimBP_Human_Battle_C_ExecuteUbergraph_Face_AnimBP_Human_Battle::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Face_AnimBP_Human_Battle_C_ExecuteUbergraph_Face_AnimBP_Human_Battle, K2Node_VariableSet_BlinkStrength_ImplicitCast) == 0x00001C, "Member 'Face_AnimBP_Human_Battle_C_ExecuteUbergraph_Face_AnimBP_Human_Battle::K2Node_VariableSet_BlinkStrength_ImplicitCast' has a wrong offset!");

// Function Face_AnimBP_Human_Battle.Face_AnimBP_Human_Battle_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct Face_AnimBP_Human_Battle_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Face_AnimBP_Human_Battle_C_AnimGraph) == 0x000008, "Wrong alignment on Face_AnimBP_Human_Battle_C_AnimGraph");
static_assert(sizeof(Face_AnimBP_Human_Battle_C_AnimGraph) == 0x000010, "Wrong size on Face_AnimBP_Human_Battle_C_AnimGraph");
static_assert(offsetof(Face_AnimBP_Human_Battle_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'Face_AnimBP_Human_Battle_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

