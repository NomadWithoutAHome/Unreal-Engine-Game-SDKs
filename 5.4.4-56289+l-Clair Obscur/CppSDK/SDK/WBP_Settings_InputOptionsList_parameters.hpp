#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Settings_InputOptionsList

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "EModalUIResponse_structs.hpp"


namespace SDK::Params
{

// Function WBP_Settings_InputOptionsList.WBP_Settings_InputOptionsList_C.ApplySettings
// 0x0110 (0x0110 - 0x0000)
struct WBP_Settings_InputOptionsList_C_ApplySettings final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapPlayerKeyArgs                      K2Node_MakeStruct_MapPlayerKeyArgs;                // 0x0018(0x0040)()
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UEnhancedInputLocalPlayerSubsystem*     CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_GetUserSettings_self_CastInput; // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnhancedInputUserSettings*             CallFunc_GetUserSettings_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_Settings_MappingOptionEntry_C*     K2Node_DynamicCast_AsWBP_Settings_Mapping_Option_Entry; // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapPlayerKeyArgs                      CallFunc_GetNewMapping_NewMapping;                 // 0x00A0(0x0040)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MapPlayerKey_FailureReason;               // 0x00E8(0x0020)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_InputOptionsList_C_ApplySettings) == 0x000008, "Wrong alignment on WBP_Settings_InputOptionsList_C_ApplySettings");
static_assert(sizeof(WBP_Settings_InputOptionsList_C_ApplySettings) == 0x000110, "Wrong size on WBP_Settings_InputOptionsList_C_ApplySettings");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ApplySettings, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_Settings_InputOptionsList_C_ApplySettings::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ApplySettings, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_Settings_InputOptionsList_C_ApplySettings::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ApplySettings, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_Settings_InputOptionsList_C_ApplySettings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ApplySettings, CallFunc_MakeLiteralName_ReturnValue) == 0x00000C, "Member 'WBP_Settings_InputOptionsList_C_ApplySettings::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ApplySettings, K2Node_MakeStruct_MapPlayerKeyArgs) == 0x000018, "Member 'WBP_Settings_InputOptionsList_C_ApplySettings::K2Node_MakeStruct_MapPlayerKeyArgs' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ApplySettings, CallFunc_GetAllChildren_ReturnValue) == 0x000058, "Member 'WBP_Settings_InputOptionsList_C_ApplySettings::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ApplySettings, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000068, "Member 'WBP_Settings_InputOptionsList_C_ApplySettings::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ApplySettings, CallFunc_Array_Get_Item) == 0x000070, "Member 'WBP_Settings_InputOptionsList_C_ApplySettings::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ApplySettings, CallFunc_GetUserSettings_self_CastInput) == 0x000078, "Member 'WBP_Settings_InputOptionsList_C_ApplySettings::CallFunc_GetUserSettings_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ApplySettings, CallFunc_GetUserSettings_ReturnValue) == 0x000088, "Member 'WBP_Settings_InputOptionsList_C_ApplySettings::CallFunc_GetUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ApplySettings, K2Node_DynamicCast_AsWBP_Settings_Mapping_Option_Entry) == 0x000090, "Member 'WBP_Settings_InputOptionsList_C_ApplySettings::K2Node_DynamicCast_AsWBP_Settings_Mapping_Option_Entry' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ApplySettings, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'WBP_Settings_InputOptionsList_C_ApplySettings::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ApplySettings, CallFunc_GetNewMapping_NewMapping) == 0x0000A0, "Member 'WBP_Settings_InputOptionsList_C_ApplySettings::CallFunc_GetNewMapping_NewMapping' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ApplySettings, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'WBP_Settings_InputOptionsList_C_ApplySettings::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ApplySettings, CallFunc_MapPlayerKey_FailureReason) == 0x0000E8, "Member 'WBP_Settings_InputOptionsList_C_ApplySettings::CallFunc_MapPlayerKey_FailureReason' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ApplySettings, CallFunc_Less_IntInt_ReturnValue) == 0x000108, "Member 'WBP_Settings_InputOptionsList_C_ApplySettings::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Settings_InputOptionsList.WBP_Settings_InputOptionsList_C.AreMappingsDirty
// 0x0090 (0x0090 - 0x0000)
struct WBP_Settings_InputOptionsList_C_AreMappingsDirty final
{
public:
	bool                                          IsDirty;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Settings_MappingOptionEntry_C*     K2Node_DynamicCast_AsWBP_Settings_Mapping_Option_Entry; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapPlayerKeyArgs                      CallFunc_GetNewMapping_NewMapping;                 // 0x0048(0x0040)()
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_InputOptionsList_C_AreMappingsDirty) == 0x000008, "Wrong alignment on WBP_Settings_InputOptionsList_C_AreMappingsDirty");
static_assert(sizeof(WBP_Settings_InputOptionsList_C_AreMappingsDirty) == 0x000090, "Wrong size on WBP_Settings_InputOptionsList_C_AreMappingsDirty");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_AreMappingsDirty, IsDirty) == 0x000000, "Member 'WBP_Settings_InputOptionsList_C_AreMappingsDirty::IsDirty' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_AreMappingsDirty, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_Settings_InputOptionsList_C_AreMappingsDirty::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_AreMappingsDirty, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_Settings_InputOptionsList_C_AreMappingsDirty::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_AreMappingsDirty, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_Settings_InputOptionsList_C_AreMappingsDirty::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_AreMappingsDirty, CallFunc_GetAllChildren_ReturnValue) == 0x000010, "Member 'WBP_Settings_InputOptionsList_C_AreMappingsDirty::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_AreMappingsDirty, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_Settings_InputOptionsList_C_AreMappingsDirty::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_AreMappingsDirty, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_Settings_InputOptionsList_C_AreMappingsDirty::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_AreMappingsDirty, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WBP_Settings_InputOptionsList_C_AreMappingsDirty::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_AreMappingsDirty, K2Node_DynamicCast_AsWBP_Settings_Mapping_Option_Entry) == 0x000038, "Member 'WBP_Settings_InputOptionsList_C_AreMappingsDirty::K2Node_DynamicCast_AsWBP_Settings_Mapping_Option_Entry' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_AreMappingsDirty, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_Settings_InputOptionsList_C_AreMappingsDirty::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_AreMappingsDirty, CallFunc_GetNewMapping_NewMapping) == 0x000048, "Member 'WBP_Settings_InputOptionsList_C_AreMappingsDirty::CallFunc_GetNewMapping_NewMapping' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_AreMappingsDirty, CallFunc_NotEqual_NameName_ReturnValue) == 0x000088, "Member 'WBP_Settings_InputOptionsList_C_AreMappingsDirty::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");

// Function WBP_Settings_InputOptionsList.WBP_Settings_InputOptionsList_C.AreMappingsValid
// 0x0098 (0x0098 - 0x0000)
struct WBP_Settings_InputOptionsList_C_AreMappingsValid final
{
public:
	bool                                          IsValid;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Settings_MappingOptionEntry_C*     K2Node_DynamicCast_AsWBP_Settings_Mapping_Option_Entry; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapPlayerKeyArgs                      CallFunc_GetNewMapping_NewMapping;                 // 0x0050(0x0040)()
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsValid_ReturnValue;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_InputOptionsList_C_AreMappingsValid) == 0x000008, "Wrong alignment on WBP_Settings_InputOptionsList_C_AreMappingsValid");
static_assert(sizeof(WBP_Settings_InputOptionsList_C_AreMappingsValid) == 0x000098, "Wrong size on WBP_Settings_InputOptionsList_C_AreMappingsValid");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_AreMappingsValid, IsValid) == 0x000000, "Member 'WBP_Settings_InputOptionsList_C_AreMappingsValid::IsValid' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_AreMappingsValid, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_Settings_InputOptionsList_C_AreMappingsValid::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_AreMappingsValid, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_Settings_InputOptionsList_C_AreMappingsValid::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_AreMappingsValid, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_Settings_InputOptionsList_C_AreMappingsValid::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_AreMappingsValid, CallFunc_MakeLiteralName_ReturnValue) == 0x000010, "Member 'WBP_Settings_InputOptionsList_C_AreMappingsValid::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_AreMappingsValid, CallFunc_GetAllChildren_ReturnValue) == 0x000018, "Member 'WBP_Settings_InputOptionsList_C_AreMappingsValid::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_AreMappingsValid, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WBP_Settings_InputOptionsList_C_AreMappingsValid::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_AreMappingsValid, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_Settings_InputOptionsList_C_AreMappingsValid::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_AreMappingsValid, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'WBP_Settings_InputOptionsList_C_AreMappingsValid::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_AreMappingsValid, K2Node_DynamicCast_AsWBP_Settings_Mapping_Option_Entry) == 0x000040, "Member 'WBP_Settings_InputOptionsList_C_AreMappingsValid::K2Node_DynamicCast_AsWBP_Settings_Mapping_Option_Entry' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_AreMappingsValid, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WBP_Settings_InputOptionsList_C_AreMappingsValid::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_AreMappingsValid, CallFunc_GetNewMapping_NewMapping) == 0x000050, "Member 'WBP_Settings_InputOptionsList_C_AreMappingsValid::CallFunc_GetNewMapping_NewMapping' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_AreMappingsValid, CallFunc_NotEqual_NameName_ReturnValue) == 0x000090, "Member 'WBP_Settings_InputOptionsList_C_AreMappingsValid::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_AreMappingsValid, CallFunc_Key_IsValid_ReturnValue) == 0x000091, "Member 'WBP_Settings_InputOptionsList_C_AreMappingsValid::CallFunc_Key_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_AreMappingsValid, CallFunc_Not_PreBool_ReturnValue) == 0x000092, "Member 'WBP_Settings_InputOptionsList_C_AreMappingsValid::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_AreMappingsValid, CallFunc_BooleanAND_ReturnValue) == 0x000093, "Member 'WBP_Settings_InputOptionsList_C_AreMappingsValid::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_Settings_InputOptionsList.WBP_Settings_InputOptionsList_C.BindOnOptionEntryFocused
// 0x0010 (0x0010 - 0x0000)
struct WBP_Settings_InputOptionsList_C_BindOnOptionEntryFocused final
{
public:
	TDelegate<void(class UWBP_Settings_OptionEntry_C* Widget)> Event;                                // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_InputOptionsList_C_BindOnOptionEntryFocused) == 0x000004, "Wrong alignment on WBP_Settings_InputOptionsList_C_BindOnOptionEntryFocused");
static_assert(sizeof(WBP_Settings_InputOptionsList_C_BindOnOptionEntryFocused) == 0x000010, "Wrong size on WBP_Settings_InputOptionsList_C_BindOnOptionEntryFocused");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_BindOnOptionEntryFocused, Event) == 0x000000, "Member 'WBP_Settings_InputOptionsList_C_BindOnOptionEntryFocused::Event' has a wrong offset!");

// Function WBP_Settings_InputOptionsList.WBP_Settings_InputOptionsList_C.CheckMappingConflict
// 0x0190 (0x0190 - 0x0000)
struct WBP_Settings_InputOptionsList_C_CheckMappingConflict final
{
public:
	class UWBP_Settings_MappingOptionEntry_C*     MappingEntry;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMapPlayerKeyArgs                      NewMapping;                                        // 0x0008(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<class UWBP_Settings_MappingOptionEntry_C*> LocalConflictingMappings;                      // 0x0048(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetMappingName_MappingName;               // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetConflictCategories_ConflictCategories; // 0x0080(0x0010)(ReferenceParm)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0098(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0010)()
	class UWBP_ModalPopup_C*                      CallFunc_CreateModalWindow_OutputPin;              // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EModalUIResponse InUserResponse)> K2Node_CreateDelegate_OutputDelegate;           // 0x010C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0120(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Settings_MappingOptionEntry_C*     K2Node_DynamicCast_AsWBP_Settings_Mapping_Option_Entry; // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsKeyConflictingWithCurrentMappings_IsConflicting; // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsKeyConflictingWithNewMappings_IsConflicting; // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetConflictCategories_ConflictCategories_1; // 0x0168(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0185(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0186(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0187(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_InputOptionsList_C_CheckMappingConflict) == 0x000008, "Wrong alignment on WBP_Settings_InputOptionsList_C_CheckMappingConflict");
static_assert(sizeof(WBP_Settings_InputOptionsList_C_CheckMappingConflict) == 0x000190, "Wrong size on WBP_Settings_InputOptionsList_C_CheckMappingConflict");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, MappingEntry) == 0x000000, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::MappingEntry' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, NewMapping) == 0x000008, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::NewMapping' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, LocalConflictingMappings) == 0x000048, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::LocalConflictingMappings' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, Temp_int_Array_Index_Variable) == 0x000060, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, Temp_bool_True_if_break_was_hit_Variable) == 0x000064, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, Temp_int_Loop_Counter_Variable_1) == 0x000068, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, CallFunc_Add_IntInt_ReturnValue_1) == 0x00006C, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, CallFunc_Not_PreBool_ReturnValue) == 0x000070, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, Temp_int_Array_Index_Variable_1) == 0x000074, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, CallFunc_GetMappingName_MappingName) == 0x000078, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::CallFunc_GetMappingName_MappingName' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, CallFunc_GetConflictCategories_ConflictCategories) == 0x000080, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::CallFunc_GetConflictCategories_ConflictCategories' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, CallFunc_NotEqual_NameName_ReturnValue) == 0x000090, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, CallFunc_Not_PreBool_ReturnValue_1) == 0x000091, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, K2Node_MakeStruct_FormatArgumentData) == 0x000098, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, K2Node_MakeArray_Array) == 0x0000E0, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, CallFunc_CreateModalWindow_OutputPin) == 0x000100, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::CallFunc_CreateModalWindow_OutputPin' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, CallFunc_Array_IsEmpty_ReturnValue) == 0x000108, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, K2Node_CreateDelegate_OutputDelegate) == 0x00010C, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, CallFunc_Not_PreBool_ReturnValue_2) == 0x00011C, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, CallFunc_GetAllChildren_ReturnValue) == 0x000120, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, CallFunc_Array_Length_ReturnValue) == 0x000130, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, CallFunc_Array_Get_Item) == 0x000138, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, CallFunc_Less_IntInt_ReturnValue) == 0x000140, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, K2Node_DynamicCast_AsWBP_Settings_Mapping_Option_Entry) == 0x000148, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::K2Node_DynamicCast_AsWBP_Settings_Mapping_Option_Entry' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, K2Node_DynamicCast_bSuccess) == 0x000150, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, CallFunc_Array_Add_ReturnValue) == 0x000154, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, CallFunc_IsKeyConflictingWithCurrentMappings_IsConflicting) == 0x000158, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::CallFunc_IsKeyConflictingWithCurrentMappings_IsConflicting' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, CallFunc_Array_Add_ReturnValue_1) == 0x00015C, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, CallFunc_IsKeyConflictingWithNewMappings_IsConflicting) == 0x000160, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::CallFunc_IsKeyConflictingWithNewMappings_IsConflicting' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, CallFunc_GetConflictCategories_ConflictCategories_1) == 0x000168, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::CallFunc_GetConflictCategories_ConflictCategories_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, CallFunc_Array_Get_Item_1) == 0x000178, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, CallFunc_Array_Length_ReturnValue_1) == 0x000180, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000184, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, CallFunc_Less_IntInt_ReturnValue_1) == 0x000185, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, CallFunc_BooleanAND_ReturnValue) == 0x000186, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, CallFunc_BooleanAND_ReturnValue_1) == 0x000187, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, CallFunc_Array_Contains_ReturnValue) == 0x000188, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_CheckMappingConflict, CallFunc_BooleanOR_ReturnValue) == 0x000189, "Member 'WBP_Settings_InputOptionsList_C_CheckMappingConflict::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_Settings_InputOptionsList.WBP_Settings_InputOptionsList_C.ExecuteUbergraph_WBP_Settings_InputOptionsList
// 0x0004 (0x0004 - 0x0000)
struct WBP_Settings_InputOptionsList_C_ExecuteUbergraph_WBP_Settings_InputOptionsList final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_InputOptionsList_C_ExecuteUbergraph_WBP_Settings_InputOptionsList) == 0x000004, "Wrong alignment on WBP_Settings_InputOptionsList_C_ExecuteUbergraph_WBP_Settings_InputOptionsList");
static_assert(sizeof(WBP_Settings_InputOptionsList_C_ExecuteUbergraph_WBP_Settings_InputOptionsList) == 0x000004, "Wrong size on WBP_Settings_InputOptionsList_C_ExecuteUbergraph_WBP_Settings_InputOptionsList");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ExecuteUbergraph_WBP_Settings_InputOptionsList, EntryPoint) == 0x000000, "Member 'WBP_Settings_InputOptionsList_C_ExecuteUbergraph_WBP_Settings_InputOptionsList::EntryPoint' has a wrong offset!");

// Function WBP_Settings_InputOptionsList.WBP_Settings_InputOptionsList_C.IsKeyConflictingWithCurrentMappings
// 0x0190 (0x0190 - 0x0000)
struct WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings final
{
public:
	struct FMapPlayerKeyArgs                      NewMapPlayerKeyArgs;                               // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	const class UWBP_Settings_MappingOptionEntry_C* MappingEntry;                                    // 0x0040(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          IsConflicting;                                     // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKeyMappingRow                         CallFunc_GetKeyMapping_KeyMappings;                // 0x0050(0x0050)()
	struct FMapPlayerKeyArgs                      CallFunc_GetNewMapping_NewMapping;                 // 0x00A0(0x0040)()
	TArray<struct FPlayerKeyMapping>              CallFunc_Set_ToArray_Result;                       // 0x00E0(0x0010)(ReferenceParm)
	struct FPlayerKeyMapping                      CallFunc_Array_Get_Item;                           // 0x00F0(0x0080)(HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsValid_ReturnValue;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_172[0x2];                                      // 0x0172(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNameValid_ReturnValue;                  // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x017B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsValid_ReturnValue_1;                // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x017E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17F[0x1];                                      // 0x017F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings) == 0x000008, "Wrong alignment on WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings");
static_assert(sizeof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings) == 0x000190, "Wrong size on WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings, NewMapPlayerKeyArgs) == 0x000000, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings::NewMapPlayerKeyArgs' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings, MappingEntry) == 0x000040, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings::MappingEntry' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings, IsConflicting) == 0x000048, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings::IsConflicting' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings, CallFunc_GetKeyMapping_KeyMappings) == 0x000050, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings::CallFunc_GetKeyMapping_KeyMappings' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings, CallFunc_GetNewMapping_NewMapping) == 0x0000A0, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings::CallFunc_GetNewMapping_NewMapping' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings, CallFunc_Set_ToArray_Result) == 0x0000E0, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings, CallFunc_Key_IsValid_ReturnValue) == 0x000170, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings::CallFunc_Key_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings, CallFunc_Not_PreBool_ReturnValue) == 0x000171, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings, CallFunc_Array_Length_ReturnValue) == 0x000174, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000178, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings, CallFunc_NotEqual_NameName_ReturnValue) == 0x000179, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings, CallFunc_IsNameValid_ReturnValue) == 0x00017A, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings::CallFunc_IsNameValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings, CallFunc_BooleanAND_ReturnValue) == 0x00017B, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings, CallFunc_Key_IsValid_ReturnValue_1) == 0x00017C, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings::CallFunc_Key_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00017D, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings, CallFunc_BooleanAND_ReturnValue_1) == 0x00017E, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings, Temp_int_Loop_Counter_Variable) == 0x000180, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings, CallFunc_Less_IntInt_ReturnValue) == 0x000184, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings, CallFunc_Add_IntInt_ReturnValue) == 0x000188, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithCurrentMappings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Settings_InputOptionsList.WBP_Settings_InputOptionsList_C.IsKeyConflictingWithNewMappings
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings final
{
public:
	struct FMapPlayerKeyArgs                      NewMapPlayerKeyArgs;                               // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UWBP_Settings_MappingOptionEntry_C*     MappingEntry;                                      // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsConflicting;                                     // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapPlayerKeyArgs                      CallFunc_GetNewMapping_NewMapping;                 // 0x0050(0x0040)()
	bool                                          CallFunc_Key_IsValid_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNameValid_ReturnValue;                  // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0097(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings) == 0x000008, "Wrong alignment on WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings");
static_assert(sizeof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings) == 0x0000A0, "Wrong size on WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings, NewMapPlayerKeyArgs) == 0x000000, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings::NewMapPlayerKeyArgs' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings, MappingEntry) == 0x000040, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings::MappingEntry' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings, IsConflicting) == 0x000048, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings::IsConflicting' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings, CallFunc_GetNewMapping_NewMapping) == 0x000050, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings::CallFunc_GetNewMapping_NewMapping' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings, CallFunc_Key_IsValid_ReturnValue) == 0x000090, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings::CallFunc_Key_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000091, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000092, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings, CallFunc_BooleanAND_ReturnValue) == 0x000093, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000094, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings, CallFunc_BooleanAND_ReturnValue_1) == 0x000095, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings, CallFunc_IsNameValid_ReturnValue) == 0x000096, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings::CallFunc_IsNameValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings, CallFunc_Not_PreBool_ReturnValue) == 0x000097, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings, CallFunc_BooleanAND_ReturnValue_2) == 0x000098, "Member 'WBP_Settings_InputOptionsList_C_IsKeyConflictingWithNewMappings::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function WBP_Settings_InputOptionsList.WBP_Settings_InputOptionsList_C.LoadUserSettings
// 0x0138 (0x0138 - 0x0000)
struct WBP_Settings_InputOptionsList_C_LoadUserSettings final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_Settings_MappingOptionEntry_C* MappingEntry, const struct FMapPlayerKeyArgs& NewMapping)> K2Node_CreateDelegate_OutputDelegate; // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnhancedInputLocalPlayerSubsystem*     CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_GetUserSettings_self_CastInput; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnhancedInputUserSettings*             CallFunc_GetUserSettings_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UEnhancedPlayerMappableKeyProfile*      CallFunc_GetCurrentKeyProfile_ReturnValue;         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FKeyMappingRow>      CallFunc_GetPlayerMappingRows_ReturnValue;         // 0x0060(0x0050)(ConstParm)
	class UWBP_Settings_MappingOptionEntry_C*     K2Node_DynamicCast_AsWBP_Settings_Mapping_Option_Entry; // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetMappingName_MappingName;               // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKeyMappingRow                         CallFunc_Map_Find_Value;                           // 0x00D0(0x0050)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UWBP_Settings_MappingOptionEntry_C* Widget)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0124(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_InputOptionsList_C_LoadUserSettings) == 0x000008, "Wrong alignment on WBP_Settings_InputOptionsList_C_LoadUserSettings");
static_assert(sizeof(WBP_Settings_InputOptionsList_C_LoadUserSettings) == 0x000138, "Wrong size on WBP_Settings_InputOptionsList_C_LoadUserSettings");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_LoadUserSettings, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_Settings_InputOptionsList_C_LoadUserSettings::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_LoadUserSettings, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_Settings_InputOptionsList_C_LoadUserSettings::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_LoadUserSettings, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_Settings_InputOptionsList_C_LoadUserSettings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_LoadUserSettings, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'WBP_Settings_InputOptionsList_C_LoadUserSettings::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_LoadUserSettings, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000020, "Member 'WBP_Settings_InputOptionsList_C_LoadUserSettings::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_LoadUserSettings, CallFunc_GetUserSettings_self_CastInput) == 0x000028, "Member 'WBP_Settings_InputOptionsList_C_LoadUserSettings::CallFunc_GetUserSettings_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_LoadUserSettings, CallFunc_GetUserSettings_ReturnValue) == 0x000038, "Member 'WBP_Settings_InputOptionsList_C_LoadUserSettings::CallFunc_GetUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_LoadUserSettings, CallFunc_GetAllChildren_ReturnValue) == 0x000040, "Member 'WBP_Settings_InputOptionsList_C_LoadUserSettings::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_LoadUserSettings, CallFunc_GetCurrentKeyProfile_ReturnValue) == 0x000050, "Member 'WBP_Settings_InputOptionsList_C_LoadUserSettings::CallFunc_GetCurrentKeyProfile_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_LoadUserSettings, CallFunc_Array_Get_Item) == 0x000058, "Member 'WBP_Settings_InputOptionsList_C_LoadUserSettings::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_LoadUserSettings, CallFunc_GetPlayerMappingRows_ReturnValue) == 0x000060, "Member 'WBP_Settings_InputOptionsList_C_LoadUserSettings::CallFunc_GetPlayerMappingRows_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_LoadUserSettings, K2Node_DynamicCast_AsWBP_Settings_Mapping_Option_Entry) == 0x0000B0, "Member 'WBP_Settings_InputOptionsList_C_LoadUserSettings::K2Node_DynamicCast_AsWBP_Settings_Mapping_Option_Entry' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_LoadUserSettings, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'WBP_Settings_InputOptionsList_C_LoadUserSettings::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_LoadUserSettings, CallFunc_Array_Length_ReturnValue) == 0x0000BC, "Member 'WBP_Settings_InputOptionsList_C_LoadUserSettings::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_LoadUserSettings, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'WBP_Settings_InputOptionsList_C_LoadUserSettings::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_LoadUserSettings, CallFunc_GetMappingName_MappingName) == 0x0000C4, "Member 'WBP_Settings_InputOptionsList_C_LoadUserSettings::CallFunc_GetMappingName_MappingName' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_LoadUserSettings, CallFunc_Map_Find_Value) == 0x0000D0, "Member 'WBP_Settings_InputOptionsList_C_LoadUserSettings::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_LoadUserSettings, CallFunc_Map_Find_ReturnValue) == 0x000120, "Member 'WBP_Settings_InputOptionsList_C_LoadUserSettings::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_LoadUserSettings, K2Node_CreateDelegate_OutputDelegate_1) == 0x000124, "Member 'WBP_Settings_InputOptionsList_C_LoadUserSettings::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function WBP_Settings_InputOptionsList.WBP_Settings_InputOptionsList_C.OnMappingEntryFocused
// 0x0008 (0x0008 - 0x0000)
struct WBP_Settings_InputOptionsList_C_OnMappingEntryFocused final
{
public:
	class UWBP_Settings_MappingOptionEntry_C*     Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_InputOptionsList_C_OnMappingEntryFocused) == 0x000008, "Wrong alignment on WBP_Settings_InputOptionsList_C_OnMappingEntryFocused");
static_assert(sizeof(WBP_Settings_InputOptionsList_C_OnMappingEntryFocused) == 0x000008, "Wrong size on WBP_Settings_InputOptionsList_C_OnMappingEntryFocused");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_OnMappingEntryFocused, Widget) == 0x000000, "Member 'WBP_Settings_InputOptionsList_C_OnMappingEntryFocused::Widget' has a wrong offset!");

// Function WBP_Settings_InputOptionsList.WBP_Settings_InputOptionsList_C.OnUserResponseToInputConflict
// 0x0028 (0x0028 - 0x0000)
struct WBP_Settings_InputOptionsList_C_OnUserResponseToInputConflict final
{
public:
	EModalUIResponse                              InUserResponse;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Settings_MappingOptionEntry_C*     CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_InputOptionsList_C_OnUserResponseToInputConflict) == 0x000008, "Wrong alignment on WBP_Settings_InputOptionsList_C_OnUserResponseToInputConflict");
static_assert(sizeof(WBP_Settings_InputOptionsList_C_OnUserResponseToInputConflict) == 0x000028, "Wrong size on WBP_Settings_InputOptionsList_C_OnUserResponseToInputConflict");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_OnUserResponseToInputConflict, InUserResponse) == 0x000000, "Member 'WBP_Settings_InputOptionsList_C_OnUserResponseToInputConflict::InUserResponse' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_OnUserResponseToInputConflict, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'WBP_Settings_InputOptionsList_C_OnUserResponseToInputConflict::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_OnUserResponseToInputConflict, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_Settings_InputOptionsList_C_OnUserResponseToInputConflict::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_OnUserResponseToInputConflict, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_Settings_InputOptionsList_C_OnUserResponseToInputConflict::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_OnUserResponseToInputConflict, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_Settings_InputOptionsList_C_OnUserResponseToInputConflict::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_OnUserResponseToInputConflict, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'WBP_Settings_InputOptionsList_C_OnUserResponseToInputConflict::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_OnUserResponseToInputConflict, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_Settings_InputOptionsList_C_OnUserResponseToInputConflict::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_OnUserResponseToInputConflict, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'WBP_Settings_InputOptionsList_C_OnUserResponseToInputConflict::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Settings_InputOptionsList.WBP_Settings_InputOptionsList_C.ResetToDefault
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_Settings_InputOptionsList_C_ResetToDefault final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnhancedInputLocalPlayerSubsystem*     CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_GetUserSettings_self_CastInput; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnhancedInputUserSettings*             CallFunc_GetUserSettings_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FGameplayTag                           CallFunc_GetCurrentKeyProfileIdentifier_ReturnValue; // 0x0040(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_ResetKeyProfileToDefault_FailureReason;   // 0x0050(0x0020)()
	class UWBP_Settings_MappingOptionEntry_C*     K2Node_DynamicCast_AsWBP_Settings_Mapping_Option_Entry; // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnhancedInputLocalPlayerSubsystem*     CallFunc_GetLocalPlayerSubsystem_ReturnValue_1;    // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_GetUserSettings_self_CastInput_1; // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnhancedInputUserSettings*             CallFunc_GetUserSettings_ReturnValue_1;            // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_InputOptionsList_C_ResetToDefault) == 0x000008, "Wrong alignment on WBP_Settings_InputOptionsList_C_ResetToDefault");
static_assert(sizeof(WBP_Settings_InputOptionsList_C_ResetToDefault) == 0x0000A8, "Wrong size on WBP_Settings_InputOptionsList_C_ResetToDefault");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ResetToDefault, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_Settings_InputOptionsList_C_ResetToDefault::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ResetToDefault, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_Settings_InputOptionsList_C_ResetToDefault::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ResetToDefault, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_Settings_InputOptionsList_C_ResetToDefault::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ResetToDefault, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000010, "Member 'WBP_Settings_InputOptionsList_C_ResetToDefault::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ResetToDefault, CallFunc_GetUserSettings_self_CastInput) == 0x000018, "Member 'WBP_Settings_InputOptionsList_C_ResetToDefault::CallFunc_GetUserSettings_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ResetToDefault, CallFunc_GetUserSettings_ReturnValue) == 0x000028, "Member 'WBP_Settings_InputOptionsList_C_ResetToDefault::CallFunc_GetUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ResetToDefault, CallFunc_GetAllChildren_ReturnValue) == 0x000030, "Member 'WBP_Settings_InputOptionsList_C_ResetToDefault::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ResetToDefault, CallFunc_GetCurrentKeyProfileIdentifier_ReturnValue) == 0x000040, "Member 'WBP_Settings_InputOptionsList_C_ResetToDefault::CallFunc_GetCurrentKeyProfileIdentifier_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ResetToDefault, CallFunc_Array_Get_Item) == 0x000048, "Member 'WBP_Settings_InputOptionsList_C_ResetToDefault::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ResetToDefault, CallFunc_ResetKeyProfileToDefault_FailureReason) == 0x000050, "Member 'WBP_Settings_InputOptionsList_C_ResetToDefault::CallFunc_ResetKeyProfileToDefault_FailureReason' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ResetToDefault, K2Node_DynamicCast_AsWBP_Settings_Mapping_Option_Entry) == 0x000070, "Member 'WBP_Settings_InputOptionsList_C_ResetToDefault::K2Node_DynamicCast_AsWBP_Settings_Mapping_Option_Entry' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ResetToDefault, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'WBP_Settings_InputOptionsList_C_ResetToDefault::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ResetToDefault, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'WBP_Settings_InputOptionsList_C_ResetToDefault::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ResetToDefault, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'WBP_Settings_InputOptionsList_C_ResetToDefault::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ResetToDefault, CallFunc_GetLocalPlayerSubsystem_ReturnValue_1) == 0x000088, "Member 'WBP_Settings_InputOptionsList_C_ResetToDefault::CallFunc_GetLocalPlayerSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ResetToDefault, CallFunc_GetUserSettings_self_CastInput_1) == 0x000090, "Member 'WBP_Settings_InputOptionsList_C_ResetToDefault::CallFunc_GetUserSettings_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_ResetToDefault, CallFunc_GetUserSettings_ReturnValue_1) == 0x0000A0, "Member 'WBP_Settings_InputOptionsList_C_ResetToDefault::CallFunc_GetUserSettings_ReturnValue_1' has a wrong offset!");

// Function WBP_Settings_InputOptionsList.WBP_Settings_InputOptionsList_C.RevertSettings
// 0x0068 (0x0068 - 0x0000)
struct WBP_Settings_InputOptionsList_C_RevertSettings final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnhancedInputLocalPlayerSubsystem*     CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_GetUserSettings_self_CastInput; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnhancedInputUserSettings*             CallFunc_GetUserSettings_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Settings_MappingOptionEntry_C*     K2Node_DynamicCast_AsWBP_Settings_Mapping_Option_Entry; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_InputOptionsList_C_RevertSettings) == 0x000008, "Wrong alignment on WBP_Settings_InputOptionsList_C_RevertSettings");
static_assert(sizeof(WBP_Settings_InputOptionsList_C_RevertSettings) == 0x000068, "Wrong size on WBP_Settings_InputOptionsList_C_RevertSettings");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_RevertSettings, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_Settings_InputOptionsList_C_RevertSettings::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_RevertSettings, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_Settings_InputOptionsList_C_RevertSettings::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_RevertSettings, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_Settings_InputOptionsList_C_RevertSettings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_RevertSettings, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000010, "Member 'WBP_Settings_InputOptionsList_C_RevertSettings::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_RevertSettings, CallFunc_GetUserSettings_self_CastInput) == 0x000018, "Member 'WBP_Settings_InputOptionsList_C_RevertSettings::CallFunc_GetUserSettings_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_RevertSettings, CallFunc_GetUserSettings_ReturnValue) == 0x000028, "Member 'WBP_Settings_InputOptionsList_C_RevertSettings::CallFunc_GetUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_RevertSettings, CallFunc_GetAllChildren_ReturnValue) == 0x000030, "Member 'WBP_Settings_InputOptionsList_C_RevertSettings::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_RevertSettings, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'WBP_Settings_InputOptionsList_C_RevertSettings::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_RevertSettings, CallFunc_Array_Get_Item) == 0x000048, "Member 'WBP_Settings_InputOptionsList_C_RevertSettings::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_RevertSettings, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'WBP_Settings_InputOptionsList_C_RevertSettings::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_RevertSettings, K2Node_DynamicCast_AsWBP_Settings_Mapping_Option_Entry) == 0x000058, "Member 'WBP_Settings_InputOptionsList_C_RevertSettings::K2Node_DynamicCast_AsWBP_Settings_Mapping_Option_Entry' has a wrong offset!");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_RevertSettings, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'WBP_Settings_InputOptionsList_C_RevertSettings::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_Settings_InputOptionsList.WBP_Settings_InputOptionsList_C.UnbindOnOptionEntryFocused
// 0x0010 (0x0010 - 0x0000)
struct WBP_Settings_InputOptionsList_C_UnbindOnOptionEntryFocused final
{
public:
	TDelegate<void(class UWBP_Settings_OptionEntry_C* Widget)> Event;                                // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_InputOptionsList_C_UnbindOnOptionEntryFocused) == 0x000004, "Wrong alignment on WBP_Settings_InputOptionsList_C_UnbindOnOptionEntryFocused");
static_assert(sizeof(WBP_Settings_InputOptionsList_C_UnbindOnOptionEntryFocused) == 0x000010, "Wrong size on WBP_Settings_InputOptionsList_C_UnbindOnOptionEntryFocused");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_UnbindOnOptionEntryFocused, Event) == 0x000000, "Member 'WBP_Settings_InputOptionsList_C_UnbindOnOptionEntryFocused::Event' has a wrong offset!");

// Function WBP_Settings_InputOptionsList.WBP_Settings_InputOptionsList_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct WBP_Settings_InputOptionsList_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_InputOptionsList_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_Settings_InputOptionsList_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_Settings_InputOptionsList_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on WBP_Settings_InputOptionsList_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_Settings_InputOptionsList_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_Settings_InputOptionsList_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

}

