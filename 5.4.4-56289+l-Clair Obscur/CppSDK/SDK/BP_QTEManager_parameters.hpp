#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_QTEManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EQTEPhaseType_structs.hpp"


namespace SDK::Params
{

// Function BP_QTEManager.BP_QTEManager_C.ExecuteUbergraph_BP_QTEManager
// 0x0028 (0x0028 - 0x0000)
struct BP_QTEManager_C_ExecuteUbergraph_BP_QTEManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QTEManager_C_ExecuteUbergraph_BP_QTEManager) == 0x000008, "Wrong alignment on BP_QTEManager_C_ExecuteUbergraph_BP_QTEManager");
static_assert(sizeof(BP_QTEManager_C_ExecuteUbergraph_BP_QTEManager) == 0x000028, "Wrong size on BP_QTEManager_C_ExecuteUbergraph_BP_QTEManager");
static_assert(offsetof(BP_QTEManager_C_ExecuteUbergraph_BP_QTEManager, EntryPoint) == 0x000000, "Member 'BP_QTEManager_C_ExecuteUbergraph_BP_QTEManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_ExecuteUbergraph_BP_QTEManager, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_QTEManager_C_ExecuteUbergraph_BP_QTEManager::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_ExecuteUbergraph_BP_QTEManager, CallFunc_GetGlobalTimeDilation_ReturnValue) == 0x000008, "Member 'BP_QTEManager_C_ExecuteUbergraph_BP_QTEManager::CallFunc_GetGlobalTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_ExecuteUbergraph_BP_QTEManager, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_QTEManager_C_ExecuteUbergraph_BP_QTEManager::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_ExecuteUbergraph_BP_QTEManager, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000018, "Member 'BP_QTEManager_C_ExecuteUbergraph_BP_QTEManager::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_ExecuteUbergraph_BP_QTEManager, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000020, "Member 'BP_QTEManager_C_ExecuteUbergraph_BP_QTEManager::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_QTEManager.BP_QTEManager_C.FlushActiveQTE
// 0x0100 (0x0100 - 0x0000)
struct BP_QTEManager_C_FlushActiveQTE final
{
public:
	EQTEPhaseType                                 QTEPhaseType;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0070(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D8(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x00E8(0x0010)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QTEManager_C_FlushActiveQTE) == 0x000008, "Wrong alignment on BP_QTEManager_C_FlushActiveQTE");
static_assert(sizeof(BP_QTEManager_C_FlushActiveQTE) == 0x000100, "Wrong size on BP_QTEManager_C_FlushActiveQTE");
static_assert(offsetof(BP_QTEManager_C_FlushActiveQTE, QTEPhaseType) == 0x000000, "Member 'BP_QTEManager_C_FlushActiveQTE::QTEPhaseType' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_FlushActiveQTE, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BP_QTEManager_C_FlushActiveQTE::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_FlushActiveQTE, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'BP_QTEManager_C_FlushActiveQTE::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_FlushActiveQTE, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'BP_QTEManager_C_FlushActiveQTE::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_FlushActiveQTE, K2Node_MakeStruct_FormatArgumentData_1) == 0x000070, "Member 'BP_QTEManager_C_FlushActiveQTE::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_FlushActiveQTE, K2Node_MakeArray_Array) == 0x0000B8, "Member 'BP_QTEManager_C_FlushActiveQTE::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_FlushActiveQTE, K2Node_MakeArray_Array_1) == 0x0000C8, "Member 'BP_QTEManager_C_FlushActiveQTE::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_FlushActiveQTE, CallFunc_Format_ReturnValue) == 0x0000D8, "Member 'BP_QTEManager_C_FlushActiveQTE::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_FlushActiveQTE, CallFunc_Format_ReturnValue_1) == 0x0000E8, "Member 'BP_QTEManager_C_FlushActiveQTE::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_FlushActiveQTE, CallFunc_Not_PreBool_ReturnValue) == 0x0000F8, "Member 'BP_QTEManager_C_FlushActiveQTE::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_QTEManager.BP_QTEManager_C.InitManager
// 0x0048 (0x0048 - 0x0000)
struct BP_QTEManager_C_InitManager final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_QTEContainer_C*                    CallFunc_SpawnObject_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_HUD_QTE_C*>                 CallFunc_GetQTEWidgets_QTEWidgets;                 // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWBP_HUD_QTE_C*                         CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QTEManager_C_InitManager) == 0x000008, "Wrong alignment on BP_QTEManager_C_InitManager");
static_assert(sizeof(BP_QTEManager_C_InitManager) == 0x000048, "Wrong size on BP_QTEManager_C_InitManager");
static_assert(offsetof(BP_QTEManager_C_InitManager, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_QTEManager_C_InitManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_InitManager, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_QTEManager_C_InitManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_InitManager, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_QTEManager_C_InitManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_InitManager, CallFunc_GetBattleManager_ReturnValue) == 0x000010, "Member 'BP_QTEManager_C_InitManager::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_InitManager, CallFunc_SpawnObject_ReturnValue) == 0x000018, "Member 'BP_QTEManager_C_InitManager::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_InitManager, CallFunc_GetQTEWidgets_QTEWidgets) == 0x000020, "Member 'BP_QTEManager_C_InitManager::CallFunc_GetQTEWidgets_QTEWidgets' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_InitManager, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_QTEManager_C_InitManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_InitManager, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_QTEManager_C_InitManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_InitManager, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_QTEManager_C_InitManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_InitManager, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'BP_QTEManager_C_InitManager::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_QTEManager.BP_QTEManager_C.On Timeline Ended
// 0x0078 (0x0078 - 0x0000)
struct BP_QTEManager_C_On_Timeline_Ended final
{
public:
	int32                                         TrackIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0068(0x0010)()
};
static_assert(alignof(BP_QTEManager_C_On_Timeline_Ended) == 0x000008, "Wrong alignment on BP_QTEManager_C_On_Timeline_Ended");
static_assert(sizeof(BP_QTEManager_C_On_Timeline_Ended) == 0x000078, "Wrong size on BP_QTEManager_C_On_Timeline_Ended");
static_assert(offsetof(BP_QTEManager_C_On_Timeline_Ended, TrackIndex) == 0x000000, "Member 'BP_QTEManager_C_On_Timeline_Ended::TrackIndex' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_On_Timeline_Ended, Success) == 0x000004, "Member 'BP_QTEManager_C_On_Timeline_Ended::Success' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_On_Timeline_Ended, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000008, "Member 'BP_QTEManager_C_On_Timeline_Ended::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_On_Timeline_Ended, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'BP_QTEManager_C_On_Timeline_Ended::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_On_Timeline_Ended, K2Node_MakeArray_Array) == 0x000058, "Member 'BP_QTEManager_C_On_Timeline_Ended::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_On_Timeline_Ended, CallFunc_Format_ReturnValue) == 0x000068, "Member 'BP_QTEManager_C_On_Timeline_Ended::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_QTEManager.BP_QTEManager_C.OnAction
// 0x0150 (0x0150 - 0x0000)
struct BP_QTEManager_C_OnAction final
{
public:
	bool                                          IsSuccess;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetRealTimeProgress_RealTimeProgress;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRealTimeProgress_IsFinished;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQTEPhaseType                                 CallFunc_GetCurrentQTEState_QTEPhaseType;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0018(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0070(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00C8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00D8(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0128(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0140(0x0010)()
};
static_assert(alignof(BP_QTEManager_C_OnAction) == 0x000008, "Wrong alignment on BP_QTEManager_C_OnAction");
static_assert(sizeof(BP_QTEManager_C_OnAction) == 0x000150, "Wrong size on BP_QTEManager_C_OnAction");
static_assert(offsetof(BP_QTEManager_C_OnAction, IsSuccess) == 0x000000, "Member 'BP_QTEManager_C_OnAction::IsSuccess' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnAction, CallFunc_GetRealTimeProgress_RealTimeProgress) == 0x000008, "Member 'BP_QTEManager_C_OnAction::CallFunc_GetRealTimeProgress_RealTimeProgress' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnAction, CallFunc_GetRealTimeProgress_IsFinished) == 0x000010, "Member 'BP_QTEManager_C_OnAction::CallFunc_GetRealTimeProgress_IsFinished' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnAction, CallFunc_GetCurrentQTEState_QTEPhaseType) == 0x000011, "Member 'BP_QTEManager_C_OnAction::CallFunc_GetCurrentQTEState_QTEPhaseType' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnAction, CallFunc_Conv_BoolToText_ReturnValue) == 0x000018, "Member 'BP_QTEManager_C_OnAction::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnAction, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'BP_QTEManager_C_OnAction::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnAction, K2Node_MakeStruct_FormatArgumentData_1) == 0x000070, "Member 'BP_QTEManager_C_OnAction::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnAction, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000B8, "Member 'BP_QTEManager_C_OnAction::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnAction, CallFunc_Conv_StringToText_ReturnValue) == 0x0000C8, "Member 'BP_QTEManager_C_OnAction::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnAction, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000D8, "Member 'BP_QTEManager_C_OnAction::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnAction, CallFunc_Not_PreBool_ReturnValue) == 0x000120, "Member 'BP_QTEManager_C_OnAction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnAction, K2Node_MakeArray_Array) == 0x000128, "Member 'BP_QTEManager_C_OnAction::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnAction, CallFunc_BooleanAND_ReturnValue) == 0x000138, "Member 'BP_QTEManager_C_OnAction::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnAction, CallFunc_Format_ReturnValue) == 0x000140, "Member 'BP_QTEManager_C_OnAction::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_QTEManager.BP_QTEManager_C.OnQTENotifyStateEnd
// 0x0168 (0x0168 - 0x0000)
struct BP_QTEManager_C_OnQTENotifyStateEnd final
{
public:
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue;        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0050(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_GetRealTimeSeconds_ReturnValue;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00A8(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x00F0(0x0048)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0140(0x0010)(ReferenceParm)
	class UAC_jRPG_DynamicCameraManager_C*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0158(0x0010)()
};
static_assert(alignof(BP_QTEManager_C_OnQTENotifyStateEnd) == 0x000008, "Wrong alignment on BP_QTEManager_C_OnQTENotifyStateEnd");
static_assert(sizeof(BP_QTEManager_C_OnQTENotifyStateEnd) == 0x000168, "Wrong size on BP_QTEManager_C_OnQTENotifyStateEnd");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateEnd, CallFunc_GetGlobalTimeDilation_ReturnValue) == 0x000000, "Member 'BP_QTEManager_C_OnQTENotifyStateEnd::CallFunc_GetGlobalTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateEnd, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'BP_QTEManager_C_OnQTENotifyStateEnd::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateEnd, K2Node_MakeStruct_FormatArgumentData_1) == 0x000050, "Member 'BP_QTEManager_C_OnQTENotifyStateEnd::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateEnd, CallFunc_GetRealTimeSeconds_ReturnValue) == 0x000098, "Member 'BP_QTEManager_C_OnQTENotifyStateEnd::CallFunc_GetRealTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateEnd, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x0000A0, "Member 'BP_QTEManager_C_OnQTENotifyStateEnd::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateEnd, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000A8, "Member 'BP_QTEManager_C_OnQTENotifyStateEnd::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateEnd, K2Node_MakeStruct_FormatArgumentData_3) == 0x0000F0, "Member 'BP_QTEManager_C_OnQTENotifyStateEnd::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateEnd, CallFunc_GetOwner_ReturnValue) == 0x000138, "Member 'BP_QTEManager_C_OnQTENotifyStateEnd::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateEnd, K2Node_MakeArray_Array) == 0x000140, "Member 'BP_QTEManager_C_OnQTENotifyStateEnd::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateEnd, CallFunc_GetComponentByClass_ReturnValue) == 0x000150, "Member 'BP_QTEManager_C_OnQTENotifyStateEnd::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateEnd, CallFunc_Format_ReturnValue) == 0x000158, "Member 'BP_QTEManager_C_OnQTENotifyStateEnd::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_QTEManager.BP_QTEManager_C.OnQTENotifyStateStart
// 0x0250 (0x0250 - 0x0000)
struct BP_QTEManager_C_OnQTENotifyStateStart final
{
public:
	TMap<EQTEPhaseType, double>                   PhaseDurations;                                    // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	double                                        TotalDuration;                                     // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentAnimTime;                                   // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PlayRate;                                          // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetRealTimeSeconds_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetRealTimeSeconds_ReturnValue_1;         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ComputeRealTimeDuration_RealTimeDuration; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0080(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E0(0x0010)()
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetRealTimeSeconds_ReturnValue_2;         // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_DynamicCameraManager_C*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0108(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0158(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01A0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x01E8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0230(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0240(0x0010)()
};
static_assert(alignof(BP_QTEManager_C_OnQTENotifyStateStart) == 0x000008, "Wrong alignment on BP_QTEManager_C_OnQTENotifyStateStart");
static_assert(sizeof(BP_QTEManager_C_OnQTENotifyStateStart) == 0x000250, "Wrong size on BP_QTEManager_C_OnQTENotifyStateStart");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateStart, PhaseDurations) == 0x000000, "Member 'BP_QTEManager_C_OnQTENotifyStateStart::PhaseDurations' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateStart, TotalDuration) == 0x000050, "Member 'BP_QTEManager_C_OnQTENotifyStateStart::TotalDuration' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateStart, CurrentAnimTime) == 0x000058, "Member 'BP_QTEManager_C_OnQTENotifyStateStart::CurrentAnimTime' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateStart, PlayRate) == 0x000060, "Member 'BP_QTEManager_C_OnQTENotifyStateStart::PlayRate' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateStart, CallFunc_GetRealTimeSeconds_ReturnValue) == 0x000068, "Member 'BP_QTEManager_C_OnQTENotifyStateStart::CallFunc_GetRealTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateStart, CallFunc_GetRealTimeSeconds_ReturnValue_1) == 0x000070, "Member 'BP_QTEManager_C_OnQTENotifyStateStart::CallFunc_GetRealTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateStart, CallFunc_ComputeRealTimeDuration_RealTimeDuration) == 0x000078, "Member 'BP_QTEManager_C_OnQTENotifyStateStart::CallFunc_ComputeRealTimeDuration_RealTimeDuration' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateStart, K2Node_MakeStruct_FormatArgumentData) == 0x000080, "Member 'BP_QTEManager_C_OnQTENotifyStateStart::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateStart, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'BP_QTEManager_C_OnQTENotifyStateStart::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateStart, K2Node_MakeArray_Array) == 0x0000D0, "Member 'BP_QTEManager_C_OnQTENotifyStateStart::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateStart, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'BP_QTEManager_C_OnQTENotifyStateStart::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateStart, CallFunc_GetOwner_ReturnValue) == 0x0000F0, "Member 'BP_QTEManager_C_OnQTENotifyStateStart::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateStart, CallFunc_GetRealTimeSeconds_ReturnValue_2) == 0x0000F8, "Member 'BP_QTEManager_C_OnQTENotifyStateStart::CallFunc_GetRealTimeSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateStart, CallFunc_GetComponentByClass_ReturnValue) == 0x000100, "Member 'BP_QTEManager_C_OnQTENotifyStateStart::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateStart, K2Node_MakeStruct_FormatArgumentData_1) == 0x000108, "Member 'BP_QTEManager_C_OnQTENotifyStateStart::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateStart, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000150, "Member 'BP_QTEManager_C_OnQTENotifyStateStart::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateStart, K2Node_MakeStruct_FormatArgumentData_2) == 0x000158, "Member 'BP_QTEManager_C_OnQTENotifyStateStart::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateStart, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001A0, "Member 'BP_QTEManager_C_OnQTENotifyStateStart::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateStart, K2Node_MakeStruct_FormatArgumentData_4) == 0x0001E8, "Member 'BP_QTEManager_C_OnQTENotifyStateStart::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateStart, K2Node_MakeArray_Array_1) == 0x000230, "Member 'BP_QTEManager_C_OnQTENotifyStateStart::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateStart, CallFunc_Format_ReturnValue_1) == 0x000240, "Member 'BP_QTEManager_C_OnQTENotifyStateStart::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function BP_QTEManager.BP_QTEManager_C.OnQTENotifyStateTick
// 0x0200 (0x0200 - 0x0000)
struct BP_QTEManager_C_OnQTENotifyStateTick final
{
public:
	double                                        CurrentAnimationTime;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0050(0x0048)(HasGetValueTypeHash)
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue;        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00A0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x00E8(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_GetRealTimeSeconds_ReturnValue;           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0140(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0188(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01D0(0x0010)(ReferenceParm)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01E8(0x0010)()
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QTEManager_C_OnQTENotifyStateTick) == 0x000008, "Wrong alignment on BP_QTEManager_C_OnQTENotifyStateTick");
static_assert(sizeof(BP_QTEManager_C_OnQTENotifyStateTick) == 0x000200, "Wrong size on BP_QTEManager_C_OnQTENotifyStateTick");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateTick, CurrentAnimationTime) == 0x000000, "Member 'BP_QTEManager_C_OnQTENotifyStateTick::CurrentAnimationTime' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateTick, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'BP_QTEManager_C_OnQTENotifyStateTick::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateTick, K2Node_MakeStruct_FormatArgumentData_1) == 0x000050, "Member 'BP_QTEManager_C_OnQTENotifyStateTick::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateTick, CallFunc_GetGlobalTimeDilation_ReturnValue) == 0x000098, "Member 'BP_QTEManager_C_OnQTENotifyStateTick::CallFunc_GetGlobalTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateTick, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000A0, "Member 'BP_QTEManager_C_OnQTENotifyStateTick::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateTick, K2Node_MakeStruct_FormatArgumentData_3) == 0x0000E8, "Member 'BP_QTEManager_C_OnQTENotifyStateTick::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateTick, CallFunc_GetRealTimeSeconds_ReturnValue) == 0x000130, "Member 'BP_QTEManager_C_OnQTENotifyStateTick::CallFunc_GetRealTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateTick, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000138, "Member 'BP_QTEManager_C_OnQTENotifyStateTick::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateTick, K2Node_MakeStruct_FormatArgumentData_4) == 0x000140, "Member 'BP_QTEManager_C_OnQTENotifyStateTick::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateTick, K2Node_MakeStruct_FormatArgumentData_5) == 0x000188, "Member 'BP_QTEManager_C_OnQTENotifyStateTick::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateTick, K2Node_MakeArray_Array) == 0x0001D0, "Member 'BP_QTEManager_C_OnQTENotifyStateTick::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateTick, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0001E0, "Member 'BP_QTEManager_C_OnQTENotifyStateTick::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateTick, CallFunc_Format_ReturnValue) == 0x0001E8, "Member 'BP_QTEManager_C_OnQTENotifyStateTick::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnQTENotifyStateTick, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0001F8, "Member 'BP_QTEManager_C_OnQTENotifyStateTick::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_QTEManager.BP_QTEManager_C.OnSkillComboAction
// 0x0030 (0x0030 - 0x0000)
struct BP_QTEManager_C_OnSkillComboAction final
{
public:
	bool                                          IsSuccess;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TrackIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isPerfect;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_HUD_QTE_Base_C*                    CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_HUD_QTE_Base_C*                    CallFunc_Array_Get_Item_1;                         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QTEManager_C_OnSkillComboAction) == 0x000008, "Wrong alignment on BP_QTEManager_C_OnSkillComboAction");
static_assert(sizeof(BP_QTEManager_C_OnSkillComboAction) == 0x000030, "Wrong size on BP_QTEManager_C_OnSkillComboAction");
static_assert(offsetof(BP_QTEManager_C_OnSkillComboAction, IsSuccess) == 0x000000, "Member 'BP_QTEManager_C_OnSkillComboAction::IsSuccess' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnSkillComboAction, TrackIndex) == 0x000004, "Member 'BP_QTEManager_C_OnSkillComboAction::TrackIndex' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnSkillComboAction, isPerfect) == 0x000008, "Member 'BP_QTEManager_C_OnSkillComboAction::isPerfect' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnSkillComboAction, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_QTEManager_C_OnSkillComboAction::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnSkillComboAction, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_QTEManager_C_OnSkillComboAction::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnSkillComboAction, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_QTEManager_C_OnSkillComboAction::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnSkillComboAction, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_QTEManager_C_OnSkillComboAction::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnSkillComboAction, CallFunc_Array_Get_Item_1) == 0x000020, "Member 'BP_QTEManager_C_OnSkillComboAction::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnSkillComboAction, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_QTEManager_C_OnSkillComboAction::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnSkillComboAction, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_QTEManager_C_OnSkillComboAction::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_QTEManager.BP_QTEManager_C.OnUpdate
// 0x0040 (0x0040 - 0x0000)
struct BP_QTEManager_C_OnUpdate final
{
public:
	double                                        CurrentTime;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_DynamicCameraManager_C*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Ease_ReturnValue;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPostProcessBlendWeight_InPostProcessBlendWeight_ImplicitCast; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetGlobalTimeDilation_TimeDilation_ImplicitCast; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QTEManager_C_OnUpdate) == 0x000008, "Wrong alignment on BP_QTEManager_C_OnUpdate");
static_assert(sizeof(BP_QTEManager_C_OnUpdate) == 0x000040, "Wrong size on BP_QTEManager_C_OnUpdate");
static_assert(offsetof(BP_QTEManager_C_OnUpdate, CurrentTime) == 0x000000, "Member 'BP_QTEManager_C_OnUpdate::CurrentTime' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnUpdate, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_QTEManager_C_OnUpdate::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnUpdate, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_QTEManager_C_OnUpdate::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnUpdate, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_QTEManager_C_OnUpdate::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnUpdate, CallFunc_FClamp_ReturnValue) == 0x000020, "Member 'BP_QTEManager_C_OnUpdate::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnUpdate, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_QTEManager_C_OnUpdate::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnUpdate, CallFunc_Ease_ReturnValue) == 0x000030, "Member 'BP_QTEManager_C_OnUpdate::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnUpdate, CallFunc_SetPostProcessBlendWeight_InPostProcessBlendWeight_ImplicitCast) == 0x000038, "Member 'BP_QTEManager_C_OnUpdate::CallFunc_SetPostProcessBlendWeight_InPostProcessBlendWeight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_OnUpdate, CallFunc_SetGlobalTimeDilation_TimeDilation_ImplicitCast) == 0x00003C, "Member 'BP_QTEManager_C_OnUpdate::CallFunc_SetGlobalTimeDilation_TimeDilation_ImplicitCast' has a wrong offset!");

// Function BP_QTEManager.BP_QTEManager_C.PrintDebugText
// 0x0100 (0x0100 - 0x0000)
struct BP_QTEManager_C_PrintDebugText final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayDebugCategoryEnabled_ReturnValue; // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_HUD_QTE_Base_C*                    CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDebugString_ReturnValue;               // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0088(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0010)()
};
static_assert(alignof(BP_QTEManager_C_PrintDebugText) == 0x000008, "Wrong alignment on BP_QTEManager_C_PrintDebugText");
static_assert(sizeof(BP_QTEManager_C_PrintDebugText) == 0x000100, "Wrong size on BP_QTEManager_C_PrintDebugText");
static_assert(offsetof(BP_QTEManager_C_PrintDebugText, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_QTEManager_C_PrintDebugText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_PrintDebugText, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_QTEManager_C_PrintDebugText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_PrintDebugText, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000008, "Member 'BP_QTEManager_C_PrintDebugText::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_PrintDebugText, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'BP_QTEManager_C_PrintDebugText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_PrintDebugText, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_QTEManager_C_PrintDebugText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_PrintDebugText, CallFunc_IsGameplayDebugCategoryEnabled_ReturnValue) == 0x00005C, "Member 'BP_QTEManager_C_PrintDebugText::CallFunc_IsGameplayDebugCategoryEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_PrintDebugText, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_QTEManager_C_PrintDebugText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_PrintDebugText, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_QTEManager_C_PrintDebugText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_PrintDebugText, CallFunc_GetDebugString_ReturnValue) == 0x000070, "Member 'BP_QTEManager_C_PrintDebugText::CallFunc_GetDebugString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_PrintDebugText, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BP_QTEManager_C_PrintDebugText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_PrintDebugText, CallFunc_Conv_StringToText_ReturnValue) == 0x000088, "Member 'BP_QTEManager_C_PrintDebugText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_PrintDebugText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'BP_QTEManager_C_PrintDebugText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_PrintDebugText, K2Node_MakeArray_Array) == 0x0000E0, "Member 'BP_QTEManager_C_PrintDebugText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_PrintDebugText, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'BP_QTEManager_C_PrintDebugText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_QTEManager.BP_QTEManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_QTEManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QTEManager_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_QTEManager_C_ReceiveTick");
static_assert(sizeof(BP_QTEManager_C_ReceiveTick) == 0x000004, "Wrong size on BP_QTEManager_C_ReceiveTick");
static_assert(offsetof(BP_QTEManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_QTEManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_QTEManager.BP_QTEManager_C.StartSkillCombo
// 0x01B8 (0x01B8 - 0x0000)
struct BP_QTEManager_C_StartSkillCombo final
{
public:
	double                                        NowTime;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PreDurationRealTime;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ValidityDurationRealTime;                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   sequenceTimeSource;                                // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         TrackIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          showQTE;                                           // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0080(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00C8(0x0048)(HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivated_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UWBP_HUD_QTE_Base_C*                    CallFunc_Array_Get_Item;                           // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0140(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0150(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0198(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01A8(0x0010)()
};
static_assert(alignof(BP_QTEManager_C_StartSkillCombo) == 0x000008, "Wrong alignment on BP_QTEManager_C_StartSkillCombo");
static_assert(sizeof(BP_QTEManager_C_StartSkillCombo) == 0x0001B8, "Wrong size on BP_QTEManager_C_StartSkillCombo");
static_assert(offsetof(BP_QTEManager_C_StartSkillCombo, NowTime) == 0x000000, "Member 'BP_QTEManager_C_StartSkillCombo::NowTime' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StartSkillCombo, PreDurationRealTime) == 0x000008, "Member 'BP_QTEManager_C_StartSkillCombo::PreDurationRealTime' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StartSkillCombo, ValidityDurationRealTime) == 0x000010, "Member 'BP_QTEManager_C_StartSkillCombo::ValidityDurationRealTime' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StartSkillCombo, sequenceTimeSource) == 0x000018, "Member 'BP_QTEManager_C_StartSkillCombo::sequenceTimeSource' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StartSkillCombo, TrackIndex) == 0x000020, "Member 'BP_QTEManager_C_StartSkillCombo::TrackIndex' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StartSkillCombo, showQTE) == 0x000024, "Member 'BP_QTEManager_C_StartSkillCombo::showQTE' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StartSkillCombo, Temp_string_Variable) == 0x000028, "Member 'BP_QTEManager_C_StartSkillCombo::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StartSkillCombo, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'BP_QTEManager_C_StartSkillCombo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StartSkillCombo, K2Node_MakeStruct_FormatArgumentData_1) == 0x000080, "Member 'BP_QTEManager_C_StartSkillCombo::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StartSkillCombo, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000C8, "Member 'BP_QTEManager_C_StartSkillCombo::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StartSkillCombo, Temp_string_Variable_1) == 0x000110, "Member 'BP_QTEManager_C_StartSkillCombo::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StartSkillCombo, CallFunc_IsActivated_ReturnValue) == 0x000120, "Member 'BP_QTEManager_C_StartSkillCombo::CallFunc_IsActivated_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StartSkillCombo, CallFunc_Not_PreBool_ReturnValue) == 0x000121, "Member 'BP_QTEManager_C_StartSkillCombo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StartSkillCombo, CallFunc_Not_PreBool_ReturnValue_1) == 0x000122, "Member 'BP_QTEManager_C_StartSkillCombo::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StartSkillCombo, Temp_bool_Variable) == 0x000123, "Member 'BP_QTEManager_C_StartSkillCombo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StartSkillCombo, K2Node_Select_Default) == 0x000128, "Member 'BP_QTEManager_C_StartSkillCombo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StartSkillCombo, CallFunc_Array_Get_Item) == 0x000138, "Member 'BP_QTEManager_C_StartSkillCombo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StartSkillCombo, CallFunc_Conv_StringToText_ReturnValue) == 0x000140, "Member 'BP_QTEManager_C_StartSkillCombo::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StartSkillCombo, K2Node_MakeStruct_FormatArgumentData_3) == 0x000150, "Member 'BP_QTEManager_C_StartSkillCombo::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StartSkillCombo, K2Node_MakeArray_Array) == 0x000198, "Member 'BP_QTEManager_C_StartSkillCombo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StartSkillCombo, CallFunc_Format_ReturnValue) == 0x0001A8, "Member 'BP_QTEManager_C_StartSkillCombo::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_QTEManager.BP_QTEManager_C.StopSkillCombo
// 0x00A0 (0x00A0 - 0x0000)
struct BP_QTEManager_C_StopSkillCombo final
{
public:
	int32                                         TrackIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSuccess;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_HUD_QTE_Base_C*                    CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetUndilatedTimeSeconds_UndilatedTime;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0090(0x0010)()
};
static_assert(alignof(BP_QTEManager_C_StopSkillCombo) == 0x000008, "Wrong alignment on BP_QTEManager_C_StopSkillCombo");
static_assert(sizeof(BP_QTEManager_C_StopSkillCombo) == 0x0000A0, "Wrong size on BP_QTEManager_C_StopSkillCombo");
static_assert(offsetof(BP_QTEManager_C_StopSkillCombo, TrackIndex) == 0x000000, "Member 'BP_QTEManager_C_StopSkillCombo::TrackIndex' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StopSkillCombo, IsSuccess) == 0x000004, "Member 'BP_QTEManager_C_StopSkillCombo::IsSuccess' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StopSkillCombo, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_QTEManager_C_StopSkillCombo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StopSkillCombo, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'BP_QTEManager_C_StopSkillCombo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StopSkillCombo, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_QTEManager_C_StopSkillCombo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StopSkillCombo, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_QTEManager_C_StopSkillCombo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StopSkillCombo, CallFunc_Not_PreBool_ReturnValue_1) == 0x00001C, "Member 'BP_QTEManager_C_StopSkillCombo::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StopSkillCombo, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_QTEManager_C_StopSkillCombo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StopSkillCombo, CallFunc_BooleanAND_ReturnValue) == 0x000024, "Member 'BP_QTEManager_C_StopSkillCombo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StopSkillCombo, CallFunc_Less_IntInt_ReturnValue) == 0x000025, "Member 'BP_QTEManager_C_StopSkillCombo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StopSkillCombo, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_QTEManager_C_StopSkillCombo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StopSkillCombo, CallFunc_GetUndilatedTimeSeconds_UndilatedTime) == 0x000030, "Member 'BP_QTEManager_C_StopSkillCombo::CallFunc_GetUndilatedTimeSeconds_UndilatedTime' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StopSkillCombo, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'BP_QTEManager_C_StopSkillCombo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StopSkillCombo, K2Node_MakeArray_Array) == 0x000080, "Member 'BP_QTEManager_C_StopSkillCombo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_StopSkillCombo, CallFunc_Format_ReturnValue) == 0x000090, "Member 'BP_QTEManager_C_StopSkillCombo::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_QTEManager.BP_QTEManager_C.ComputeRealTimeDuration
// 0x0058 (0x0058 - 0x0000)
struct BP_QTEManager_C_ComputeRealTimeDuration final
{
public:
	double                                        NotifyStateDuration;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AnimPlayRate;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EaseDuration;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TargetTimeDilation;                                // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RealTimeDuration;                                  // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MathExpression_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MathExpression_ReturnValue_1;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QTEManager_C_ComputeRealTimeDuration) == 0x000008, "Wrong alignment on BP_QTEManager_C_ComputeRealTimeDuration");
static_assert(sizeof(BP_QTEManager_C_ComputeRealTimeDuration) == 0x000058, "Wrong size on BP_QTEManager_C_ComputeRealTimeDuration");
static_assert(offsetof(BP_QTEManager_C_ComputeRealTimeDuration, NotifyStateDuration) == 0x000000, "Member 'BP_QTEManager_C_ComputeRealTimeDuration::NotifyStateDuration' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_ComputeRealTimeDuration, AnimPlayRate) == 0x000008, "Member 'BP_QTEManager_C_ComputeRealTimeDuration::AnimPlayRate' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_ComputeRealTimeDuration, EaseDuration) == 0x000010, "Member 'BP_QTEManager_C_ComputeRealTimeDuration::EaseDuration' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_ComputeRealTimeDuration, TargetTimeDilation) == 0x000018, "Member 'BP_QTEManager_C_ComputeRealTimeDuration::TargetTimeDilation' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_ComputeRealTimeDuration, RealTimeDuration) == 0x000020, "Member 'BP_QTEManager_C_ComputeRealTimeDuration::RealTimeDuration' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_ComputeRealTimeDuration, K2Node_MathExpression_ReturnValue) == 0x000028, "Member 'BP_QTEManager_C_ComputeRealTimeDuration::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_ComputeRealTimeDuration, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'BP_QTEManager_C_ComputeRealTimeDuration::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_ComputeRealTimeDuration, K2Node_MathExpression_ReturnValue_1) == 0x000038, "Member 'BP_QTEManager_C_ComputeRealTimeDuration::K2Node_MathExpression_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_ComputeRealTimeDuration, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_QTEManager_C_ComputeRealTimeDuration::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_ComputeRealTimeDuration, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'BP_QTEManager_C_ComputeRealTimeDuration::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_ComputeRealTimeDuration, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_QTEManager_C_ComputeRealTimeDuration::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_QTEManager.BP_QTEManager_C.GetCurrentQTEState
// 0x00E0 (0x00E0 - 0x0000)
struct BP_QTEManager_C_GetCurrentQTEState final
{
public:
	EQTEPhaseType                                 QTEPhaseType;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        cumulatedProgress;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetRealTimeProgress_RealTimeProgress;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRealTimeProgress_IsFinished;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetRealTimeProgress_RealTimeProgress_1;   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRealTimeProgress_IsFinished_1;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0010)()
	TArray<EQTEPhaseType>                         K2Node_MakeArray_Array_1;                          // 0x00A8(0x0010)(ReferenceParm)
	EQTEPhaseType                                 CallFunc_Array_Get_Item;                           // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QTEManager_C_GetCurrentQTEState) == 0x000008, "Wrong alignment on BP_QTEManager_C_GetCurrentQTEState");
static_assert(sizeof(BP_QTEManager_C_GetCurrentQTEState) == 0x0000E0, "Wrong size on BP_QTEManager_C_GetCurrentQTEState");
static_assert(offsetof(BP_QTEManager_C_GetCurrentQTEState, QTEPhaseType) == 0x000000, "Member 'BP_QTEManager_C_GetCurrentQTEState::QTEPhaseType' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_GetCurrentQTEState, cumulatedProgress) == 0x000008, "Member 'BP_QTEManager_C_GetCurrentQTEState::cumulatedProgress' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_GetCurrentQTEState, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_QTEManager_C_GetCurrentQTEState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_GetCurrentQTEState, CallFunc_GetRealTimeProgress_RealTimeProgress) == 0x000018, "Member 'BP_QTEManager_C_GetCurrentQTEState::CallFunc_GetRealTimeProgress_RealTimeProgress' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_GetCurrentQTEState, CallFunc_GetRealTimeProgress_IsFinished) == 0x000020, "Member 'BP_QTEManager_C_GetCurrentQTEState::CallFunc_GetRealTimeProgress_IsFinished' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_GetCurrentQTEState, CallFunc_GetRealTimeProgress_RealTimeProgress_1) == 0x000028, "Member 'BP_QTEManager_C_GetCurrentQTEState::CallFunc_GetRealTimeProgress_RealTimeProgress_1' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_GetCurrentQTEState, CallFunc_GetRealTimeProgress_IsFinished_1) == 0x000030, "Member 'BP_QTEManager_C_GetCurrentQTEState::CallFunc_GetRealTimeProgress_IsFinished_1' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_GetCurrentQTEState, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000031, "Member 'BP_QTEManager_C_GetCurrentQTEState::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_GetCurrentQTEState, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_QTEManager_C_GetCurrentQTEState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_GetCurrentQTEState, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'BP_QTEManager_C_GetCurrentQTEState::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_GetCurrentQTEState, K2Node_MakeArray_Array) == 0x000080, "Member 'BP_QTEManager_C_GetCurrentQTEState::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_GetCurrentQTEState, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'BP_QTEManager_C_GetCurrentQTEState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_GetCurrentQTEState, CallFunc_Format_ReturnValue) == 0x000098, "Member 'BP_QTEManager_C_GetCurrentQTEState::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_GetCurrentQTEState, K2Node_MakeArray_Array_1) == 0x0000A8, "Member 'BP_QTEManager_C_GetCurrentQTEState::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_GetCurrentQTEState, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BP_QTEManager_C_GetCurrentQTEState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_GetCurrentQTEState, CallFunc_Array_Length_ReturnValue) == 0x0000BC, "Member 'BP_QTEManager_C_GetCurrentQTEState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_GetCurrentQTEState, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_QTEManager_C_GetCurrentQTEState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_GetCurrentQTEState, CallFunc_Map_Find_Value) == 0x0000C8, "Member 'BP_QTEManager_C_GetCurrentQTEState::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_GetCurrentQTEState, CallFunc_Map_Find_ReturnValue) == 0x0000D0, "Member 'BP_QTEManager_C_GetCurrentQTEState::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_GetCurrentQTEState, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'BP_QTEManager_C_GetCurrentQTEState::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_QTEManager.BP_QTEManager_C.GetRealTimeProgress
// 0x0040 (0x0040 - 0x0000)
struct BP_QTEManager_C_GetRealTimeProgress final
{
public:
	double                                        RealTimeProgress;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFinished;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetRealTimeSeconds_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QTEManager_C_GetRealTimeProgress) == 0x000008, "Wrong alignment on BP_QTEManager_C_GetRealTimeProgress");
static_assert(sizeof(BP_QTEManager_C_GetRealTimeProgress) == 0x000040, "Wrong size on BP_QTEManager_C_GetRealTimeProgress");
static_assert(offsetof(BP_QTEManager_C_GetRealTimeProgress, RealTimeProgress) == 0x000000, "Member 'BP_QTEManager_C_GetRealTimeProgress::RealTimeProgress' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_GetRealTimeProgress, IsFinished) == 0x000008, "Member 'BP_QTEManager_C_GetRealTimeProgress::IsFinished' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_GetRealTimeProgress, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_QTEManager_C_GetRealTimeProgress::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_GetRealTimeProgress, CallFunc_GetRealTimeSeconds_ReturnValue) == 0x000018, "Member 'BP_QTEManager_C_GetRealTimeProgress::CallFunc_GetRealTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_GetRealTimeProgress, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'BP_QTEManager_C_GetRealTimeProgress::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_GetRealTimeProgress, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_QTEManager_C_GetRealTimeProgress::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_GetRealTimeProgress, CallFunc_FClamp_ReturnValue) == 0x000030, "Member 'BP_QTEManager_C_GetRealTimeProgress::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QTEManager_C_GetRealTimeProgress, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_QTEManager_C_GetRealTimeProgress::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

}

