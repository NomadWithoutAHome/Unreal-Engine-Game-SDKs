#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameActionTriggerZone

#include "Basic.hpp"

#include "BP_GameActionTriggerZone_classes.hpp"
#include "BP_GameActionTriggerZone_parameters.hpp"


namespace SDK
{

// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_GameActionTriggerZone_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.UpdateTriggerComponentsCollision
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GameActionTriggerZone_C::UpdateTriggerComponentsCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "UpdateTriggerComponentsCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.UnbindAllTriggerComponents
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_GameActionTriggerZone_C::UnbindAllTriggerComponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "UnbindAllTriggerComponents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.TryUnbindGameActionExecutor
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_GameActionTriggerZone_C::TryUnbindGameActionExecutor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "TryUnbindGameActionExecutor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.TryRegisterInteract
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_GameActionTriggerZone_C::TryRegisterInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "TryRegisterInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.TryExecuteGameActionOnOverlap
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_GameActionTriggerZone_C::TryExecuteGameActionOnOverlap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "TryExecuteGameActionOnOverlap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.ShouldHideDistantInteraction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_GameActionTriggerZone_C::ShouldHideDistantInteraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "ShouldHideDistantInteraction");

	Params::BP_GameActionTriggerZone_C_ShouldHideDistantInteraction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.ShouldExecuteGameActionOnOverlap
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameActionTriggerZone_C::ShouldExecuteGameActionOnOverlap(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "ShouldExecuteGameActionOnOverlap");

	Params::BP_GameActionTriggerZone_C_ShouldExecuteGameActionOnOverlap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.ShouldExecuteGameActionOnInteract
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameActionTriggerZone_C::ShouldExecuteGameActionOnInteract(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "ShouldExecuteGameActionOnInteract");

	Params::BP_GameActionTriggerZone_C_ShouldExecuteGameActionOnInteract Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.SetTriggerComponentsCollisionEnabled
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameActionTriggerZone_C::SetTriggerComponentsCollisionEnabled(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "SetTriggerComponentsCollisionEnabled");

	Params::BP_GameActionTriggerZone_C_SetTriggerComponentsCollisionEnabled Parms{};

	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.SaveBehaviorState
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_GameActionTriggerZone_C::SaveBehaviorState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "SaveBehaviorState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.ResetState
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GameActionTriggerZone_C::ResetState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "ResetState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameActionTriggerZone_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "ReceiveEndPlay");

	Params::BP_GameActionTriggerZone_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_GameActionTriggerZone_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.OnObjectInteractionStateLoaded
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InteractionState                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameActionTriggerZone_C::OnObjectInteractionStateLoaded(bool InteractionState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "OnObjectInteractionStateLoaded");

	Params::BP_GameActionTriggerZone_C_OnObjectInteractionStateLoaded Parms{};

	Parms.InteractionState = InteractionState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.OnInteractionRequested
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_jRPG_Character_World_C*       InteractingWorldCharacter                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Instant                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameActionTriggerZone_C::OnInteractionRequested(class ABP_jRPG_Character_World_C* InteractingWorldCharacter, bool Instant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "OnInteractionRequested");

	Params::BP_GameActionTriggerZone_C_OnInteractionRequested Parms{};

	Parms.InteractingWorldCharacter = InteractingWorldCharacter;
	Parms.Instant = Instant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.OnInteractionEnabled
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GameActionTriggerZone_C::OnInteractionEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "OnInteractionEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.OnInteractionDisabled
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GameActionTriggerZone_C::OnInteractionDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "OnInteractionDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.OnGameActionExecuted
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGameAction*                      GameAction                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_GameActionTriggerZone_C::OnGameActionExecuted(class UGameAction* GameAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "OnGameActionExecuted");

	Params::BP_GameActionTriggerZone_C_OnGameActionExecuted Parms{};

	Parms.GameAction = GameAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.OnEnemyBattleStateLoaded
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    BattleState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameActionTriggerZone_C::OnEnemyBattleStateLoaded(bool BattleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "OnEnemyBattleStateLoaded");

	Params::BP_GameActionTriggerZone_C_OnEnemyBattleStateLoaded Parms{};

	Parms.BattleState = BattleState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.OnComponentEndOverlap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameActionTriggerZone_C::OnComponentEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "OnComponentEndOverlap");

	Params::BP_GameActionTriggerZone_C_OnComponentEndOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.OnComponentBeginOverlap
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_GameActionTriggerZone_C::OnComponentBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "OnComponentBeginOverlap");

	Params::BP_GameActionTriggerZone_C_OnComponentBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.OnActorOverlap
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_GameActionTriggerZone_C::OnActorOverlap(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "OnActorOverlap");

	Params::BP_GameActionTriggerZone_C_OnActorOverlap Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.IsPlayerOverlappingWithOtherTriggers
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsOverlapping                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameActionTriggerZone_C::IsPlayerOverlappingWithOtherTriggers(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, bool* IsOverlapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "IsPlayerOverlappingWithOtherTriggers");

	Params::BP_GameActionTriggerZone_C_IsPlayerOverlappingWithOtherTriggers Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);

	if (IsOverlapping != nullptr)
		*IsOverlapping = Parms.IsOverlapping;
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.IsInteractionDone
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Done                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameActionTriggerZone_C::IsInteractionDone(bool* Done)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "IsInteractionDone");

	Params::BP_GameActionTriggerZone_C_IsInteractionDone Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Done != nullptr)
		*Done = Parms.Done;
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.IsInteractionAvailable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Available                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameActionTriggerZone_C::IsInteractionAvailable(bool* Available)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "IsInteractionAvailable");

	Params::BP_GameActionTriggerZone_C_IsInteractionAvailable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Available != nullptr)
		*Available = Parms.Available;
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.GetInteractionPromptParams
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFPromptParams*                  PromptParams                                           (Parm, OutParm, HasGetValueTypeHash)

void ABP_GameActionTriggerZone_C::GetInteractionPromptParams(struct FFPromptParams* PromptParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "GetInteractionPromptParams");

	Params::BP_GameActionTriggerZone_C_GetInteractionPromptParams Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PromptParams != nullptr)
		*PromptParams = std::move(Parms.PromptParams);
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.ExecuteUbergraph_BP_GameActionTriggerZone
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameActionTriggerZone_C::ExecuteUbergraph_BP_GameActionTriggerZone(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "ExecuteUbergraph_BP_GameActionTriggerZone");

	Params::BP_GameActionTriggerZone_C_ExecuteUbergraph_BP_GameActionTriggerZone Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.ExecuteGameActionOnInteract
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_GameActionTriggerZone_C::ExecuteGameActionOnInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "ExecuteGameActionOnInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.CheckForErrors
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>&                    ErrorMessages                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_GameActionTriggerZone_C::CheckForErrors(TArray<class FText>& ErrorMessages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "CheckForErrors");

	Params::BP_GameActionTriggerZone_C_CheckForErrors Parms{};

	Parms.ErrorMessages = std::move(ErrorMessages);

	UObject::ProcessEvent(Func, &Parms);

	ErrorMessages = std::move(Parms.ErrorMessages);

	return Parms.ReturnValue;
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.CanInteractWithMount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   CanInteract                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameActionTriggerZone_C::CanInteractWithMount(bool* CanInteract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "CanInteractWithMount");

	Params::BP_GameActionTriggerZone_C_CanInteractWithMount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CanInteract != nullptr)
		*CanInteract = Parms.CanInteract;
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.BndEvt__BP_GameActionTriggerZone_BP_ConditionCheckerComponent_K2Node_ComponentBoundEvent_3_OnConditionChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    Condition                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameActionTriggerZone_C::BndEvt__BP_GameActionTriggerZone_BP_ConditionCheckerComponent_K2Node_ComponentBoundEvent_3_OnConditionChanged__DelegateSignature(bool Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "BndEvt__BP_GameActionTriggerZone_BP_ConditionCheckerComponent_K2Node_ComponentBoundEvent_3_OnConditionChanged__DelegateSignature");

	Params::BP_GameActionTriggerZone_C_BndEvt__BP_GameActionTriggerZone_BP_ConditionCheckerComponent_K2Node_ComponentBoundEvent_3_OnConditionChanged__DelegateSignature Parms{};

	Parms.Condition = Condition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.BindGameActionExecutor
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_GameActionTriggerZone_C::BindGameActionExecutor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "BindGameActionExecutor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.BindAllTriggerComponents
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GameActionTriggerZone_C::BindAllTriggerComponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "BindAllTriggerComponents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.GetInteractionLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FVector*                         Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameActionTriggerZone_C::GetInteractionLocation(struct FVector* Location) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "GetInteractionLocation");

	Params::BP_GameActionTriggerZone_C_GetInteractionLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_GameActionTriggerZone.BP_GameActionTriggerZone_C.GetInteractionFeedbackLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FVector*                         Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GameActionTriggerZone_C::GetInteractionFeedbackLocation(struct FVector* Location) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionTriggerZone_C", "GetInteractionFeedbackLocation");

	Params::BP_GameActionTriggerZone_C_GetInteractionFeedbackLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}

}

