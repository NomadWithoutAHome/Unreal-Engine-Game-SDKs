#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BlueWhale_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "BlueWhale_AnimBP_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass BlueWhale_AnimBP.BlueWhale_AnimBP_C
// 0x0C80 (0x0FF0 - 0x0370)
class UBlueWhale_AnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct BlueWhale_AnimBP::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;             // 0x0378(0x0010)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0388(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0390(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0398(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x03B8(0x00F0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x04A8(0x0048)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x04F0(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_7;                        // 0x0510(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_6;                        // 0x0638(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_5;                        // 0x0760(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_4;                        // 0x0888(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x09B0(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x0AD8(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x0C00(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0D28(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0D48(0x0128)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0E70(0x0070)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0EE0(0x0048)()
	double                                        Mouth;                                             // 0x0F28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Swim_Anim_Play_Rate;                               // 0x0F30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Animation_Blendspace;                              // 0x0F38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StartPosition;                                     // 0x0F40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Chest_0_Rotation;                                  // 0x0F48(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Tail_0_Rotation;                                   // 0x0F60(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Tail_1_Rotation;                                   // 0x0F78(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Tail_2_Rotation;                                   // 0x0F90(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Tail_3_Rotation;                                   // 0x0FA8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Head_Rotation;                                     // 0x0FC0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Tail_4_Rotation;                                   // 0x0FD8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BlueWhale_AnimBP(int32 EntryPoint);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BlueWhale_AnimBP_C">();
	}
	static class UBlueWhale_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlueWhale_AnimBP_C>();
	}
};
static_assert(alignof(UBlueWhale_AnimBP_C) == 0x000010, "Wrong alignment on UBlueWhale_AnimBP_C");
static_assert(sizeof(UBlueWhale_AnimBP_C) == 0x000FF0, "Wrong size on UBlueWhale_AnimBP_C");
static_assert(offsetof(UBlueWhale_AnimBP_C, UberGraphFrame) == 0x000370, "Member 'UBlueWhale_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBlueWhale_AnimBP_C, __AnimBlueprintMutables) == 0x000378, "Member 'UBlueWhale_AnimBP_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UBlueWhale_AnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x000388, "Member 'UBlueWhale_AnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UBlueWhale_AnimBP_C, AnimBlueprintExtension_Base) == 0x000390, "Member 'UBlueWhale_AnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UBlueWhale_AnimBP_C, AnimGraphNode_Root) == 0x000398, "Member 'UBlueWhale_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UBlueWhale_AnimBP_C, AnimGraphNode_LayeredBoneBlend) == 0x0003B8, "Member 'UBlueWhale_AnimBP_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UBlueWhale_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x0004A8, "Member 'UBlueWhale_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UBlueWhale_AnimBP_C, AnimGraphNode_LocalToComponentSpace) == 0x0004F0, "Member 'UBlueWhale_AnimBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UBlueWhale_AnimBP_C, AnimGraphNode_ModifyBone_7) == 0x000510, "Member 'UBlueWhale_AnimBP_C::AnimGraphNode_ModifyBone_7' has a wrong offset!");
static_assert(offsetof(UBlueWhale_AnimBP_C, AnimGraphNode_ModifyBone_6) == 0x000638, "Member 'UBlueWhale_AnimBP_C::AnimGraphNode_ModifyBone_6' has a wrong offset!");
static_assert(offsetof(UBlueWhale_AnimBP_C, AnimGraphNode_ModifyBone_5) == 0x000760, "Member 'UBlueWhale_AnimBP_C::AnimGraphNode_ModifyBone_5' has a wrong offset!");
static_assert(offsetof(UBlueWhale_AnimBP_C, AnimGraphNode_ModifyBone_4) == 0x000888, "Member 'UBlueWhale_AnimBP_C::AnimGraphNode_ModifyBone_4' has a wrong offset!");
static_assert(offsetof(UBlueWhale_AnimBP_C, AnimGraphNode_ModifyBone_3) == 0x0009B0, "Member 'UBlueWhale_AnimBP_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UBlueWhale_AnimBP_C, AnimGraphNode_ModifyBone_2) == 0x000AD8, "Member 'UBlueWhale_AnimBP_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UBlueWhale_AnimBP_C, AnimGraphNode_ModifyBone_1) == 0x000C00, "Member 'UBlueWhale_AnimBP_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UBlueWhale_AnimBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x000D28, "Member 'UBlueWhale_AnimBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UBlueWhale_AnimBP_C, AnimGraphNode_ModifyBone) == 0x000D48, "Member 'UBlueWhale_AnimBP_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UBlueWhale_AnimBP_C, AnimGraphNode_BlendSpacePlayer) == 0x000E70, "Member 'UBlueWhale_AnimBP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UBlueWhale_AnimBP_C, AnimGraphNode_Slot) == 0x000EE0, "Member 'UBlueWhale_AnimBP_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UBlueWhale_AnimBP_C, Mouth) == 0x000F28, "Member 'UBlueWhale_AnimBP_C::Mouth' has a wrong offset!");
static_assert(offsetof(UBlueWhale_AnimBP_C, Swim_Anim_Play_Rate) == 0x000F30, "Member 'UBlueWhale_AnimBP_C::Swim_Anim_Play_Rate' has a wrong offset!");
static_assert(offsetof(UBlueWhale_AnimBP_C, Animation_Blendspace) == 0x000F38, "Member 'UBlueWhale_AnimBP_C::Animation_Blendspace' has a wrong offset!");
static_assert(offsetof(UBlueWhale_AnimBP_C, StartPosition) == 0x000F40, "Member 'UBlueWhale_AnimBP_C::StartPosition' has a wrong offset!");
static_assert(offsetof(UBlueWhale_AnimBP_C, Chest_0_Rotation) == 0x000F48, "Member 'UBlueWhale_AnimBP_C::Chest_0_Rotation' has a wrong offset!");
static_assert(offsetof(UBlueWhale_AnimBP_C, Tail_0_Rotation) == 0x000F60, "Member 'UBlueWhale_AnimBP_C::Tail_0_Rotation' has a wrong offset!");
static_assert(offsetof(UBlueWhale_AnimBP_C, Tail_1_Rotation) == 0x000F78, "Member 'UBlueWhale_AnimBP_C::Tail_1_Rotation' has a wrong offset!");
static_assert(offsetof(UBlueWhale_AnimBP_C, Tail_2_Rotation) == 0x000F90, "Member 'UBlueWhale_AnimBP_C::Tail_2_Rotation' has a wrong offset!");
static_assert(offsetof(UBlueWhale_AnimBP_C, Tail_3_Rotation) == 0x000FA8, "Member 'UBlueWhale_AnimBP_C::Tail_3_Rotation' has a wrong offset!");
static_assert(offsetof(UBlueWhale_AnimBP_C, Head_Rotation) == 0x000FC0, "Member 'UBlueWhale_AnimBP_C::Head_Rotation' has a wrong offset!");
static_assert(offsetof(UBlueWhale_AnimBP_C, Tail_4_Rotation) == 0x000FD8, "Member 'UBlueWhale_AnimBP_C::Tail_4_Rotation' has a wrong offset!");

}

