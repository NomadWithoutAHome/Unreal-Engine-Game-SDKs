#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ShortJumper

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "FPromptID_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FPromptParams_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ShortJumper.BP_ShortJumper_C
// 0x00D0 (0x0360 - 0x0290)
class ABP_ShortJumper_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Cube;                                              // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        JumpLandingLocationArrow;                          // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CharacterSize;                                     // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Circle;                                            // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         SuperJumpTimeline_RotationTrack_54DFF20B4855EC9D17889F9E82AF7D31; // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SuperJumpTimeline_JumpTrackXY_54DFF20B4855EC9D17889F9E82AF7D31; // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SuperJumpTimeline_JumpTrackZ_54DFF20B4855EC9D17889F9E82AF7D31; // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            SuperJumpTimeline__Direction_54DFF20B4855EC9D17889F9E82AF7D31; // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     SuperJumpTimeline;                                 // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CharacterLocationAtJumpStart;                      // 0x02E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CharacterRotationAtJumpStart;                      // 0x02F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FFPromptParams                         Prompt_Params;                                     // 0x0310(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FFPromptID                             Prompt_ID;                                         // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         JumpRate;                                          // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayBeforeJump;                                   // 0x033C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsePrompt;                                         // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               ControlRotationAtJumpStart;                        // 0x0348(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void BndEvt__BP_Jumper_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_Jumper_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void ExecuteUbergraph_BP_ShortJumper(int32 EntryPoint);
	void ShortJump();
	void StopTimeline();
	void SuperJumpTimeline__FinishedFunc();
	void SuperJumpTimeline__UpdateFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ShortJumper_C">();
	}
	static class ABP_ShortJumper_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ShortJumper_C>();
	}
};
static_assert(alignof(ABP_ShortJumper_C) == 0x000008, "Wrong alignment on ABP_ShortJumper_C");
static_assert(sizeof(ABP_ShortJumper_C) == 0x000360, "Wrong size on ABP_ShortJumper_C");
static_assert(offsetof(ABP_ShortJumper_C, UberGraphFrame) == 0x000290, "Member 'ABP_ShortJumper_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ShortJumper_C, Cube) == 0x000298, "Member 'ABP_ShortJumper_C::Cube' has a wrong offset!");
static_assert(offsetof(ABP_ShortJumper_C, JumpLandingLocationArrow) == 0x0002A0, "Member 'ABP_ShortJumper_C::JumpLandingLocationArrow' has a wrong offset!");
static_assert(offsetof(ABP_ShortJumper_C, CharacterSize) == 0x0002A8, "Member 'ABP_ShortJumper_C::CharacterSize' has a wrong offset!");
static_assert(offsetof(ABP_ShortJumper_C, Box) == 0x0002B0, "Member 'ABP_ShortJumper_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_ShortJumper_C, Circle) == 0x0002B8, "Member 'ABP_ShortJumper_C::Circle' has a wrong offset!");
static_assert(offsetof(ABP_ShortJumper_C, DefaultSceneRoot) == 0x0002C0, "Member 'ABP_ShortJumper_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ShortJumper_C, SuperJumpTimeline_RotationTrack_54DFF20B4855EC9D17889F9E82AF7D31) == 0x0002C8, "Member 'ABP_ShortJumper_C::SuperJumpTimeline_RotationTrack_54DFF20B4855EC9D17889F9E82AF7D31' has a wrong offset!");
static_assert(offsetof(ABP_ShortJumper_C, SuperJumpTimeline_JumpTrackXY_54DFF20B4855EC9D17889F9E82AF7D31) == 0x0002CC, "Member 'ABP_ShortJumper_C::SuperJumpTimeline_JumpTrackXY_54DFF20B4855EC9D17889F9E82AF7D31' has a wrong offset!");
static_assert(offsetof(ABP_ShortJumper_C, SuperJumpTimeline_JumpTrackZ_54DFF20B4855EC9D17889F9E82AF7D31) == 0x0002D0, "Member 'ABP_ShortJumper_C::SuperJumpTimeline_JumpTrackZ_54DFF20B4855EC9D17889F9E82AF7D31' has a wrong offset!");
static_assert(offsetof(ABP_ShortJumper_C, SuperJumpTimeline__Direction_54DFF20B4855EC9D17889F9E82AF7D31) == 0x0002D4, "Member 'ABP_ShortJumper_C::SuperJumpTimeline__Direction_54DFF20B4855EC9D17889F9E82AF7D31' has a wrong offset!");
static_assert(offsetof(ABP_ShortJumper_C, SuperJumpTimeline) == 0x0002D8, "Member 'ABP_ShortJumper_C::SuperJumpTimeline' has a wrong offset!");
static_assert(offsetof(ABP_ShortJumper_C, CharacterLocationAtJumpStart) == 0x0002E0, "Member 'ABP_ShortJumper_C::CharacterLocationAtJumpStart' has a wrong offset!");
static_assert(offsetof(ABP_ShortJumper_C, CharacterRotationAtJumpStart) == 0x0002F8, "Member 'ABP_ShortJumper_C::CharacterRotationAtJumpStart' has a wrong offset!");
static_assert(offsetof(ABP_ShortJumper_C, Prompt_Params) == 0x000310, "Member 'ABP_ShortJumper_C::Prompt_Params' has a wrong offset!");
static_assert(offsetof(ABP_ShortJumper_C, Prompt_ID) == 0x000328, "Member 'ABP_ShortJumper_C::Prompt_ID' has a wrong offset!");
static_assert(offsetof(ABP_ShortJumper_C, JumpRate) == 0x000338, "Member 'ABP_ShortJumper_C::JumpRate' has a wrong offset!");
static_assert(offsetof(ABP_ShortJumper_C, DelayBeforeJump) == 0x00033C, "Member 'ABP_ShortJumper_C::DelayBeforeJump' has a wrong offset!");
static_assert(offsetof(ABP_ShortJumper_C, UsePrompt) == 0x000340, "Member 'ABP_ShortJumper_C::UsePrompt' has a wrong offset!");
static_assert(offsetof(ABP_ShortJumper_C, ControlRotationAtJumpStart) == 0x000348, "Member 'ABP_ShortJumper_C::ControlRotationAtJumpStart' has a wrong offset!");

}

