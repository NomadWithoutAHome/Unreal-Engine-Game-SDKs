#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CharacterSelector

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SandFall_structs.hpp"
#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CharacterSelector.WBP_CharacterSelector_C
// 0x00F8 (0x0528 - 0x0430)
class UWBP_CharacterSelector_C final : public UCommonActivatableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Onclick_Left;                                 // 0x0438(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_OnClick_Right;                                // 0x0440(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_PortraitSelector;                    // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ButtonBinding_C*                   WBP_ButtonBinding_LeftSelection;                   // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ButtonBinding_C*                   WBP_ButtonBinding_RightSelection;                  // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CharacterSelectorEntry_C*          WBP_CharacterSelectorEntry;                        // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CharacterSelectorEntry_C*          WBP_CharacterSelectorEntry_1;                      // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CharacterSelectorEntry_C*          WBP_CharacterSelectorEntry_2;                      // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CharacterSelectorEntry_C*          WBP_CharacterSelectorEntry_3;                      // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CharacterSelectorEntry_C*          WBP_CharacterSelectorEntry_4;                      // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    SelectedCharacter;                                 // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UBP_CharacterData_C* NewCharacter)> OnSelectedCharacterChanged; // 0x0490(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMap<class UBP_CharacterData_C*, class UWBP_CharacterSelectorEntry_C*> CharacterToWidget;        // 0x04A0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UBP_CharacterData_C*>            CharacterList;                                     // 0x04F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void()>              OnBackPressed;                                     // 0x0500(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          HasPreSetSelectedCharacter;                        // 0x0510(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_511[0x7];                                      // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundEventDataTableRowHandle          SD_OnCharacterChanged;                             // 0x0518(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void BndEvt__WBP_CharacterSelector_WBP_ButtonBinding_K2Node_ComponentBoundEvent_1_OnPressed__DelegateSignature(class UWBP_ButtonBinding_C* PromptWidget);
	void BndEvt__WBP_CharacterSelector_WBP_ButtonBinding_RightSelection_K2Node_ComponentBoundEvent_0_OnPressed__DelegateSignature(class UWBP_ButtonBinding_C* PromptWidget);
	void BP_OnActivated();
	void BP_OnDeactivated();
	void ClearSelectedCharacter();
	void ExecuteUbergraph_WBP_CharacterSelector(int32 EntryPoint);
	void LoadCharacterCollection(TArray<class UBP_CharacterData_C*>& CharacterList_0);
	void LockCharacterSelector(bool IsLocked);
	void PreSetSelectedCharacter(class UBP_CharacterData_C* SelectedCharacter_0);
	void SetSelectedCharacter(class UBP_CharacterData_C* CharacterData);

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CharacterSelector_C">();
	}
	static class UWBP_CharacterSelector_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CharacterSelector_C>();
	}
};
static_assert(alignof(UWBP_CharacterSelector_C) == 0x000008, "Wrong alignment on UWBP_CharacterSelector_C");
static_assert(sizeof(UWBP_CharacterSelector_C) == 0x000528, "Wrong size on UWBP_CharacterSelector_C");
static_assert(offsetof(UWBP_CharacterSelector_C, UberGraphFrame) == 0x000430, "Member 'UWBP_CharacterSelector_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelector_C, Anim_Onclick_Left) == 0x000438, "Member 'UWBP_CharacterSelector_C::Anim_Onclick_Left' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelector_C, Anim_OnClick_Right) == 0x000440, "Member 'UWBP_CharacterSelector_C::Anim_OnClick_Right' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelector_C, HorizontalBox_PortraitSelector) == 0x000448, "Member 'UWBP_CharacterSelector_C::HorizontalBox_PortraitSelector' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelector_C, WBP_ButtonBinding_LeftSelection) == 0x000450, "Member 'UWBP_CharacterSelector_C::WBP_ButtonBinding_LeftSelection' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelector_C, WBP_ButtonBinding_RightSelection) == 0x000458, "Member 'UWBP_CharacterSelector_C::WBP_ButtonBinding_RightSelection' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelector_C, WBP_CharacterSelectorEntry) == 0x000460, "Member 'UWBP_CharacterSelector_C::WBP_CharacterSelectorEntry' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelector_C, WBP_CharacterSelectorEntry_1) == 0x000468, "Member 'UWBP_CharacterSelector_C::WBP_CharacterSelectorEntry_1' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelector_C, WBP_CharacterSelectorEntry_2) == 0x000470, "Member 'UWBP_CharacterSelector_C::WBP_CharacterSelectorEntry_2' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelector_C, WBP_CharacterSelectorEntry_3) == 0x000478, "Member 'UWBP_CharacterSelector_C::WBP_CharacterSelectorEntry_3' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelector_C, WBP_CharacterSelectorEntry_4) == 0x000480, "Member 'UWBP_CharacterSelector_C::WBP_CharacterSelectorEntry_4' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelector_C, SelectedCharacter) == 0x000488, "Member 'UWBP_CharacterSelector_C::SelectedCharacter' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelector_C, OnSelectedCharacterChanged) == 0x000490, "Member 'UWBP_CharacterSelector_C::OnSelectedCharacterChanged' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelector_C, CharacterToWidget) == 0x0004A0, "Member 'UWBP_CharacterSelector_C::CharacterToWidget' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelector_C, CharacterList) == 0x0004F0, "Member 'UWBP_CharacterSelector_C::CharacterList' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelector_C, OnBackPressed) == 0x000500, "Member 'UWBP_CharacterSelector_C::OnBackPressed' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelector_C, HasPreSetSelectedCharacter) == 0x000510, "Member 'UWBP_CharacterSelector_C::HasPreSetSelectedCharacter' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelector_C, SD_OnCharacterChanged) == 0x000518, "Member 'UWBP_CharacterSelector_C::SD_OnCharacterChanged' has a wrong offset!");

}

