#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameActionExecutorComponent

#include "Basic.hpp"

#include "SandFall_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_GameActionExecutorComponent.BP_GameActionExecutorComponent_C.DrawDebug
// 0x0010 (0x0010 - 0x0000)
struct BP_GameActionExecutorComponent_C_DrawDebug final
{
public:
	class FString                                 CallFunc_GetDebugString_String;                    // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionExecutorComponent_C_DrawDebug) == 0x000008, "Wrong alignment on BP_GameActionExecutorComponent_C_DrawDebug");
static_assert(sizeof(BP_GameActionExecutorComponent_C_DrawDebug) == 0x000010, "Wrong size on BP_GameActionExecutorComponent_C_DrawDebug");
static_assert(offsetof(BP_GameActionExecutorComponent_C_DrawDebug, CallFunc_GetDebugString_String) == 0x000000, "Member 'BP_GameActionExecutorComponent_C_DrawDebug::CallFunc_GetDebugString_String' has a wrong offset!");

// Function BP_GameActionExecutorComponent.BP_GameActionExecutorComponent_C.ExecuteGameAction
// 0x0048 (0x0048 - 0x0000)
struct BP_GameActionExecutorComponent_C_ExecuteGameAction final
{
public:
	class UGameAction*                            GameAction;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UGameActionInstance* GameActionInstance)> K2Node_CreateDelegate_OutputDelegate; // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameAction*                            Temp_wildcard_Variable;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UGameActionInstance>        CallFunc_GetInstanceClass_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameActionInstance*                    CallFunc_SpawnObject_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionExecutorComponent_C_ExecuteGameAction) == 0x000008, "Wrong alignment on BP_GameActionExecutorComponent_C_ExecuteGameAction");
static_assert(sizeof(BP_GameActionExecutorComponent_C_ExecuteGameAction) == 0x000048, "Wrong size on BP_GameActionExecutorComponent_C_ExecuteGameAction");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ExecuteGameAction, GameAction) == 0x000000, "Member 'BP_GameActionExecutorComponent_C_ExecuteGameAction::GameAction' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ExecuteGameAction, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_GameActionExecutorComponent_C_ExecuteGameAction::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ExecuteGameAction, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'BP_GameActionExecutorComponent_C_ExecuteGameAction::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ExecuteGameAction, Temp_wildcard_Variable) == 0x000020, "Member 'BP_GameActionExecutorComponent_C_ExecuteGameAction::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ExecuteGameAction, CallFunc_GetInstanceClass_ReturnValue) == 0x000028, "Member 'BP_GameActionExecutorComponent_C_ExecuteGameAction::CallFunc_GetInstanceClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ExecuteGameAction, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_GameActionExecutorComponent_C_ExecuteGameAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ExecuteGameAction, CallFunc_SpawnObject_ReturnValue) == 0x000038, "Member 'BP_GameActionExecutorComponent_C_ExecuteGameAction::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ExecuteGameAction, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'BP_GameActionExecutorComponent_C_ExecuteGameAction::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_GameActionExecutorComponent.BP_GameActionExecutorComponent_C.ExecuteGameActionWrapper
// 0x0018 (0x0018 - 0x0000)
struct BP_GameActionExecutorComponent_C_ExecuteGameActionWrapper final
{
public:
	struct FGameAction_Wrapper                    GameActrionWrapper;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UGameAction*                            CallFunc_GetGameActionFromWrapper_GameAction;      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionExecutorComponent_C_ExecuteGameActionWrapper) == 0x000008, "Wrong alignment on BP_GameActionExecutorComponent_C_ExecuteGameActionWrapper");
static_assert(sizeof(BP_GameActionExecutorComponent_C_ExecuteGameActionWrapper) == 0x000018, "Wrong size on BP_GameActionExecutorComponent_C_ExecuteGameActionWrapper");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ExecuteGameActionWrapper, GameActrionWrapper) == 0x000000, "Member 'BP_GameActionExecutorComponent_C_ExecuteGameActionWrapper::GameActrionWrapper' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ExecuteGameActionWrapper, CallFunc_GetGameActionFromWrapper_GameAction) == 0x000010, "Member 'BP_GameActionExecutorComponent_C_ExecuteGameActionWrapper::CallFunc_GetGameActionFromWrapper_GameAction' has a wrong offset!");

// Function BP_GameActionExecutorComponent.BP_GameActionExecutorComponent_C.ExecuteUbergraph_BP_GameActionExecutorComponent
// 0x0038 (0x0038 - 0x0000)
struct BP_GameActionExecutorComponent_C_ExecuteUbergraph_BP_GameActionExecutorComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SaveManager_C*                      CallFunc_GetSaveManager_SaveManager;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Paused;                               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHandleValid_ReturnValue;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionExecutorComponent_C_ExecuteUbergraph_BP_GameActionExecutorComponent) == 0x000008, "Wrong alignment on BP_GameActionExecutorComponent_C_ExecuteUbergraph_BP_GameActionExecutorComponent");
static_assert(sizeof(BP_GameActionExecutorComponent_C_ExecuteUbergraph_BP_GameActionExecutorComponent) == 0x000038, "Wrong size on BP_GameActionExecutorComponent_C_ExecuteUbergraph_BP_GameActionExecutorComponent");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ExecuteUbergraph_BP_GameActionExecutorComponent, EntryPoint) == 0x000000, "Member 'BP_GameActionExecutorComponent_C_ExecuteUbergraph_BP_GameActionExecutorComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ExecuteUbergraph_BP_GameActionExecutorComponent, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_GameActionExecutorComponent_C_ExecuteUbergraph_BP_GameActionExecutorComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ExecuteUbergraph_BP_GameActionExecutorComponent, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_GameActionExecutorComponent_C_ExecuteUbergraph_BP_GameActionExecutorComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ExecuteUbergraph_BP_GameActionExecutorComponent, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_GameActionExecutorComponent_C_ExecuteUbergraph_BP_GameActionExecutorComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ExecuteUbergraph_BP_GameActionExecutorComponent, K2Node_Event_DeltaSeconds) == 0x000010, "Member 'BP_GameActionExecutorComponent_C_ExecuteUbergraph_BP_GameActionExecutorComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ExecuteUbergraph_BP_GameActionExecutorComponent, K2Node_Event_EndPlayReason) == 0x000014, "Member 'BP_GameActionExecutorComponent_C_ExecuteUbergraph_BP_GameActionExecutorComponent::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ExecuteUbergraph_BP_GameActionExecutorComponent, CallFunc_GetSaveManager_SaveManager) == 0x000018, "Member 'BP_GameActionExecutorComponent_C_ExecuteUbergraph_BP_GameActionExecutorComponent::CallFunc_GetSaveManager_SaveManager' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ExecuteUbergraph_BP_GameActionExecutorComponent, K2Node_Event_Paused) == 0x000020, "Member 'BP_GameActionExecutorComponent_C_ExecuteUbergraph_BP_GameActionExecutorComponent::K2Node_Event_Paused' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ExecuteUbergraph_BP_GameActionExecutorComponent, CallFunc_IsHandleValid_ReturnValue) == 0x000021, "Member 'BP_GameActionExecutorComponent_C_ExecuteUbergraph_BP_GameActionExecutorComponent::CallFunc_IsHandleValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ExecuteUbergraph_BP_GameActionExecutorComponent, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_GameActionExecutorComponent_C_ExecuteUbergraph_BP_GameActionExecutorComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ExecuteUbergraph_BP_GameActionExecutorComponent, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_GameActionExecutorComponent_C_ExecuteUbergraph_BP_GameActionExecutorComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ExecuteUbergraph_BP_GameActionExecutorComponent, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_GameActionExecutorComponent_C_ExecuteUbergraph_BP_GameActionExecutorComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GameActionExecutorComponent.BP_GameActionExecutorComponent_C.HasAnyGameActionInExecution
// 0x0002 (0x0002 - 0x0000)
struct BP_GameActionExecutorComponent_C_HasAnyGameActionInExecution final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionExecutorComponent_C_HasAnyGameActionInExecution) == 0x000001, "Wrong alignment on BP_GameActionExecutorComponent_C_HasAnyGameActionInExecution");
static_assert(sizeof(BP_GameActionExecutorComponent_C_HasAnyGameActionInExecution) == 0x000002, "Wrong size on BP_GameActionExecutorComponent_C_HasAnyGameActionInExecution");
static_assert(offsetof(BP_GameActionExecutorComponent_C_HasAnyGameActionInExecution, ReturnValue) == 0x000000, "Member 'BP_GameActionExecutorComponent_C_HasAnyGameActionInExecution::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_HasAnyGameActionInExecution, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000001, "Member 'BP_GameActionExecutorComponent_C_HasAnyGameActionInExecution::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");

// Function BP_GameActionExecutorComponent.BP_GameActionExecutorComponent_C.OnAudioComponentStateChanged
// 0x0030 (0x0030 - 0x0000)
struct BP_GameActionExecutorComponent_C_OnAudioComponentStateChanged final
{
public:
	EAudioComponentPlayState                      PlayState;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionExecutorComponent_C_OnAudioComponentStateChanged) == 0x000008, "Wrong alignment on BP_GameActionExecutorComponent_C_OnAudioComponentStateChanged");
static_assert(sizeof(BP_GameActionExecutorComponent_C_OnAudioComponentStateChanged) == 0x000030, "Wrong size on BP_GameActionExecutorComponent_C_OnAudioComponentStateChanged");
static_assert(offsetof(BP_GameActionExecutorComponent_C_OnAudioComponentStateChanged, PlayState) == 0x000000, "Member 'BP_GameActionExecutorComponent_C_OnAudioComponentStateChanged::PlayState' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_OnAudioComponentStateChanged, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_GameActionExecutorComponent_C_OnAudioComponentStateChanged::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_OnAudioComponentStateChanged, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_GameActionExecutorComponent_C_OnAudioComponentStateChanged::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_OnAudioComponentStateChanged, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_GameActionExecutorComponent_C_OnAudioComponentStateChanged::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_OnAudioComponentStateChanged, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BP_GameActionExecutorComponent_C_OnAudioComponentStateChanged::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_OnAudioComponentStateChanged, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_GameActionExecutorComponent_C_OnAudioComponentStateChanged::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_OnAudioComponentStateChanged, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_GameActionExecutorComponent_C_OnAudioComponentStateChanged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_OnAudioComponentStateChanged, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_GameActionExecutorComponent_C_OnAudioComponentStateChanged::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_OnAudioComponentStateChanged, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_GameActionExecutorComponent_C_OnAudioComponentStateChanged::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_OnAudioComponentStateChanged, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_GameActionExecutorComponent_C_OnAudioComponentStateChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_OnAudioComponentStateChanged, CallFunc_Max_ReturnValue) == 0x000028, "Member 'BP_GameActionExecutorComponent_C_OnAudioComponentStateChanged::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function BP_GameActionExecutorComponent.BP_GameActionExecutorComponent_C.OnGameActionExecutionFinished
// 0x0028 (0x0028 - 0x0000)
struct BP_GameActionExecutorComponent_C_OnGameActionExecutionFinished final
{
public:
	class UGameActionInstance*                    GameActionInstance;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UGameActionInstance* GameActionInstance)> K2Node_CreateDelegate_OutputDelegate; // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameAction*                            Temp_wildcard_Variable;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionExecutorComponent_C_OnGameActionExecutionFinished) == 0x000008, "Wrong alignment on BP_GameActionExecutorComponent_C_OnGameActionExecutionFinished");
static_assert(sizeof(BP_GameActionExecutorComponent_C_OnGameActionExecutionFinished) == 0x000028, "Wrong size on BP_GameActionExecutorComponent_C_OnGameActionExecutionFinished");
static_assert(offsetof(BP_GameActionExecutorComponent_C_OnGameActionExecutionFinished, GameActionInstance) == 0x000000, "Member 'BP_GameActionExecutorComponent_C_OnGameActionExecutionFinished::GameActionInstance' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_OnGameActionExecutionFinished, CallFunc_Array_RemoveItem_ReturnValue) == 0x000008, "Member 'BP_GameActionExecutorComponent_C_OnGameActionExecutionFinished::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_OnGameActionExecutionFinished, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'BP_GameActionExecutorComponent_C_OnGameActionExecutionFinished::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_OnGameActionExecutionFinished, Temp_wildcard_Variable) == 0x000020, "Member 'BP_GameActionExecutorComponent_C_OnGameActionExecutionFinished::Temp_wildcard_Variable' has a wrong offset!");

// Function BP_GameActionExecutorComponent.BP_GameActionExecutorComponent_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_GameActionExecutorComponent_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionExecutorComponent_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_GameActionExecutorComponent_C_ReceiveEndPlay");
static_assert(sizeof(BP_GameActionExecutorComponent_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_GameActionExecutorComponent_C_ReceiveEndPlay");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_GameActionExecutorComponent_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_GameActionExecutorComponent.BP_GameActionExecutorComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_GameActionExecutorComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionExecutorComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_GameActionExecutorComponent_C_ReceiveTick");
static_assert(sizeof(BP_GameActionExecutorComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_GameActionExecutorComponent_C_ReceiveTick");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_GameActionExecutorComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_GameActionExecutorComponent.BP_GameActionExecutorComponent_C.RegisterSpawnedAudioComponent
// 0x0020 (0x0020 - 0x0000)
struct BP_GameActionExecutorComponent_C_RegisterSpawnedAudioComponent final
{
public:
	const class UAudioComponent*                  AudioComponent;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAudioComponentPlayState PlayState)> K2Node_CreateDelegate_OutputDelegate;        // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionExecutorComponent_C_RegisterSpawnedAudioComponent) == 0x000008, "Wrong alignment on BP_GameActionExecutorComponent_C_RegisterSpawnedAudioComponent");
static_assert(sizeof(BP_GameActionExecutorComponent_C_RegisterSpawnedAudioComponent) == 0x000020, "Wrong size on BP_GameActionExecutorComponent_C_RegisterSpawnedAudioComponent");
static_assert(offsetof(BP_GameActionExecutorComponent_C_RegisterSpawnedAudioComponent, AudioComponent) == 0x000000, "Member 'BP_GameActionExecutorComponent_C_RegisterSpawnedAudioComponent::AudioComponent' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_RegisterSpawnedAudioComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_GameActionExecutorComponent_C_RegisterSpawnedAudioComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_RegisterSpawnedAudioComponent, CallFunc_Array_AddUnique_ReturnValue) == 0x000018, "Member 'BP_GameActionExecutorComponent_C_RegisterSpawnedAudioComponent::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_GameActionExecutorComponent.BP_GameActionExecutorComponent_C.RequestAutoSaveIfNeeded
// 0x0098 (0x0098 - 0x0000)
struct BP_GameActionExecutorComponent_C_RequestAutoSaveIfNeeded final
{
public:
	class UGameActionInstance*                    GameActionInstance;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldTriggerAutoSaveAfterExecution_ReturnValue; // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionExecutorComponent_C_RequestAutoSaveIfNeeded) == 0x000008, "Wrong alignment on BP_GameActionExecutorComponent_C_RequestAutoSaveIfNeeded");
static_assert(sizeof(BP_GameActionExecutorComponent_C_RequestAutoSaveIfNeeded) == 0x000098, "Wrong size on BP_GameActionExecutorComponent_C_RequestAutoSaveIfNeeded");
static_assert(offsetof(BP_GameActionExecutorComponent_C_RequestAutoSaveIfNeeded, GameActionInstance) == 0x000000, "Member 'BP_GameActionExecutorComponent_C_RequestAutoSaveIfNeeded::GameActionInstance' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_RequestAutoSaveIfNeeded, CallFunc_ShouldTriggerAutoSaveAfterExecution_ReturnValue) == 0x000008, "Member 'BP_GameActionExecutorComponent_C_RequestAutoSaveIfNeeded::CallFunc_ShouldTriggerAutoSaveAfterExecution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_RequestAutoSaveIfNeeded, CallFunc_GetDisplayName_ReturnValue) == 0x000010, "Member 'BP_GameActionExecutorComponent_C_RequestAutoSaveIfNeeded::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_RequestAutoSaveIfNeeded, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'BP_GameActionExecutorComponent_C_RequestAutoSaveIfNeeded::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_RequestAutoSaveIfNeeded, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_GameActionExecutorComponent_C_RequestAutoSaveIfNeeded::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_RequestAutoSaveIfNeeded, K2Node_MakeArray_Array) == 0x000078, "Member 'BP_GameActionExecutorComponent_C_RequestAutoSaveIfNeeded::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_RequestAutoSaveIfNeeded, CallFunc_Format_ReturnValue) == 0x000088, "Member 'BP_GameActionExecutorComponent_C_RequestAutoSaveIfNeeded::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_GameActionExecutorComponent.BP_GameActionExecutorComponent_C.SetDebugDrawEnable
// 0x0003 (0x0003 - 0x0000)
struct BP_GameActionExecutorComponent_C_SetDebugDrawEnable final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionExecutorComponent_C_SetDebugDrawEnable) == 0x000001, "Wrong alignment on BP_GameActionExecutorComponent_C_SetDebugDrawEnable");
static_assert(sizeof(BP_GameActionExecutorComponent_C_SetDebugDrawEnable) == 0x000003, "Wrong size on BP_GameActionExecutorComponent_C_SetDebugDrawEnable");
static_assert(offsetof(BP_GameActionExecutorComponent_C_SetDebugDrawEnable, Enable) == 0x000000, "Member 'BP_GameActionExecutorComponent_C_SetDebugDrawEnable::Enable' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_SetDebugDrawEnable, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000001, "Member 'BP_GameActionExecutorComponent_C_SetDebugDrawEnable::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_SetDebugDrawEnable, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_GameActionExecutorComponent_C_SetDebugDrawEnable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_GameActionExecutorComponent.BP_GameActionExecutorComponent_C.SetGameplayPaused
// 0x0001 (0x0001 - 0x0000)
struct BP_GameActionExecutorComponent_C_SetGameplayPaused final
{
public:
	bool                                          Paused;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionExecutorComponent_C_SetGameplayPaused) == 0x000001, "Wrong alignment on BP_GameActionExecutorComponent_C_SetGameplayPaused");
static_assert(sizeof(BP_GameActionExecutorComponent_C_SetGameplayPaused) == 0x000001, "Wrong size on BP_GameActionExecutorComponent_C_SetGameplayPaused");
static_assert(offsetof(BP_GameActionExecutorComponent_C_SetGameplayPaused, Paused) == 0x000000, "Member 'BP_GameActionExecutorComponent_C_SetGameplayPaused::Paused' has a wrong offset!");

// Function BP_GameActionExecutorComponent.BP_GameActionExecutorComponent_C.ShouldBlockAutoSave
// 0x0020 (0x0020 - 0x0000)
struct BP_GameActionExecutorComponent_C_ShouldBlockAutoSave final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameActionInstance*                    CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldBlockAutoSaveDuringExecution_ReturnValue; // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionExecutorComponent_C_ShouldBlockAutoSave) == 0x000008, "Wrong alignment on BP_GameActionExecutorComponent_C_ShouldBlockAutoSave");
static_assert(sizeof(BP_GameActionExecutorComponent_C_ShouldBlockAutoSave) == 0x000020, "Wrong size on BP_GameActionExecutorComponent_C_ShouldBlockAutoSave");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ShouldBlockAutoSave, ReturnValue) == 0x000000, "Member 'BP_GameActionExecutorComponent_C_ShouldBlockAutoSave::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ShouldBlockAutoSave, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_GameActionExecutorComponent_C_ShouldBlockAutoSave::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ShouldBlockAutoSave, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_GameActionExecutorComponent_C_ShouldBlockAutoSave::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ShouldBlockAutoSave, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_GameActionExecutorComponent_C_ShouldBlockAutoSave::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ShouldBlockAutoSave, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_GameActionExecutorComponent_C_ShouldBlockAutoSave::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ShouldBlockAutoSave, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_GameActionExecutorComponent_C_ShouldBlockAutoSave::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ShouldBlockAutoSave, CallFunc_ShouldBlockAutoSaveDuringExecution_ReturnValue) == 0x00001C, "Member 'BP_GameActionExecutorComponent_C_ShouldBlockAutoSave::CallFunc_ShouldBlockAutoSaveDuringExecution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_ShouldBlockAutoSave, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'BP_GameActionExecutorComponent_C_ShouldBlockAutoSave::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GameActionExecutorComponent.BP_GameActionExecutorComponent_C.GetDebugString
// 0x0088 (0x0088 - 0x0000)
struct BP_GameActionExecutorComponent_C_GetDebugString final
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 local_DebugString;                                 // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameActionInstance*                    CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDebugString_ReturnValue;               // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_PadString_Result;                         // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionExecutorComponent_C_GetDebugString) == 0x000008, "Wrong alignment on BP_GameActionExecutorComponent_C_GetDebugString");
static_assert(sizeof(BP_GameActionExecutorComponent_C_GetDebugString) == 0x000088, "Wrong size on BP_GameActionExecutorComponent_C_GetDebugString");
static_assert(offsetof(BP_GameActionExecutorComponent_C_GetDebugString, String) == 0x000000, "Member 'BP_GameActionExecutorComponent_C_GetDebugString::String' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_GetDebugString, local_DebugString) == 0x000010, "Member 'BP_GameActionExecutorComponent_C_GetDebugString::local_DebugString' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_GetDebugString, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_GameActionExecutorComponent_C_GetDebugString::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_GetDebugString, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_GameActionExecutorComponent_C_GetDebugString::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_GetDebugString, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_GameActionExecutorComponent_C_GetDebugString::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_GetDebugString, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_GameActionExecutorComponent_C_GetDebugString::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_GetDebugString, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_GameActionExecutorComponent_C_GetDebugString::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_GetDebugString, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_GameActionExecutorComponent_C_GetDebugString::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_GetDebugString, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_GameActionExecutorComponent_C_GetDebugString::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_GetDebugString, CallFunc_GetDebugString_ReturnValue) == 0x000058, "Member 'BP_GameActionExecutorComponent_C_GetDebugString::CallFunc_GetDebugString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_GetDebugString, CallFunc_PadString_Result) == 0x000068, "Member 'BP_GameActionExecutorComponent_C_GetDebugString::CallFunc_PadString_Result' has a wrong offset!");
static_assert(offsetof(BP_GameActionExecutorComponent_C_GetDebugString, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000078, "Member 'BP_GameActionExecutorComponent_C_GetDebugString::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

}

