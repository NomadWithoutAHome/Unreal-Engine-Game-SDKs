#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Cine_ExitPoint

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Cine_ExitPoint.BP_Cine_ExitPoint_C
// 0x0030 (0x02C0 - 0x0290)
class ABP_Cine_ExitPoint_C final : public AActor
{
public:
	class UWorldPartitionStreamingSourceComponent* WorldPartitionStreamingSource;                    // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   Text;                                              // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SKM_EndPoint;                                      // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCineCameraComponent*                   CineCamera;                                        // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SKM_StartPoint;                                    // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void GetPostCinematicTransitionTransform(class ACharacter* Character, struct FTransform* Transform);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Cine_ExitPoint_C">();
	}
	static class ABP_Cine_ExitPoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Cine_ExitPoint_C>();
	}
};
static_assert(alignof(ABP_Cine_ExitPoint_C) == 0x000008, "Wrong alignment on ABP_Cine_ExitPoint_C");
static_assert(sizeof(ABP_Cine_ExitPoint_C) == 0x0002C0, "Wrong size on ABP_Cine_ExitPoint_C");
static_assert(offsetof(ABP_Cine_ExitPoint_C, WorldPartitionStreamingSource) == 0x000290, "Member 'ABP_Cine_ExitPoint_C::WorldPartitionStreamingSource' has a wrong offset!");
static_assert(offsetof(ABP_Cine_ExitPoint_C, Text) == 0x000298, "Member 'ABP_Cine_ExitPoint_C::Text' has a wrong offset!");
static_assert(offsetof(ABP_Cine_ExitPoint_C, SKM_EndPoint) == 0x0002A0, "Member 'ABP_Cine_ExitPoint_C::SKM_EndPoint' has a wrong offset!");
static_assert(offsetof(ABP_Cine_ExitPoint_C, CineCamera) == 0x0002A8, "Member 'ABP_Cine_ExitPoint_C::CineCamera' has a wrong offset!");
static_assert(offsetof(ABP_Cine_ExitPoint_C, SKM_StartPoint) == 0x0002B0, "Member 'ABP_Cine_ExitPoint_C::SKM_StartPoint' has a wrong offset!");
static_assert(offsetof(ABP_Cine_ExitPoint_C, DefaultSceneRoot) == 0x0002B8, "Member 'ABP_Cine_ExitPoint_C::DefaultSceneRoot' has a wrong offset!");

}

