#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattleDamageBuilder

#include "Basic.hpp"

#include "BP_BattleDamageBuilder_classes.hpp"
#include "BP_BattleDamageBuilder_parameters.hpp"


namespace SDK
{

// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.AddBreakBarDamageMultiplier
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Multiplier                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_BattleDamageBuilder_C::AddBreakBarDamageMultiplier(double Multiplier, const class FString& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "AddBreakBarDamageMultiplier");

	Params::BP_BattleDamageBuilder_C_AddBreakBarDamageMultiplier Parms{};

	Parms.Multiplier = Multiplier;
	Parms.Reason = std::move(Reason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.AddCriticalHitChanceModifier
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Modifier                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_BattleDamageBuilder_C::AddCriticalHitChanceModifier(double Modifier, const class FString& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "AddCriticalHitChanceModifier");

	Params::BP_BattleDamageBuilder_C_AddCriticalHitChanceModifier Parms{};

	Parms.Modifier = Modifier;
	Parms.Reason = std::move(Reason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.AddCriticalHitDamageMultiplier
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Multiplier                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_BattleDamageBuilder_C::AddCriticalHitDamageMultiplier(double Multiplier, const class FString& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "AddCriticalHitDamageMultiplier");

	Params::BP_BattleDamageBuilder_C_AddCriticalHitDamageMultiplier Parms{};

	Parms.Multiplier = Multiplier;
	Parms.Reason = std::move(Reason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.AddFinalDamageMultiplier
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Multiplier                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_BattleDamageBuilder_C::AddFinalDamageMultiplier(double Multiplier, const class FString& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "AddFinalDamageMultiplier");

	Params::BP_BattleDamageBuilder_C_AddFinalDamageMultiplier Parms{};

	Parms.Multiplier = Multiplier;
	Parms.Reason = std::move(Reason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.AddRegularHitChanceModifier
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Multiplier                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_BattleDamageBuilder_C::AddRegularHitChanceModifier(double Multiplier, const class FString& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "AddRegularHitChanceModifier");

	Params::BP_BattleDamageBuilder_C_AddRegularHitChanceModifier Parms{};

	Parms.Multiplier = Multiplier;
	Parms.Reason = std::move(Reason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.AddStraightDamageAsMaxHPPercent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Percent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NullifyBaseDamage_0                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    KeepModifiersOnNullify                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_BattleDamageBuilder_C::AddStraightDamageAsMaxHPPercent(double Percent, bool NullifyBaseDamage_0, bool KeepModifiersOnNullify, const class FString& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "AddStraightDamageAsMaxHPPercent");

	Params::BP_BattleDamageBuilder_C_AddStraightDamageAsMaxHPPercent Parms{};

	Parms.Percent = Percent;
	Parms.NullifyBaseDamage_0 = NullifyBaseDamage_0;
	Parms.KeepModifiersOnNullify = KeepModifiersOnNullify;
	Parms.Reason = std::move(Reason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.AddStraightDamageFlat
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  FlatValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NullifyBaseDamage_0                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    KeepModifiersOnNullify                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_BattleDamageBuilder_C::AddStraightDamageFlat(double FlatValue, bool NullifyBaseDamage_0, bool KeepModifiersOnNullify, const class FString& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "AddStraightDamageFlat");

	Params::BP_BattleDamageBuilder_C_AddStraightDamageFlat Parms{};

	Parms.FlatValue = FlatValue;
	Parms.NullifyBaseDamage_0 = NullifyBaseDamage_0;
	Parms.KeepModifiersOnNullify = KeepModifiersOnNullify;
	Parms.Reason = std::move(Reason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.DealDamages
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   HasHit                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_BattleDamages_C**             BattleDamages                                          (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_BattleDamageBuilder_C::DealDamages(bool* HasHit, class UBP_BattleDamages_C** BattleDamages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "DealDamages");

	Params::BP_BattleDamageBuilder_C_DealDamages Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HasHit != nullptr)
		*HasHit = Parms.HasHit;

	if (BattleDamages != nullptr)
		*BattleDamages = Parms.BattleDamages;
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.GetAttackElement
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EAttackType*                            AttackElement_0                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleDamageBuilder_C::GetAttackElement(EAttackType* AttackElement_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "GetAttackElement");

	Params::BP_BattleDamageBuilder_C_GetAttackElement Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttackElement_0 != nullptr)
		*AttackElement_0 = Parms.AttackElement_0;
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.GetAttackPowerMultiplier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UBP_BattleDamageBuilder_C::GetAttackPowerMultiplier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "GetAttackPowerMultiplier");

	Params::BP_BattleDamageBuilder_C_GetAttackPowerMultiplier Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.GetBreakBarMultiplier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 INPUT_BreakBarMultiplier_0                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleDamageBuilder_C::GetBreakBarMultiplier(double* INPUT_BreakBarMultiplier_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "GetBreakBarMultiplier");

	Params::BP_BattleDamageBuilder_C_GetBreakBarMultiplier Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (INPUT_BreakBarMultiplier_0 != nullptr)
		*INPUT_BreakBarMultiplier_0 = Parms.INPUT_BreakBarMultiplier_0;
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.GetCriticalHitChanceModifier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UBP_BattleDamageBuilder_C::GetCriticalHitChanceModifier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "GetCriticalHitChanceModifier");

	Params::BP_BattleDamageBuilder_C_GetCriticalHitChanceModifier Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.GetCriticalHitDamageMultiplier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UBP_BattleDamageBuilder_C::GetCriticalHitDamageMultiplier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "GetCriticalHitDamageMultiplier");

	Params::BP_BattleDamageBuilder_C_GetCriticalHitDamageMultiplier Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.GetDamageReason
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EDamageReason*                          DamageReason_0                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleDamageBuilder_C::GetDamageReason(EDamageReason* DamageReason_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "GetDamageReason");

	Params::BP_BattleDamageBuilder_C_GetDamageReason Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DamageReason_0 != nullptr)
		*DamageReason_0 = Parms.DamageReason_0;
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.GetDamageSource
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IIBattleDamageSource_C>*DamageSource_0                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleDamageBuilder_C::GetDamageSource(TScriptInterface<class IIBattleDamageSource_C>* DamageSource_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "GetDamageSource");

	Params::BP_BattleDamageBuilder_C_GetDamageSource Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DamageSource_0 != nullptr)
		*DamageSource_0 = Parms.DamageSource_0;
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.GetFeedbackReason
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText*                            FeedbackReasonText_0                                   (Parm, OutParm)
// struct FLinearColor*                    FeedbackReasonColor_0                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleDamageBuilder_C::GetFeedbackReason(class FText* FeedbackReasonText_0, struct FLinearColor* FeedbackReasonColor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "GetFeedbackReason");

	Params::BP_BattleDamageBuilder_C_GetFeedbackReason Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FeedbackReasonText_0 != nullptr)
		*FeedbackReasonText_0 = std::move(Parms.FeedbackReasonText_0);

	if (FeedbackReasonColor_0 != nullptr)
		*FeedbackReasonColor_0 = std::move(Parms.FeedbackReasonColor_0);
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.GetFinalDamageMultiplier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UBP_BattleDamageBuilder_C::GetFinalDamageMultiplier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "GetFinalDamageMultiplier");

	Params::BP_BattleDamageBuilder_C_GetFinalDamageMultiplier Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.GetForcedCriticalHit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_BattleDamageBuilder_C::GetForcedCriticalHit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "GetForcedCriticalHit");

	Params::BP_BattleDamageBuilder_C_GetForcedCriticalHit Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.GetHitSoundOverride
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USoundBase*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class USoundBase* UBP_BattleDamageBuilder_C::GetHitSoundOverride()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "GetHitSoundOverride");

	Params::BP_BattleDamageBuilder_C_GetHitSoundOverride Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.GetIgnoreMarkedRemoval
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_BattleDamageBuilder_C::GetIgnoreMarkedRemoval()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "GetIgnoreMarkedRemoval");

	Params::BP_BattleDamageBuilder_C_GetIgnoreMarkedRemoval Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.GetIgnoreShields
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_BattleDamageBuilder_C::GetIgnoreShields()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "GetIgnoreShields");

	Params::BP_BattleDamageBuilder_C_GetIgnoreShields Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.GetRegularHitChanceModifier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UBP_BattleDamageBuilder_C::GetRegularHitChanceModifier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "GetRegularHitChanceModifier");

	Params::BP_BattleDamageBuilder_C_GetRegularHitChanceModifier Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.GetStraightDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UBP_BattleDamageBuilder_C::GetStraightDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "GetStraightDamage");

	Params::BP_BattleDamageBuilder_C_GetStraightDamage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.HasFeedbackReason
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_BattleDamageBuilder_C::HasFeedbackReason()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "HasFeedbackReason");

	Params::BP_BattleDamageBuilder_C_HasFeedbackReason Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.IsDeathtouch
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_BattleDamageBuilder_C::IsDeathtouch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "IsDeathtouch");

	Params::BP_BattleDamageBuilder_C_IsDeathtouch Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.LoadFromData
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleDamageBuilder_C::LoadFromData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "LoadFromData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.NullifyBaseDamage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_BattleDamageBuilder_C::NullifyBaseDamage(const class FString& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "NullifyBaseDamage");

	Params::BP_BattleDamageBuilder_C_NullifyBaseDamage Parms{};

	Parms.Reason = std::move(Reason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.SetAsDeathtouch
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleDamageBuilder_C::SetAsDeathtouch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "SetAsDeathtouch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.SetFeedbackReason
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FLinearColor&              Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleDamageBuilder_C::SetFeedbackReason(const class FText& Text, const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "SetFeedbackReason");

	Params::BP_BattleDamageBuilder_C_SetFeedbackReason Parms{};

	Parms.Text = std::move(Text);
	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.SetForcedCriticalHit
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleDamageBuilder_C::SetForcedCriticalHit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "SetForcedCriticalHit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.SetHitSoundOverride
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       HitSoundOverride_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_BattleDamageBuilder_C::SetHitSoundOverride(class USoundBase* HitSoundOverride_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "SetHitSoundOverride");

	Params::BP_BattleDamageBuilder_C_SetHitSoundOverride Parms{};

	Parms.HitSoundOverride_0 = HitSoundOverride_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.SetIgnoreMarkedRemoval
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleDamageBuilder_C::SetIgnoreMarkedRemoval()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "SetIgnoreMarkedRemoval");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.SetIgnoreShields
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleDamageBuilder_C::SetIgnoreShields()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "SetIgnoreShields");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.ShouldBypassModifiers
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_BattleDamageBuilder_C::ShouldBypassModifiers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "ShouldBypassModifiers");

	Params::BP_BattleDamageBuilder_C_ShouldBypassModifiers Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BattleDamageBuilder.BP_BattleDamageBuilder_C.UseDefenseAsAttackPower
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleDamageBuilder_C::UseDefenseAsAttackPower()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleDamageBuilder_C", "UseDefenseAsAttackPower");

	UObject::ProcessEvent(Func, nullptr);
}

}

