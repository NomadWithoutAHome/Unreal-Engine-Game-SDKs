#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_BattleEffectsBox

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "E_StatusEffects_structs.hpp"
#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"
#include "E_BuffAndStatusEffectTypes_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_BattleEffectsBox.WBP_BattleEffectsBox_C
// 0x00A8 (0x03B0 - 0x0308)
class UWBP_BattleEffectsBox_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBackgroundBlur*                        BackgroundBlur;                                    // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWrapBox*                               BuffWrapBox;                                       // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        CharacterBattleStats;                              // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMap<class UBP_BattleBuffInstance_C*, class UWBP_jRPG_BuffSlot_C*> BuffInstanceWidgets;          // 0x0328(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<E_StatusEffects>                       PreviewBuffs;                                      // 0x0378(0x0010)(Edit, BlueprintVisible)
	bool                                          IsDisplayingStatusEffects;                         // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTopOriented;                                     // 0x0389(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRightOriented;                                   // 0x038A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowBackground;                                   // 0x038B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ChildSize;                                         // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ChildPerRow;                                       // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C[0x4];                                      // 0x039C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ChildSlotPadding;                                  // 0x03A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddLinkedCharacter(class UAC_jRPG_CharacterBattleStats_C* CharacterBattleStats_0);
	void ShouldBuffBeAdded(E_BuffAndStatusEffectTypes BuffType, bool* bShouldBeAdded);
	void OnBuffRemoved(class UBP_BattleBuffInstance_C* BuffInstance);
	void OnBuffAdded(class UBP_BattleBuffInstance_C* BuffInstance);
	void SetCharacterBattleStats(class UAC_jRPG_CharacterBattleStats_C* InCharacterBattleStats);
	void PreConstruct(bool IsDesignTime);
	void ExecuteUbergraph_WBP_BattleEffectsBox(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_BattleEffectsBox_C">();
	}
	static class UWBP_BattleEffectsBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_BattleEffectsBox_C>();
	}
};
static_assert(alignof(UWBP_BattleEffectsBox_C) == 0x000008, "Wrong alignment on UWBP_BattleEffectsBox_C");
static_assert(sizeof(UWBP_BattleEffectsBox_C) == 0x0003B0, "Wrong size on UWBP_BattleEffectsBox_C");
static_assert(offsetof(UWBP_BattleEffectsBox_C, UberGraphFrame) == 0x000308, "Member 'UWBP_BattleEffectsBox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_BattleEffectsBox_C, BackgroundBlur) == 0x000310, "Member 'UWBP_BattleEffectsBox_C::BackgroundBlur' has a wrong offset!");
static_assert(offsetof(UWBP_BattleEffectsBox_C, BuffWrapBox) == 0x000318, "Member 'UWBP_BattleEffectsBox_C::BuffWrapBox' has a wrong offset!");
static_assert(offsetof(UWBP_BattleEffectsBox_C, CharacterBattleStats) == 0x000320, "Member 'UWBP_BattleEffectsBox_C::CharacterBattleStats' has a wrong offset!");
static_assert(offsetof(UWBP_BattleEffectsBox_C, BuffInstanceWidgets) == 0x000328, "Member 'UWBP_BattleEffectsBox_C::BuffInstanceWidgets' has a wrong offset!");
static_assert(offsetof(UWBP_BattleEffectsBox_C, PreviewBuffs) == 0x000378, "Member 'UWBP_BattleEffectsBox_C::PreviewBuffs' has a wrong offset!");
static_assert(offsetof(UWBP_BattleEffectsBox_C, IsDisplayingStatusEffects) == 0x000388, "Member 'UWBP_BattleEffectsBox_C::IsDisplayingStatusEffects' has a wrong offset!");
static_assert(offsetof(UWBP_BattleEffectsBox_C, IsTopOriented) == 0x000389, "Member 'UWBP_BattleEffectsBox_C::IsTopOriented' has a wrong offset!");
static_assert(offsetof(UWBP_BattleEffectsBox_C, IsRightOriented) == 0x00038A, "Member 'UWBP_BattleEffectsBox_C::IsRightOriented' has a wrong offset!");
static_assert(offsetof(UWBP_BattleEffectsBox_C, bShowBackground) == 0x00038B, "Member 'UWBP_BattleEffectsBox_C::bShowBackground' has a wrong offset!");
static_assert(offsetof(UWBP_BattleEffectsBox_C, ChildSize) == 0x000390, "Member 'UWBP_BattleEffectsBox_C::ChildSize' has a wrong offset!");
static_assert(offsetof(UWBP_BattleEffectsBox_C, ChildPerRow) == 0x000398, "Member 'UWBP_BattleEffectsBox_C::ChildPerRow' has a wrong offset!");
static_assert(offsetof(UWBP_BattleEffectsBox_C, ChildSlotPadding) == 0x0003A0, "Member 'UWBP_BattleEffectsBox_C::ChildSlotPadding' has a wrong offset!");

}

