#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattleHeal

#include "Basic.hpp"

#include "EHealReason_structs.hpp"
#include "SandFall_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BattleHeal.BP_BattleHeal_C
// 0x0048 (0x0070 - 0x0028)
class UBP_BattleHeal_C final : public UExtendedObject
{
public:
	bool                                          IsPrevented;                                       // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Amount;                                            // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        SourceCharacter;                                   // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        TargetCharacter;                                   // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EHealReason                                   Reason;                                            // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DebugReason;                                       // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<class FString>                         DebugModifierLogs;                                 // 0x0060(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	double GetCurrentAmount();
	void GetDebugInfo(class FString* DebugReason_0, TArray<class FString>* DebugModifierLogs_0);
	void GetReason(EHealReason* Reason_0);
	void Init(class UAC_jRPG_CharacterBattleStats_C* TargetCharacter_0, class UAC_jRPG_CharacterBattleStats_C* SourceCharacter_0, double Amount_0);
	void ModifyAmount(double NewAmount, const class FString& DebugReason_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BattleHeal_C">();
	}
	static class UBP_BattleHeal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_BattleHeal_C>();
	}
};
static_assert(alignof(UBP_BattleHeal_C) == 0x000008, "Wrong alignment on UBP_BattleHeal_C");
static_assert(sizeof(UBP_BattleHeal_C) == 0x000070, "Wrong size on UBP_BattleHeal_C");
static_assert(offsetof(UBP_BattleHeal_C, IsPrevented) == 0x000028, "Member 'UBP_BattleHeal_C::IsPrevented' has a wrong offset!");
static_assert(offsetof(UBP_BattleHeal_C, Amount) == 0x000030, "Member 'UBP_BattleHeal_C::Amount' has a wrong offset!");
static_assert(offsetof(UBP_BattleHeal_C, SourceCharacter) == 0x000038, "Member 'UBP_BattleHeal_C::SourceCharacter' has a wrong offset!");
static_assert(offsetof(UBP_BattleHeal_C, TargetCharacter) == 0x000040, "Member 'UBP_BattleHeal_C::TargetCharacter' has a wrong offset!");
static_assert(offsetof(UBP_BattleHeal_C, Reason) == 0x000048, "Member 'UBP_BattleHeal_C::Reason' has a wrong offset!");
static_assert(offsetof(UBP_BattleHeal_C, DebugReason) == 0x000050, "Member 'UBP_BattleHeal_C::DebugReason' has a wrong offset!");
static_assert(offsetof(UBP_BattleHeal_C, DebugModifierLogs) == 0x000060, "Member 'UBP_BattleHeal_C::DebugModifierLogs' has a wrong offset!");

}

