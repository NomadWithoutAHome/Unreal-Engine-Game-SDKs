#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_CustomMoveZone_Ladder

#include "Basic.hpp"

#include "BPI_CustomMoveZone_Ladder_classes.hpp"
#include "BPI_CustomMoveZone_Ladder_parameters.hpp"


namespace SDK
{

// Function BPI_CustomMoveZone_Ladder.BPI_CustomMoveZone_Ladder_C.CheckEnterToBottom
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Character_Bottom_Location                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Input_Direction                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Input_Scale                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_CustomMoveZone_Ladder_C::CheckEnterToBottom(const struct FVector& Character_Bottom_Location, const struct FVector& Input_Direction, double Input_Scale, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_CustomMoveZone_Ladder_C", "CheckEnterToBottom");

	Params::BPI_CustomMoveZone_Ladder_C_CheckEnterToBottom Parms{};

	Parms.Character_Bottom_Location = std::move(Character_Bottom_Location);
	Parms.Input_Direction = std::move(Input_Direction);
	Parms.Input_Scale = Input_Scale;

	AsUObject()->ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BPI_CustomMoveZone_Ladder.BPI_CustomMoveZone_Ladder_C.CheckEnterToMiddle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Character_Bottom_Location                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Input_Direction                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Input_Scale                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_CustomMoveZone_Ladder_C::CheckEnterToMiddle(const struct FVector& Character_Bottom_Location, const struct FVector& Input_Direction, double Input_Scale, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_CustomMoveZone_Ladder_C", "CheckEnterToMiddle");

	Params::BPI_CustomMoveZone_Ladder_C_CheckEnterToMiddle Parms{};

	Parms.Character_Bottom_Location = std::move(Character_Bottom_Location);
	Parms.Input_Direction = std::move(Input_Direction);
	Parms.Input_Scale = Input_Scale;

	AsUObject()->ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BPI_CustomMoveZone_Ladder.BPI_CustomMoveZone_Ladder_C.CheckEnterToTop
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Character_Bottom_Location                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Input_Direction                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Input_Scale                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_CustomMoveZone_Ladder_C::CheckEnterToTop(const struct FVector& Character_Bottom_Location, const struct FVector& Input_Direction, double Input_Scale, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_CustomMoveZone_Ladder_C", "CheckEnterToTop");

	Params::BPI_CustomMoveZone_Ladder_C_CheckEnterToTop Parms{};

	Parms.Character_Bottom_Location = std::move(Character_Bottom_Location);
	Parms.Input_Direction = std::move(Input_Direction);
	Parms.Input_Scale = Input_Scale;

	AsUObject()->ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BPI_CustomMoveZone_Ladder.BPI_CustomMoveZone_Ladder_C.CheckExitToBottom
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Character_Bottom_Location                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Input_Scale                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_CustomMoveZone_Ladder_C::CheckExitToBottom(const struct FVector& Character_Bottom_Location, double Input_Scale, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_CustomMoveZone_Ladder_C", "CheckExitToBottom");

	Params::BPI_CustomMoveZone_Ladder_C_CheckExitToBottom Parms{};

	Parms.Character_Bottom_Location = std::move(Character_Bottom_Location);
	Parms.Input_Scale = Input_Scale;

	AsUObject()->ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BPI_CustomMoveZone_Ladder.BPI_CustomMoveZone_Ladder_C.CheckExitToTop
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Character_Bottom_Location                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Input_Scale                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_CustomMoveZone_Ladder_C::CheckExitToTop(const struct FVector& Character_Bottom_Location, double Input_Scale, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_CustomMoveZone_Ladder_C", "CheckExitToTop");

	Params::BPI_CustomMoveZone_Ladder_C_CheckExitToTop Parms{};

	Parms.Character_Bottom_Location = std::move(Character_Bottom_Location);
	Parms.Input_Scale = Input_Scale;

	AsUObject()->ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BPI_CustomMoveZone_Ladder.BPI_CustomMoveZone_Ladder_C.GetBottomEnterLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Bottom_Enter_Location                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator*                        Bottom_Enter_Rotation                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_CustomMoveZone_Ladder_C::GetBottomEnterLocation(class ACharacter* Character, struct FVector* Bottom_Enter_Location, struct FRotator* Bottom_Enter_Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_CustomMoveZone_Ladder_C", "GetBottomEnterLocation");

	Params::BPI_CustomMoveZone_Ladder_C_GetBottomEnterLocation Parms{};

	Parms.Character = Character;

	AsUObject()->ProcessEvent(Func, &Parms);

	if (Bottom_Enter_Location != nullptr)
		*Bottom_Enter_Location = std::move(Parms.Bottom_Enter_Location);

	if (Bottom_Enter_Rotation != nullptr)
		*Bottom_Enter_Rotation = std::move(Parms.Bottom_Enter_Rotation);
}


// Function BPI_CustomMoveZone_Ladder.BPI_CustomMoveZone_Ladder_C.GetLadderLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Top_Location                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Bottom_Location                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_CustomMoveZone_Ladder_C::GetLadderLocation(class ACharacter* Character, struct FVector* Top_Location, struct FVector* Bottom_Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_CustomMoveZone_Ladder_C", "GetLadderLocation");

	Params::BPI_CustomMoveZone_Ladder_C_GetLadderLocation Parms{};

	Parms.Character = Character;

	AsUObject()->ProcessEvent(Func, &Parms);

	if (Top_Location != nullptr)
		*Top_Location = std::move(Parms.Top_Location);

	if (Bottom_Location != nullptr)
		*Bottom_Location = std::move(Parms.Bottom_Location);
}


// Function BPI_CustomMoveZone_Ladder.BPI_CustomMoveZone_Ladder_C.GetLadderRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator*                        Ladder_Rotation                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_CustomMoveZone_Ladder_C::GetLadderRotation(struct FRotator* Ladder_Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_CustomMoveZone_Ladder_C", "GetLadderRotation");

	Params::BPI_CustomMoveZone_Ladder_C_GetLadderRotation Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (Ladder_Rotation != nullptr)
		*Ladder_Rotation = std::move(Parms.Ladder_Rotation);
}


// Function BPI_CustomMoveZone_Ladder.BPI_CustomMoveZone_Ladder_C.GetTopEnterLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Top_Enter_Location                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator*                        Top_Enter_Rotation                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_CustomMoveZone_Ladder_C::GetTopEnterLocation(class ACharacter* Character, struct FVector* Top_Enter_Location, struct FRotator* Top_Enter_Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_CustomMoveZone_Ladder_C", "GetTopEnterLocation");

	Params::BPI_CustomMoveZone_Ladder_C_GetTopEnterLocation Parms{};

	Parms.Character = Character;

	AsUObject()->ProcessEvent(Func, &Parms);

	if (Top_Enter_Location != nullptr)
		*Top_Enter_Location = std::move(Parms.Top_Enter_Location);

	if (Top_Enter_Rotation != nullptr)
		*Top_Enter_Rotation = std::move(Parms.Top_Enter_Rotation);
}


// Function BPI_CustomMoveZone_Ladder.BPI_CustomMoveZone_Ladder_C.GetLadderStepHeight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// double*                                 StepHeight                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_CustomMoveZone_Ladder_C::GetLadderStepHeight(double* StepHeight) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_CustomMoveZone_Ladder_C", "GetLadderStepHeight");

	Params::BPI_CustomMoveZone_Ladder_C_GetLadderStepHeight Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (StepHeight != nullptr)
		*StepHeight = Parms.StepHeight;
}

}

