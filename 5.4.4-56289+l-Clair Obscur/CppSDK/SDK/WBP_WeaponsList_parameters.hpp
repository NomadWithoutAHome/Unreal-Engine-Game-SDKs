#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_WeaponsList

#include "Basic.hpp"

#include "S_jRPG_Item_DynamicData_structs.hpp"
#include "FEquipmentSlot_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BlueprintSorting_structs.hpp"
#include "S_SortDropdownEntry_structs.hpp"
#include "ECharacterAttribute_structs.hpp"
#include "E_jRPG_ItemSubtype_structs.hpp"


namespace SDK::Params
{

// Function WBP_WeaponsList.WBP_WeaponsList_C.BndEvt__WBP_PictosList_PictosTileView_K2Node_ComponentBoundEvent_1_OnListEntryGeneratedDynamic__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_WeaponsList_C_BndEvt__WBP_PictosList_PictosTileView_K2Node_ComponentBoundEvent_1_OnListEntryGeneratedDynamic__DelegateSignature final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponsList_C_BndEvt__WBP_PictosList_PictosTileView_K2Node_ComponentBoundEvent_1_OnListEntryGeneratedDynamic__DelegateSignature) == 0x000008, "Wrong alignment on WBP_WeaponsList_C_BndEvt__WBP_PictosList_PictosTileView_K2Node_ComponentBoundEvent_1_OnListEntryGeneratedDynamic__DelegateSignature");
static_assert(sizeof(WBP_WeaponsList_C_BndEvt__WBP_PictosList_PictosTileView_K2Node_ComponentBoundEvent_1_OnListEntryGeneratedDynamic__DelegateSignature) == 0x000008, "Wrong size on WBP_WeaponsList_C_BndEvt__WBP_PictosList_PictosTileView_K2Node_ComponentBoundEvent_1_OnListEntryGeneratedDynamic__DelegateSignature");
static_assert(offsetof(WBP_WeaponsList_C_BndEvt__WBP_PictosList_PictosTileView_K2Node_ComponentBoundEvent_1_OnListEntryGeneratedDynamic__DelegateSignature, Widget) == 0x000000, "Member 'WBP_WeaponsList_C_BndEvt__WBP_PictosList_PictosTileView_K2Node_ComponentBoundEvent_1_OnListEntryGeneratedDynamic__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_WeaponsList.WBP_WeaponsList_C.DoCustomNavigationVerticalWrap
// 0x0030 (0x0030 - 0x0000)
struct WBP_WeaponsList_C_DoCustomNavigationVerticalWrap final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        CallFunc_GetListItems_ReturnValue;                 // 0x0018(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponsList_C_DoCustomNavigationVerticalWrap) == 0x000008, "Wrong alignment on WBP_WeaponsList_C_DoCustomNavigationVerticalWrap");
static_assert(sizeof(WBP_WeaponsList_C_DoCustomNavigationVerticalWrap) == 0x000030, "Wrong size on WBP_WeaponsList_C_DoCustomNavigationVerticalWrap");
static_assert(offsetof(WBP_WeaponsList_C_DoCustomNavigationVerticalWrap, Navigation_0) == 0x000000, "Member 'WBP_WeaponsList_C_DoCustomNavigationVerticalWrap::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_DoCustomNavigationVerticalWrap, ReturnValue) == 0x000008, "Member 'WBP_WeaponsList_C_DoCustomNavigationVerticalWrap::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_DoCustomNavigationVerticalWrap, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'WBP_WeaponsList_C_DoCustomNavigationVerticalWrap::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_DoCustomNavigationVerticalWrap, CallFunc_GetListItems_ReturnValue) == 0x000018, "Member 'WBP_WeaponsList_C_DoCustomNavigationVerticalWrap::CallFunc_GetListItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_DoCustomNavigationVerticalWrap, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WBP_WeaponsList_C_DoCustomNavigationVerticalWrap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_DoCustomNavigationVerticalWrap, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'WBP_WeaponsList_C_DoCustomNavigationVerticalWrap::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_WeaponsList.WBP_WeaponsList_C.ExecuteUbergraph_WBP_WeaponsList
// 0x0060 (0x0060 - 0x0000)
struct WBP_WeaponsList_C_ExecuteUbergraph_WBP_WeaponsList final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UBP_WeaponViewItem_C* WeaponViewItem)> K2Node_CreateDelegate_OutputDelegate; // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UBP_WeaponViewItem_C* WeaponViewItem, const struct FVector2D& AbsolutePos)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_ComponentBoundEvent_Widget;                 // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_WeaponViewItem_C*                   K2Node_CustomEvent_WeaponViewItem_1;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_Panel_WeaponElement_C*             K2Node_DynamicCast_AsWBP_Panel_Weapon_Element;     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WeaponViewItem_C*                   K2Node_CustomEvent_WeaponViewItem;                 // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_AbsolutePos;                    // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponsList_C_ExecuteUbergraph_WBP_WeaponsList) == 0x000008, "Wrong alignment on WBP_WeaponsList_C_ExecuteUbergraph_WBP_WeaponsList");
static_assert(sizeof(WBP_WeaponsList_C_ExecuteUbergraph_WBP_WeaponsList) == 0x000060, "Wrong size on WBP_WeaponsList_C_ExecuteUbergraph_WBP_WeaponsList");
static_assert(offsetof(WBP_WeaponsList_C_ExecuteUbergraph_WBP_WeaponsList, EntryPoint) == 0x000000, "Member 'WBP_WeaponsList_C_ExecuteUbergraph_WBP_WeaponsList::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_ExecuteUbergraph_WBP_WeaponsList, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_WeaponsList_C_ExecuteUbergraph_WBP_WeaponsList::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_ExecuteUbergraph_WBP_WeaponsList, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'WBP_WeaponsList_C_ExecuteUbergraph_WBP_WeaponsList::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_ExecuteUbergraph_WBP_WeaponsList, K2Node_ComponentBoundEvent_Widget) == 0x000028, "Member 'WBP_WeaponsList_C_ExecuteUbergraph_WBP_WeaponsList::K2Node_ComponentBoundEvent_Widget' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_ExecuteUbergraph_WBP_WeaponsList, K2Node_CustomEvent_WeaponViewItem_1) == 0x000030, "Member 'WBP_WeaponsList_C_ExecuteUbergraph_WBP_WeaponsList::K2Node_CustomEvent_WeaponViewItem_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_ExecuteUbergraph_WBP_WeaponsList, K2Node_DynamicCast_AsWBP_Panel_Weapon_Element) == 0x000038, "Member 'WBP_WeaponsList_C_ExecuteUbergraph_WBP_WeaponsList::K2Node_DynamicCast_AsWBP_Panel_Weapon_Element' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_ExecuteUbergraph_WBP_WeaponsList, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_WeaponsList_C_ExecuteUbergraph_WBP_WeaponsList::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_ExecuteUbergraph_WBP_WeaponsList, K2Node_CustomEvent_WeaponViewItem) == 0x000048, "Member 'WBP_WeaponsList_C_ExecuteUbergraph_WBP_WeaponsList::K2Node_CustomEvent_WeaponViewItem' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_ExecuteUbergraph_WBP_WeaponsList, K2Node_CustomEvent_AbsolutePos) == 0x000050, "Member 'WBP_WeaponsList_C_ExecuteUbergraph_WBP_WeaponsList::K2Node_CustomEvent_AbsolutePos' has a wrong offset!");

// Function WBP_WeaponsList.WBP_WeaponsList_C.LoadItemsForCharacter
// 0x0240 (0x0240 - 0x0000)
struct WBP_WeaponsList_C_LoadItemsForCharacter final
{
public:
	class UBP_CharacterData_C*                    CharacterData;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_jRPG_Item_DynamicData>       DataItems;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<E_jRPG_ItemSubtype>                      CallFunc_GetAllowedEquipmentSubtypes_AllowedEquipmentSubtypes; // 0x0020(0x0050)()
	TArray<E_jRPG_ItemSubtype>                    CallFunc_Set_ToArray_Result;                       // 0x0070(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_WeaponViewItem_C*>           Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0088(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_ItemSubtype                            CallFunc_Array_Get_Item;                           // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_DynamicData               CallFunc_Array_Get_Item_1;                         // 0x00C0(0x0138)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanEquipItem_ReturnValue;                 // 0x01FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FE[0x2];                                      // 0x01FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_WeaponViewItem_C*>           Temp_wildcard_Temp_buffer_array_Variable;          // 0x0200(0x0010)(ConstParm, ReferenceParm)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_WeaponViewItem_C*                   CallFunc_SpawnObject_ReturnValue;                  // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_InventoryManager_C*            CallFunc_GetInventoryManager_ReturnValue;          // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_jRPG_Item_DynamicData>       CallFunc_GetOwnedItemsByType_FilteredArray;        // 0x0228(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponsList_C_LoadItemsForCharacter) == 0x000008, "Wrong alignment on WBP_WeaponsList_C_LoadItemsForCharacter");
static_assert(sizeof(WBP_WeaponsList_C_LoadItemsForCharacter) == 0x000240, "Wrong size on WBP_WeaponsList_C_LoadItemsForCharacter");
static_assert(offsetof(WBP_WeaponsList_C_LoadItemsForCharacter, CharacterData) == 0x000000, "Member 'WBP_WeaponsList_C_LoadItemsForCharacter::CharacterData' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_LoadItemsForCharacter, DataItems) == 0x000008, "Member 'WBP_WeaponsList_C_LoadItemsForCharacter::DataItems' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_LoadItemsForCharacter, Temp_bool_True_if_break_was_hit_Variable) == 0x000018, "Member 'WBP_WeaponsList_C_LoadItemsForCharacter::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_LoadItemsForCharacter, CallFunc_GetAllowedEquipmentSubtypes_AllowedEquipmentSubtypes) == 0x000020, "Member 'WBP_WeaponsList_C_LoadItemsForCharacter::CallFunc_GetAllowedEquipmentSubtypes_AllowedEquipmentSubtypes' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_LoadItemsForCharacter, CallFunc_Set_ToArray_Result) == 0x000070, "Member 'WBP_WeaponsList_C_LoadItemsForCharacter::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_LoadItemsForCharacter, CallFunc_Not_PreBool_ReturnValue) == 0x000080, "Member 'WBP_WeaponsList_C_LoadItemsForCharacter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_LoadItemsForCharacter, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'WBP_WeaponsList_C_LoadItemsForCharacter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_LoadItemsForCharacter, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000088, "Member 'WBP_WeaponsList_C_LoadItemsForCharacter::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_LoadItemsForCharacter, Temp_int_Array_Index_Variable) == 0x000098, "Member 'WBP_WeaponsList_C_LoadItemsForCharacter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_LoadItemsForCharacter, CallFunc_Array_Get_Item) == 0x00009C, "Member 'WBP_WeaponsList_C_LoadItemsForCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_LoadItemsForCharacter, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'WBP_WeaponsList_C_LoadItemsForCharacter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_LoadItemsForCharacter, Temp_int_Loop_Counter_Variable_1) == 0x0000A4, "Member 'WBP_WeaponsList_C_LoadItemsForCharacter::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_LoadItemsForCharacter, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'WBP_WeaponsList_C_LoadItemsForCharacter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_LoadItemsForCharacter, CallFunc_Less_IntInt_ReturnValue) == 0x0000AC, "Member 'WBP_WeaponsList_C_LoadItemsForCharacter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_LoadItemsForCharacter, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B0, "Member 'WBP_WeaponsList_C_LoadItemsForCharacter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_LoadItemsForCharacter, CallFunc_BooleanAND_ReturnValue) == 0x0000B4, "Member 'WBP_WeaponsList_C_LoadItemsForCharacter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_LoadItemsForCharacter, Temp_int_Array_Index_Variable_1) == 0x0000B8, "Member 'WBP_WeaponsList_C_LoadItemsForCharacter::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_LoadItemsForCharacter, CallFunc_Array_Get_Item_1) == 0x0000C0, "Member 'WBP_WeaponsList_C_LoadItemsForCharacter::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_LoadItemsForCharacter, CallFunc_Array_Length_ReturnValue_1) == 0x0001F8, "Member 'WBP_WeaponsList_C_LoadItemsForCharacter::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_LoadItemsForCharacter, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001FC, "Member 'WBP_WeaponsList_C_LoadItemsForCharacter::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_LoadItemsForCharacter, CallFunc_CanEquipItem_ReturnValue) == 0x0001FD, "Member 'WBP_WeaponsList_C_LoadItemsForCharacter::CallFunc_CanEquipItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_LoadItemsForCharacter, Temp_wildcard_Temp_buffer_array_Variable) == 0x000200, "Member 'WBP_WeaponsList_C_LoadItemsForCharacter::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_LoadItemsForCharacter, CallFunc_GetCustomGI_ReturnValue) == 0x000210, "Member 'WBP_WeaponsList_C_LoadItemsForCharacter::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_LoadItemsForCharacter, CallFunc_SpawnObject_ReturnValue) == 0x000218, "Member 'WBP_WeaponsList_C_LoadItemsForCharacter::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_LoadItemsForCharacter, CallFunc_GetInventoryManager_ReturnValue) == 0x000220, "Member 'WBP_WeaponsList_C_LoadItemsForCharacter::CallFunc_GetInventoryManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_LoadItemsForCharacter, CallFunc_GetOwnedItemsByType_FilteredArray) == 0x000228, "Member 'WBP_WeaponsList_C_LoadItemsForCharacter::CallFunc_GetOwnedItemsByType_FilteredArray' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_LoadItemsForCharacter, CallFunc_Array_Add_ReturnValue) == 0x000238, "Member 'WBP_WeaponsList_C_LoadItemsForCharacter::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function WBP_WeaponsList.WBP_WeaponsList_C.OnElementClicked
// 0x0008 (0x0008 - 0x0000)
struct WBP_WeaponsList_C_OnElementClicked final
{
public:
	class UBP_WeaponViewItem_C*                   WeaponViewItem;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponsList_C_OnElementClicked) == 0x000008, "Wrong alignment on WBP_WeaponsList_C_OnElementClicked");
static_assert(sizeof(WBP_WeaponsList_C_OnElementClicked) == 0x000008, "Wrong size on WBP_WeaponsList_C_OnElementClicked");
static_assert(offsetof(WBP_WeaponsList_C_OnElementClicked, WeaponViewItem) == 0x000000, "Member 'WBP_WeaponsList_C_OnElementClicked::WeaponViewItem' has a wrong offset!");

// Function WBP_WeaponsList.WBP_WeaponsList_C.OnElementNavigated
// 0x0018 (0x0018 - 0x0000)
struct WBP_WeaponsList_C_OnElementNavigated final
{
public:
	class UBP_WeaponViewItem_C*                   WeaponViewItem;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              AbsolutePos;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponsList_C_OnElementNavigated) == 0x000008, "Wrong alignment on WBP_WeaponsList_C_OnElementNavigated");
static_assert(sizeof(WBP_WeaponsList_C_OnElementNavigated) == 0x000018, "Wrong size on WBP_WeaponsList_C_OnElementNavigated");
static_assert(offsetof(WBP_WeaponsList_C_OnElementNavigated, WeaponViewItem) == 0x000000, "Member 'WBP_WeaponsList_C_OnElementNavigated::WeaponViewItem' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_OnElementNavigated, AbsolutePos) == 0x000008, "Member 'WBP_WeaponsList_C_OnElementNavigated::AbsolutePos' has a wrong offset!");

// Function WBP_WeaponsList.WBP_WeaponsList_C.SetBlacksmithMode
// 0x0005 (0x0005 - 0x0000)
struct WBP_WeaponsList_C_SetBlacksmithMode final
{
public:
	bool                                          IsBlacksmithMode_0;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponsList_C_SetBlacksmithMode) == 0x000001, "Wrong alignment on WBP_WeaponsList_C_SetBlacksmithMode");
static_assert(sizeof(WBP_WeaponsList_C_SetBlacksmithMode) == 0x000005, "Wrong size on WBP_WeaponsList_C_SetBlacksmithMode");
static_assert(offsetof(WBP_WeaponsList_C_SetBlacksmithMode, IsBlacksmithMode_0) == 0x000000, "Member 'WBP_WeaponsList_C_SetBlacksmithMode::IsBlacksmithMode_0' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SetBlacksmithMode, Temp_bool_Variable) == 0x000001, "Member 'WBP_WeaponsList_C_SetBlacksmithMode::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SetBlacksmithMode, Temp_byte_Variable) == 0x000002, "Member 'WBP_WeaponsList_C_SetBlacksmithMode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SetBlacksmithMode, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_WeaponsList_C_SetBlacksmithMode::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SetBlacksmithMode, K2Node_Select_Default) == 0x000004, "Member 'WBP_WeaponsList_C_SetBlacksmithMode::K2Node_Select_Default' has a wrong offset!");

// Function WBP_WeaponsList.WBP_WeaponsList_C.SetWeaponToNavigate
// 0x0008 (0x0008 - 0x0000)
struct WBP_WeaponsList_C_SetWeaponToNavigate final
{
public:
	class FName                                   WeaponToNavigateID;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponsList_C_SetWeaponToNavigate) == 0x000004, "Wrong alignment on WBP_WeaponsList_C_SetWeaponToNavigate");
static_assert(sizeof(WBP_WeaponsList_C_SetWeaponToNavigate) == 0x000008, "Wrong size on WBP_WeaponsList_C_SetWeaponToNavigate");
static_assert(offsetof(WBP_WeaponsList_C_SetWeaponToNavigate, WeaponToNavigateID) == 0x000000, "Member 'WBP_WeaponsList_C_SetWeaponToNavigate::WeaponToNavigateID' has a wrong offset!");

// Function WBP_WeaponsList.WBP_WeaponsList_C.ShowWeaponTooltip
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_WeaponsList_C_ShowWeaponTooltip final
{
public:
	class UBP_WeaponViewItem_C*                   WeaponViewItem;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              AbsolutePos;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualExactly_Vector2DVector2D_ReturnValue; // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterData_C*                    CallFunc_GetOwnerData_OwnerData;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_Weapon_C*         CallFunc_GetGearWeaponInstance_Gear_Weapon_Instance_; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              CallFunc_GetTickSpaceGeometry_ReturnValue;         // 0x0044(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_AbsoluteToLocal_ReturnValue;              // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              K2Node_DynamicCast_AsGrid_Slot;                    // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponsList_C_ShowWeaponTooltip) == 0x000008, "Wrong alignment on WBP_WeaponsList_C_ShowWeaponTooltip");
static_assert(sizeof(WBP_WeaponsList_C_ShowWeaponTooltip) == 0x0000E8, "Wrong size on WBP_WeaponsList_C_ShowWeaponTooltip");
static_assert(offsetof(WBP_WeaponsList_C_ShowWeaponTooltip, WeaponViewItem) == 0x000000, "Member 'WBP_WeaponsList_C_ShowWeaponTooltip::WeaponViewItem' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_ShowWeaponTooltip, AbsolutePos) == 0x000008, "Member 'WBP_WeaponsList_C_ShowWeaponTooltip::AbsolutePos' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_ShowWeaponTooltip, Temp_byte_Variable) == 0x000018, "Member 'WBP_WeaponsList_C_ShowWeaponTooltip::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_ShowWeaponTooltip, CallFunc_EqualExactly_Vector2DVector2D_ReturnValue) == 0x000019, "Member 'WBP_WeaponsList_C_ShowWeaponTooltip::CallFunc_EqualExactly_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_ShowWeaponTooltip, CallFunc_GetOwnerData_OwnerData) == 0x000020, "Member 'WBP_WeaponsList_C_ShowWeaponTooltip::CallFunc_GetOwnerData_OwnerData' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_ShowWeaponTooltip, CallFunc_GetGearWeaponInstance_Gear_Weapon_Instance_) == 0x000028, "Member 'WBP_WeaponsList_C_ShowWeaponTooltip::CallFunc_GetGearWeaponInstance_Gear_Weapon_Instance_' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_ShowWeaponTooltip, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WBP_WeaponsList_C_ShowWeaponTooltip::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_ShowWeaponTooltip, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'WBP_WeaponsList_C_ShowWeaponTooltip::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_ShowWeaponTooltip, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000038, "Member 'WBP_WeaponsList_C_ShowWeaponTooltip::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_ShowWeaponTooltip, Temp_byte_Variable_1) == 0x000040, "Member 'WBP_WeaponsList_C_ShowWeaponTooltip::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_ShowWeaponTooltip, Temp_bool_Variable) == 0x000041, "Member 'WBP_WeaponsList_C_ShowWeaponTooltip::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_ShowWeaponTooltip, K2Node_Select_Default) == 0x000042, "Member 'WBP_WeaponsList_C_ShowWeaponTooltip::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_ShowWeaponTooltip, CallFunc_GetTickSpaceGeometry_ReturnValue) == 0x000044, "Member 'WBP_WeaponsList_C_ShowWeaponTooltip::CallFunc_GetTickSpaceGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_ShowWeaponTooltip, Temp_struct_Variable) == 0x000080, "Member 'WBP_WeaponsList_C_ShowWeaponTooltip::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_ShowWeaponTooltip, CallFunc_AbsoluteToLocal_ReturnValue) == 0x000090, "Member 'WBP_WeaponsList_C_ShowWeaponTooltip::CallFunc_AbsoluteToLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_ShowWeaponTooltip, CallFunc_BreakVector2D_X) == 0x0000A0, "Member 'WBP_WeaponsList_C_ShowWeaponTooltip::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_ShowWeaponTooltip, CallFunc_BreakVector2D_Y) == 0x0000A8, "Member 'WBP_WeaponsList_C_ShowWeaponTooltip::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_ShowWeaponTooltip, CallFunc_FClamp_ReturnValue) == 0x0000B0, "Member 'WBP_WeaponsList_C_ShowWeaponTooltip::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_ShowWeaponTooltip, CallFunc_MakeVector2D_ReturnValue) == 0x0000B8, "Member 'WBP_WeaponsList_C_ShowWeaponTooltip::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_ShowWeaponTooltip, K2Node_DynamicCast_AsGrid_Slot) == 0x0000C8, "Member 'WBP_WeaponsList_C_ShowWeaponTooltip::K2Node_DynamicCast_AsGrid_Slot' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_ShowWeaponTooltip, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'WBP_WeaponsList_C_ShowWeaponTooltip::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_ShowWeaponTooltip, Temp_bool_Variable_1) == 0x0000D1, "Member 'WBP_WeaponsList_C_ShowWeaponTooltip::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_ShowWeaponTooltip, K2Node_Select_Default_1) == 0x0000D8, "Member 'WBP_WeaponsList_C_ShowWeaponTooltip::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_WeaponsList.WBP_WeaponsList_C.SortItems
// 0x0210 (0x0210 - 0x0000)
struct WBP_WeaponsList_C_SortItems final
{
public:
	class UBP_WeaponViewItem_C*                   NavigateToItem;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_WeaponViewItem_C*>           Temp_wildcard_Temp_buffer_array_Variable;          // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TArray<class UBP_WeaponViewItem_C*>           Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0018(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_WeaponViewItem_C*                   CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_jRPG_Item_DynamicData               CallFunc_GetItemDynamicData_ItemDynamicData;       // 0x0048(0x0138)(ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    CallFunc_GetOwnerData_OwnerData;                   // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasItemEquipped_IsEquipped;               // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEquipmentSlot                        CallFunc_HasItemEquipped_Slot;                     // 0x018C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESortDirection                                CallFunc_GetSortDirection_SortDirection;           // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UBP_WeaponViewItem_C* WeaponViewItemLhs, class UBP_WeaponViewItem_C* WeaponViewItemRhs, class UOrderingResult* OrderingResult)> K2Node_CreateDelegate_OutputDelegate; // 0x0198(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                BPNode_SortArray_OrderingResult;                   // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          BPNode_SortArray_CmpSuccess;                       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BPNode_SortArray_SomeAlteration;                   // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B2[0x6];                                      // 0x01B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                BPNode_SortArray_Obj1;                             // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                BPNode_SortArray_Obj2;                             // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         BPNode_SortArray_Index1;                           // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BPNode_SortArray_Index2;                           // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UObject*>                        CallFunc_GetListItems_ReturnValue;                 // 0x01D0(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item_1;                         // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_WeaponViewItem_C*                   K2Node_DynamicCast_AsBP_Weapon_View_Item;          // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FA[0x2];                                      // 0x01FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponsList_C_SortItems) == 0x000008, "Wrong alignment on WBP_WeaponsList_C_SortItems");
static_assert(sizeof(WBP_WeaponsList_C_SortItems) == 0x000210, "Wrong size on WBP_WeaponsList_C_SortItems");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, NavigateToItem) == 0x000000, "Member 'WBP_WeaponsList_C_SortItems::NavigateToItem' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, Temp_wildcard_Temp_buffer_array_Variable) == 0x000008, "Member 'WBP_WeaponsList_C_SortItems::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000018, "Member 'WBP_WeaponsList_C_SortItems::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WBP_WeaponsList_C_SortItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, Temp_bool_True_if_break_was_hit_Variable) == 0x00002C, "Member 'WBP_WeaponsList_C_SortItems::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, CallFunc_Not_PreBool_ReturnValue) == 0x00002D, "Member 'WBP_WeaponsList_C_SortItems::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'WBP_WeaponsList_C_SortItems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'WBP_WeaponsList_C_SortItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, Temp_int_Array_Index_Variable) == 0x000038, "Member 'WBP_WeaponsList_C_SortItems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, Temp_int_Array_Index_Variable_1) == 0x00003C, "Member 'WBP_WeaponsList_C_SortItems::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_WeaponsList_C_SortItems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, CallFunc_GetItemDynamicData_ItemDynamicData) == 0x000048, "Member 'WBP_WeaponsList_C_SortItems::CallFunc_GetItemDynamicData_ItemDynamicData' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, CallFunc_GetOwnerData_OwnerData) == 0x000180, "Member 'WBP_WeaponsList_C_SortItems::CallFunc_GetOwnerData_OwnerData' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, CallFunc_HasItemEquipped_IsEquipped) == 0x000188, "Member 'WBP_WeaponsList_C_SortItems::CallFunc_HasItemEquipped_IsEquipped' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, CallFunc_HasItemEquipped_Slot) == 0x00018C, "Member 'WBP_WeaponsList_C_SortItems::CallFunc_HasItemEquipped_Slot' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, CallFunc_GetSortDirection_SortDirection) == 0x000194, "Member 'WBP_WeaponsList_C_SortItems::CallFunc_GetSortDirection_SortDirection' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, K2Node_CreateDelegate_OutputDelegate) == 0x000198, "Member 'WBP_WeaponsList_C_SortItems::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, BPNode_SortArray_OrderingResult) == 0x0001A8, "Member 'WBP_WeaponsList_C_SortItems::BPNode_SortArray_OrderingResult' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, BPNode_SortArray_CmpSuccess) == 0x0001B0, "Member 'WBP_WeaponsList_C_SortItems::BPNode_SortArray_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, BPNode_SortArray_SomeAlteration) == 0x0001B1, "Member 'WBP_WeaponsList_C_SortItems::BPNode_SortArray_SomeAlteration' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, BPNode_SortArray_Obj1) == 0x0001B8, "Member 'WBP_WeaponsList_C_SortItems::BPNode_SortArray_Obj1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, BPNode_SortArray_Obj2) == 0x0001C0, "Member 'WBP_WeaponsList_C_SortItems::BPNode_SortArray_Obj2' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, BPNode_SortArray_Index1) == 0x0001C8, "Member 'WBP_WeaponsList_C_SortItems::BPNode_SortArray_Index1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, BPNode_SortArray_Index2) == 0x0001CC, "Member 'WBP_WeaponsList_C_SortItems::BPNode_SortArray_Index2' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, CallFunc_GetListItems_ReturnValue) == 0x0001D0, "Member 'WBP_WeaponsList_C_SortItems::CallFunc_GetListItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, Temp_int_Loop_Counter_Variable_1) == 0x0001E0, "Member 'WBP_WeaponsList_C_SortItems::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, CallFunc_Array_Get_Item_1) == 0x0001E8, "Member 'WBP_WeaponsList_C_SortItems::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, K2Node_DynamicCast_AsBP_Weapon_View_Item) == 0x0001F0, "Member 'WBP_WeaponsList_C_SortItems::K2Node_DynamicCast_AsBP_Weapon_View_Item' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, K2Node_DynamicCast_bSuccess) == 0x0001F8, "Member 'WBP_WeaponsList_C_SortItems::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, CallFunc_Less_IntInt_ReturnValue) == 0x0001F9, "Member 'WBP_WeaponsList_C_SortItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, CallFunc_Array_Add_ReturnValue) == 0x0001FC, "Member 'WBP_WeaponsList_C_SortItems::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, CallFunc_BooleanAND_ReturnValue) == 0x000200, "Member 'WBP_WeaponsList_C_SortItems::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, CallFunc_Add_IntInt_ReturnValue_1) == 0x000204, "Member 'WBP_WeaponsList_C_SortItems::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, CallFunc_Array_Length_ReturnValue_1) == 0x000208, "Member 'WBP_WeaponsList_C_SortItems::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_SortItems, CallFunc_Less_IntInt_ReturnValue_1) == 0x00020C, "Member 'WBP_WeaponsList_C_SortItems::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function WBP_WeaponsList.WBP_WeaponsList_C.UpdateWeaponEquippedState
// 0x0048 (0x0048 - 0x0000)
struct WBP_WeaponsList_C_UpdateWeaponEquippedState final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        CallFunc_GetListItems_ReturnValue;                 // 0x0010(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WeaponViewItem_C*                   K2Node_DynamicCast_AsBP_Weapon_View_Item;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponsList_C_UpdateWeaponEquippedState) == 0x000008, "Wrong alignment on WBP_WeaponsList_C_UpdateWeaponEquippedState");
static_assert(sizeof(WBP_WeaponsList_C_UpdateWeaponEquippedState) == 0x000048, "Wrong size on WBP_WeaponsList_C_UpdateWeaponEquippedState");
static_assert(offsetof(WBP_WeaponsList_C_UpdateWeaponEquippedState, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_WeaponsList_C_UpdateWeaponEquippedState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_UpdateWeaponEquippedState, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_WeaponsList_C_UpdateWeaponEquippedState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_UpdateWeaponEquippedState, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_WeaponsList_C_UpdateWeaponEquippedState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_UpdateWeaponEquippedState, CallFunc_GetListItems_ReturnValue) == 0x000010, "Member 'WBP_WeaponsList_C_UpdateWeaponEquippedState::CallFunc_GetListItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_UpdateWeaponEquippedState, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_WeaponsList_C_UpdateWeaponEquippedState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_UpdateWeaponEquippedState, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_WeaponsList_C_UpdateWeaponEquippedState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_UpdateWeaponEquippedState, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WBP_WeaponsList_C_UpdateWeaponEquippedState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_UpdateWeaponEquippedState, K2Node_DynamicCast_AsBP_Weapon_View_Item) == 0x000038, "Member 'WBP_WeaponsList_C_UpdateWeaponEquippedState::K2Node_DynamicCast_AsBP_Weapon_View_Item' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_UpdateWeaponEquippedState, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_WeaponsList_C_UpdateWeaponEquippedState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_WeaponsList.WBP_WeaponsList_C.WeaponSortLambda
// 0x0450 (0x0450 - 0x0000)
struct WBP_WeaponsList_C_WeaponSortLambda final
{
public:
	class UBP_WeaponViewItem_C*                   WeaponViewItemLhs;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_WeaponViewItem_C*                   WeaponViewItemRhs;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UOrderingResult*                        OrderingResult;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESortOrdering                                 Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterData_C*                    CallFunc_GetOwnerData_OwnerData;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_Weapon_C*         CallFunc_GetGearWeaponInstance_Gear_Weapon_Instance_; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_Weapon_C*         CallFunc_GetGearWeaponInstance_Gear_Weapon_Instance__1; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponInstancePower_TotalDamage;       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponInstancePower_BaseDamage;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponInstancePower_ScalingDamage;     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ECharacterAttribute, int32>              CallFunc_GetWeaponInstancePower_ScalingDamageByAttribute; // 0x0048(0x0050)()
	int32                                         CallFunc_GetCurrentLevel_ReturnValue;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_DynamicData               CallFunc_GetItemDynamicData_ItemDynamicData;       // 0x00A0(0x0138)(ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    CallFunc_GetOwnerData_OwnerData_1;                 // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_Weapon_C*         CallFunc_GetGearWeaponInstance_Gear_Weapon_Instance__2; // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponInstancePower_TotalDamage_1;     // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponInstancePower_BaseDamage_1;      // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponInstancePower_ScalingDamage_1;   // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ECharacterAttribute, int32>              CallFunc_GetWeaponInstancePower_ScalingDamageByAttribute_1; // 0x01F8(0x0050)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SignOfInteger_ReturnValue;                // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Gear_Weapon_C*         CallFunc_GetGearWeaponInstance_Gear_Weapon_Instance__3; // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentLevel_ReturnValue_1;            // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_jRPG_Item_DynamicData               CallFunc_GetItemDynamicData_ItemDynamicData_1;     // 0x0278(0x0138)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x3];                                      // 0x03B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x03B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_SignOfInteger_ReturnValue_1;              // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CompareStrings_ReturnValue;               // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SignOfInteger_ReturnValue_2;              // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESortOrdering                                 Temp_byte_Variable_1;                              // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9[0x3];                                      // 0x03D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESortOrdering                                 Temp_byte_Variable_2;                              // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESortOrdering                                 Temp_byte_Variable_3;                              // 0x03E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESortOrdering                                 Temp_byte_Variable_4;                              // 0x03E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESortOrdering                                 Temp_byte_Variable_5;                              // 0x03E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESortOrdering                                 K2Node_Select_Default;                             // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x3];                                      // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESortOrdering                                 Temp_byte_Variable_6;                              // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESortOrdering                                 K2Node_Select_Default_1;                           // 0x03F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESortOrdering                                 Temp_byte_Variable_7;                              // 0x03F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESortOrdering                                 Temp_byte_Variable_8;                              // 0x03F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F4[0x4];                                      // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_SortDropdownEntry                   CallFunc_GetActiveDropdownEntry_ActiveDropdownEntry; // 0x03F8(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0414(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESortOrdering                                 K2Node_Select_Default_2;                           // 0x0415(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_416[0x2];                                      // 0x0416(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_SortDropdownEntry                   CallFunc_GetActiveDropdownEntry_ActiveDropdownEntry_1; // 0x0418(0x0018)(HasGetValueTypeHash)
	struct FS_SortDropdownEntry                   CallFunc_GetActiveDropdownEntry_ActiveDropdownEntry_2; // 0x0430(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x0449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponsList_C_WeaponSortLambda) == 0x000008, "Wrong alignment on WBP_WeaponsList_C_WeaponSortLambda");
static_assert(sizeof(WBP_WeaponsList_C_WeaponSortLambda) == 0x000450, "Wrong size on WBP_WeaponsList_C_WeaponSortLambda");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, WeaponViewItemLhs) == 0x000000, "Member 'WBP_WeaponsList_C_WeaponSortLambda::WeaponViewItemLhs' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, WeaponViewItemRhs) == 0x000008, "Member 'WBP_WeaponsList_C_WeaponSortLambda::WeaponViewItemRhs' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, OrderingResult) == 0x000010, "Member 'WBP_WeaponsList_C_WeaponSortLambda::OrderingResult' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, Temp_byte_Variable) == 0x000018, "Member 'WBP_WeaponsList_C_WeaponSortLambda::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_GetOwnerData_OwnerData) == 0x000020, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_GetOwnerData_OwnerData' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_GetGearWeaponInstance_Gear_Weapon_Instance_) == 0x000028, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_GetGearWeaponInstance_Gear_Weapon_Instance_' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_GetGearWeaponInstance_Gear_Weapon_Instance__1) == 0x000030, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_GetGearWeaponInstance_Gear_Weapon_Instance__1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_GetWeaponInstancePower_TotalDamage) == 0x000038, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_GetWeaponInstancePower_TotalDamage' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_GetWeaponInstancePower_BaseDamage) == 0x00003C, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_GetWeaponInstancePower_BaseDamage' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_GetWeaponInstancePower_ScalingDamage) == 0x000040, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_GetWeaponInstancePower_ScalingDamage' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_GetWeaponInstancePower_ScalingDamageByAttribute) == 0x000048, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_GetWeaponInstancePower_ScalingDamageByAttribute' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_GetCurrentLevel_ReturnValue) == 0x000098, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_GetCurrentLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_GetItemDynamicData_ItemDynamicData) == 0x0000A0, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_GetItemDynamicData_ItemDynamicData' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_GetOwnerData_OwnerData_1) == 0x0001D8, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_GetOwnerData_OwnerData_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_GetGearWeaponInstance_Gear_Weapon_Instance__2) == 0x0001E0, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_GetGearWeaponInstance_Gear_Weapon_Instance__2' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_GetWeaponInstancePower_TotalDamage_1) == 0x0001E8, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_GetWeaponInstancePower_TotalDamage_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_GetWeaponInstancePower_BaseDamage_1) == 0x0001EC, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_GetWeaponInstancePower_BaseDamage_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_GetWeaponInstancePower_ScalingDamage_1) == 0x0001F0, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_GetWeaponInstancePower_ScalingDamage_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_GetWeaponInstancePower_ScalingDamageByAttribute_1) == 0x0001F8, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_GetWeaponInstancePower_ScalingDamageByAttribute_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_Conv_TextToString_ReturnValue) == 0x000248, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000258, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_Subtract_IntInt_ReturnValue) == 0x00025C, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_SignOfInteger_ReturnValue) == 0x000260, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_SignOfInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_GetGearWeaponInstance_Gear_Weapon_Instance__3) == 0x000268, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_GetGearWeaponInstance_Gear_Weapon_Instance__3' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_Add_IntInt_ReturnValue) == 0x000270, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_GetCurrentLevel_ReturnValue_1) == 0x000274, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_GetCurrentLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_GetItemDynamicData_ItemDynamicData_1) == 0x000278, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_GetItemDynamicData_ItemDynamicData_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0003B0, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0003B4, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0003B8, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_SignOfInteger_ReturnValue_1) == 0x0003C8, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_SignOfInteger_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_CompareStrings_ReturnValue) == 0x0003CC, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_CompareStrings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_Add_IntInt_ReturnValue_1) == 0x0003D0, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_SignOfInteger_ReturnValue_2) == 0x0003D4, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_SignOfInteger_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, Temp_byte_Variable_1) == 0x0003D8, "Member 'WBP_WeaponsList_C_WeaponSortLambda::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_Add_IntInt_ReturnValue_2) == 0x0003DC, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, Temp_int_Variable) == 0x0003E0, "Member 'WBP_WeaponsList_C_WeaponSortLambda::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, Temp_byte_Variable_2) == 0x0003E4, "Member 'WBP_WeaponsList_C_WeaponSortLambda::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, Temp_byte_Variable_3) == 0x0003E5, "Member 'WBP_WeaponsList_C_WeaponSortLambda::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, Temp_byte_Variable_4) == 0x0003E6, "Member 'WBP_WeaponsList_C_WeaponSortLambda::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, Temp_byte_Variable_5) == 0x0003E7, "Member 'WBP_WeaponsList_C_WeaponSortLambda::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, K2Node_Select_Default) == 0x0003E8, "Member 'WBP_WeaponsList_C_WeaponSortLambda::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, Temp_int_Variable_1) == 0x0003EC, "Member 'WBP_WeaponsList_C_WeaponSortLambda::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, Temp_byte_Variable_6) == 0x0003F0, "Member 'WBP_WeaponsList_C_WeaponSortLambda::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, K2Node_Select_Default_1) == 0x0003F1, "Member 'WBP_WeaponsList_C_WeaponSortLambda::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, Temp_byte_Variable_7) == 0x0003F2, "Member 'WBP_WeaponsList_C_WeaponSortLambda::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, Temp_byte_Variable_8) == 0x0003F3, "Member 'WBP_WeaponsList_C_WeaponSortLambda::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_GetActiveDropdownEntry_ActiveDropdownEntry) == 0x0003F8, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_GetActiveDropdownEntry_ActiveDropdownEntry' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, Temp_int_Variable_2) == 0x000410, "Member 'WBP_WeaponsList_C_WeaponSortLambda::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000414, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, K2Node_Select_Default_2) == 0x000415, "Member 'WBP_WeaponsList_C_WeaponSortLambda::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_GetActiveDropdownEntry_ActiveDropdownEntry_1) == 0x000418, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_GetActiveDropdownEntry_ActiveDropdownEntry_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_GetActiveDropdownEntry_ActiveDropdownEntry_2) == 0x000430, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_GetActiveDropdownEntry_ActiveDropdownEntry_2' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000448, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_WeaponSortLambda, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x000449, "Member 'WBP_WeaponsList_C_WeaponSortLambda::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");

// Function WBP_WeaponsList.WBP_WeaponsList_C.BP_GetDesiredFocusTarget
// 0x0328 (0x0328 - 0x0000)
struct WBP_WeaponsList_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        CallFunc_GetListItems_ReturnValue;                 // 0x0028(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_WeaponViewItem_C*                   K2Node_DynamicCast_AsBP_Weapon_View_Item;          // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_DynamicData               CallFunc_GetItemDynamicData_ItemDynamicData;       // 0x0060(0x0138)(ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    CallFunc_GetOwnerData_OwnerData;                   // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasItemEquipped_IsEquipped;               // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEquipmentSlot                        CallFunc_HasItemEquipped_Slot;                     // 0x01A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        CallFunc_GetListItems_ReturnValue_1;               // 0x01B0(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item_1;                         // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WeaponViewItem_C*                   K2Node_DynamicCast_AsBP_Weapon_View_Item_1;        // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E2[0x6];                                      // 0x01E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_DynamicData               CallFunc_GetItemDynamicData_ItemDynamicData_1;     // 0x01E8(0x0138)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponsList_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_WeaponsList_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_WeaponsList_C_BP_GetDesiredFocusTarget) == 0x000328, "Wrong size on WBP_WeaponsList_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_WeaponsList_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_WeaponsList_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_BP_GetDesiredFocusTarget, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_WeaponsList_C_BP_GetDesiredFocusTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_BP_GetDesiredFocusTarget, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_WeaponsList_C_BP_GetDesiredFocusTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_BP_GetDesiredFocusTarget, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'WBP_WeaponsList_C_BP_GetDesiredFocusTarget::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_BP_GetDesiredFocusTarget, Temp_int_Array_Index_Variable) == 0x000014, "Member 'WBP_WeaponsList_C_BP_GetDesiredFocusTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_BP_GetDesiredFocusTarget, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'WBP_WeaponsList_C_BP_GetDesiredFocusTarget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_BP_GetDesiredFocusTarget, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'WBP_WeaponsList_C_BP_GetDesiredFocusTarget::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_BP_GetDesiredFocusTarget, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'WBP_WeaponsList_C_BP_GetDesiredFocusTarget::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_BP_GetDesiredFocusTarget, CallFunc_GetListItems_ReturnValue) == 0x000028, "Member 'WBP_WeaponsList_C_BP_GetDesiredFocusTarget::CallFunc_GetListItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_BP_GetDesiredFocusTarget, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'WBP_WeaponsList_C_BP_GetDesiredFocusTarget::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_BP_GetDesiredFocusTarget, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_WeaponsList_C_BP_GetDesiredFocusTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_BP_GetDesiredFocusTarget, K2Node_DynamicCast_AsBP_Weapon_View_Item) == 0x000048, "Member 'WBP_WeaponsList_C_BP_GetDesiredFocusTarget::K2Node_DynamicCast_AsBP_Weapon_View_Item' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_BP_GetDesiredFocusTarget, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_WeaponsList_C_BP_GetDesiredFocusTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_BP_GetDesiredFocusTarget, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'WBP_WeaponsList_C_BP_GetDesiredFocusTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_BP_GetDesiredFocusTarget, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'WBP_WeaponsList_C_BP_GetDesiredFocusTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_BP_GetDesiredFocusTarget, CallFunc_GetItemDynamicData_ItemDynamicData) == 0x000060, "Member 'WBP_WeaponsList_C_BP_GetDesiredFocusTarget::CallFunc_GetItemDynamicData_ItemDynamicData' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_BP_GetDesiredFocusTarget, CallFunc_GetOwnerData_OwnerData) == 0x000198, "Member 'WBP_WeaponsList_C_BP_GetDesiredFocusTarget::CallFunc_GetOwnerData_OwnerData' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_BP_GetDesiredFocusTarget, CallFunc_HasItemEquipped_IsEquipped) == 0x0001A0, "Member 'WBP_WeaponsList_C_BP_GetDesiredFocusTarget::CallFunc_HasItemEquipped_IsEquipped' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_BP_GetDesiredFocusTarget, CallFunc_HasItemEquipped_Slot) == 0x0001A4, "Member 'WBP_WeaponsList_C_BP_GetDesiredFocusTarget::CallFunc_HasItemEquipped_Slot' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_BP_GetDesiredFocusTarget, CallFunc_GetListItems_ReturnValue_1) == 0x0001B0, "Member 'WBP_WeaponsList_C_BP_GetDesiredFocusTarget::CallFunc_GetListItems_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_BP_GetDesiredFocusTarget, CallFunc_Array_Length_ReturnValue_1) == 0x0001C0, "Member 'WBP_WeaponsList_C_BP_GetDesiredFocusTarget::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_BP_GetDesiredFocusTarget, CallFunc_Array_Get_Item_1) == 0x0001C8, "Member 'WBP_WeaponsList_C_BP_GetDesiredFocusTarget::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_BP_GetDesiredFocusTarget, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001D0, "Member 'WBP_WeaponsList_C_BP_GetDesiredFocusTarget::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_BP_GetDesiredFocusTarget, K2Node_DynamicCast_AsBP_Weapon_View_Item_1) == 0x0001D8, "Member 'WBP_WeaponsList_C_BP_GetDesiredFocusTarget::K2Node_DynamicCast_AsBP_Weapon_View_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_BP_GetDesiredFocusTarget, K2Node_DynamicCast_bSuccess_1) == 0x0001E0, "Member 'WBP_WeaponsList_C_BP_GetDesiredFocusTarget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_BP_GetDesiredFocusTarget, CallFunc_BooleanAND_ReturnValue) == 0x0001E1, "Member 'WBP_WeaponsList_C_BP_GetDesiredFocusTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_BP_GetDesiredFocusTarget, CallFunc_GetItemDynamicData_ItemDynamicData_1) == 0x0001E8, "Member 'WBP_WeaponsList_C_BP_GetDesiredFocusTarget::CallFunc_GetItemDynamicData_ItemDynamicData_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponsList_C_BP_GetDesiredFocusTarget, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000320, "Member 'WBP_WeaponsList_C_BP_GetDesiredFocusTarget::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

}

