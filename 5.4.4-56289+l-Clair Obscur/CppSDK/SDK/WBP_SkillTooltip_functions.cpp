#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SkillTooltip

#include "Basic.hpp"

#include "WBP_SkillTooltip_classes.hpp"
#include "WBP_SkillTooltip_parameters.hpp"


namespace SDK
{

// Function WBP_SkillTooltip.WBP_SkillTooltip_C.CreateAdditionalEffect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          Content                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    IsOvercharged                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bShowBackground                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Size                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SkillTooltip_C::CreateAdditionalEffect(class UWidget* Content, bool IsOvercharged, bool bShowBackground, double Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SkillTooltip_C", "CreateAdditionalEffect");

	Params::WBP_SkillTooltip_C_CreateAdditionalEffect Parms{};

	Parms.Content = Content;
	Parms.IsOvercharged = IsOvercharged;
	Parms.bShowBackground = bShowBackground;
	Parms.Size = Size;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SkillTooltip.WBP_SkillTooltip_C.SetSkillUnlockData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_DataAsset_Skill_C*            SkillData                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSecretLocked                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_SkillTooltip_C::SetSkillUnlockData(class UBP_DataAsset_Skill_C* SkillData, bool IsSecretLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SkillTooltip_C", "SetSkillUnlockData");

	Params::WBP_SkillTooltip_C_SetSkillUnlockData Parms{};

	Parms.SkillData = SkillData;
	Parms.IsSecretLocked = IsSecretLocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_SkillTooltip.WBP_SkillTooltip_C.Set Skill Data
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_DataAsset_Skill_C*            InSkillData                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_SkillTooltip_C::Set_Skill_Data(class UBP_DataAsset_Skill_C* InSkillData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_SkillTooltip_C", "Set Skill Data");

	Params::WBP_SkillTooltip_C_Set_Skill_Data Parms{};

	Parms.InSkillData = InSkillData;

	UObject::ProcessEvent(Func, &Parms);
}

}

