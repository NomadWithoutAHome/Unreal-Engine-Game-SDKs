#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SaveManager

#include "Basic.hpp"

#include "BP_SaveManager_classes.hpp"
#include "BP_SaveManager_parameters.hpp"


namespace SDK
{

// Function BP_SaveManager.BP_SaveManager_C.AddBackupSaveToSelectedSlot
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    SaveName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class FString>*                  SavesToDelete                                          (Parm, OutParm)

void UBP_SaveManager_C::AddBackupSaveToSelectedSlot(const class FString& SaveName, TArray<class FString>* SavesToDelete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "AddBackupSaveToSelectedSlot");

	Params::BP_SaveManager_C_AddBackupSaveToSelectedSlot Parms{};

	Parms.SaveName = std::move(SaveName);

	UObject::ProcessEvent(Func, &Parms);

	if (SavesToDelete != nullptr)
		*SavesToDelete = std::move(Parms.SavesToDelete);
}


// Function BP_SaveManager.BP_SaveManager_C.AsyncLoadGameFromSlot
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    SlotName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_SaveManager_C::AsyncLoadGameFromSlot(const class FString& SlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "AsyncLoadGameFromSlot");

	Params::BP_SaveManager_C_AsyncLoadGameFromSlot Parms{};

	Parms.SlotName = std::move(SlotName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.AsyncSaveContainer
// (BlueprintCallable, BlueprintEvent)

void UBP_SaveManager_C::AsyncSaveContainer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "AsyncSaveContainer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SaveManager.BP_SaveManager_C.AsyncSaveGameToSlot
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USaveGame*                        SaveGameObject                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const class FString&                    SlotName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_SaveManager_C::AsyncSaveGameToSlot(class USaveGame* SaveGameObject, const class FString& SlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "AsyncSaveGameToSlot");

	Params::BP_SaveManager_C_AsyncSaveGameToSlot Parms{};

	Parms.SaveGameObject = SaveGameObject;
	Parms.SlotName = std::move(SlotName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.CacheLastSaveTimestamp
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_SaveManager_C::CacheLastSaveTimestamp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "CacheLastSaveTimestamp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SaveManager.BP_SaveManager_C.CanLoadSave
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   CanLoad                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::CanLoadSave(bool* CanLoad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "CanLoadSave");

	Params::BP_SaveManager_C_CanLoadSave Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CanLoad != nullptr)
		*CanLoad = Parms.CanLoad;
}


// Function BP_SaveManager.BP_SaveManager_C.CanSave
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   CanSave_0                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::CanSave(bool* CanSave_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "CanSave");

	Params::BP_SaveManager_C_CanSave Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CanSave_0 != nullptr)
		*CanSave_0 = Parms.CanSave_0;
}


// Function BP_SaveManager.BP_SaveManager_C.ChangeAreaName
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      NewAreaName                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_SaveManager_C::ChangeAreaName(const class FText& NewAreaName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "ChangeAreaName");

	Params::BP_SaveManager_C_ChangeAreaName Parms{};

	Parms.NewAreaName = std::move(NewAreaName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.CheckSaveManagerSanity
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_SaveManager_C::CheckSaveManagerSanity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "CheckSaveManagerSanity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SaveManager.BP_SaveManager_C.Completed_1BF970B0492988DFD9A83ABA0B6CA48F
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::Completed_1BF970B0492988DFD9A83ABA0B6CA48F(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "Completed_1BF970B0492988DFD9A83ABA0B6CA48F");

	Params::BP_SaveManager_C_Completed_1BF970B0492988DFD9A83ABA0B6CA48F Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.Completed_685A6FB94E7D73F6E74DDE807397F51F
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USaveGame*                        SaveGame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::Completed_685A6FB94E7D73F6E74DDE807397F51F(class USaveGame* SaveGame, bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "Completed_685A6FB94E7D73F6E74DDE807397F51F");

	Params::BP_SaveManager_C_Completed_685A6FB94E7D73F6E74DDE807397F51F Parms{};

	Parms.SaveGame = SaveGame;
	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.Completed_9195BA6349F82F2F84FF31A31A028C3E
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USaveGame*                        SaveGame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::Completed_9195BA6349F82F2F84FF31A31A028C3E(class USaveGame* SaveGame, bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "Completed_9195BA6349F82F2F84FF31A31A028C3E");

	Params::BP_SaveManager_C_Completed_9195BA6349F82F2F84FF31A31A028C3E Parms{};

	Parms.SaveGame = SaveGame;
	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.Completed_BC27564C4EAA81FC716AA5B004066701
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USaveGame*                        SaveGame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::Completed_BC27564C4EAA81FC716AA5B004066701(class USaveGame* SaveGame, bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "Completed_BC27564C4EAA81FC716AA5B004066701");

	Params::BP_SaveManager_C_Completed_BC27564C4EAA81FC716AA5B004066701 Parms{};

	Parms.SaveGame = SaveGame;
	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.Completed_CBDE04C044E45CF17D3AE2ABD1343457
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USaveGame*                        SaveGame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::Completed_CBDE04C044E45CF17D3AE2ABD1343457(class USaveGame* SaveGame, bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "Completed_CBDE04C044E45CF17D3AE2ABD1343457");

	Params::BP_SaveManager_C_Completed_CBDE04C044E45CF17D3AE2ABD1343457 Parms{};

	Parms.SaveGame = SaveGame;
	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.Completed_DE2492DD4E117FE40A9225B702CCF94E
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USaveGame*                        SaveGame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::Completed_DE2492DD4E117FE40A9225B702CCF94E(class USaveGame* SaveGame, bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "Completed_DE2492DD4E117FE40A9225B702CCF94E");

	Params::BP_SaveManager_C_Completed_DE2492DD4E117FE40A9225B702CCF94E Parms{};

	Parms.SaveGame = SaveGame;
	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.ComputeSaveFilePath
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class FString&                    SaveName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBP_SaveManager_C::ComputeSaveFilePath(const class FString& SaveName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "ComputeSaveFilePath");

	Params::BP_SaveManager_C_ComputeSaveFilePath Parms{};

	Parms.SaveName = std::move(SaveName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SaveManager.BP_SaveManager_C.ComputeSaveMetaData
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FS_SaveSlotMetaData*             SaveMetaData                                           (Parm, OutParm, HasGetValueTypeHash)

void UBP_SaveManager_C::ComputeSaveMetaData(struct FS_SaveSlotMetaData* SaveMetaData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "ComputeSaveMetaData");

	Params::BP_SaveManager_C_ComputeSaveMetaData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SaveMetaData != nullptr)
		*SaveMetaData = std::move(Parms.SaveMetaData);
}


// Function BP_SaveManager.BP_SaveManager_C.DEBUG_MakeSaveGameFromData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FFDebugSaveGame&           SaveData                                               (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// class UBP_jRPG_GameSave_C**             CreatedSaveGameObject                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::DEBUG_MakeSaveGameFromData(const struct FFDebugSaveGame& SaveData, class UBP_jRPG_GameSave_C** CreatedSaveGameObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "DEBUG_MakeSaveGameFromData");

	Params::BP_SaveManager_C_DEBUG_MakeSaveGameFromData Parms{};

	Parms.SaveData = std::move(SaveData);

	UObject::ProcessEvent(Func, &Parms);

	if (CreatedSaveGameObject != nullptr)
		*CreatedSaveGameObject = Parms.CreatedSaveGameObject;
}


// Function BP_SaveManager.BP_SaveManager_C.DeleteBackupSaveInSlot
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SaveSlot                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    SaveName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_SaveManager_C::DeleteBackupSaveInSlot(int32 SaveSlot, const class FString& SaveName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "DeleteBackupSaveInSlot");

	Params::BP_SaveManager_C_DeleteBackupSaveInSlot Parms{};

	Parms.SaveSlot = SaveSlot;
	Parms.SaveName = std::move(SaveName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.DeleteSaveFile
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    SaveName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_SaveManager_C::DeleteSaveFile(const class FString& SaveName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "DeleteSaveFile");

	Params::BP_SaveManager_C_DeleteSaveFile Parms{};

	Parms.SaveName = std::move(SaveName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.DeleteSaveSlot
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SaveSlot                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::DeleteSaveSlot(int32 SaveSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "DeleteSaveSlot");

	Params::BP_SaveManager_C_DeleteSaveSlot Parms{};

	Parms.SaveSlot = SaveSlot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.ExecuteUbergraph_BP_SaveManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::ExecuteUbergraph_BP_SaveManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "ExecuteUbergraph_BP_SaveManager");

	Params::BP_SaveManager_C_ExecuteUbergraph_BP_SaveManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.FlushAllSaveRequests
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SaveManager_C::FlushAllSaveRequests()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "FlushAllSaveRequests");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SaveManager.BP_SaveManager_C.ForceAutoSave
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    DebugReason                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_SaveManager_C::ForceAutoSave(const class FString& DebugReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "ForceAutoSave");

	Params::BP_SaveManager_C_ForceAutoSave Parms{};

	Parms.DebugReason = std::move(DebugReason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.GetBackupSaveFolderName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBP_SaveManager_C::GetBackupSaveFolderName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "GetBackupSaveFolderName");

	Params::BP_SaveManager_C_GetBackupSaveFolderName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SaveManager.BP_SaveManager_C.GetCurrentSaveVersion
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_SaveManager_C::GetCurrentSaveVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "GetCurrentSaveVersion");

	Params::BP_SaveManager_C_GetCurrentSaveVersion Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SaveManager.BP_SaveManager_C.GetEditorSaveName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBP_SaveManager_C::GetEditorSaveName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "GetEditorSaveName");

	Params::BP_SaveManager_C_GetEditorSaveName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SaveManager.BP_SaveManager_C.GetElapsedTimeSinceLastRequest
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 ReturnNode                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::GetElapsedTimeSinceLastRequest(double* ReturnNode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "GetElapsedTimeSinceLastRequest");

	Params::BP_SaveManager_C_GetElapsedTimeSinceLastRequest Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ReturnNode != nullptr)
		*ReturnNode = Parms.ReturnNode;
}


// Function BP_SaveManager.BP_SaveManager_C.GetMaxNumberOfSlots
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_SaveManager_C::GetMaxNumberOfSlots()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "GetMaxNumberOfSlots");

	Params::BP_SaveManager_C_GetMaxNumberOfSlots Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SaveManager.BP_SaveManager_C.GetNewGameData
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             OverrideStartLevelDataID                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName*                            LevelAssetName                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag*                    SpawnPointTag                                          (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::GetNewGameData(class FName OverrideStartLevelDataID, class FName* LevelAssetName, struct FGameplayTag* SpawnPointTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "GetNewGameData");

	Params::BP_SaveManager_C_GetNewGameData Parms{};

	Parms.OverrideStartLevelDataID = OverrideStartLevelDataID;

	UObject::ProcessEvent(Func, &Parms);

	if (LevelAssetName != nullptr)
		*LevelAssetName = Parms.LevelAssetName;

	if (SpawnPointTag != nullptr)
		*SpawnPointTag = std::move(Parms.SpawnPointTag);
}


// Function BP_SaveManager.BP_SaveManager_C.GetNewGamePlusLevelName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class FName UBP_SaveManager_C::GetNewGamePlusLevelName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "GetNewGamePlusLevelName");

	Params::BP_SaveManager_C_GetNewGamePlusLevelName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SaveManager.BP_SaveManager_C.GetPlayerCharacterTransform
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FTransform                 ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

const struct FTransform UBP_SaveManager_C::GetPlayerCharacterTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "GetPlayerCharacterTransform");

	Params::BP_SaveManager_C_GetPlayerCharacterTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SaveManager.BP_SaveManager_C.GetRemainingTimeToValidateSave
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UBP_SaveManager_C::GetRemainingTimeToValidateSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "GetRemainingTimeToValidateSave");

	Params::BP_SaveManager_C_GetRemainingTimeToValidateSave Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SaveManager.BP_SaveManager_C.GetSaveContainerBackupName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBP_SaveManager_C::GetSaveContainerBackupName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "GetSaveContainerBackupName");

	Params::BP_SaveManager_C_GetSaveContainerBackupName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SaveManager.BP_SaveManager_C.GetSaveContainerName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBP_SaveManager_C::GetSaveContainerName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "GetSaveContainerName");

	Params::BP_SaveManager_C_GetSaveContainerName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SaveManager.BP_SaveManager_C.GetSaveGameObjectClass
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UClass* UBP_SaveManager_C::GetSaveGameObjectClass()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "GetSaveGameObjectClass");

	Params::BP_SaveManager_C_GetSaveGameObjectClass Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SaveManager.BP_SaveManager_C.GetSaveManagerDebugStatus
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBP_SaveManager_C::GetSaveManagerDebugStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "GetSaveManagerDebugStatus");

	Params::BP_SaveManager_C_GetSaveManagerDebugStatus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SaveManager.BP_SaveManager_C.GetSaveNameForSelectedSlot
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBP_SaveManager_C::GetSaveNameForSelectedSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "GetSaveNameForSelectedSlot");

	Params::BP_SaveManager_C_GetSaveNameForSelectedSlot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SaveManager.BP_SaveManager_C.GetSelectedSlot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  SelectedSlot_0                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::GetSelectedSlot(int32* SelectedSlot_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "GetSelectedSlot");

	Params::BP_SaveManager_C_GetSelectedSlot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SelectedSlot_0 != nullptr)
		*SelectedSlot_0 = Parms.SelectedSlot_0;
}


// Function BP_SaveManager.BP_SaveManager_C.GetSelectedSlotData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString*                          MainSave                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class FString>*                  BackupSaves                                            (Parm, OutParm)

void UBP_SaveManager_C::GetSelectedSlotData(class FString* MainSave, TArray<class FString>* BackupSaves)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "GetSelectedSlotData");

	Params::BP_SaveManager_C_GetSelectedSlotData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MainSave != nullptr)
		*MainSave = std::move(Parms.MainSave);

	if (BackupSaves != nullptr)
		*BackupSaves = std::move(Parms.BackupSaves);
}


// Function BP_SaveManager.BP_SaveManager_C.GetSlots
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FS_SaveSlotData>*         SaveSlots_0                                            (Parm, OutParm)

void UBP_SaveManager_C::GetSlots(TArray<struct FS_SaveSlotData>* SaveSlots_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "GetSlots");

	Params::BP_SaveManager_C_GetSlots Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SaveSlots_0 != nullptr)
		*SaveSlots_0 = std::move(Parms.SaveSlots_0);
}


// Function BP_SaveManager.BP_SaveManager_C.GetSpawnPointDataToSave
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FGameplayTag&              SpawnPointTag                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class FName                             SpawnPointName                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag*                    SpawnPointTagToSave                                    (Parm, OutParm, NoDestructor, HasGetValueTypeHash)
// class FName*                            SpawnPointNameToSave                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::GetSpawnPointDataToSave(const struct FGameplayTag& SpawnPointTag, class FName SpawnPointName, struct FGameplayTag* SpawnPointTagToSave, class FName* SpawnPointNameToSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "GetSpawnPointDataToSave");

	Params::BP_SaveManager_C_GetSpawnPointDataToSave Parms{};

	Parms.SpawnPointTag = std::move(SpawnPointTag);
	Parms.SpawnPointName = SpawnPointName;

	UObject::ProcessEvent(Func, &Parms);

	if (SpawnPointTagToSave != nullptr)
		*SpawnPointTagToSave = std::move(Parms.SpawnPointTagToSave);

	if (SpawnPointNameToSave != nullptr)
		*SpawnPointNameToSave = Parms.SpawnPointNameToSave;
}


// Function BP_SaveManager.BP_SaveManager_C.HasAnySaveInAnySlot
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_SaveManager_C::HasAnySaveInAnySlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "HasAnySaveInAnySlot");

	Params::BP_SaveManager_C_HasAnySaveInAnySlot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SaveManager.BP_SaveManager_C.HasDetectedPotentialError
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_SaveManager_C::HasDetectedPotentialError()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "HasDetectedPotentialError");

	Params::BP_SaveManager_C_HasDetectedPotentialError Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SaveManager.BP_SaveManager_C.HasProcessSaveRecently
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_SaveManager_C::HasProcessSaveRecently()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "HasProcessSaveRecently");

	Params::BP_SaveManager_C_HasProcessSaveRecently Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SaveManager.BP_SaveManager_C.HasValidSpawnPointTagOrName
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FGameplayTag&              SpawnPointTag                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class FName                             SpawnPointName                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::HasValidSpawnPointTagOrName(const struct FGameplayTag& SpawnPointTag, class FName SpawnPointName, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "HasValidSpawnPointTagOrName");

	Params::BP_SaveManager_C_HasValidSpawnPointTagOrName Parms{};

	Parms.SpawnPointTag = std::move(SpawnPointTag);
	Parms.SpawnPointName = SpawnPointName;

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function BP_SaveManager.BP_SaveManager_C.IncrementTimeIf Needed
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_SaveManager_C::IncrementTimeIf_Needed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "IncrementTimeIf Needed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SaveManager.BP_SaveManager_C.Initialize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_jRPG_GI_Custom_C*             GameInstance                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::Initialize(class UBP_jRPG_GI_Custom_C* GameInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "Initialize");

	Params::BP_SaveManager_C_Initialize Parms{};

	Parms.GameInstance = GameInstance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.InitializeCVars
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_SaveManager_C::InitializeCVars()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "InitializeCVars");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SaveManager.BP_SaveManager_C.InitializeLevelForNewGame
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FromMainMenu                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             OverrideStartLevelDataID                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::InitializeLevelForNewGame(bool FromMainMenu, class FName OverrideStartLevelDataID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "InitializeLevelForNewGame");

	Params::BP_SaveManager_C_InitializeLevelForNewGame Parms{};

	Parms.FromMainMenu = FromMainMenu;
	Parms.OverrideStartLevelDataID = OverrideStartLevelDataID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.IsAutoSaveEnabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_SaveManager_C::IsAutoSaveEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "IsAutoSaveEnabled");

	Params::BP_SaveManager_C_IsAutoSaveEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SaveManager.BP_SaveManager_C.IsCurrentLevelValidForSave
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_SaveManager_C::IsCurrentLevelValidForSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "IsCurrentLevelValidForSave");

	Params::BP_SaveManager_C_IsCurrentLevelValidForSave Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SaveManager.BP_SaveManager_C.IsLoadInProgress
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   IsInProgress                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::IsLoadInProgress(bool* IsInProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "IsLoadInProgress");

	Params::BP_SaveManager_C_IsLoadInProgress Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsInProgress != nullptr)
		*IsInProgress = Parms.IsInProgress;
}


// Function BP_SaveManager.BP_SaveManager_C.IsSaveInProgress
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   IsInProgress                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::IsSaveInProgress(bool* IsInProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "IsSaveInProgress");

	Params::BP_SaveManager_C_IsSaveInProgress Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsInProgress != nullptr)
		*IsInProgress = Parms.IsInProgress;
}


// Function BP_SaveManager.BP_SaveManager_C.IsSaveLoadable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class FString&                    SlotName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_SaveManager_C::IsSaveLoadable(const class FString& SlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "IsSaveLoadable");

	Params::BP_SaveManager_C_IsSaveLoadable Parms{};

	Parms.SlotName = std::move(SlotName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SaveManager.BP_SaveManager_C.IsSaveOrLoadInProgress
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_SaveManager_C::IsSaveOrLoadInProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "IsSaveOrLoadInProgress");

	Params::BP_SaveManager_C_IsSaveOrLoadInProgress Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SaveManager.BP_SaveManager_C.LoadGameFromSaveData
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_SaveGameData_C*               SaveData                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::LoadGameFromSaveData(class UBP_SaveGameData_C* SaveData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "LoadGameFromSaveData");

	Params::BP_SaveManager_C_LoadGameFromSaveData Parms{};

	Parms.SaveData = SaveData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.LoadGameFromSaveFile
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USaveGame*                        SaveGame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const class FString&                    SlotName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_SaveManager_C::LoadGameFromSaveFile(class USaveGame* SaveGame, const class FString& SlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "LoadGameFromSaveFile");

	Params::BP_SaveManager_C_LoadGameFromSaveFile Parms{};

	Parms.SaveGame = SaveGame;
	Parms.SlotName = std::move(SlotName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.LoadSavesContainer
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SaveManager_C::LoadSavesContainer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "LoadSavesContainer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SaveManager.BP_SaveManager_C.LoadSaveSlotsFromSaveContainer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_jRPG_SavesContainer_C*        SaveContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::LoadSaveSlotsFromSaveContainer(class UBP_jRPG_SavesContainer_C* SaveContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "LoadSaveSlotsFromSaveContainer");

	Params::BP_SaveManager_C_LoadSaveSlotsFromSaveContainer Parms{};

	Parms.SaveContainer = SaveContainer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.NotifyLoadRequestFinished
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SaveManagerLoadingStatus              Status                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::NotifyLoadRequestFinished(E_SaveManagerLoadingStatus Status)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "NotifyLoadRequestFinished");

	Params::BP_SaveManager_C_NotifyLoadRequestFinished Parms{};

	Parms.Status = Status;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.OnAsyncLoadOperationsDone
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_SaveManager_C::OnAsyncLoadOperationsDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "OnAsyncLoadOperationsDone");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SaveManager.BP_SaveManager_C.OnAsyncLoadOperationsFailed
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SaveManagerLoadingStatus              Status                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::OnAsyncLoadOperationsFailed(E_SaveManagerLoadingStatus Status)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "OnAsyncLoadOperationsFailed");

	Params::BP_SaveManager_C_OnAsyncLoadOperationsFailed Parms{};

	Parms.Status = Status;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.OnAsyncSaveOperationsDone
// (BlueprintCallable, BlueprintEvent)

void UBP_SaveManager_C::OnAsyncSaveOperationsDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "OnAsyncSaveOperationsDone");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SaveManager.BP_SaveManager_C.OnCompleted_434DEAE74EA140DF1A536CB17D9D4FB5
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::OnCompleted_434DEAE74EA140DF1A536CB17D9D4FB5(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "OnCompleted_434DEAE74EA140DF1A536CB17D9D4FB5");

	Params::BP_SaveManager_C_OnCompleted_434DEAE74EA140DF1A536CB17D9D4FB5 Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.OnLoggedInUser
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_SaveManager_C::OnLoggedInUser()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "OnLoggedInUser");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SaveManager.BP_SaveManager_C.ProcessLoadRequest
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_SaveManager_C::ProcessLoadRequest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "ProcessLoadRequest");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SaveManager.BP_SaveManager_C.ProcessSaveRequest
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_SaveManager_C::ProcessSaveRequest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "ProcessSaveRequest");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SaveManager.BP_SaveManager_C.ProcessSaveRequestUnsafe
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SaveManager_C::ProcessSaveRequestUnsafe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "ProcessSaveRequestUnsafe");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SaveManager.BP_SaveManager_C.ProcessUpgradeSave
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_SaveGameBase_C*               SaveGame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UBP_SaveGameBase_C*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UBP_SaveGameBase_C* UBP_SaveManager_C::ProcessUpgradeSave(class UBP_SaveGameBase_C* SaveGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "ProcessUpgradeSave");

	Params::BP_SaveManager_C_ProcessUpgradeSave Parms{};

	Parms.SaveGame = SaveGame;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SaveManager.BP_SaveManager_C.ReportAsyncDeleteSavesFailed
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>&                  SlotName                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ShouldFinishSaveOperation                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::ReportAsyncDeleteSavesFailed(TArray<class FString>& SlotName, bool ShouldFinishSaveOperation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "ReportAsyncDeleteSavesFailed");

	Params::BP_SaveManager_C_ReportAsyncDeleteSavesFailed Parms{};

	Parms.SlotName = std::move(SlotName);
	Parms.ShouldFinishSaveOperation = ShouldFinishSaveOperation;

	UObject::ProcessEvent(Func, &Parms);

	SlotName = std::move(Parms.SlotName);
}


// Function BP_SaveManager.BP_SaveManager_C.ReportAsyncLoadFromSlotFailed
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SaveManagerLoadingStatus              Status                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    SlotName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_SaveManager_C::ReportAsyncLoadFromSlotFailed(E_SaveManagerLoadingStatus Status, const class FString& SlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "ReportAsyncLoadFromSlotFailed");

	Params::BP_SaveManager_C_ReportAsyncLoadFromSlotFailed Parms{};

	Parms.Status = Status;
	Parms.SlotName = std::move(SlotName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.ReportAsyncSavesToSlotFailed
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>&                  SlotName                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ShouldFinishSaveOperation                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::ReportAsyncSavesToSlotFailed(TArray<class FString>& SlotName, bool ShouldFinishSaveOperation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "ReportAsyncSavesToSlotFailed");

	Params::BP_SaveManager_C_ReportAsyncSavesToSlotFailed Parms{};

	Parms.SlotName = std::move(SlotName);
	Parms.ShouldFinishSaveOperation = ShouldFinishSaveOperation;

	UObject::ProcessEvent(Func, &Parms);

	SlotName = std::move(Parms.SlotName);
}


// Function BP_SaveManager.BP_SaveManager_C.ReportAsyncSaveToSlotCompleted
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    SlotName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_SaveManager_C::ReportAsyncSaveToSlotCompleted(const class FString& SlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "ReportAsyncSaveToSlotCompleted");

	Params::BP_SaveManager_C_ReportAsyncSaveToSlotCompleted Parms{};

	Parms.SlotName = std::move(SlotName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.ReportAsyncSaveToSlotFailed
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    SlotName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    ShouldFinishSaveOperation                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::ReportAsyncSaveToSlotFailed(const class FString& SlotName, bool ShouldFinishSaveOperation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "ReportAsyncSaveToSlotFailed");

	Params::BP_SaveManager_C_ReportAsyncSaveToSlotFailed Parms{};

	Parms.SlotName = std::move(SlotName);
	Parms.ShouldFinishSaveOperation = ShouldFinishSaveOperation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.ReportAsyncSaveToSlotStarted
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    SlotName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_SaveManager_C::ReportAsyncSaveToSlotStarted(const class FString& SlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "ReportAsyncSaveToSlotStarted");

	Params::BP_SaveManager_C_ReportAsyncSaveToSlotStarted Parms{};

	Parms.SlotName = std::move(SlotName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.RequestAutoSave
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    DebugReason                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_SaveManager_C::RequestAutoSave(const class FString& DebugReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "RequestAutoSave");

	Params::BP_SaveManager_C_RequestAutoSave Parms{};

	Parms.DebugReason = std::move(DebugReason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.RequestLoadGame
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_LoadGameRequest&        LoadGameRequest_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_SaveManager_C::RequestLoadGame(const struct FS_LoadGameRequest& LoadGameRequest_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "RequestLoadGame");

	Params::BP_SaveManager_C_RequestLoadGame Parms{};

	Parms.LoadGameRequest_0 = std::move(LoadGameRequest_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.RequestSaveAtSpawnPoint
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              SpawnPointTag                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    ForceProcessImmediately                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    DebugReason                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_SaveManager_C::RequestSaveAtSpawnPoint(const struct FGameplayTag& SpawnPointTag, bool ForceProcessImmediately, const class FString& DebugReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "RequestSaveAtSpawnPoint");

	Params::BP_SaveManager_C_RequestSaveAtSpawnPoint Parms{};

	Parms.SpawnPointTag = std::move(SpawnPointTag);
	Parms.ForceProcessImmediately = ForceProcessImmediately;
	Parms.DebugReason = std::move(DebugReason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.RequestSaveInternal
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ProcessImmediately                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    DebugReason                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_SaveManager_C::RequestSaveInternal(bool ProcessImmediately, const class FString& DebugReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "RequestSaveInternal");

	Params::BP_SaveManager_C_RequestSaveInternal Parms{};

	Parms.ProcessImmediately = ProcessImmediately;
	Parms.DebugReason = std::move(DebugReason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.ResetSaveTimestamps
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_SaveManager_C::ResetSaveTimestamps()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "ResetSaveTimestamps");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SaveManager.BP_SaveManager_C.RetrieveSaveDataFromSlotName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    SlotName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UBP_SaveGameData_C*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UBP_SaveGameData_C* UBP_SaveManager_C::RetrieveSaveDataFromSlotName(const class FString& SlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "RetrieveSaveDataFromSlotName");

	Params::BP_SaveManager_C_RetrieveSaveDataFromSlotName Parms{};

	Parms.SlotName = std::move(SlotName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SaveManager.BP_SaveManager_C.RunTickFunction
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_SaveManager_C::RunTickFunction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "RunTickFunction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SaveManager.BP_SaveManager_C.SaveGameToFile
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    SaveToOverwrite                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_SaveManager_C::SaveGameToFile(const class FString& SaveToOverwrite)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "SaveGameToFile");

	Params::BP_SaveManager_C_SaveGameToFile Parms{};

	Parms.SaveToOverwrite = std::move(SaveToOverwrite);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.SaveGameToObject
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_SaveGameBase_C*               SaveObject                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const class FString&                    SaveName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_SaveManager_C::SaveGameToObject(class UBP_SaveGameBase_C* SaveObject, const class FString& SaveName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "SaveGameToObject");

	Params::BP_SaveManager_C_SaveGameToObject Parms{};

	Parms.SaveObject = SaveObject;
	Parms.SaveName = std::move(SaveName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.SetEnableAutoSave
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const bool                              Enable                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSF_ReferenceCounterHandle&      ReferenceHandle                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const class FString&                    DebugName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_SaveManager_C::SetEnableAutoSave(const bool Enable, struct FSF_ReferenceCounterHandle& ReferenceHandle, const class FString& DebugName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "SetEnableAutoSave");

	Params::BP_SaveManager_C_SetEnableAutoSave Parms{};

	Parms.Enable = Enable;
	Parms.ReferenceHandle = std::move(ReferenceHandle);
	Parms.DebugName = std::move(DebugName);

	UObject::ProcessEvent(Func, &Parms);

	ReferenceHandle = std::move(Parms.ReferenceHandle);
}


// Function BP_SaveManager.BP_SaveManager_C.SetSelectedSlot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SelectedSlot_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::SetSelectedSlot(int32 SelectedSlot_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "SetSelectedSlot");

	Params::BP_SaveManager_C_SetSelectedSlot Parms{};

	Parms.SelectedSlot_0 = SelectedSlot_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.ShouldCreateBackupSave
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_SaveManager_C::ShouldCreateBackupSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "ShouldCreateBackupSave");

	Params::BP_SaveManager_C_ShouldCreateBackupSave Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SaveManager.BP_SaveManager_C.ShouldIncrementTime
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_SaveManager_C::ShouldIncrementTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "ShouldIncrementTime");

	Params::BP_SaveManager_C_ShouldIncrementTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SaveManager.BP_SaveManager_C.StartMainQuests
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_SaveManager_C::StartMainQuests()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "StartMainQuests");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SaveManager.BP_SaveManager_C.StartNewGame
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FromMainMenu                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             OverrideStartLevelDataID                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::StartNewGame(bool FromMainMenu, class FName OverrideStartLevelDataID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "StartNewGame");

	Params::BP_SaveManager_C_StartNewGame Parms{};

	Parms.FromMainMenu = FromMainMenu;
	Parms.OverrideStartLevelDataID = OverrideStartLevelDataID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.StartNewGamePlus
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SaveManager_C::StartNewGamePlus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "StartNewGamePlus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SaveManager.BP_SaveManager_C.Tick
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SaveManager_C::Tick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "Tick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SaveManager.BP_SaveManager_C.TryAsyncSaveBackupToSlot
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USaveGame*                        SaveGameObject                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const class FString&                    SlotName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_SaveManager_C::TryAsyncSaveBackupToSlot(class USaveGame* SaveGameObject, const class FString& SlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "TryAsyncSaveBackupToSlot");

	Params::BP_SaveManager_C_TryAsyncSaveBackupToSlot Parms{};

	Parms.SaveGameObject = SaveGameObject;
	Parms.SlotName = std::move(SlotName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.UpdateMainSaveToSelectedSlot
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    SaveName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_SaveManager_C::UpdateMainSaveToSelectedSlot(const class FString& SaveName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "UpdateMainSaveToSelectedSlot");

	Params::BP_SaveManager_C_UpdateMainSaveToSelectedSlot Parms{};

	Parms.SaveName = std::move(SaveName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SaveManager.BP_SaveManager_C.UpdatePlayedTime
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_SaveManager_C::UpdatePlayedTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "UpdatePlayedTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SaveManager.BP_SaveManager_C.UpdateSpawnPointTag
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_SaveManager_C::UpdateSpawnPointTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "UpdateSpawnPointTag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SaveManager.BP_SaveManager_C.UpgradeLegacySave
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_jRPG_GameSave_C*              LegacySave                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UBP_SaveGameObject_V0_C**         NewSave                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SaveManager_C::UpgradeLegacySave(class UBP_jRPG_GameSave_C* LegacySave, class UBP_SaveGameObject_V0_C** NewSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "UpgradeLegacySave");

	Params::BP_SaveManager_C_UpgradeLegacySave Parms{};

	Parms.LegacySave = LegacySave;

	UObject::ProcessEvent(Func, &Parms);

	if (NewSave != nullptr)
		*NewSave = Parms.NewSave;
}


// Function BP_SaveManager.BP_SaveManager_C.UpgradeSaveIfNeeded
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USaveGame*                        SaveGame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UBP_SaveGameBase_C*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UBP_SaveGameBase_C* UBP_SaveManager_C::UpgradeSaveIfNeeded(class USaveGame* SaveGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SaveManager_C", "UpgradeSaveIfNeeded");

	Params::BP_SaveManager_C_UpgradeSaveIfNeeded Parms{};

	Parms.SaveGame = SaveGame;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

