#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkillDataComponent_Base

#include "Basic.hpp"

#include "EAttackType_structs.hpp"


namespace SDK::Params
{

// Function BP_SkillDataComponent_Base.BP_SkillDataComponent_Base_C.IsOverchargeActiveFeedbackForced
// 0x0010 (0x0010 - 0x0000)
struct BP_SkillDataComponent_Base_C_IsOverchargeActiveFeedbackForced final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        CharacterStat;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Active;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillDataComponent_Base_C_IsOverchargeActiveFeedbackForced) == 0x000008, "Wrong alignment on BP_SkillDataComponent_Base_C_IsOverchargeActiveFeedbackForced");
static_assert(sizeof(BP_SkillDataComponent_Base_C_IsOverchargeActiveFeedbackForced) == 0x000010, "Wrong size on BP_SkillDataComponent_Base_C_IsOverchargeActiveFeedbackForced");
static_assert(offsetof(BP_SkillDataComponent_Base_C_IsOverchargeActiveFeedbackForced, CharacterStat) == 0x000000, "Member 'BP_SkillDataComponent_Base_C_IsOverchargeActiveFeedbackForced::CharacterStat' has a wrong offset!");
static_assert(offsetof(BP_SkillDataComponent_Base_C_IsOverchargeActiveFeedbackForced, Active) == 0x000008, "Member 'BP_SkillDataComponent_Base_C_IsOverchargeActiveFeedbackForced::Active' has a wrong offset!");

// Function BP_SkillDataComponent_Base.BP_SkillDataComponent_Base_C.ModifySkillButton
// 0x0008 (0x0008 - 0x0000)
struct BP_SkillDataComponent_Base_C_ModifySkillButton final
{
public:
	class UWBP_HUD_SkillButton_Big_C*             SkillButtonWidget;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillDataComponent_Base_C_ModifySkillButton) == 0x000008, "Wrong alignment on BP_SkillDataComponent_Base_C_ModifySkillButton");
static_assert(sizeof(BP_SkillDataComponent_Base_C_ModifySkillButton) == 0x000008, "Wrong size on BP_SkillDataComponent_Base_C_ModifySkillButton");
static_assert(offsetof(BP_SkillDataComponent_Base_C_ModifySkillButton, SkillButtonWidget) == 0x000000, "Member 'BP_SkillDataComponent_Base_C_ModifySkillButton::SkillButtonWidget' has a wrong offset!");

// Function BP_SkillDataComponent_Base.BP_SkillDataComponent_Base_C.ModifySkillTooltip
// 0x0008 (0x0008 - 0x0000)
struct BP_SkillDataComponent_Base_C_ModifySkillTooltip final
{
public:
	class UWBP_SkillTooltip_C*                    SkillTooltipWidget;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillDataComponent_Base_C_ModifySkillTooltip) == 0x000008, "Wrong alignment on BP_SkillDataComponent_Base_C_ModifySkillTooltip");
static_assert(sizeof(BP_SkillDataComponent_Base_C_ModifySkillTooltip) == 0x000008, "Wrong size on BP_SkillDataComponent_Base_C_ModifySkillTooltip");
static_assert(offsetof(BP_SkillDataComponent_Base_C_ModifySkillTooltip, SkillTooltipWidget) == 0x000000, "Member 'BP_SkillDataComponent_Base_C_ModifySkillTooltip::SkillTooltipWidget' has a wrong offset!");

// Function BP_SkillDataComponent_Base.BP_SkillDataComponent_Base_C.OnBattleStart
// 0x0008 (0x0008 - 0x0000)
struct BP_SkillDataComponent_Base_C_OnBattleStart final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        CharacterStat;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillDataComponent_Base_C_OnBattleStart) == 0x000008, "Wrong alignment on BP_SkillDataComponent_Base_C_OnBattleStart");
static_assert(sizeof(BP_SkillDataComponent_Base_C_OnBattleStart) == 0x000008, "Wrong size on BP_SkillDataComponent_Base_C_OnBattleStart");
static_assert(offsetof(BP_SkillDataComponent_Base_C_OnBattleStart, CharacterStat) == 0x000000, "Member 'BP_SkillDataComponent_Base_C_OnBattleStart::CharacterStat' has a wrong offset!");

// Function BP_SkillDataComponent_Base.BP_SkillDataComponent_Base_C.GetAPCostOverride
// 0x0010 (0x0010 - 0x0000)
struct BP_SkillDataComponent_Base_C_GetAPCostOverride final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        CharacterStat;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Offset;                                            // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillDataComponent_Base_C_GetAPCostOverride) == 0x000008, "Wrong alignment on BP_SkillDataComponent_Base_C_GetAPCostOverride");
static_assert(sizeof(BP_SkillDataComponent_Base_C_GetAPCostOverride) == 0x000010, "Wrong size on BP_SkillDataComponent_Base_C_GetAPCostOverride");
static_assert(offsetof(BP_SkillDataComponent_Base_C_GetAPCostOverride, CharacterStat) == 0x000000, "Member 'BP_SkillDataComponent_Base_C_GetAPCostOverride::CharacterStat' has a wrong offset!");
static_assert(offsetof(BP_SkillDataComponent_Base_C_GetAPCostOverride, Offset) == 0x000008, "Member 'BP_SkillDataComponent_Base_C_GetAPCostOverride::Offset' has a wrong offset!");

// Function BP_SkillDataComponent_Base.BP_SkillDataComponent_Base_C.GetElementalTypeOverride
// 0x0001 (0x0001 - 0x0000)
struct BP_SkillDataComponent_Base_C_GetElementalTypeOverride final
{
public:
	EAttackType                                   ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillDataComponent_Base_C_GetElementalTypeOverride) == 0x000001, "Wrong alignment on BP_SkillDataComponent_Base_C_GetElementalTypeOverride");
static_assert(sizeof(BP_SkillDataComponent_Base_C_GetElementalTypeOverride) == 0x000001, "Wrong size on BP_SkillDataComponent_Base_C_GetElementalTypeOverride");
static_assert(offsetof(BP_SkillDataComponent_Base_C_GetElementalTypeOverride, ReturnValue) == 0x000000, "Member 'BP_SkillDataComponent_Base_C_GetElementalTypeOverride::ReturnValue' has a wrong offset!");

// Function BP_SkillDataComponent_Base.BP_SkillDataComponent_Base_C.GetScriptClass
// 0x0008 (0x0008 - 0x0000)
struct BP_SkillDataComponent_Base_C_GetScriptClass final
{
public:
	class UClass*                                 ScriptClass_0;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillDataComponent_Base_C_GetScriptClass) == 0x000008, "Wrong alignment on BP_SkillDataComponent_Base_C_GetScriptClass");
static_assert(sizeof(BP_SkillDataComponent_Base_C_GetScriptClass) == 0x000008, "Wrong size on BP_SkillDataComponent_Base_C_GetScriptClass");
static_assert(offsetof(BP_SkillDataComponent_Base_C_GetScriptClass, ScriptClass_0) == 0x000000, "Member 'BP_SkillDataComponent_Base_C_GetScriptClass::ScriptClass_0' has a wrong offset!");

// Function BP_SkillDataComponent_Base.BP_SkillDataComponent_Base_C.RegisterSkillChecks
// 0x0008 (0x0008 - 0x0000)
struct BP_SkillDataComponent_Base_C_RegisterSkillChecks final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        CharacterStats;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillDataComponent_Base_C_RegisterSkillChecks) == 0x000008, "Wrong alignment on BP_SkillDataComponent_Base_C_RegisterSkillChecks");
static_assert(sizeof(BP_SkillDataComponent_Base_C_RegisterSkillChecks) == 0x000008, "Wrong size on BP_SkillDataComponent_Base_C_RegisterSkillChecks");
static_assert(offsetof(BP_SkillDataComponent_Base_C_RegisterSkillChecks, CharacterStats) == 0x000000, "Member 'BP_SkillDataComponent_Base_C_RegisterSkillChecks::CharacterStats' has a wrong offset!");

// Function BP_SkillDataComponent_Base.BP_SkillDataComponent_Base_C.IsOverchargeActive
// 0x0010 (0x0010 - 0x0000)
struct BP_SkillDataComponent_Base_C_IsOverchargeActive final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        CharacterStat;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Active;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillDataComponent_Base_C_IsOverchargeActive) == 0x000008, "Wrong alignment on BP_SkillDataComponent_Base_C_IsOverchargeActive");
static_assert(sizeof(BP_SkillDataComponent_Base_C_IsOverchargeActive) == 0x000010, "Wrong size on BP_SkillDataComponent_Base_C_IsOverchargeActive");
static_assert(offsetof(BP_SkillDataComponent_Base_C_IsOverchargeActive, CharacterStat) == 0x000000, "Member 'BP_SkillDataComponent_Base_C_IsOverchargeActive::CharacterStat' has a wrong offset!");
static_assert(offsetof(BP_SkillDataComponent_Base_C_IsOverchargeActive, Active) == 0x000008, "Member 'BP_SkillDataComponent_Base_C_IsOverchargeActive::Active' has a wrong offset!");

}

