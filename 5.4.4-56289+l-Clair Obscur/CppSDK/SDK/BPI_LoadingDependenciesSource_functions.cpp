#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_LoadingDependenciesSource

#include "Basic.hpp"

#include "BPI_LoadingDependenciesSource_classes.hpp"
#include "BPI_LoadingDependenciesSource_parameters.hpp"


namespace SDK
{

// Function BPI_LoadingDependenciesSource.BPI_LoadingDependenciesSource_C.BPI_GetDependencies
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<TSoftClassPtr<class UClass>>*    Classes                                                (Parm, OutParm)
// TArray<TSoftObjectPtr<class UObject>>*  Assets                                                 (Parm, OutParm)
// TArray<TScriptInterface<class IBPI_LoadingDependenciesSource_C>>*ExternalDependencies                                   (Parm, OutParm)

void IBPI_LoadingDependenciesSource_C::BPI_GetDependencies(TArray<TSoftClassPtr<class UClass>>* Classes, TArray<TSoftObjectPtr<class UObject>>* Assets, TArray<TScriptInterface<class IBPI_LoadingDependenciesSource_C>>* ExternalDependencies)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_LoadingDependenciesSource_C", "BPI_GetDependencies");

	Params::BPI_LoadingDependenciesSource_C_BPI_GetDependencies Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (Classes != nullptr)
		*Classes = std::move(Parms.Classes);

	if (Assets != nullptr)
		*Assets = std::move(Parms.Assets);

	if (ExternalDependencies != nullptr)
		*ExternalDependencies = std::move(Parms.ExternalDependencies);
}

}

