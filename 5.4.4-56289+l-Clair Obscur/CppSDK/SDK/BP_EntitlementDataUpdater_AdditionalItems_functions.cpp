#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EntitlementDataUpdater_AdditionalItems

#include "Basic.hpp"

#include "BP_EntitlementDataUpdater_AdditionalItems_classes.hpp"
#include "BP_EntitlementDataUpdater_AdditionalItems_parameters.hpp"


namespace SDK
{

// Function BP_EntitlementDataUpdater_AdditionalItems.BP_EntitlementDataUpdater_AdditionalItems_C.GetItemNameFromDataTableRow
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FItemDataTableRowHandle&   ItemDataTableRow                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// class FName*                            Name_0                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EntitlementDataUpdater_AdditionalItems_C::GetItemNameFromDataTableRow(const struct FItemDataTableRowHandle& ItemDataTableRow, class FName* Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EntitlementDataUpdater_AdditionalItems_C", "GetItemNameFromDataTableRow");

	Params::BP_EntitlementDataUpdater_AdditionalItems_C_GetItemNameFromDataTableRow Parms{};

	Parms.ItemDataTableRow = std::move(ItemDataTableRow);

	UObject::ProcessEvent(Func, &Parms);

	if (Name_0 != nullptr)
		*Name_0 = Parms.Name_0;
}


// Function BP_EntitlementDataUpdater_AdditionalItems.BP_EntitlementDataUpdater_AdditionalItems_C.RemoveEntitlementData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGameInstance*                    GameInstance                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_EntitlementDataUpdater_AdditionalItems_C::RemoveEntitlementData(class UGameInstance* GameInstance, class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EntitlementDataUpdater_AdditionalItems_C", "RemoveEntitlementData");

	Params::BP_EntitlementDataUpdater_AdditionalItems_C_RemoveEntitlementData Parms{};

	Parms.GameInstance = GameInstance;
	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EntitlementDataUpdater_AdditionalItems.BP_EntitlementDataUpdater_AdditionalItems_C.ApplyEntitlementData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGameInstance*                    GameInstance                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_EntitlementDataUpdater_AdditionalItems_C::ApplyEntitlementData(class UGameInstance* GameInstance, class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EntitlementDataUpdater_AdditionalItems_C", "ApplyEntitlementData");

	Params::BP_EntitlementDataUpdater_AdditionalItems_C_ApplyEntitlementData Parms{};

	Parms.GameInstance = GameInstance;
	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}

}

