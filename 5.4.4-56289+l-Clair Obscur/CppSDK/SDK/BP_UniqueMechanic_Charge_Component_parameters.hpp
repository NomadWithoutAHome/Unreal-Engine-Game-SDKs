#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UniqueMechanic_Charge_Component

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EDamageReason_structs.hpp"


namespace SDK::Params
{

// Function BP_UniqueMechanic_Charge_Component.BP_UniqueMechanic_Charge_Component_C.ChangeCharge
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueMechanic_Charge_Component_C_ChangeCharge final
{
public:
	int32                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Charge_Component_C_ChangeCharge) == 0x000004, "Wrong alignment on BP_UniqueMechanic_Charge_Component_C_ChangeCharge");
static_assert(sizeof(BP_UniqueMechanic_Charge_Component_C_ChangeCharge) == 0x000008, "Wrong size on BP_UniqueMechanic_Charge_Component_C_ChangeCharge");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_ChangeCharge, Delta) == 0x000000, "Member 'BP_UniqueMechanic_Charge_Component_C_ChangeCharge::Delta' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_ChangeCharge, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_UniqueMechanic_Charge_Component_C_ChangeCharge::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Charge_Component.BP_UniqueMechanic_Charge_Component_C.CreatePortraitWidget
// 0x0020 (0x0020 - 0x0000)
struct BP_UniqueMechanic_Charge_Component_C_CreatePortraitWidget final
{
public:
	class UUserWidget*                            CreatedUserWidget;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotIndex;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_PortraitUniqueMechanic_Overcharge_C* CallFunc_Create_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Charge_Component_C_CreatePortraitWidget) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Charge_Component_C_CreatePortraitWidget");
static_assert(sizeof(BP_UniqueMechanic_Charge_Component_C_CreatePortraitWidget) == 0x000020, "Wrong size on BP_UniqueMechanic_Charge_Component_C_CreatePortraitWidget");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_CreatePortraitWidget, CreatedUserWidget) == 0x000000, "Member 'BP_UniqueMechanic_Charge_Component_C_CreatePortraitWidget::CreatedUserWidget' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_CreatePortraitWidget, SlotIndex) == 0x000008, "Member 'BP_UniqueMechanic_Charge_Component_C_CreatePortraitWidget::SlotIndex' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_CreatePortraitWidget, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_UniqueMechanic_Charge_Component_C_CreatePortraitWidget::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_CreatePortraitWidget, CallFunc_Create_ReturnValue) == 0x000018, "Member 'BP_UniqueMechanic_Charge_Component_C_CreatePortraitWidget::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Charge_Component.BP_UniqueMechanic_Charge_Component_C.ExecuteUbergraph_BP_UniqueMechanic_Charge_Component
// 0x00F0 (0x00F0 - 0x0000)
struct BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_UniqueMechanic_Charge_C*           CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UBP_BattleDamages_C* BattleDamage)> K2Node_CreateDelegate_OutputDelegate;   // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ABP_jRPG_Character_Battle_Base_C* Character, class ABP_jRPG_Character_Battle_Base_C* Enemy)> K2Node_CreateDelegate_OutputDelegate_3; // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleDamages_C*                    K2Node_CustomEvent_BattleDamage;                   // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ABP_jRPG_Character_Battle_Base_C* Character, class ABP_jRPG_Character_Battle_Base_C* Enemy)> K2Node_CreateDelegate_OutputDelegate_4; // 0x0058(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_GetSourceCharacter_SourceCharacter;       // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EDamageReason>                         K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsCharacterOwner_ReturnValue;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base; // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_CustomEvent_Character_1;                    // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_CustomEvent_Enemy_1;                        // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue_1;           // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCharacterOwner_ReturnValue_1;           // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_CustomEvent_Character;                      // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_CustomEvent_Enemy;                          // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCharacterOwner_ReturnValue_2;           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component");
static_assert(sizeof(BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component) == 0x0000F0, "Wrong size on BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component, EntryPoint) == 0x000000, "Member 'BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component, CallFunc_Create_ReturnValue) == 0x000008, "Member 'BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component, K2Node_CreateDelegate_OutputDelegate_2) == 0x000030, "Member 'BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component, K2Node_CreateDelegate_OutputDelegate_3) == 0x000040, "Member 'BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component, K2Node_CustomEvent_BattleDamage) == 0x000050, "Member 'BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component::K2Node_CustomEvent_BattleDamage' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component, K2Node_CreateDelegate_OutputDelegate_4) == 0x000058, "Member 'BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component, CallFunc_GetSourceCharacter_SourceCharacter) == 0x000068, "Member 'BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component::CallFunc_GetSourceCharacter_SourceCharacter' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000070, "Member 'BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component, CallFunc_GetCharacterBattleBase_IsValid) == 0x000078, "Member 'BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component, K2Node_MakeArray_Array) == 0x000080, "Member 'BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component, CallFunc_IsCharacterOwner_ReturnValue) == 0x000090, "Member 'BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component::CallFunc_IsCharacterOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component, CallFunc_Array_Contains_ReturnValue) == 0x000091, "Member 'BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component, CallFunc_GetBattleManager_ReturnValue) == 0x000098, "Member 'BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component, CallFunc_GetOwner_ReturnValue) == 0x0000A0, "Member 'BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component, K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base) == 0x0000A8, "Member 'BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component::K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component, K2Node_Event_EndPlayReason) == 0x0000B1, "Member 'BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component, K2Node_CustomEvent_Character_1) == 0x0000B8, "Member 'BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component::K2Node_CustomEvent_Character_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component, K2Node_CustomEvent_Enemy_1) == 0x0000C0, "Member 'BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component::K2Node_CustomEvent_Enemy_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component, CallFunc_GetBattleManager_ReturnValue_1) == 0x0000C8, "Member 'BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component::CallFunc_GetBattleManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component, CallFunc_IsCharacterOwner_ReturnValue_1) == 0x0000D0, "Member 'BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component::CallFunc_IsCharacterOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component, K2Node_CustomEvent_Character) == 0x0000D8, "Member 'BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component, K2Node_CustomEvent_Enemy) == 0x0000E0, "Member 'BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component::K2Node_CustomEvent_Enemy' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component, CallFunc_IsCharacterOwner_ReturnValue_2) == 0x0000E8, "Member 'BP_UniqueMechanic_Charge_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Charge_Component::CallFunc_IsCharacterOwner_ReturnValue_2' has a wrong offset!");

// Function BP_UniqueMechanic_Charge_Component.BP_UniqueMechanic_Charge_Component_C.GetCurrentChargeCount
// 0x0004 (0x0004 - 0x0000)
struct BP_UniqueMechanic_Charge_Component_C_GetCurrentChargeCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Charge_Component_C_GetCurrentChargeCount) == 0x000004, "Wrong alignment on BP_UniqueMechanic_Charge_Component_C_GetCurrentChargeCount");
static_assert(sizeof(BP_UniqueMechanic_Charge_Component_C_GetCurrentChargeCount) == 0x000004, "Wrong size on BP_UniqueMechanic_Charge_Component_C_GetCurrentChargeCount");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_GetCurrentChargeCount, ReturnValue) == 0x000000, "Member 'BP_UniqueMechanic_Charge_Component_C_GetCurrentChargeCount::ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Charge_Component.BP_UniqueMechanic_Charge_Component_C.GetMaxChargeCount
// 0x0004 (0x0004 - 0x0000)
struct BP_UniqueMechanic_Charge_Component_C_GetMaxChargeCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Charge_Component_C_GetMaxChargeCount) == 0x000004, "Wrong alignment on BP_UniqueMechanic_Charge_Component_C_GetMaxChargeCount");
static_assert(sizeof(BP_UniqueMechanic_Charge_Component_C_GetMaxChargeCount) == 0x000004, "Wrong size on BP_UniqueMechanic_Charge_Component_C_GetMaxChargeCount");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_GetMaxChargeCount, ReturnValue) == 0x000000, "Member 'BP_UniqueMechanic_Charge_Component_C_GetMaxChargeCount::ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Charge_Component.BP_UniqueMechanic_Charge_Component_C.GetWBP_UniqueMechanic_Charge
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueMechanic_Charge_Component_C_GetWBP_UniqueMechanic_Charge final
{
public:
	class UWBP_UniqueMechanic_Charge_C*           WBP_UniqueMechanic_Charge_0;                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Charge_Component_C_GetWBP_UniqueMechanic_Charge) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Charge_Component_C_GetWBP_UniqueMechanic_Charge");
static_assert(sizeof(BP_UniqueMechanic_Charge_Component_C_GetWBP_UniqueMechanic_Charge) == 0x000008, "Wrong size on BP_UniqueMechanic_Charge_Component_C_GetWBP_UniqueMechanic_Charge");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_GetWBP_UniqueMechanic_Charge, WBP_UniqueMechanic_Charge_0) == 0x000000, "Member 'BP_UniqueMechanic_Charge_Component_C_GetWBP_UniqueMechanic_Charge::WBP_UniqueMechanic_Charge_0' has a wrong offset!");

// Function BP_UniqueMechanic_Charge_Component.BP_UniqueMechanic_Charge_Component_C.IsCharacterOwner
// 0x0020 (0x0020 - 0x0000)
struct BP_UniqueMechanic_Charge_Component_C_IsCharacterOwner final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       CharacterBattle;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Charge_Component_C_IsCharacterOwner) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Charge_Component_C_IsCharacterOwner");
static_assert(sizeof(BP_UniqueMechanic_Charge_Component_C_IsCharacterOwner) == 0x000020, "Wrong size on BP_UniqueMechanic_Charge_Component_C_IsCharacterOwner");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_IsCharacterOwner, CharacterBattle) == 0x000000, "Member 'BP_UniqueMechanic_Charge_Component_C_IsCharacterOwner::CharacterBattle' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_IsCharacterOwner, ReturnValue) == 0x000008, "Member 'BP_UniqueMechanic_Charge_Component_C_IsCharacterOwner::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_IsCharacterOwner, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_UniqueMechanic_Charge_Component_C_IsCharacterOwner::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_IsCharacterOwner, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'BP_UniqueMechanic_Charge_Component_C_IsCharacterOwner::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Charge_Component.BP_UniqueMechanic_Charge_Component_C.IsFullyCharged
// 0x0002 (0x0002 - 0x0000)
struct BP_UniqueMechanic_Charge_Component_C_IsFullyCharged final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Charge_Component_C_IsFullyCharged) == 0x000001, "Wrong alignment on BP_UniqueMechanic_Charge_Component_C_IsFullyCharged");
static_assert(sizeof(BP_UniqueMechanic_Charge_Component_C_IsFullyCharged) == 0x000002, "Wrong size on BP_UniqueMechanic_Charge_Component_C_IsFullyCharged");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_IsFullyCharged, ReturnValue) == 0x000000, "Member 'BP_UniqueMechanic_Charge_Component_C_IsFullyCharged::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_IsFullyCharged, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000001, "Member 'BP_UniqueMechanic_Charge_Component_C_IsFullyCharged::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Charge_Component.BP_UniqueMechanic_Charge_Component_C.OnCharacterReceivedDamage
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueMechanic_Charge_Component_C_OnCharacterReceivedDamage final
{
public:
	class UBP_BattleDamages_C*                    BattleDamage;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Charge_Component_C_OnCharacterReceivedDamage) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Charge_Component_C_OnCharacterReceivedDamage");
static_assert(sizeof(BP_UniqueMechanic_Charge_Component_C_OnCharacterReceivedDamage) == 0x000008, "Wrong size on BP_UniqueMechanic_Charge_Component_C_OnCharacterReceivedDamage");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_OnCharacterReceivedDamage, BattleDamage) == 0x000000, "Member 'BP_UniqueMechanic_Charge_Component_C_OnCharacterReceivedDamage::BattleDamage' has a wrong offset!");

// Function BP_UniqueMechanic_Charge_Component.BP_UniqueMechanic_Charge_Component_C.OnDodgeSuccessful_Event
// 0x0010 (0x0010 - 0x0000)
struct BP_UniqueMechanic_Charge_Component_C_OnDodgeSuccessful_Event final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       Enemy;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Charge_Component_C_OnDodgeSuccessful_Event) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Charge_Component_C_OnDodgeSuccessful_Event");
static_assert(sizeof(BP_UniqueMechanic_Charge_Component_C_OnDodgeSuccessful_Event) == 0x000010, "Wrong size on BP_UniqueMechanic_Charge_Component_C_OnDodgeSuccessful_Event");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_OnDodgeSuccessful_Event, Character) == 0x000000, "Member 'BP_UniqueMechanic_Charge_Component_C_OnDodgeSuccessful_Event::Character' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_OnDodgeSuccessful_Event, Enemy) == 0x000008, "Member 'BP_UniqueMechanic_Charge_Component_C_OnDodgeSuccessful_Event::Enemy' has a wrong offset!");

// Function BP_UniqueMechanic_Charge_Component.BP_UniqueMechanic_Charge_Component_C.OnParrySuccessful_Event
// 0x0010 (0x0010 - 0x0000)
struct BP_UniqueMechanic_Charge_Component_C_OnParrySuccessful_Event final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       Enemy;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Charge_Component_C_OnParrySuccessful_Event) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Charge_Component_C_OnParrySuccessful_Event");
static_assert(sizeof(BP_UniqueMechanic_Charge_Component_C_OnParrySuccessful_Event) == 0x000010, "Wrong size on BP_UniqueMechanic_Charge_Component_C_OnParrySuccessful_Event");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_OnParrySuccessful_Event, Character) == 0x000000, "Member 'BP_UniqueMechanic_Charge_Component_C_OnParrySuccessful_Event::Character' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_OnParrySuccessful_Event, Enemy) == 0x000008, "Member 'BP_UniqueMechanic_Charge_Component_C_OnParrySuccessful_Event::Enemy' has a wrong offset!");

// Function BP_UniqueMechanic_Charge_Component.BP_UniqueMechanic_Charge_Component_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueMechanic_Charge_Component_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Charge_Component_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_UniqueMechanic_Charge_Component_C_ReceiveEndPlay");
static_assert(sizeof(BP_UniqueMechanic_Charge_Component_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_UniqueMechanic_Charge_Component_C_ReceiveEndPlay");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_UniqueMechanic_Charge_Component_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_UniqueMechanic_Charge_Component.BP_UniqueMechanic_Charge_Component_C.SetChargeCountInternal
// 0x0038 (0x0038 - 0x0000)
struct BP_UniqueMechanic_Charge_Component_C_SetChargeCountInternal final
{
public:
	int32                                         ChargeCount_0;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_clampedValue;                                // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_previousValue;                               // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentChargeCount_ReturnValue;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaxChargeCount_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Charge_Component_C_SetChargeCountInternal) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Charge_Component_C_SetChargeCountInternal");
static_assert(sizeof(BP_UniqueMechanic_Charge_Component_C_SetChargeCountInternal) == 0x000038, "Wrong size on BP_UniqueMechanic_Charge_Component_C_SetChargeCountInternal");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_SetChargeCountInternal, ChargeCount_0) == 0x000000, "Member 'BP_UniqueMechanic_Charge_Component_C_SetChargeCountInternal::ChargeCount_0' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_SetChargeCountInternal, local_clampedValue) == 0x000004, "Member 'BP_UniqueMechanic_Charge_Component_C_SetChargeCountInternal::local_clampedValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_SetChargeCountInternal, local_previousValue) == 0x000008, "Member 'BP_UniqueMechanic_Charge_Component_C_SetChargeCountInternal::local_previousValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_SetChargeCountInternal, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_UniqueMechanic_Charge_Component_C_SetChargeCountInternal::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_SetChargeCountInternal, CallFunc_GetCurrentChargeCount_ReturnValue) == 0x000018, "Member 'BP_UniqueMechanic_Charge_Component_C_SetChargeCountInternal::CallFunc_GetCurrentChargeCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_SetChargeCountInternal, K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base) == 0x000020, "Member 'BP_UniqueMechanic_Charge_Component_C_SetChargeCountInternal::K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_SetChargeCountInternal, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_UniqueMechanic_Charge_Component_C_SetChargeCountInternal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_SetChargeCountInternal, CallFunc_GetMaxChargeCount_ReturnValue) == 0x00002C, "Member 'BP_UniqueMechanic_Charge_Component_C_SetChargeCountInternal::CallFunc_GetMaxChargeCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_SetChargeCountInternal, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000030, "Member 'BP_UniqueMechanic_Charge_Component_C_SetChargeCountInternal::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_SetChargeCountInternal, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000031, "Member 'BP_UniqueMechanic_Charge_Component_C_SetChargeCountInternal::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_SetChargeCountInternal, CallFunc_Clamp_ReturnValue) == 0x000034, "Member 'BP_UniqueMechanic_Charge_Component_C_SetChargeCountInternal::CallFunc_Clamp_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Charge_Component.BP_UniqueMechanic_Charge_Component_C.TryFlushCharge
// 0x0002 (0x0002 - 0x0000)
struct BP_UniqueMechanic_Charge_Component_C_TryFlushCharge final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFullyCharged_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Charge_Component_C_TryFlushCharge) == 0x000001, "Wrong alignment on BP_UniqueMechanic_Charge_Component_C_TryFlushCharge");
static_assert(sizeof(BP_UniqueMechanic_Charge_Component_C_TryFlushCharge) == 0x000002, "Wrong size on BP_UniqueMechanic_Charge_Component_C_TryFlushCharge");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_TryFlushCharge, Success) == 0x000000, "Member 'BP_UniqueMechanic_Charge_Component_C_TryFlushCharge::Success' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Charge_Component_C_TryFlushCharge, CallFunc_IsFullyCharged_ReturnValue) == 0x000001, "Member 'BP_UniqueMechanic_Charge_Component_C_TryFlushCharge::CallFunc_IsFullyCharged_ReturnValue' has a wrong offset!");

}

