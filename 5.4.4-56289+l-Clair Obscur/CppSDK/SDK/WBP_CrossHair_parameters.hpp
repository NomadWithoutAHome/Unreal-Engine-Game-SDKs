#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CrossHair

#include "Basic.hpp"

#include "EFreeAimBodyPartType_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_CrossHair.WBP_CrossHair_C.ExecuteUbergraph_WBP_CrossHair
// 0x0068 (0x0068 - 0x0000)
struct WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFreeAimBodyPartType                          Temp_byte_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_CanInteract;                    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ShouldPlayAnimation;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_CustomEvent_InVisibility;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFreeAimBodyPartType                          K2Node_CustomEvent_BodyPartType;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default_1;                           // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_StartAtTime_ImplicitCast;   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair) == 0x000008, "Wrong alignment on WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair");
static_assert(sizeof(WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair) == 0x000068, "Wrong size on WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair");
static_assert(offsetof(WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair, EntryPoint) == 0x000000, "Member 'WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair, Temp_byte_Variable) == 0x000004, "Member 'WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair, Temp_byte_Variable_1) == 0x000005, "Member 'WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair, Temp_byte_Variable_2) == 0x000006, "Member 'WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair, K2Node_CustomEvent_CanInteract) == 0x000007, "Member 'WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair::K2Node_CustomEvent_CanInteract' has a wrong offset!");
static_assert(offsetof(WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair, K2Node_CustomEvent_ShouldPlayAnimation) == 0x000008, "Member 'WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair::K2Node_CustomEvent_ShouldPlayAnimation' has a wrong offset!");
static_assert(offsetof(WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair, K2Node_CustomEvent_InVisibility) == 0x000009, "Member 'WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair::K2Node_CustomEvent_InVisibility' has a wrong offset!");
static_assert(offsetof(WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair, CallFunc_GetEndTime_ReturnValue) == 0x000018, "Member 'WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair, K2Node_CustomEvent_BodyPartType) == 0x000028, "Member 'WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair::K2Node_CustomEvent_BodyPartType' has a wrong offset!");
static_assert(offsetof(WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair, K2Node_Select_Default) == 0x000030, "Member 'WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair, CallFunc_PlayAnimation_ReturnValue_1) == 0x000038, "Member 'WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair, CallFunc_PlayAnimation_ReturnValue_2) == 0x000040, "Member 'WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair, Temp_bool_Variable) == 0x000048, "Member 'WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair, K2Node_Select_Default_1) == 0x000049, "Member 'WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair, CallFunc_PlayAnimation_ReturnValue_3) == 0x000050, "Member 'WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair, CallFunc_SelectFloat_B_ImplicitCast) == 0x000058, "Member 'WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair::CallFunc_SelectFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair, CallFunc_PlayAnimation_StartAtTime_ImplicitCast) == 0x000060, "Member 'WBP_CrossHair_C_ExecuteUbergraph_WBP_CrossHair::CallFunc_PlayAnimation_StartAtTime_ImplicitCast' has a wrong offset!");

// Function WBP_CrossHair.WBP_CrossHair_C.PlayAnim_Shoot
// 0x0001 (0x0001 - 0x0000)
struct WBP_CrossHair_C_PlayAnim_Shoot final
{
public:
	EFreeAimBodyPartType                          BodyPartType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CrossHair_C_PlayAnim_Shoot) == 0x000001, "Wrong alignment on WBP_CrossHair_C_PlayAnim_Shoot");
static_assert(sizeof(WBP_CrossHair_C_PlayAnim_Shoot) == 0x000001, "Wrong size on WBP_CrossHair_C_PlayAnim_Shoot");
static_assert(offsetof(WBP_CrossHair_C_PlayAnim_Shoot, BodyPartType) == 0x000000, "Member 'WBP_CrossHair_C_PlayAnim_Shoot::BodyPartType' has a wrong offset!");

// Function WBP_CrossHair.WBP_CrossHair_C.SetCrossHairTintInteract
// 0x0002 (0x0002 - 0x0000)
struct WBP_CrossHair_C_SetCrossHairTintInteract final
{
public:
	bool                                          CanInteract;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldPlayAnimation;                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CrossHair_C_SetCrossHairTintInteract) == 0x000001, "Wrong alignment on WBP_CrossHair_C_SetCrossHairTintInteract");
static_assert(sizeof(WBP_CrossHair_C_SetCrossHairTintInteract) == 0x000002, "Wrong size on WBP_CrossHair_C_SetCrossHairTintInteract");
static_assert(offsetof(WBP_CrossHair_C_SetCrossHairTintInteract, CanInteract) == 0x000000, "Member 'WBP_CrossHair_C_SetCrossHairTintInteract::CanInteract' has a wrong offset!");
static_assert(offsetof(WBP_CrossHair_C_SetCrossHairTintInteract, ShouldPlayAnimation) == 0x000001, "Member 'WBP_CrossHair_C_SetCrossHairTintInteract::ShouldPlayAnimation' has a wrong offset!");

// Function WBP_CrossHair.WBP_CrossHair_C.SetCrossHairVisibility
// 0x0001 (0x0001 - 0x0000)
struct WBP_CrossHair_C_SetCrossHairVisibility final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CrossHair_C_SetCrossHairVisibility) == 0x000001, "Wrong alignment on WBP_CrossHair_C_SetCrossHairVisibility");
static_assert(sizeof(WBP_CrossHair_C_SetCrossHairVisibility) == 0x000001, "Wrong size on WBP_CrossHair_C_SetCrossHairVisibility");
static_assert(offsetof(WBP_CrossHair_C_SetCrossHairVisibility, InVisibility) == 0x000000, "Member 'WBP_CrossHair_C_SetCrossHairVisibility::InVisibility' has a wrong offset!");

}

