#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AN_ENM_IsBattle

#include "Basic.hpp"

#include "EBattleAudioContainerComponents_structs.hpp"
#include "EInWorldAudioContainerComponents_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AN_ENM_IsBattle.AN_ENM_IsBattle_C
// 0x0030 (0x0068 - 0x0038)
class UAN_ENM_IsBattle_C final : public UAnimNotify
{
public:
	class USoundBase*                             Sound;                                             // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayInComponent_;                                  // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SoundShouldFollow_;                                // 0x0041(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        PercentageChanceToTriggerBattleSound;              // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleAudioContainerComponents               AttachToComponentInBattle;                         // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInWorldAudioContainerComponents              AttachToComponentInWorld;                          // 0x0051(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAttenuation*                      AttnInBattleOverride;                              // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundConcurrency*                      BattleConcurrencyOverride;                         // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	void GetAudioComponentBattle(class UObject* Owner, class USceneComponent** BattleComponent) const;
	void GetAudioComponentEnviro(class UObject* Owner, class UAudioComponent** EnviroComponent) const;
	void PlayBattleSound(class AActor* Owner) const;
	void PlayEnviroSound(class UObject* Owner) const;
	bool Received_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, const struct FAnimNotifyEventReference& EventReference) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AN_ENM_IsBattle_C">();
	}
	static class UAN_ENM_IsBattle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAN_ENM_IsBattle_C>();
	}
};
static_assert(alignof(UAN_ENM_IsBattle_C) == 0x000008, "Wrong alignment on UAN_ENM_IsBattle_C");
static_assert(sizeof(UAN_ENM_IsBattle_C) == 0x000068, "Wrong size on UAN_ENM_IsBattle_C");
static_assert(offsetof(UAN_ENM_IsBattle_C, Sound) == 0x000038, "Member 'UAN_ENM_IsBattle_C::Sound' has a wrong offset!");
static_assert(offsetof(UAN_ENM_IsBattle_C, PlayInComponent_) == 0x000040, "Member 'UAN_ENM_IsBattle_C::PlayInComponent_' has a wrong offset!");
static_assert(offsetof(UAN_ENM_IsBattle_C, SoundShouldFollow_) == 0x000041, "Member 'UAN_ENM_IsBattle_C::SoundShouldFollow_' has a wrong offset!");
static_assert(offsetof(UAN_ENM_IsBattle_C, PercentageChanceToTriggerBattleSound) == 0x000048, "Member 'UAN_ENM_IsBattle_C::PercentageChanceToTriggerBattleSound' has a wrong offset!");
static_assert(offsetof(UAN_ENM_IsBattle_C, AttachToComponentInBattle) == 0x000050, "Member 'UAN_ENM_IsBattle_C::AttachToComponentInBattle' has a wrong offset!");
static_assert(offsetof(UAN_ENM_IsBattle_C, AttachToComponentInWorld) == 0x000051, "Member 'UAN_ENM_IsBattle_C::AttachToComponentInWorld' has a wrong offset!");
static_assert(offsetof(UAN_ENM_IsBattle_C, AttnInBattleOverride) == 0x000058, "Member 'UAN_ENM_IsBattle_C::AttnInBattleOverride' has a wrong offset!");
static_assert(offsetof(UAN_ENM_IsBattle_C, BattleConcurrencyOverride) == 0x000060, "Member 'UAN_ENM_IsBattle_C::BattleConcurrencyOverride' has a wrong offset!");

}

