#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Panel_Pictos

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SandFall_structs.hpp"
#include "EModalUIResponse_structs.hpp"
#include "CommonUI_classes.hpp"
#include "SlateCore_structs.hpp"
#include "S_TutorialCardParameters_structs.hpp"
#include "FEquipmentSlot_structs.hpp"
#include "CommonInput_structs.hpp"
#include "FCharacterAssignedEquipment_structs.hpp"
#include "UMG_structs.hpp"
#include "E_ModalStandardButton_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Panel_Pictos.WBP_Panel_Pictos_C
// 0x0160 (0x0590 - 0x0430)
class UWBP_Panel_Pictos_C final : public UCommonActivatableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_PictoSelectionState;                          // 0x0438(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_GM_PromptGeneric_C*                LuminaAccessPrompt;                                // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PictosList_C*                      PictosList;                                        // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           PictoSlotsBox;                                     // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CommonBoundActionButton_C*         WBP_CommonBoundActionButton_Back;                  // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CommonBoundActionButton_C*         WBP_CommonBoundActionButton_EditLuminaClick;       // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CommonBoundActionButton_C*         WBP_CommonBoundActionButton_Equip;                 // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CommonBoundActionButton_C*         WBP_CommonBoundActionButton_SelectSlot;            // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CommonBoundActionButton_C*         WBP_CommonBoundActionButton_ToggleFavorite;        // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CommonBoundActionButton_C*         WBP_CommonBoundActionButton_Unequip;               // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_GM_CharacterSheet_C*               WBP_GM_CharacterSheet;                             // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_GM_COV_LuminaPanel_C*              WBP_GM_COV_LuminaPanel;                            // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PictoSlot_C*                       WBP_PictoSlot0;                                    // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PictoSlot_C*                       WBP_PictoSlot1;                                    // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PictoSlot_C*                       WBP_PictoSlot2;                                    // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    CurrentCharacterData;                              // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    PreviewCharacterData;                              // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(bool ShouldLock)> OnRequestLockCharacterSwitch;                    // 0x04C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FSoundEventDataTableRowHandle          SD_OnEquipedPictos;                                // 0x04D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FSoundEventDataTableRowHandle          SD_OnUnequipedPictos;                              // 0x04E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class UWBP_PictoSlot_C*                       SelectedSlot;                                      // 0x04F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_PictoViewItem_C*                    SelectedPictoViewItem;                             // 0x04F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UWBP_PictoSlot_C*                       FocusedSlot;                                       // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_PictoViewItem_C*                    FocusedItem;                                       // 0x0508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_C*                ProcessedSwappedInstanceCurrent;                   // 0x0510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_C*                ProcessedSwappedInstanceTarget;                    // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class FName PassiveEffectID)> OnGoToLuminaButtonClicked;           // 0x0520(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<struct FS_TutorialCardParameters>      Tutorials;                                         // 0x0530(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         CurrentTutorialIndex;                              // 0x0540(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_544[0x4];                                      // 0x0544(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Tuto_BlurIndicator_C*              Area_Highlight_Widget;                             // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FSoundEventDataTableRowHandle          SD_OnActivated;                                    // 0x0550(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FSoundEventDataTableRowHandle          SD_OnDeactivated;                                  // 0x0560(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FFCharacterAssignedEquipment           ProcessedCurrentlyAssignedCharacter;               // 0x0570(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_Pictos_C*         ProcessedEquippedPicto;                            // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FFEquipmentSlot                        ProcessedTargetSlot;                               // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BackFromPictoSelectionState();
	void BackFromSlotSelectionState();
	void BndEvt__WBP_Panel_Pictos_LuminaAccessPrompt_K2Node_ComponentBoundEvent_13_OnPressed__DelegateSignature(class UWBP_GM_PromptGeneric_C* PromptWidget);
	void BndEvt__WBP_Panel_Pictos_PictosList_K2Node_ComponentBoundEvent_0_OnPictoItemClicked__DelegateSignature(class UBP_PictoViewItem_C* PictoViewItem);
	void BndEvt__WBP_Panel_Pictos_PictosList_K2Node_ComponentBoundEvent_7_OnPictoItemNavigated__DelegateSignature(class UBP_PictoViewItem_C* InPictoItem);
	void BndEvt__WBP_Panel_Pictos_WBP_CommonBoundActionButton_ToggleFavorite_K2Node_ComponentBoundEvent_10_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_Panel_Pictos_WBP_CommonBoundActionButton_Unequip_K2Node_ComponentBoundEvent_8_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_Panel_Pictos_WBP_GM_COV_LuminaPanel_K2Node_ComponentBoundEvent_12_OnLuminaEntryFocused__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_Panel_Pictos_WBP_GM_COV_LuminaPanel_K2Node_ComponentBoundEvent_14_OnLuminaEntryClicked__DelegateSignature(class FName InPassiveEffectID);
	void BndEvt__WBP_Panel_Pictos_WBP_PictoSlot0_K2Node_ComponentBoundEvent_1_OnFocused__DelegateSignature();
	void BndEvt__WBP_Panel_Pictos_WBP_PictoSlot0_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_Panel_Pictos_WBP_PictoSlot1_K2Node_ComponentBoundEvent_2_OnFocused__DelegateSignature();
	void BndEvt__WBP_Panel_Pictos_WBP_PictoSlot1_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_Panel_Pictos_WBP_PictoSlot2_K2Node_ComponentBoundEvent_5_OnFocused__DelegateSignature();
	void BndEvt__WBP_Panel_Pictos_WBP_PictoSlot2_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BP_OnActivated();
	void BP_OnDeactivated();
	void BPI_GetCharacterNotificationState(class UBP_CharacterData_C* CharacterData, bool* HasNotification);
	void BPI_LoadCharacter(class UBP_CharacterData_C* CharacterData);
	void BPI_OnMarkNotificationAsRead(class UUserWidget* MarkCaller);
	void BPI_ShouldShowNotification(bool* bShouldShow);
	void CreateModalWindowForEquippedItem(const struct FS_jRPG_Item_StaticData& Item, class UBP_CharacterData_C* OtherCharacter, bool HasItemInSlot, class UWBP_ModalPopup_C** ModalWindow);
	void CreateModalWindowForExcludedCharacter(const struct FS_jRPG_Item_StaticData& Item, class UBP_CharacterData_C* OtherCharacter, class UWBP_ModalPopup_C** ModalWindow);
	class UWidget* DoCustom_NavigationPictoList(EUINavigation Navigation_0);
	class UWidget* DoCustomNavigationLumina(EUINavigation Navigation_0);
	void DoCustomNavigationPictoSlots(EUINavigation Navigation_0);
	void EndPictosMenuTutorials();
	void ExecuteUbergraph_WBP_Panel_Pictos(int32 EntryPoint);
	void GoToPictoSelectionState(class UWBP_PictoSlot_C* InSelectedSlot);
	void GoToSlotSelectionState(class UBP_PictoViewItem_C* InPictoViewItem);
	void InitializeSlotsData();
	void IsInSelectionState(bool* IsInSelectionState_0);
	void LoadCharacter(class UBP_CharacterData_C* CharacterData);
	void LoadPictosStatPanel();
	void OnInputMethodChanged(ECommonInputType bNewInputType);
	void OnNextTick();
	void OnPictoItemClicked(class UBP_PictoViewItem_C* InPictoViewItem);
	void OnResponse(EModalUIResponse InUserResponse);
	void OnSlotClicked(class UWBP_PictoSlot_C* InClickedSlot);
	void OnTutorialEnd();
	void ProcessEquipPicto(class UBP_PictoViewItem_C* InPictoViewItem, int32 InTargetSlotIndex);
	void ProcessUnequipSlot();
	void RebuildActionBarButtons(class UWBP_CommonActionBarContainer_C* ActionBarContainerWidget);
	void RefreshSlotData(int32 InSlotIndex);
	void ScrollToPassiveEffect(class UBP_PictoViewItem_C* PictoViewItem);
	void Set_Focused_Item(class UBP_PictoViewItem_C* InPictoViewItem);
	void SetFocusedPictoFromInventory(const struct FS_jRPG_Item_StaticData& ItemData);
	void SetFocusedSlot(int32 InSlotIndex);
	void SetSelectedSlot(class UWBP_PictoSlot_C* SelectedSlot_0);
	void SetSelectedViewItem(class UBP_PictoViewItem_C* SelectedPictoViewItem_0);
	void StartPictosMenuTutorials();
	void StartTutorial();
	void StopEquip();

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Panel_Pictos_C">();
	}
	static class UWBP_Panel_Pictos_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Panel_Pictos_C>();
	}
};
static_assert(alignof(UWBP_Panel_Pictos_C) == 0x000008, "Wrong alignment on UWBP_Panel_Pictos_C");
static_assert(sizeof(UWBP_Panel_Pictos_C) == 0x000590, "Wrong size on UWBP_Panel_Pictos_C");
static_assert(offsetof(UWBP_Panel_Pictos_C, UberGraphFrame) == 0x000430, "Member 'UWBP_Panel_Pictos_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, Anim_PictoSelectionState) == 0x000438, "Member 'UWBP_Panel_Pictos_C::Anim_PictoSelectionState' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, LuminaAccessPrompt) == 0x000440, "Member 'UWBP_Panel_Pictos_C::LuminaAccessPrompt' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, PictosList) == 0x000448, "Member 'UWBP_Panel_Pictos_C::PictosList' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, PictoSlotsBox) == 0x000450, "Member 'UWBP_Panel_Pictos_C::PictoSlotsBox' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, WBP_CommonBoundActionButton_Back) == 0x000458, "Member 'UWBP_Panel_Pictos_C::WBP_CommonBoundActionButton_Back' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, WBP_CommonBoundActionButton_EditLuminaClick) == 0x000460, "Member 'UWBP_Panel_Pictos_C::WBP_CommonBoundActionButton_EditLuminaClick' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, WBP_CommonBoundActionButton_Equip) == 0x000468, "Member 'UWBP_Panel_Pictos_C::WBP_CommonBoundActionButton_Equip' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, WBP_CommonBoundActionButton_SelectSlot) == 0x000470, "Member 'UWBP_Panel_Pictos_C::WBP_CommonBoundActionButton_SelectSlot' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, WBP_CommonBoundActionButton_ToggleFavorite) == 0x000478, "Member 'UWBP_Panel_Pictos_C::WBP_CommonBoundActionButton_ToggleFavorite' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, WBP_CommonBoundActionButton_Unequip) == 0x000480, "Member 'UWBP_Panel_Pictos_C::WBP_CommonBoundActionButton_Unequip' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, WBP_GM_CharacterSheet) == 0x000488, "Member 'UWBP_Panel_Pictos_C::WBP_GM_CharacterSheet' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, WBP_GM_COV_LuminaPanel) == 0x000490, "Member 'UWBP_Panel_Pictos_C::WBP_GM_COV_LuminaPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, WBP_PictoSlot0) == 0x000498, "Member 'UWBP_Panel_Pictos_C::WBP_PictoSlot0' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, WBP_PictoSlot1) == 0x0004A0, "Member 'UWBP_Panel_Pictos_C::WBP_PictoSlot1' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, WBP_PictoSlot2) == 0x0004A8, "Member 'UWBP_Panel_Pictos_C::WBP_PictoSlot2' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, CurrentCharacterData) == 0x0004B0, "Member 'UWBP_Panel_Pictos_C::CurrentCharacterData' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, PreviewCharacterData) == 0x0004B8, "Member 'UWBP_Panel_Pictos_C::PreviewCharacterData' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, OnRequestLockCharacterSwitch) == 0x0004C0, "Member 'UWBP_Panel_Pictos_C::OnRequestLockCharacterSwitch' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, SD_OnEquipedPictos) == 0x0004D0, "Member 'UWBP_Panel_Pictos_C::SD_OnEquipedPictos' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, SD_OnUnequipedPictos) == 0x0004E0, "Member 'UWBP_Panel_Pictos_C::SD_OnUnequipedPictos' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, SelectedSlot) == 0x0004F0, "Member 'UWBP_Panel_Pictos_C::SelectedSlot' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, SelectedPictoViewItem) == 0x0004F8, "Member 'UWBP_Panel_Pictos_C::SelectedPictoViewItem' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, FocusedSlot) == 0x000500, "Member 'UWBP_Panel_Pictos_C::FocusedSlot' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, FocusedItem) == 0x000508, "Member 'UWBP_Panel_Pictos_C::FocusedItem' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, ProcessedSwappedInstanceCurrent) == 0x000510, "Member 'UWBP_Panel_Pictos_C::ProcessedSwappedInstanceCurrent' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, ProcessedSwappedInstanceTarget) == 0x000518, "Member 'UWBP_Panel_Pictos_C::ProcessedSwappedInstanceTarget' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, OnGoToLuminaButtonClicked) == 0x000520, "Member 'UWBP_Panel_Pictos_C::OnGoToLuminaButtonClicked' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, Tutorials) == 0x000530, "Member 'UWBP_Panel_Pictos_C::Tutorials' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, CurrentTutorialIndex) == 0x000540, "Member 'UWBP_Panel_Pictos_C::CurrentTutorialIndex' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, Area_Highlight_Widget) == 0x000548, "Member 'UWBP_Panel_Pictos_C::Area_Highlight_Widget' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, SD_OnActivated) == 0x000550, "Member 'UWBP_Panel_Pictos_C::SD_OnActivated' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, SD_OnDeactivated) == 0x000560, "Member 'UWBP_Panel_Pictos_C::SD_OnDeactivated' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, ProcessedCurrentlyAssignedCharacter) == 0x000570, "Member 'UWBP_Panel_Pictos_C::ProcessedCurrentlyAssignedCharacter' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, ProcessedEquippedPicto) == 0x000580, "Member 'UWBP_Panel_Pictos_C::ProcessedEquippedPicto' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Pictos_C, ProcessedTargetSlot) == 0x000588, "Member 'UWBP_Panel_Pictos_C::ProcessedTargetSlot' has a wrong offset!");

}

