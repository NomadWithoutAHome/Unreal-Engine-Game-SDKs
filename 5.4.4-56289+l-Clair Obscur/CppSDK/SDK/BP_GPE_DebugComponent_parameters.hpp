#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GPE_DebugComponent

#include "Basic.hpp"

#include "SandFall_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_GPE_DebugComponent.BP_GPE_DebugComponent_C.CheckForErrors
// 0x0068 (0x0068 - 0x0000)
struct BP_GPE_DebugComponent_C_CheckForErrors final
{
public:
	TArray<class FText>                           ErrorMessages;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0010)()
	TScriptInterface<class IBPI_GPE_TriggerInterface_C> K2Node_DynamicCast_AsBPI_GPE_Trigger_Interface; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_DebugComponent_C_CheckForErrors) == 0x000008, "Wrong alignment on BP_GPE_DebugComponent_C_CheckForErrors");
static_assert(sizeof(BP_GPE_DebugComponent_C_CheckForErrors) == 0x000068, "Wrong size on BP_GPE_DebugComponent_C_CheckForErrors");
static_assert(offsetof(BP_GPE_DebugComponent_C_CheckForErrors, ErrorMessages) == 0x000000, "Member 'BP_GPE_DebugComponent_C_CheckForErrors::ErrorMessages' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_CheckForErrors, ReturnValue) == 0x000010, "Member 'BP_GPE_DebugComponent_C_CheckForErrors::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_CheckForErrors, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_GPE_DebugComponent_C_CheckForErrors::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_CheckForErrors, CallFunc_Format_ReturnValue) == 0x000028, "Member 'BP_GPE_DebugComponent_C_CheckForErrors::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_CheckForErrors, CallFunc_GetOwner_ReturnValue) == 0x000038, "Member 'BP_GPE_DebugComponent_C_CheckForErrors::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_CheckForErrors, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'BP_GPE_DebugComponent_C_CheckForErrors::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_CheckForErrors, K2Node_DynamicCast_AsBPI_GPE_Trigger_Interface) == 0x000050, "Member 'BP_GPE_DebugComponent_C_CheckForErrors::K2Node_DynamicCast_AsBPI_GPE_Trigger_Interface' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_CheckForErrors, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_GPE_DebugComponent_C_CheckForErrors::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_CheckForErrors, CallFunc_Array_Add_ReturnValue) == 0x000064, "Member 'BP_GPE_DebugComponent_C_CheckForErrors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_GPE_DebugComponent.BP_GPE_DebugComponent_C.InverseGPETriggerIsActive
// 0x0001 (0x0001 - 0x0000)
struct BP_GPE_DebugComponent_C_InverseGPETriggerIsActive final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_DebugComponent_C_InverseGPETriggerIsActive) == 0x000001, "Wrong alignment on BP_GPE_DebugComponent_C_InverseGPETriggerIsActive");
static_assert(sizeof(BP_GPE_DebugComponent_C_InverseGPETriggerIsActive) == 0x000001, "Wrong size on BP_GPE_DebugComponent_C_InverseGPETriggerIsActive");
static_assert(offsetof(BP_GPE_DebugComponent_C_InverseGPETriggerIsActive, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_GPE_DebugComponent_C_InverseGPETriggerIsActive::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_GPE_DebugComponent.BP_GPE_DebugComponent_C.AddImpulseActivation
// 0x0018 (0x0018 - 0x0000)
struct BP_GPE_DebugComponent_C_AddImpulseActivation final
{
public:
	class AActor*                                 GPE;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_DebugComponent_C_AddImpulseActivation) == 0x000008, "Wrong alignment on BP_GPE_DebugComponent_C_AddImpulseActivation");
static_assert(sizeof(BP_GPE_DebugComponent_C_AddImpulseActivation) == 0x000018, "Wrong size on BP_GPE_DebugComponent_C_AddImpulseActivation");
static_assert(offsetof(BP_GPE_DebugComponent_C_AddImpulseActivation, GPE) == 0x000000, "Member 'BP_GPE_DebugComponent_C_AddImpulseActivation::GPE' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_AddImpulseActivation, Temp_real_Variable) == 0x000008, "Member 'BP_GPE_DebugComponent_C_AddImpulseActivation::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_AddImpulseActivation, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_GPE_DebugComponent_C_AddImpulseActivation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GPE_DebugComponent.BP_GPE_DebugComponent_C.OnDebugInPlayModeChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_GPE_DebugComponent_C_OnDebugInPlayModeChanged final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_DebugComponent_C_OnDebugInPlayModeChanged) == 0x000001, "Wrong alignment on BP_GPE_DebugComponent_C_OnDebugInPlayModeChanged");
static_assert(sizeof(BP_GPE_DebugComponent_C_OnDebugInPlayModeChanged) == 0x000001, "Wrong size on BP_GPE_DebugComponent_C_OnDebugInPlayModeChanged");
static_assert(offsetof(BP_GPE_DebugComponent_C_OnDebugInPlayModeChanged, NewValue) == 0x000000, "Member 'BP_GPE_DebugComponent_C_OnDebugInPlayModeChanged::NewValue' has a wrong offset!");

// Function BP_GPE_DebugComponent.BP_GPE_DebugComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_GPE_DebugComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_DebugComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_GPE_DebugComponent_C_ReceiveTick");
static_assert(sizeof(BP_GPE_DebugComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_GPE_DebugComponent_C_ReceiveTick");
static_assert(offsetof(BP_GPE_DebugComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_GPE_DebugComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_GPE_DebugComponent.BP_GPE_DebugComponent_C.ExecuteUbergraph_BP_GPE_DebugComponent
// 0x0090 (0x0090 - 0x0000)
struct BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewValue;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBillboardComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_Map_Keys_Keys;                            // 0x0030(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool NewValue)>                K2Node_CreateDelegate_OutputDelegate;              // 0x0074(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent) == 0x000008, "Wrong alignment on BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent");
static_assert(sizeof(BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent) == 0x000090, "Wrong size on BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent");
static_assert(offsetof(BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent, EntryPoint) == 0x000000, "Member 'BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent, K2Node_CustomEvent_NewValue) == 0x000010, "Member 'BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent, K2Node_Event_DeltaSeconds) == 0x000024, "Member 'BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent, CallFunc_Map_Keys_Keys) == 0x000030, "Member 'BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent, CallFunc_Map_Find_Value) == 0x000058, "Member 'BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent, CallFunc_Map_Find_ReturnValue) == 0x000060, "Member 'BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent, CallFunc_Map_Remove_ReturnValue) == 0x000061, "Member 'BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000068, "Member 'BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000074, "Member 'BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000088, "Member 'BP_GPE_DebugComponent_C_ExecuteUbergraph_BP_GPE_DebugComponent::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_GPE_DebugComponent.BP_GPE_DebugComponent_C.Editor_DrawDebugShapes
// 0x00E0 (0x00E0 - 0x0000)
struct BP_GPE_DebugComponent_C_Editor_DrawDebugShapes final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           local_DebugColor;                                  // 0x0004(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GPE_TriggerInterface_C> K2Node_DynamicCast_AsBPI_GPE_Trigger_Interface; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGPEInterfacesReferences               CallFunc_GPETrigger_GetGameplayElementsToActivate_GameplayElementsToActivate; // 0x0058(0x0010)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectDebugColor_Color;                   // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetShorterVector_Start2;                  // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetShorterVector_End2;                    // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_DebugComponent_C_Editor_DrawDebugShapes) == 0x000008, "Wrong alignment on BP_GPE_DebugComponent_C_Editor_DrawDebugShapes");
static_assert(sizeof(BP_GPE_DebugComponent_C_Editor_DrawDebugShapes) == 0x0000E0, "Wrong size on BP_GPE_DebugComponent_C_Editor_DrawDebugShapes");
static_assert(offsetof(BP_GPE_DebugComponent_C_Editor_DrawDebugShapes, ReturnValue) == 0x000000, "Member 'BP_GPE_DebugComponent_C_Editor_DrawDebugShapes::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_Editor_DrawDebugShapes, local_DebugColor) == 0x000004, "Member 'BP_GPE_DebugComponent_C_Editor_DrawDebugShapes::local_DebugColor' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_Editor_DrawDebugShapes, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_GPE_DebugComponent_C_Editor_DrawDebugShapes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_Editor_DrawDebugShapes, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_GPE_DebugComponent_C_Editor_DrawDebugShapes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_Editor_DrawDebugShapes, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_GPE_DebugComponent_C_Editor_DrawDebugShapes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_Editor_DrawDebugShapes, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'BP_GPE_DebugComponent_C_Editor_DrawDebugShapes::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_Editor_DrawDebugShapes, K2Node_DynamicCast_AsBPI_GPE_Trigger_Interface) == 0x000028, "Member 'BP_GPE_DebugComponent_C_Editor_DrawDebugShapes::K2Node_DynamicCast_AsBPI_GPE_Trigger_Interface' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_Editor_DrawDebugShapes, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_GPE_DebugComponent_C_Editor_DrawDebugShapes::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_Editor_DrawDebugShapes, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'BP_GPE_DebugComponent_C_Editor_DrawDebugShapes::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_Editor_DrawDebugShapes, CallFunc_GPETrigger_GetGameplayElementsToActivate_GameplayElementsToActivate) == 0x000058, "Member 'BP_GPE_DebugComponent_C_Editor_DrawDebugShapes::CallFunc_GPETrigger_GetGameplayElementsToActivate_GameplayElementsToActivate' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_Editor_DrawDebugShapes, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_GPE_DebugComponent_C_Editor_DrawDebugShapes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_Editor_DrawDebugShapes, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_GPE_DebugComponent_C_Editor_DrawDebugShapes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_Editor_DrawDebugShapes, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_GPE_DebugComponent_C_Editor_DrawDebugShapes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_Editor_DrawDebugShapes, CallFunc_SelectDebugColor_Color) == 0x00007C, "Member 'BP_GPE_DebugComponent_C_Editor_DrawDebugShapes::CallFunc_SelectDebugColor_Color' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_Editor_DrawDebugShapes, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000090, "Member 'BP_GPE_DebugComponent_C_Editor_DrawDebugShapes::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_Editor_DrawDebugShapes, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'BP_GPE_DebugComponent_C_Editor_DrawDebugShapes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_Editor_DrawDebugShapes, CallFunc_GetShorterVector_Start2) == 0x0000B0, "Member 'BP_GPE_DebugComponent_C_Editor_DrawDebugShapes::CallFunc_GetShorterVector_Start2' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_Editor_DrawDebugShapes, CallFunc_GetShorterVector_End2) == 0x0000C8, "Member 'BP_GPE_DebugComponent_C_Editor_DrawDebugShapes::CallFunc_GetShorterVector_End2' has a wrong offset!");

// Function BP_GPE_DebugComponent.BP_GPE_DebugComponent_C.Editor_GetDebugShapes
// 0x0028 (0x0028 - 0x0000)
struct BP_GPE_DebugComponent_C_Editor_GetDebugShapes final
{
public:
	TArray<struct FEditorDebugShape_Arrow>        Arrows;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FEditorDebugShape_Arrow>        Lines;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_DebugComponent_C_Editor_GetDebugShapes) == 0x000008, "Wrong alignment on BP_GPE_DebugComponent_C_Editor_GetDebugShapes");
static_assert(sizeof(BP_GPE_DebugComponent_C_Editor_GetDebugShapes) == 0x000028, "Wrong size on BP_GPE_DebugComponent_C_Editor_GetDebugShapes");
static_assert(offsetof(BP_GPE_DebugComponent_C_Editor_GetDebugShapes, Arrows) == 0x000000, "Member 'BP_GPE_DebugComponent_C_Editor_GetDebugShapes::Arrows' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_Editor_GetDebugShapes, Lines) == 0x000010, "Member 'BP_GPE_DebugComponent_C_Editor_GetDebugShapes::Lines' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_Editor_GetDebugShapes, ReturnValue) == 0x000020, "Member 'BP_GPE_DebugComponent_C_Editor_GetDebugShapes::ReturnValue' has a wrong offset!");

// Function BP_GPE_DebugComponent.BP_GPE_DebugComponent_C.SelectDebugColor
// 0x0050 (0x0050 - 0x0000)
struct BP_GPE_DebugComponent_C_SelectDebugColor final
{
public:
	class AActor*                                 GPE;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GPE_Controller_C*                   K2Node_DynamicCast_AsBP_GPE_Controller;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GPE_Orchestrator_C*                 K2Node_DynamicCast_AsBP_GPE_Orchestrator;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_Map_Keys_Keys;                            // 0x0038(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_DebugComponent_C_SelectDebugColor) == 0x000008, "Wrong alignment on BP_GPE_DebugComponent_C_SelectDebugColor");
static_assert(sizeof(BP_GPE_DebugComponent_C_SelectDebugColor) == 0x000050, "Wrong size on BP_GPE_DebugComponent_C_SelectDebugColor");
static_assert(offsetof(BP_GPE_DebugComponent_C_SelectDebugColor, GPE) == 0x000000, "Member 'BP_GPE_DebugComponent_C_SelectDebugColor::GPE' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_SelectDebugColor, Color) == 0x000008, "Member 'BP_GPE_DebugComponent_C_SelectDebugColor::Color' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_SelectDebugColor, K2Node_DynamicCast_AsBP_GPE_Controller) == 0x000018, "Member 'BP_GPE_DebugComponent_C_SelectDebugColor::K2Node_DynamicCast_AsBP_GPE_Controller' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_SelectDebugColor, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_GPE_DebugComponent_C_SelectDebugColor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_SelectDebugColor, K2Node_DynamicCast_AsBP_GPE_Orchestrator) == 0x000028, "Member 'BP_GPE_DebugComponent_C_SelectDebugColor::K2Node_DynamicCast_AsBP_GPE_Orchestrator' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_SelectDebugColor, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_GPE_DebugComponent_C_SelectDebugColor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_SelectDebugColor, CallFunc_Map_Keys_Keys) == 0x000038, "Member 'BP_GPE_DebugComponent_C_SelectDebugColor::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_GPE_DebugComponent_C_SelectDebugColor, CallFunc_Array_Contains_ReturnValue) == 0x000048, "Member 'BP_GPE_DebugComponent_C_SelectDebugColor::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

}

