#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ExplorationCapacityComponent_GrappleHook

#include "Basic.hpp"

#include "BP_ExplorationCapacityComponent_GrappleHook_classes.hpp"
#include "BP_ExplorationCapacityComponent_GrappleHook_parameters.hpp"


namespace SDK
{

// Function BP_ExplorationCapacityComponent_GrappleHook.BP_ExplorationCapacityComponent_GrappleHook_C.BPI_OnGrappleEndFootContact
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ExplorationCapacityComponent_GrappleHook_C::BPI_OnGrappleEndFootContact()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_GrappleHook_C", "BPI_OnGrappleEndFootContact");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExplorationCapacityComponent_GrappleHook.BP_ExplorationCapacityComponent_GrappleHook_C.DestroyRope
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ExplorationCapacityComponent_GrappleHook_C::DestroyRope()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_GrappleHook_C", "DestroyRope");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExplorationCapacityComponent_GrappleHook.BP_ExplorationCapacityComponent_GrappleHook_C.EndGrapplingMovement
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ExplorationCapacityComponent_GrappleHook_C::EndGrapplingMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_GrappleHook_C", "EndGrapplingMovement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExplorationCapacityComponent_GrappleHook.BP_ExplorationCapacityComponent_GrappleHook_C.ExecuteUbergraph_BP_ExplorationCapacityComponent_GrappleHook
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationCapacityComponent_GrappleHook_C::ExecuteUbergraph_BP_ExplorationCapacityComponent_GrappleHook(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_GrappleHook_C", "ExecuteUbergraph_BP_ExplorationCapacityComponent_GrappleHook");

	Params::BP_ExplorationCapacityComponent_GrappleHook_C_ExecuteUbergraph_BP_ExplorationCapacityComponent_GrappleHook Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExplorationCapacityComponent_GrappleHook.BP_ExplorationCapacityComponent_GrappleHook_C.GetCharacterWorld
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_jRPG_Character_World_C**      CharacterWorld                                         (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationCapacityComponent_GrappleHook_C::GetCharacterWorld(class ABP_jRPG_Character_World_C** CharacterWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_GrappleHook_C", "GetCharacterWorld");

	Params::BP_ExplorationCapacityComponent_GrappleHook_C_GetCharacterWorld Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CharacterWorld != nullptr)
		*CharacterWorld = Parms.CharacterWorld;
}


// Function BP_ExplorationCapacityComponent_GrappleHook.BP_ExplorationCapacityComponent_GrappleHook_C.MoveRope
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ExplorationCapacityComponent_GrappleHook_C::MoveRope()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_GrappleHook_C", "MoveRope");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExplorationCapacityComponent_GrappleHook.BP_ExplorationCapacityComponent_GrappleHook_C.OnAnimationMontagePlayed
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Montage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bInterrupted                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationCapacityComponent_GrappleHook_C::OnAnimationMontagePlayed(class UAnimMontage* Montage, bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_GrappleHook_C", "OnAnimationMontagePlayed");

	Params::BP_ExplorationCapacityComponent_GrappleHook_C_OnAnimationMontagePlayed Parms{};

	Parms.Montage = Montage;
	Parms.bInterrupted = bInterrupted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExplorationCapacityComponent_GrappleHook.BP_ExplorationCapacityComponent_GrappleHook_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_ExplorationCapacityComponent_GrappleHook_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_GrappleHook_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExplorationCapacityComponent_GrappleHook.BP_ExplorationCapacityComponent_GrappleHook_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationCapacityComponent_GrappleHook_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_GrappleHook_C", "ReceiveTick");

	Params::BP_ExplorationCapacityComponent_GrappleHook_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExplorationCapacityComponent_GrappleHook.BP_ExplorationCapacityComponent_GrappleHook_C.SpawnRope
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ExplorationCapacityComponent_GrappleHook_C::SpawnRope()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_GrappleHook_C", "SpawnRope");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExplorationCapacityComponent_GrappleHook.BP_ExplorationCapacityComponent_GrappleHook_C.StartGrapplingAnimation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_GrapplePoint_C*               GrapplePointReference_0                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationCapacityComponent_GrappleHook_C::StartGrapplingAnimation(class ABP_GrapplePoint_C* GrapplePointReference_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_GrappleHook_C", "StartGrapplingAnimation");

	Params::BP_ExplorationCapacityComponent_GrappleHook_C_StartGrapplingAnimation Parms{};

	Parms.GrapplePointReference_0 = GrapplePointReference_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExplorationCapacityComponent_GrappleHook.BP_ExplorationCapacityComponent_GrappleHook_C.StartGrapplingMovement
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ExplorationCapacityComponent_GrappleHook_C::StartGrapplingMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_GrappleHook_C", "StartGrapplingMovement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExplorationCapacityComponent_GrappleHook.BP_ExplorationCapacityComponent_GrappleHook_C.UpdateGrapplingMovement
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ExplorationCapacityComponent_GrappleHook_C::UpdateGrapplingMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_GrappleHook_C", "UpdateGrapplingMovement");

	UObject::ProcessEvent(Func, nullptr);
}

}

