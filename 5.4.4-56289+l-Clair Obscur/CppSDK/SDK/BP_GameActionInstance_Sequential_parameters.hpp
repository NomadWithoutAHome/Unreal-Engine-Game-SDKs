#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameActionInstance_Sequential

#include "Basic.hpp"

#include "SandFall_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_GameActionInstance_Sequential.BP_GameActionInstance_Sequential_C.ExecuteGameAction
// 0x0008 (0x0008 - 0x0000)
struct BP_GameActionInstance_Sequential_C_ExecuteGameAction final
{
public:
	const class APlayerController*                Controller;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_Sequential_C_ExecuteGameAction) == 0x000008, "Wrong alignment on BP_GameActionInstance_Sequential_C_ExecuteGameAction");
static_assert(sizeof(BP_GameActionInstance_Sequential_C_ExecuteGameAction) == 0x000008, "Wrong size on BP_GameActionInstance_Sequential_C_ExecuteGameAction");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_ExecuteGameAction, Controller) == 0x000000, "Member 'BP_GameActionInstance_Sequential_C_ExecuteGameAction::Controller' has a wrong offset!");

// Function BP_GameActionInstance_Sequential.BP_GameActionInstance_Sequential_C.ExecuteUbergraph_BP_GameActionInstance_Sequential
// 0x0020 (0x0020 - 0x0000)
struct BP_GameActionInstance_Sequential_C_ExecuteUbergraph_BP_GameActionInstance_Sequential final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class APlayerController*                K2Node_Event_Controller;                           // 0x0008(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_GameAction_Sequential_C*            K2Node_DynamicCast_AsBP_Game_Action_Sequential;    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_Sequential_C_ExecuteUbergraph_BP_GameActionInstance_Sequential) == 0x000008, "Wrong alignment on BP_GameActionInstance_Sequential_C_ExecuteUbergraph_BP_GameActionInstance_Sequential");
static_assert(sizeof(BP_GameActionInstance_Sequential_C_ExecuteUbergraph_BP_GameActionInstance_Sequential) == 0x000020, "Wrong size on BP_GameActionInstance_Sequential_C_ExecuteUbergraph_BP_GameActionInstance_Sequential");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_ExecuteUbergraph_BP_GameActionInstance_Sequential, EntryPoint) == 0x000000, "Member 'BP_GameActionInstance_Sequential_C_ExecuteUbergraph_BP_GameActionInstance_Sequential::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_ExecuteUbergraph_BP_GameActionInstance_Sequential, K2Node_Event_Controller) == 0x000008, "Member 'BP_GameActionInstance_Sequential_C_ExecuteUbergraph_BP_GameActionInstance_Sequential::K2Node_Event_Controller' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_ExecuteUbergraph_BP_GameActionInstance_Sequential, K2Node_DynamicCast_AsBP_Game_Action_Sequential) == 0x000010, "Member 'BP_GameActionInstance_Sequential_C_ExecuteUbergraph_BP_GameActionInstance_Sequential::K2Node_DynamicCast_AsBP_Game_Action_Sequential' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_ExecuteUbergraph_BP_GameActionInstance_Sequential, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GameActionInstance_Sequential_C_ExecuteUbergraph_BP_GameActionInstance_Sequential::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_GameActionInstance_Sequential.BP_GameActionInstance_Sequential_C.GetNextGameActionToExecuteAndUpdateIndex
// 0x0030 (0x0030 - 0x0000)
struct BP_GameActionInstance_Sequential_C_GetNextGameActionToExecuteAndUpdateIndex final
{
public:
	struct FGameAction_Wrapper                    GameActionWrapper;                                 // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameAction_Wrapper                    Temp_wildcard_Variable;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_Sequential_C_GetNextGameActionToExecuteAndUpdateIndex) == 0x000008, "Wrong alignment on BP_GameActionInstance_Sequential_C_GetNextGameActionToExecuteAndUpdateIndex");
static_assert(sizeof(BP_GameActionInstance_Sequential_C_GetNextGameActionToExecuteAndUpdateIndex) == 0x000030, "Wrong size on BP_GameActionInstance_Sequential_C_GetNextGameActionToExecuteAndUpdateIndex");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_GetNextGameActionToExecuteAndUpdateIndex, GameActionWrapper) == 0x000000, "Member 'BP_GameActionInstance_Sequential_C_GetNextGameActionToExecuteAndUpdateIndex::GameActionWrapper' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_GetNextGameActionToExecuteAndUpdateIndex, Temp_int_Variable) == 0x000010, "Member 'BP_GameActionInstance_Sequential_C_GetNextGameActionToExecuteAndUpdateIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_GetNextGameActionToExecuteAndUpdateIndex, Temp_wildcard_Variable) == 0x000018, "Member 'BP_GameActionInstance_Sequential_C_GetNextGameActionToExecuteAndUpdateIndex::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_GetNextGameActionToExecuteAndUpdateIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_GameActionInstance_Sequential_C_GetNextGameActionToExecuteAndUpdateIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GameActionInstance_Sequential.BP_GameActionInstance_Sequential_C.HasAnyGameActionToExecute
// 0x000C (0x000C - 0x0000)
struct BP_GameActionInstance_Sequential_C_HasAnyGameActionToExecute final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_Sequential_C_HasAnyGameActionToExecute) == 0x000004, "Wrong alignment on BP_GameActionInstance_Sequential_C_HasAnyGameActionToExecute");
static_assert(sizeof(BP_GameActionInstance_Sequential_C_HasAnyGameActionToExecute) == 0x00000C, "Wrong size on BP_GameActionInstance_Sequential_C_HasAnyGameActionToExecute");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_HasAnyGameActionToExecute, ReturnValue) == 0x000000, "Member 'BP_GameActionInstance_Sequential_C_HasAnyGameActionToExecute::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_HasAnyGameActionToExecute, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_GameActionInstance_Sequential_C_HasAnyGameActionToExecute::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_HasAnyGameActionToExecute, CallFunc_Less_IntInt_ReturnValue) == 0x000008, "Member 'BP_GameActionInstance_Sequential_C_HasAnyGameActionToExecute::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GameActionInstance_Sequential.BP_GameActionInstance_Sequential_C.OnChildGameActionFinished
// 0x0010 (0x0010 - 0x0000)
struct BP_GameActionInstance_Sequential_C_OnChildGameActionFinished final
{
public:
	class UGameActionInstance*                    GameActionInstance;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldTriggerAutoSaveAfterExecution_ReturnValue; // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_Sequential_C_OnChildGameActionFinished) == 0x000008, "Wrong alignment on BP_GameActionInstance_Sequential_C_OnChildGameActionFinished");
static_assert(sizeof(BP_GameActionInstance_Sequential_C_OnChildGameActionFinished) == 0x000010, "Wrong size on BP_GameActionInstance_Sequential_C_OnChildGameActionFinished");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_OnChildGameActionFinished, GameActionInstance) == 0x000000, "Member 'BP_GameActionInstance_Sequential_C_OnChildGameActionFinished::GameActionInstance' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_OnChildGameActionFinished, CallFunc_ShouldTriggerAutoSaveAfterExecution_ReturnValue) == 0x000008, "Member 'BP_GameActionInstance_Sequential_C_OnChildGameActionFinished::CallFunc_ShouldTriggerAutoSaveAfterExecution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_OnChildGameActionFinished, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_GameActionInstance_Sequential_C_OnChildGameActionFinished::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_OnChildGameActionFinished, CallFunc_BooleanOR_ReturnValue) == 0x00000A, "Member 'BP_GameActionInstance_Sequential_C_OnChildGameActionFinished::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_GameActionInstance_Sequential.BP_GameActionInstance_Sequential_C.TryExecuteNextGameAction
// 0x0018 (0x0018 - 0x0000)
struct BP_GameActionInstance_Sequential_C_TryExecuteNextGameAction final
{
public:
	struct FGameAction_Wrapper                    CallFunc_GetNextGameActionToExecuteAndUpdateIndex_GameActionWrapper; // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_HasAnyGameActionToExecute_ReturnValue;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_Sequential_C_TryExecuteNextGameAction) == 0x000008, "Wrong alignment on BP_GameActionInstance_Sequential_C_TryExecuteNextGameAction");
static_assert(sizeof(BP_GameActionInstance_Sequential_C_TryExecuteNextGameAction) == 0x000018, "Wrong size on BP_GameActionInstance_Sequential_C_TryExecuteNextGameAction");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_TryExecuteNextGameAction, CallFunc_GetNextGameActionToExecuteAndUpdateIndex_GameActionWrapper) == 0x000000, "Member 'BP_GameActionInstance_Sequential_C_TryExecuteNextGameAction::CallFunc_GetNextGameActionToExecuteAndUpdateIndex_GameActionWrapper' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_TryExecuteNextGameAction, CallFunc_HasAnyGameActionToExecute_ReturnValue) == 0x000010, "Member 'BP_GameActionInstance_Sequential_C_TryExecuteNextGameAction::CallFunc_HasAnyGameActionToExecute_ReturnValue' has a wrong offset!");

// Function BP_GameActionInstance_Sequential.BP_GameActionInstance_Sequential_C.GetDebugString
// 0x0130 (0x0130 - 0x0000)
struct BP_GameActionInstance_Sequential_C_GetDebugString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0088(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetDebugString_ReturnValue;               // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	class FString                                 CallFunc_PadString_Result;                         // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_Sequential_C_GetDebugString) == 0x000008, "Wrong alignment on BP_GameActionInstance_Sequential_C_GetDebugString");
static_assert(sizeof(BP_GameActionInstance_Sequential_C_GetDebugString) == 0x000130, "Wrong size on BP_GameActionInstance_Sequential_C_GetDebugString");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_GetDebugString, ReturnValue) == 0x000000, "Member 'BP_GameActionInstance_Sequential_C_GetDebugString::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_GetDebugString, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'BP_GameActionInstance_Sequential_C_GetDebugString::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_GetDebugString, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'BP_GameActionInstance_Sequential_C_GetDebugString::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_GetDebugString, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000028, "Member 'BP_GameActionInstance_Sequential_C_GetDebugString::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_GetDebugString, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'BP_GameActionInstance_Sequential_C_GetDebugString::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_GetDebugString, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'BP_GameActionInstance_Sequential_C_GetDebugString::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_GetDebugString, K2Node_MakeStruct_FormatArgumentData_1) == 0x000088, "Member 'BP_GameActionInstance_Sequential_C_GetDebugString::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_GetDebugString, CallFunc_GetDebugString_ReturnValue) == 0x0000D0, "Member 'BP_GameActionInstance_Sequential_C_GetDebugString::CallFunc_GetDebugString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_GetDebugString, K2Node_MakeArray_Array) == 0x0000E0, "Member 'BP_GameActionInstance_Sequential_C_GetDebugString::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_GetDebugString, CallFunc_PadString_Result) == 0x0000F0, "Member 'BP_GameActionInstance_Sequential_C_GetDebugString::CallFunc_PadString_Result' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_GetDebugString, CallFunc_Format_ReturnValue) == 0x000100, "Member 'BP_GameActionInstance_Sequential_C_GetDebugString::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_GetDebugString, CallFunc_Concat_StrStr_ReturnValue) == 0x000110, "Member 'BP_GameActionInstance_Sequential_C_GetDebugString::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_GetDebugString, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000120, "Member 'BP_GameActionInstance_Sequential_C_GetDebugString::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BP_GameActionInstance_Sequential.BP_GameActionInstance_Sequential_C.ShouldBlockAutoSaveDuringExecution
// 0x0001 (0x0001 - 0x0000)
struct BP_GameActionInstance_Sequential_C_ShouldBlockAutoSaveDuringExecution final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_Sequential_C_ShouldBlockAutoSaveDuringExecution) == 0x000001, "Wrong alignment on BP_GameActionInstance_Sequential_C_ShouldBlockAutoSaveDuringExecution");
static_assert(sizeof(BP_GameActionInstance_Sequential_C_ShouldBlockAutoSaveDuringExecution) == 0x000001, "Wrong size on BP_GameActionInstance_Sequential_C_ShouldBlockAutoSaveDuringExecution");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_ShouldBlockAutoSaveDuringExecution, ReturnValue) == 0x000000, "Member 'BP_GameActionInstance_Sequential_C_ShouldBlockAutoSaveDuringExecution::ReturnValue' has a wrong offset!");

// Function BP_GameActionInstance_Sequential.BP_GameActionInstance_Sequential_C.ShouldTriggerAutoSaveAfterExecution
// 0x0001 (0x0001 - 0x0000)
struct BP_GameActionInstance_Sequential_C_ShouldTriggerAutoSaveAfterExecution final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_Sequential_C_ShouldTriggerAutoSaveAfterExecution) == 0x000001, "Wrong alignment on BP_GameActionInstance_Sequential_C_ShouldTriggerAutoSaveAfterExecution");
static_assert(sizeof(BP_GameActionInstance_Sequential_C_ShouldTriggerAutoSaveAfterExecution) == 0x000001, "Wrong size on BP_GameActionInstance_Sequential_C_ShouldTriggerAutoSaveAfterExecution");
static_assert(offsetof(BP_GameActionInstance_Sequential_C_ShouldTriggerAutoSaveAfterExecution, ReturnValue) == 0x000000, "Member 'BP_GameActionInstance_Sequential_C_ShouldTriggerAutoSaveAfterExecution::ReturnValue' has a wrong offset!");

}

