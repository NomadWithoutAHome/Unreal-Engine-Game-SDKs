#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DocumentActor

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_DocumentActor.BP_DocumentActor_C.OnPutAwayDocument
// 0x0001 (0x0001 - 0x0000)
struct BP_DocumentActor_C_OnPutAwayDocument final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DocumentActor_C_OnPutAwayDocument) == 0x000001, "Wrong alignment on BP_DocumentActor_C_OnPutAwayDocument");
static_assert(sizeof(BP_DocumentActor_C_OnPutAwayDocument) == 0x000001, "Wrong size on BP_DocumentActor_C_OnPutAwayDocument");
static_assert(offsetof(BP_DocumentActor_C_OnPutAwayDocument, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_DocumentActor_C_OnPutAwayDocument::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_DocumentActor.BP_DocumentActor_C.BlackFadeOut
// 0x0008 (0x0008 - 0x0000)
struct BP_DocumentActor_C_BlackFadeOut final
{
public:
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DocumentActor_C_BlackFadeOut) == 0x000008, "Wrong alignment on BP_DocumentActor_C_BlackFadeOut");
static_assert(sizeof(BP_DocumentActor_C_BlackFadeOut) == 0x000008, "Wrong size on BP_DocumentActor_C_BlackFadeOut");
static_assert(offsetof(BP_DocumentActor_C_BlackFadeOut, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000000, "Member 'BP_DocumentActor_C_BlackFadeOut::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");

// Function BP_DocumentActor.BP_DocumentActor_C.BlackFadeIn
// 0x0008 (0x0008 - 0x0000)
struct BP_DocumentActor_C_BlackFadeIn final
{
public:
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DocumentActor_C_BlackFadeIn) == 0x000008, "Wrong alignment on BP_DocumentActor_C_BlackFadeIn");
static_assert(sizeof(BP_DocumentActor_C_BlackFadeIn) == 0x000008, "Wrong size on BP_DocumentActor_C_BlackFadeIn");
static_assert(offsetof(BP_DocumentActor_C_BlackFadeIn, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000000, "Member 'BP_DocumentActor_C_BlackFadeIn::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");

// Function BP_DocumentActor.BP_DocumentActor_C.SetInputModeUI
// 0x0001 (0x0001 - 0x0000)
struct BP_DocumentActor_C_SetInputModeUI final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DocumentActor_C_SetInputModeUI) == 0x000001, "Wrong alignment on BP_DocumentActor_C_SetInputModeUI");
static_assert(sizeof(BP_DocumentActor_C_SetInputModeUI) == 0x000001, "Wrong size on BP_DocumentActor_C_SetInputModeUI");
static_assert(offsetof(BP_DocumentActor_C_SetInputModeUI, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_DocumentActor_C_SetInputModeUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_DocumentActor.BP_DocumentActor_C.CreateDocumentWidget
// 0x0010 (0x0010 - 0x0000)
struct BP_DocumentActor_C_CreateDocumentWidget final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_Document_C*                        CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DocumentActor_C_CreateDocumentWidget) == 0x000008, "Wrong alignment on BP_DocumentActor_C_CreateDocumentWidget");
static_assert(sizeof(BP_DocumentActor_C_CreateDocumentWidget) == 0x000010, "Wrong size on BP_DocumentActor_C_CreateDocumentWidget");
static_assert(offsetof(BP_DocumentActor_C_CreateDocumentWidget, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_DocumentActor_C_CreateDocumentWidget::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DocumentActor_C_CreateDocumentWidget, CallFunc_Create_ReturnValue) == 0x000008, "Member 'BP_DocumentActor_C_CreateDocumentWidget::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function BP_DocumentActor.BP_DocumentActor_C.SetInputModeGame
// 0x0001 (0x0001 - 0x0000)
struct BP_DocumentActor_C_SetInputModeGame final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DocumentActor_C_SetInputModeGame) == 0x000001, "Wrong alignment on BP_DocumentActor_C_SetInputModeGame");
static_assert(sizeof(BP_DocumentActor_C_SetInputModeGame) == 0x000001, "Wrong size on BP_DocumentActor_C_SetInputModeGame");
static_assert(offsetof(BP_DocumentActor_C_SetInputModeGame, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_DocumentActor_C_SetInputModeGame::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_DocumentActor.BP_DocumentActor_C.OnInteractionRequested
// 0x0010 (0x0010 - 0x0000)
struct BP_DocumentActor_C_OnInteractionRequested final
{
public:
	class ABP_jRPG_Character_World_C*             InteractingWorldCharacter;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Instant;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DocumentActor_C_OnInteractionRequested) == 0x000008, "Wrong alignment on BP_DocumentActor_C_OnInteractionRequested");
static_assert(sizeof(BP_DocumentActor_C_OnInteractionRequested) == 0x000010, "Wrong size on BP_DocumentActor_C_OnInteractionRequested");
static_assert(offsetof(BP_DocumentActor_C_OnInteractionRequested, InteractingWorldCharacter) == 0x000000, "Member 'BP_DocumentActor_C_OnInteractionRequested::InteractingWorldCharacter' has a wrong offset!");
static_assert(offsetof(BP_DocumentActor_C_OnInteractionRequested, Instant) == 0x000008, "Member 'BP_DocumentActor_C_OnInteractionRequested::Instant' has a wrong offset!");

// Function BP_DocumentActor.BP_DocumentActor_C.OnObjectInteractionStateLoaded
// 0x0001 (0x0001 - 0x0000)
struct BP_DocumentActor_C_OnObjectInteractionStateLoaded final
{
public:
	bool                                          InteractionState;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DocumentActor_C_OnObjectInteractionStateLoaded) == 0x000001, "Wrong alignment on BP_DocumentActor_C_OnObjectInteractionStateLoaded");
static_assert(sizeof(BP_DocumentActor_C_OnObjectInteractionStateLoaded) == 0x000001, "Wrong size on BP_DocumentActor_C_OnObjectInteractionStateLoaded");
static_assert(offsetof(BP_DocumentActor_C_OnObjectInteractionStateLoaded, InteractionState) == 0x000000, "Member 'BP_DocumentActor_C_OnObjectInteractionStateLoaded::InteractionState' has a wrong offset!");

// Function BP_DocumentActor.BP_DocumentActor_C.ExecuteUbergraph_BP_DocumentActor
// 0x0018 (0x0018 - 0x0000)
struct BP_DocumentActor_C_ExecuteUbergraph_BP_DocumentActor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_World_C*             K2Node_Event_InteractingWorldCharacter;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Instant;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InteractionState;                     // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DocumentActor_C_ExecuteUbergraph_BP_DocumentActor) == 0x000008, "Wrong alignment on BP_DocumentActor_C_ExecuteUbergraph_BP_DocumentActor");
static_assert(sizeof(BP_DocumentActor_C_ExecuteUbergraph_BP_DocumentActor) == 0x000018, "Wrong size on BP_DocumentActor_C_ExecuteUbergraph_BP_DocumentActor");
static_assert(offsetof(BP_DocumentActor_C_ExecuteUbergraph_BP_DocumentActor, EntryPoint) == 0x000000, "Member 'BP_DocumentActor_C_ExecuteUbergraph_BP_DocumentActor::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DocumentActor_C_ExecuteUbergraph_BP_DocumentActor, K2Node_Event_InteractingWorldCharacter) == 0x000008, "Member 'BP_DocumentActor_C_ExecuteUbergraph_BP_DocumentActor::K2Node_Event_InteractingWorldCharacter' has a wrong offset!");
static_assert(offsetof(BP_DocumentActor_C_ExecuteUbergraph_BP_DocumentActor, K2Node_Event_Instant) == 0x000010, "Member 'BP_DocumentActor_C_ExecuteUbergraph_BP_DocumentActor::K2Node_Event_Instant' has a wrong offset!");
static_assert(offsetof(BP_DocumentActor_C_ExecuteUbergraph_BP_DocumentActor, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_DocumentActor_C_ExecuteUbergraph_BP_DocumentActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DocumentActor_C_ExecuteUbergraph_BP_DocumentActor, K2Node_Event_InteractionState) == 0x000012, "Member 'BP_DocumentActor_C_ExecuteUbergraph_BP_DocumentActor::K2Node_Event_InteractionState' has a wrong offset!");

}

