#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FL_UIHelpers

#include "Basic.hpp"

#include "FL_UIHelpers_classes.hpp"
#include "FL_UIHelpers_parameters.hpp"


namespace SDK
{

// Function FL_UIHelpers.FL_UIHelpers_C.ParseSkillDescriptionText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_DataAsset_Skill_C*            SkillData                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UBP_SkillState_C*                 SkillState                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bParseShortDesc                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            ParsedText                                             (Parm, OutParm)

void UFL_UIHelpers_C::ParseSkillDescriptionText(class UBP_DataAsset_Skill_C* SkillData, class UBP_SkillState_C* SkillState, bool bParseShortDesc, class UObject* __WorldContext, class FText* ParsedText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_UIHelpers_C", "ParseSkillDescriptionText");

	Params::FL_UIHelpers_C_ParseSkillDescriptionText Parms{};

	Parms.SkillData = SkillData;
	Parms.SkillState = SkillState;
	Parms.bParseShortDesc = bParseShortDesc;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ParsedText != nullptr)
		*ParsedText = std::move(Parms.ParsedText);
}


// Function FL_UIHelpers.FL_UIHelpers_C.CreateCharacterSelectorWindow
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_CharacterSelectorParameters&Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UWBP_CharacterSelectorPanel_C**   CharacterSelectorWindow                                (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UFL_UIHelpers_C::CreateCharacterSelectorWindow(const struct FS_CharacterSelectorParameters& Parameters, class UObject* __WorldContext, class UWBP_CharacterSelectorPanel_C** CharacterSelectorWindow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_UIHelpers_C", "CreateCharacterSelectorWindow");

	Params::FL_UIHelpers_C_CreateCharacterSelectorWindow Parms{};

	Parms.Parameters = std::move(Parameters);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (CharacterSelectorWindow != nullptr)
		*CharacterSelectorWindow = Parms.CharacterSelectorWindow;
}


// Function FL_UIHelpers.FL_UIHelpers_C.SkipActiveAnimationsOnLastFrame
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      UserWidget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// TArray<class UWidgetAnimation*>&        AnimationsToInterrupt                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFL_UIHelpers_C::SkipActiveAnimationsOnLastFrame(class UUserWidget* UserWidget, TArray<class UWidgetAnimation*>& AnimationsToInterrupt, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_UIHelpers_C", "SkipActiveAnimationsOnLastFrame");

	Params::FL_UIHelpers_C_SkipActiveAnimationsOnLastFrame Parms{};

	Parms.UserWidget = UserWidget;
	Parms.AnimationsToInterrupt = std::move(AnimationsToInterrupt);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	AnimationsToInterrupt = std::move(Parms.AnimationsToInterrupt);
}


// Function FL_UIHelpers.FL_UIHelpers_C.CreatePlatformPauseModal
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UWBP_PlatformPauseModal_C**       OutputPin                                              (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UFL_UIHelpers_C::CreatePlatformPauseModal(class UObject* __WorldContext, class UWBP_PlatformPauseModal_C** OutputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_UIHelpers_C", "CreatePlatformPauseModal");

	Params::FL_UIHelpers_C_CreatePlatformPauseModal Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;
}


// Function FL_UIHelpers.FL_UIHelpers_C.CreateModalWindow
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      PromptTitle                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      PromptMessage                                          (BlueprintVisible, BlueprintReadOnly, Parm)
// E_ModalStandardButton                   ResponseButtonType                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UWBP_ModalPopup_C**               OutputPin                                              (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UFL_UIHelpers_C::CreateModalWindow(const class FText& PromptTitle, const class FText& PromptMessage, E_ModalStandardButton ResponseButtonType, class UObject* __WorldContext, class UWBP_ModalPopup_C** OutputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_UIHelpers_C", "CreateModalWindow");

	Params::FL_UIHelpers_C_CreateModalWindow Parms{};

	Parms.PromptTitle = std::move(PromptTitle);
	Parms.PromptMessage = std::move(PromptMessage);
	Parms.ResponseButtonType = ResponseButtonType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;
}


// Function FL_UIHelpers.FL_UIHelpers_C.GetGameMenuActionBarFromPanel
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          StartingWidget                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UWBP_CommonActionBarContainer_C*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWBP_CommonActionBarContainer_C* UFL_UIHelpers_C::GetGameMenuActionBarFromPanel(class UWidget* StartingWidget, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_UIHelpers_C", "GetGameMenuActionBarFromPanel");

	Params::FL_UIHelpers_C_GetGameMenuActionBarFromPanel Parms{};

	Parms.StartingWidget = StartingWidget;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FL_UIHelpers.FL_UIHelpers_C.GetCommonUIActionFromInputAction
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EInputAction                            InputAction                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FDataTableRowHandle*             InputActionRow                                         (Parm, OutParm, NoDestructor)

void UFL_UIHelpers_C::GetCommonUIActionFromInputAction(EInputAction InputAction, class UObject* __WorldContext, struct FDataTableRowHandle* InputActionRow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_UIHelpers_C", "GetCommonUIActionFromInputAction");

	Params::FL_UIHelpers_C_GetCommonUIActionFromInputAction Parms{};

	Parms.InputAction = InputAction;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (InputActionRow != nullptr)
		*InputActionRow = std::move(Parms.InputActionRow);
}


// Function FL_UIHelpers.FL_UIHelpers_C.UpdateWidgetsFrom3DWorldPosition
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TMap<class UWidget*, struct FVector>&TargetMap                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFL_UIHelpers_C::UpdateWidgetsFrom3DWorldPosition(const TMap<class UWidget*, struct FVector>& TargetMap, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FL_UIHelpers_C", "UpdateWidgetsFrom3DWorldPosition");

	Params::FL_UIHelpers_C_UpdateWidgetsFrom3DWorldPosition Parms{};

	Parms.TargetMap = std::move(TargetMap);
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FL_UIHelpers.FL_UIHelpers_C.UpdateWidgetFrom3DWorldPosition
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   WorldLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFL_UIHelpers_C::UpdateWidgetFrom3DWorldPosition(class UWidget* Widget, const struct FVector& WorldLocation, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FL_UIHelpers_C", "UpdateWidgetFrom3DWorldPosition");

	Params::FL_UIHelpers_C_UpdateWidgetFrom3DWorldPosition Parms{};

	Parms.Widget = Widget;
	Parms.WorldLocation = std::move(WorldLocation);
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);
}

}

