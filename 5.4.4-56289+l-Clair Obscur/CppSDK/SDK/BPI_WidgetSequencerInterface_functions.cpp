#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_WidgetSequencerInterface

#include "Basic.hpp"

#include "BPI_WidgetSequencerInterface_classes.hpp"
#include "BPI_WidgetSequencerInterface_parameters.hpp"


namespace SDK
{

// Function BPI_WidgetSequencerInterface.BPI_WidgetSequencerInterface_C.BPI_PauseWidget
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_WidgetSequencerInterface_C::BPI_PauseWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_WidgetSequencerInterface_C", "BPI_PauseWidget");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_WidgetSequencerInterface.BPI_WidgetSequencerInterface_C.BPI_SetWidgetParameters
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FDataTableRowHandle&       Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void IBPI_WidgetSequencerInterface_C::BPI_SetWidgetParameters(const struct FDataTableRowHandle& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_WidgetSequencerInterface_C", "BPI_SetWidgetParameters");

	Params::BPI_WidgetSequencerInterface_C_BPI_SetWidgetParameters Parms{};

	Parms.Parameters = std::move(Parameters);

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_WidgetSequencerInterface.BPI_WidgetSequencerInterface_C.BPI_UnpauseWidget
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_WidgetSequencerInterface_C::BPI_UnpauseWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_WidgetSequencerInterface_C", "BPI_UnpauseWidget");

	AsUObject()->ProcessEvent(Func, nullptr);
}

}

