#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CameraLookAtControllerComponent

#include "Basic.hpp"

#include "E_jRPG_CharacterWorldCapability_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "S_CameraLookAtRequest_structs.hpp"


namespace SDK::Params
{

// Function BP_CameraLookAtControllerComponent.BP_CameraLookAtControllerComponent_C.CheckForErrors
// 0x0040 (0x0040 - 0x0000)
struct BP_CameraLookAtControllerComponent_C_CheckForErrors final
{
public:
	TArray<class FText>                           ErrorMessages;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0018(0x0010)(ConstParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_World_C*             K2Node_DynamicCast_AsBP_J_RPG_Character_World;     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraLookAtControllerComponent_C_CheckForErrors) == 0x000008, "Wrong alignment on BP_CameraLookAtControllerComponent_C_CheckForErrors");
static_assert(sizeof(BP_CameraLookAtControllerComponent_C_CheckForErrors) == 0x000040, "Wrong size on BP_CameraLookAtControllerComponent_C_CheckForErrors");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_CheckForErrors, ErrorMessages) == 0x000000, "Member 'BP_CameraLookAtControllerComponent_C_CheckForErrors::ErrorMessages' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_CheckForErrors, ReturnValue) == 0x000010, "Member 'BP_CameraLookAtControllerComponent_C_CheckForErrors::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_CheckForErrors, Temp_text_Variable) == 0x000018, "Member 'BP_CameraLookAtControllerComponent_C_CheckForErrors::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_CheckForErrors, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BP_CameraLookAtControllerComponent_C_CheckForErrors::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_CheckForErrors, K2Node_DynamicCast_AsBP_J_RPG_Character_World) == 0x000030, "Member 'BP_CameraLookAtControllerComponent_C_CheckForErrors::K2Node_DynamicCast_AsBP_J_RPG_Character_World' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_CheckForErrors, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_CameraLookAtControllerComponent_C_CheckForErrors::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_CheckForErrors, CallFunc_Array_Add_ReturnValue) == 0x00003C, "Member 'BP_CameraLookAtControllerComponent_C_CheckForErrors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_CameraLookAtControllerComponent.BP_CameraLookAtControllerComponent_C.ComputeAlpha
// 0x0038 (0x0038 - 0x0000)
struct BP_CameraLookAtControllerComponent_C_ComputeAlpha final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_Alpha;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_Value_ImplicitCast;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraLookAtControllerComponent_C_ComputeAlpha) == 0x000008, "Wrong alignment on BP_CameraLookAtControllerComponent_C_ComputeAlpha");
static_assert(sizeof(BP_CameraLookAtControllerComponent_C_ComputeAlpha) == 0x000038, "Wrong size on BP_CameraLookAtControllerComponent_C_ComputeAlpha");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_ComputeAlpha, ReturnValue) == 0x000000, "Member 'BP_CameraLookAtControllerComponent_C_ComputeAlpha::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_ComputeAlpha, local_Alpha) == 0x000008, "Member 'BP_CameraLookAtControllerComponent_C_ComputeAlpha::local_Alpha' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_ComputeAlpha, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_CameraLookAtControllerComponent_C_ComputeAlpha::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_ComputeAlpha, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'BP_CameraLookAtControllerComponent_C_ComputeAlpha::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_ComputeAlpha, CallFunc_GetFloatValue_ReturnValue) == 0x00001C, "Member 'BP_CameraLookAtControllerComponent_C_ComputeAlpha::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_ComputeAlpha, CallFunc_FClamp_ReturnValue) == 0x000020, "Member 'BP_CameraLookAtControllerComponent_C_ComputeAlpha::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_ComputeAlpha, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000028, "Member 'BP_CameraLookAtControllerComponent_C_ComputeAlpha::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_ComputeAlpha, CallFunc_FClamp_Value_ImplicitCast) == 0x000030, "Member 'BP_CameraLookAtControllerComponent_C_ComputeAlpha::CallFunc_FClamp_Value_ImplicitCast' has a wrong offset!");

// Function BP_CameraLookAtControllerComponent.BP_CameraLookAtControllerComponent_C.ExecuteUbergraph_BP_CameraLookAtControllerComponent
// 0x0090 (0x0090 - 0x0000)
struct BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_World_C*             K2Node_DynamicCast_AsBP_J_RPG_Character_World;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CameraLookAtRequest                 K2Node_CustomEvent_LookAtRequest;                  // 0x0040(0x0030)(HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0070(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLookAtRequestValid_IsValid;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_UpdateLookAt_DeltaSeconds_ImplicitCast;   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent) == 0x000008, "Wrong alignment on BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent");
static_assert(sizeof(BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent) == 0x000090, "Wrong size on BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent, EntryPoint) == 0x000000, "Member 'BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent, K2Node_DynamicCast_AsBP_J_RPG_Character_World) == 0x000010, "Member 'BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent::K2Node_DynamicCast_AsBP_J_RPG_Character_World' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent, K2Node_CustomEvent_Loaded) == 0x000020, "Member 'BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent, Temp_object_Variable) == 0x000028, "Member 'BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent, K2Node_DynamicCast_AsActor) == 0x000030, "Member 'BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent, K2Node_Event_DeltaSeconds) == 0x00003C, "Member 'BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent, K2Node_CustomEvent_LookAtRequest) == 0x000040, "Member 'BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent::K2Node_CustomEvent_LookAtRequest' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000070, "Member 'BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent, CallFunc_IsLookAtRequestValid_IsValid) == 0x000080, "Member 'BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent::CallFunc_IsLookAtRequestValid_IsValid' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent, CallFunc_UpdateLookAt_DeltaSeconds_ImplicitCast) == 0x000088, "Member 'BP_CameraLookAtControllerComponent_C_ExecuteUbergraph_BP_CameraLookAtControllerComponent::CallFunc_UpdateLookAt_DeltaSeconds_ImplicitCast' has a wrong offset!");

// Function BP_CameraLookAtControllerComponent.BP_CameraLookAtControllerComponent_C.IsLookAtRequestValid
// 0x0038 (0x0038 - 0x0000)
struct BP_CameraLookAtControllerComponent_C_IsLookAtRequestValid final
{
public:
	struct FS_CameraLookAtRequest                 LookAtRequest_0;                                   // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraLookAtControllerComponent_C_IsLookAtRequestValid) == 0x000008, "Wrong alignment on BP_CameraLookAtControllerComponent_C_IsLookAtRequestValid");
static_assert(sizeof(BP_CameraLookAtControllerComponent_C_IsLookAtRequestValid) == 0x000038, "Wrong size on BP_CameraLookAtControllerComponent_C_IsLookAtRequestValid");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_IsLookAtRequestValid, LookAtRequest_0) == 0x000000, "Member 'BP_CameraLookAtControllerComponent_C_IsLookAtRequestValid::LookAtRequest_0' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_IsLookAtRequestValid, IsValid) == 0x000030, "Member 'BP_CameraLookAtControllerComponent_C_IsLookAtRequestValid::IsValid' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_IsLookAtRequestValid, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_CameraLookAtControllerComponent_C_IsLookAtRequestValid::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_IsLookAtRequestValid, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000032, "Member 'BP_CameraLookAtControllerComponent_C_IsLookAtRequestValid::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_IsLookAtRequestValid, CallFunc_BooleanAND_ReturnValue) == 0x000033, "Member 'BP_CameraLookAtControllerComponent_C_IsLookAtRequestValid::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_CameraLookAtControllerComponent.BP_CameraLookAtControllerComponent_C.IsPerformingLookAt
// 0x0002 (0x0002 - 0x0000)
struct BP_CameraLookAtControllerComponent_C_IsPerformingLookAt final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsComponentTickEnabled_ReturnValue;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraLookAtControllerComponent_C_IsPerformingLookAt) == 0x000001, "Wrong alignment on BP_CameraLookAtControllerComponent_C_IsPerformingLookAt");
static_assert(sizeof(BP_CameraLookAtControllerComponent_C_IsPerformingLookAt) == 0x000002, "Wrong size on BP_CameraLookAtControllerComponent_C_IsPerformingLookAt");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_IsPerformingLookAt, ReturnValue) == 0x000000, "Member 'BP_CameraLookAtControllerComponent_C_IsPerformingLookAt::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_IsPerformingLookAt, CallFunc_IsComponentTickEnabled_ReturnValue) == 0x000001, "Member 'BP_CameraLookAtControllerComponent_C_IsPerformingLookAt::CallFunc_IsComponentTickEnabled_ReturnValue' has a wrong offset!");

// Function BP_CameraLookAtControllerComponent.BP_CameraLookAtControllerComponent_C.OnLoaded_E108BA93448EE7FC170BF68270B157D0
// 0x0008 (0x0008 - 0x0000)
struct BP_CameraLookAtControllerComponent_C_OnLoaded_E108BA93448EE7FC170BF68270B157D0 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraLookAtControllerComponent_C_OnLoaded_E108BA93448EE7FC170BF68270B157D0) == 0x000008, "Wrong alignment on BP_CameraLookAtControllerComponent_C_OnLoaded_E108BA93448EE7FC170BF68270B157D0");
static_assert(sizeof(BP_CameraLookAtControllerComponent_C_OnLoaded_E108BA93448EE7FC170BF68270B157D0) == 0x000008, "Wrong size on BP_CameraLookAtControllerComponent_C_OnLoaded_E108BA93448EE7FC170BF68270B157D0");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_OnLoaded_E108BA93448EE7FC170BF68270B157D0, Loaded) == 0x000000, "Member 'BP_CameraLookAtControllerComponent_C_OnLoaded_E108BA93448EE7FC170BF68270B157D0::Loaded' has a wrong offset!");

// Function BP_CameraLookAtControllerComponent.BP_CameraLookAtControllerComponent_C.PrepareCameraForLookAtAndCacheValues
// 0x0068 (0x0068 - 0x0000)
struct BP_CameraLookAtControllerComponent_C_PrepareCameraForLookAtAndCacheValues final
{
public:
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UCameraComponent*                       CallFunc_GetMainCamera_MainCamera;                 // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    CallFunc_GetSpringArmMainCamera_SpringArm_MainCamera; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        K2Node_VariableSet_TransitionCurveMaxTime_ImplicitCast; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_SetFieldsInStruct_FieldOfView_8_5E1634D347F8258545020480100C80B1_ImplicitCast; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_SetFieldsInStruct_SpringArmLength_2_420985EA4F7696CF4BF027A66736A5E3_ImplicitCast; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraLookAtControllerComponent_C_PrepareCameraForLookAtAndCacheValues) == 0x000008, "Wrong alignment on BP_CameraLookAtControllerComponent_C_PrepareCameraForLookAtAndCacheValues");
static_assert(sizeof(BP_CameraLookAtControllerComponent_C_PrepareCameraForLookAtAndCacheValues) == 0x000068, "Wrong size on BP_CameraLookAtControllerComponent_C_PrepareCameraForLookAtAndCacheValues");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_PrepareCameraForLookAtAndCacheValues, CallFunc_GetController_ReturnValue) == 0x000000, "Member 'BP_CameraLookAtControllerComponent_C_PrepareCameraForLookAtAndCacheValues::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_PrepareCameraForLookAtAndCacheValues, CallFunc_GetTimeRange_MinTime) == 0x000008, "Member 'BP_CameraLookAtControllerComponent_C_PrepareCameraForLookAtAndCacheValues::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_PrepareCameraForLookAtAndCacheValues, CallFunc_GetTimeRange_MaxTime) == 0x00000C, "Member 'BP_CameraLookAtControllerComponent_C_PrepareCameraForLookAtAndCacheValues::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_PrepareCameraForLookAtAndCacheValues, CallFunc_GetControlRotation_ReturnValue) == 0x000010, "Member 'BP_CameraLookAtControllerComponent_C_PrepareCameraForLookAtAndCacheValues::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_PrepareCameraForLookAtAndCacheValues, CallFunc_GetMainCamera_MainCamera) == 0x000028, "Member 'BP_CameraLookAtControllerComponent_C_PrepareCameraForLookAtAndCacheValues::CallFunc_GetMainCamera_MainCamera' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_PrepareCameraForLookAtAndCacheValues, CallFunc_GetSpringArmMainCamera_SpringArm_MainCamera) == 0x000030, "Member 'BP_CameraLookAtControllerComponent_C_PrepareCameraForLookAtAndCacheValues::CallFunc_GetSpringArmMainCamera_SpringArm_MainCamera' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_PrepareCameraForLookAtAndCacheValues, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000038, "Member 'BP_CameraLookAtControllerComponent_C_PrepareCameraForLookAtAndCacheValues::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_PrepareCameraForLookAtAndCacheValues, K2Node_VariableSet_TransitionCurveMaxTime_ImplicitCast) == 0x000050, "Member 'BP_CameraLookAtControllerComponent_C_PrepareCameraForLookAtAndCacheValues::K2Node_VariableSet_TransitionCurveMaxTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_PrepareCameraForLookAtAndCacheValues, K2Node_SetFieldsInStruct_FieldOfView_8_5E1634D347F8258545020480100C80B1_ImplicitCast) == 0x000058, "Member 'BP_CameraLookAtControllerComponent_C_PrepareCameraForLookAtAndCacheValues::K2Node_SetFieldsInStruct_FieldOfView_8_5E1634D347F8258545020480100C80B1_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_PrepareCameraForLookAtAndCacheValues, K2Node_SetFieldsInStruct_SpringArmLength_2_420985EA4F7696CF4BF027A66736A5E3_ImplicitCast) == 0x000060, "Member 'BP_CameraLookAtControllerComponent_C_PrepareCameraForLookAtAndCacheValues::K2Node_SetFieldsInStruct_SpringArmLength_2_420985EA4F7696CF4BF027A66736A5E3_ImplicitCast' has a wrong offset!");

// Function BP_CameraLookAtControllerComponent.BP_CameraLookAtControllerComponent_C.PrepareForLookAt
// 0x0001 (0x0001 - 0x0000)
struct BP_CameraLookAtControllerComponent_C_PrepareForLookAt final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraLookAtControllerComponent_C_PrepareForLookAt) == 0x000001, "Wrong alignment on BP_CameraLookAtControllerComponent_C_PrepareForLookAt");
static_assert(sizeof(BP_CameraLookAtControllerComponent_C_PrepareForLookAt) == 0x000001, "Wrong size on BP_CameraLookAtControllerComponent_C_PrepareForLookAt");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_PrepareForLookAt, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_CameraLookAtControllerComponent_C_PrepareForLookAt::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_CameraLookAtControllerComponent.BP_CameraLookAtControllerComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_CameraLookAtControllerComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraLookAtControllerComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_CameraLookAtControllerComponent_C_ReceiveTick");
static_assert(sizeof(BP_CameraLookAtControllerComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_CameraLookAtControllerComponent_C_ReceiveTick");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_CameraLookAtControllerComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_CameraLookAtControllerComponent.BP_CameraLookAtControllerComponent_C.RequestLookAt
// 0x0030 (0x0030 - 0x0000)
struct BP_CameraLookAtControllerComponent_C_RequestLookAt final
{
public:
	struct FS_CameraLookAtRequest                 LookAtRequest_0;                                   // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraLookAtControllerComponent_C_RequestLookAt) == 0x000008, "Wrong alignment on BP_CameraLookAtControllerComponent_C_RequestLookAt");
static_assert(sizeof(BP_CameraLookAtControllerComponent_C_RequestLookAt) == 0x000030, "Wrong size on BP_CameraLookAtControllerComponent_C_RequestLookAt");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_RequestLookAt, LookAtRequest_0) == 0x000000, "Member 'BP_CameraLookAtControllerComponent_C_RequestLookAt::LookAtRequest_0' has a wrong offset!");

// Function BP_CameraLookAtControllerComponent.BP_CameraLookAtControllerComponent_C.SetCameraInputsEnable
// 0x0070 (0x0070 - 0x0000)
struct BP_CameraLookAtControllerComponent_C_SetCameraInputsEnable final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<E_jRPG_CharacterWorldCapability, bool>   K2Node_MakeMap_Map;                                // 0x0008(0x0050)()
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USpringArmComponent*                    CallFunc_GetSpringArmMainCamera_SpringArm_MainCamera; // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraLookAtControllerComponent_C_SetCameraInputsEnable) == 0x000008, "Wrong alignment on BP_CameraLookAtControllerComponent_C_SetCameraInputsEnable");
static_assert(sizeof(BP_CameraLookAtControllerComponent_C_SetCameraInputsEnable) == 0x000070, "Wrong size on BP_CameraLookAtControllerComponent_C_SetCameraInputsEnable");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_SetCameraInputsEnable, Enable) == 0x000000, "Member 'BP_CameraLookAtControllerComponent_C_SetCameraInputsEnable::Enable' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_SetCameraInputsEnable, K2Node_MakeMap_Map) == 0x000008, "Member 'BP_CameraLookAtControllerComponent_C_SetCameraInputsEnable::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_SetCameraInputsEnable, CallFunc_GetController_ReturnValue) == 0x000058, "Member 'BP_CameraLookAtControllerComponent_C_SetCameraInputsEnable::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_SetCameraInputsEnable, CallFunc_Not_PreBool_ReturnValue) == 0x000060, "Member 'BP_CameraLookAtControllerComponent_C_SetCameraInputsEnable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_SetCameraInputsEnable, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000061, "Member 'BP_CameraLookAtControllerComponent_C_SetCameraInputsEnable::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_SetCameraInputsEnable, CallFunc_GetSpringArmMainCamera_SpringArm_MainCamera) == 0x000068, "Member 'BP_CameraLookAtControllerComponent_C_SetCameraInputsEnable::CallFunc_GetSpringArmMainCamera_SpringArm_MainCamera' has a wrong offset!");

// Function BP_CameraLookAtControllerComponent.BP_CameraLookAtControllerComponent_C.UpdateAccumulatedTime
// 0x0018 (0x0018 - 0x0000)
struct BP_CameraLookAtControllerComponent_C_UpdateAccumulatedTime final
{
public:
	double                                        DeltaSeconds;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_Alpha;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraLookAtControllerComponent_C_UpdateAccumulatedTime) == 0x000008, "Wrong alignment on BP_CameraLookAtControllerComponent_C_UpdateAccumulatedTime");
static_assert(sizeof(BP_CameraLookAtControllerComponent_C_UpdateAccumulatedTime) == 0x000018, "Wrong size on BP_CameraLookAtControllerComponent_C_UpdateAccumulatedTime");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_UpdateAccumulatedTime, DeltaSeconds) == 0x000000, "Member 'BP_CameraLookAtControllerComponent_C_UpdateAccumulatedTime::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_UpdateAccumulatedTime, local_Alpha) == 0x000008, "Member 'BP_CameraLookAtControllerComponent_C_UpdateAccumulatedTime::local_Alpha' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_UpdateAccumulatedTime, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_CameraLookAtControllerComponent_C_UpdateAccumulatedTime::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_CameraLookAtControllerComponent.BP_CameraLookAtControllerComponent_C.UpdateLookAt
// 0x0010 (0x0010 - 0x0000)
struct BP_CameraLookAtControllerComponent_C_UpdateLookAt final
{
public:
	double                                        DeltaSeconds;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraLookAtControllerComponent_C_UpdateLookAt) == 0x000008, "Wrong alignment on BP_CameraLookAtControllerComponent_C_UpdateLookAt");
static_assert(sizeof(BP_CameraLookAtControllerComponent_C_UpdateLookAt) == 0x000010, "Wrong size on BP_CameraLookAtControllerComponent_C_UpdateLookAt");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_UpdateLookAt, DeltaSeconds) == 0x000000, "Member 'BP_CameraLookAtControllerComponent_C_UpdateLookAt::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_UpdateLookAt, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'BP_CameraLookAtControllerComponent_C_UpdateLookAt::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_CameraLookAtControllerComponent.BP_CameraLookAtControllerComponent_C.UpdateLookAtRotation
// 0x0178 (0x0178 - 0x0000)
struct BP_CameraLookAtControllerComponent_C_UpdateLookAtRotation final
{
public:
	double                                        Alpha;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    CallFunc_GetSpringArmMainCamera_SpringArm_MainCamera; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    CallFunc_GetSpringArmMainCamera_SpringArm_MainCamera_1; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0078(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_RLerp_Alpha_ImplicitCast;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraLookAtControllerComponent_C_UpdateLookAtRotation) == 0x000008, "Wrong alignment on BP_CameraLookAtControllerComponent_C_UpdateLookAtRotation");
static_assert(sizeof(BP_CameraLookAtControllerComponent_C_UpdateLookAtRotation) == 0x000178, "Wrong size on BP_CameraLookAtControllerComponent_C_UpdateLookAtRotation");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_UpdateLookAtRotation, Alpha) == 0x000000, "Member 'BP_CameraLookAtControllerComponent_C_UpdateLookAtRotation::Alpha' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_UpdateLookAtRotation, CallFunc_GetSpringArmMainCamera_SpringArm_MainCamera) == 0x000008, "Member 'BP_CameraLookAtControllerComponent_C_UpdateLookAtRotation::CallFunc_GetSpringArmMainCamera_SpringArm_MainCamera' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_UpdateLookAtRotation, CallFunc_GetSpringArmMainCamera_SpringArm_MainCamera_1) == 0x000010, "Member 'BP_CameraLookAtControllerComponent_C_UpdateLookAtRotation::CallFunc_GetSpringArmMainCamera_SpringArm_MainCamera_1' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_UpdateLookAtRotation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_CameraLookAtControllerComponent_C_UpdateLookAtRotation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_UpdateLookAtRotation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BP_CameraLookAtControllerComponent_C_UpdateLookAtRotation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_UpdateLookAtRotation, CallFunc_FindLookAtRotation_ReturnValue) == 0x000048, "Member 'BP_CameraLookAtControllerComponent_C_UpdateLookAtRotation::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_UpdateLookAtRotation, CallFunc_RLerp_ReturnValue) == 0x000060, "Member 'BP_CameraLookAtControllerComponent_C_UpdateLookAtRotation::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_UpdateLookAtRotation, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000078, "Member 'BP_CameraLookAtControllerComponent_C_UpdateLookAtRotation::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_UpdateLookAtRotation, CallFunc_RLerp_Alpha_ImplicitCast) == 0x000170, "Member 'BP_CameraLookAtControllerComponent_C_UpdateLookAtRotation::CallFunc_RLerp_Alpha_ImplicitCast' has a wrong offset!");

// Function BP_CameraLookAtControllerComponent.BP_CameraLookAtControllerComponent_C.UpdateLookAtTransition
// 0x0058 (0x0058 - 0x0000)
struct BP_CameraLookAtControllerComponent_C_UpdateLookAtTransition final
{
public:
	double                                        local_Alpha;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ComputeAlpha_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CallFunc_GetMainCamera_MainCamera;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    CallFunc_GetSpringArmMainCamera_SpringArm_MainCamera; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_TargetArmLength_ImplicitCast;   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFieldOfView_InFieldOfView_ImplicitCast; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraLookAtControllerComponent_C_UpdateLookAtTransition) == 0x000008, "Wrong alignment on BP_CameraLookAtControllerComponent_C_UpdateLookAtTransition");
static_assert(sizeof(BP_CameraLookAtControllerComponent_C_UpdateLookAtTransition) == 0x000058, "Wrong size on BP_CameraLookAtControllerComponent_C_UpdateLookAtTransition");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_UpdateLookAtTransition, local_Alpha) == 0x000000, "Member 'BP_CameraLookAtControllerComponent_C_UpdateLookAtTransition::local_Alpha' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_UpdateLookAtTransition, CallFunc_ComputeAlpha_ReturnValue) == 0x000008, "Member 'BP_CameraLookAtControllerComponent_C_UpdateLookAtTransition::CallFunc_ComputeAlpha_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_UpdateLookAtTransition, CallFunc_GetMainCamera_MainCamera) == 0x000010, "Member 'BP_CameraLookAtControllerComponent_C_UpdateLookAtTransition::CallFunc_GetMainCamera_MainCamera' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_UpdateLookAtTransition, CallFunc_GetSpringArmMainCamera_SpringArm_MainCamera) == 0x000018, "Member 'BP_CameraLookAtControllerComponent_C_UpdateLookAtTransition::CallFunc_GetSpringArmMainCamera_SpringArm_MainCamera' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_UpdateLookAtTransition, CallFunc_Lerp_ReturnValue) == 0x000020, "Member 'BP_CameraLookAtControllerComponent_C_UpdateLookAtTransition::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_UpdateLookAtTransition, CallFunc_Lerp_ReturnValue_1) == 0x000028, "Member 'BP_CameraLookAtControllerComponent_C_UpdateLookAtTransition::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_UpdateLookAtTransition, CallFunc_VLerp_ReturnValue) == 0x000030, "Member 'BP_CameraLookAtControllerComponent_C_UpdateLookAtTransition::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_UpdateLookAtTransition, CallFunc_VLerp_Alpha_ImplicitCast) == 0x000048, "Member 'BP_CameraLookAtControllerComponent_C_UpdateLookAtTransition::CallFunc_VLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_UpdateLookAtTransition, K2Node_VariableSet_TargetArmLength_ImplicitCast) == 0x00004C, "Member 'BP_CameraLookAtControllerComponent_C_UpdateLookAtTransition::K2Node_VariableSet_TargetArmLength_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_UpdateLookAtTransition, CallFunc_SetFieldOfView_InFieldOfView_ImplicitCast) == 0x000050, "Member 'BP_CameraLookAtControllerComponent_C_UpdateLookAtTransition::CallFunc_SetFieldOfView_InFieldOfView_ImplicitCast' has a wrong offset!");

// Function BP_CameraLookAtControllerComponent.BP_CameraLookAtControllerComponent_C.UpdateLookAtUpdateStep
// 0x0010 (0x0010 - 0x0000)
struct BP_CameraLookAtControllerComponent_C_UpdateLookAtUpdateStep final
{
public:
	double                                        local_Alpha;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraLookAtControllerComponent_C_UpdateLookAtUpdateStep) == 0x000008, "Wrong alignment on BP_CameraLookAtControllerComponent_C_UpdateLookAtUpdateStep");
static_assert(sizeof(BP_CameraLookAtControllerComponent_C_UpdateLookAtUpdateStep) == 0x000010, "Wrong size on BP_CameraLookAtControllerComponent_C_UpdateLookAtUpdateStep");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_UpdateLookAtUpdateStep, local_Alpha) == 0x000000, "Member 'BP_CameraLookAtControllerComponent_C_UpdateLookAtUpdateStep::local_Alpha' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_UpdateLookAtUpdateStep, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_CameraLookAtControllerComponent_C_UpdateLookAtUpdateStep::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_UpdateLookAtUpdateStep, K2Node_SwitchEnum_CmpSuccess) == 0x000009, "Member 'BP_CameraLookAtControllerComponent_C_UpdateLookAtUpdateStep::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_UpdateLookAtUpdateStep, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x00000A, "Member 'BP_CameraLookAtControllerComponent_C_UpdateLookAtUpdateStep::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraLookAtControllerComponent_C_UpdateLookAtUpdateStep, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x00000B, "Member 'BP_CameraLookAtControllerComponent_C_UpdateLookAtUpdateStep::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");

}

