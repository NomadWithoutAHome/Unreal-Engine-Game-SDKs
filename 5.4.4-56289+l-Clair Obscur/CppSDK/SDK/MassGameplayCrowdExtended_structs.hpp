#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MassGameplayCrowdExtended

#include "Basic.hpp"

#include "MassEntity_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "MassSpawner_structs.hpp"


namespace SDK
{

// Enum MassGameplayCrowdExtended.ECrowdPlacementType
// NumValues: 0x0004
enum class ECrowdPlacementType : uint8
{
	Undefined                                = 0,
	Body                                     = 1,
	Hair                                     = 2,
	ECrowdPlacementType_MAX                  = 3,
};

// ScriptStruct MassGameplayCrowdExtended.ColorMasksVariationFragment
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FColorMasksVariationFragment final : public FMassFragment
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FColorMasksVariationFragment) == 0x000008, "Wrong alignment on FColorMasksVariationFragment");
static_assert(sizeof(FColorMasksVariationFragment) == 0x000010, "Wrong size on FColorMasksVariationFragment");

// ScriptStruct MassGameplayCrowdExtended.ScalarsVariationFragment
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FScalarsVariationFragment final : public FMassFragment
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FScalarsVariationFragment) == 0x000008, "Wrong alignment on FScalarsVariationFragment");
static_assert(sizeof(FScalarsVariationFragment) == 0x000010, "Wrong size on FScalarsVariationFragment");

// ScriptStruct MassGameplayCrowdExtended.MassEntitySpawnVisualData
// 0x00A0 (0x00A0 - 0x0000)
struct FMassEntitySpawnVisualData final
{
public:
	TMap<class FName, struct FLinearColor>        VisualMasks;                                       // 0x0000(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<class FName, float>                      VisualScalars;                                     // 0x0050(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMassEntitySpawnVisualData) == 0x000008, "Wrong alignment on FMassEntitySpawnVisualData");
static_assert(sizeof(FMassEntitySpawnVisualData) == 0x0000A0, "Wrong size on FMassEntitySpawnVisualData");
static_assert(offsetof(FMassEntitySpawnVisualData, VisualMasks) == 0x000000, "Member 'FMassEntitySpawnVisualData::VisualMasks' has a wrong offset!");
static_assert(offsetof(FMassEntitySpawnVisualData, VisualScalars) == 0x000050, "Member 'FMassEntitySpawnVisualData::VisualScalars' has a wrong offset!");

// ScriptStruct MassGameplayCrowdExtended.MassEntitySpawnLinkData
// 0x0028 (0x0028 - 0x0000)
struct FMassEntitySpawnLinkData final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ParentLink;                                        // 0x0008(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ChildsLink;                                        // 0x0018(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMassEntitySpawnLinkData) == 0x000008, "Wrong alignment on FMassEntitySpawnLinkData");
static_assert(sizeof(FMassEntitySpawnLinkData) == 0x000028, "Wrong size on FMassEntitySpawnLinkData");
static_assert(offsetof(FMassEntitySpawnLinkData, ParentLink) == 0x000008, "Member 'FMassEntitySpawnLinkData::ParentLink' has a wrong offset!");
static_assert(offsetof(FMassEntitySpawnLinkData, ChildsLink) == 0x000018, "Member 'FMassEntitySpawnLinkData::ChildsLink' has a wrong offset!");

// ScriptStruct MassGameplayCrowdExtended.MassEntitySpawnData
// 0x0138 (0x0140 - 0x0008)
struct FMassEntitySpawnData final : public FTableRowBase
{
public:
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SpawnTransform;                                    // 0x0010(0x0060)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMassEntitySpawnVisualData             VisualData;                                        // 0x0070(0x00A0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FMassEntitySpawnLinkData               LinkData;                                          // 0x0110(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         Pad_138[0x8];                                      // 0x0138(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMassEntitySpawnData) == 0x000010, "Wrong alignment on FMassEntitySpawnData");
static_assert(sizeof(FMassEntitySpawnData) == 0x000140, "Wrong size on FMassEntitySpawnData");
static_assert(offsetof(FMassEntitySpawnData, SpawnTransform) == 0x000010, "Member 'FMassEntitySpawnData::SpawnTransform' has a wrong offset!");
static_assert(offsetof(FMassEntitySpawnData, VisualData) == 0x000070, "Member 'FMassEntitySpawnData::VisualData' has a wrong offset!");
static_assert(offsetof(FMassEntitySpawnData, LinkData) == 0x000110, "Member 'FMassEntitySpawnData::LinkData' has a wrong offset!");

// ScriptStruct MassGameplayCrowdExtended.MassTransformsSpawnDataDeterminist
// 0x0020 (0x0038 - 0x0018)
struct FMassTransformsSpawnDataDeterminist final : public FMassTransformsSpawnData
{
public:
	uint8                                         Pad_18[0x20];                                      // 0x0018(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMassTransformsSpawnDataDeterminist) == 0x000008, "Wrong alignment on FMassTransformsSpawnDataDeterminist");
static_assert(sizeof(FMassTransformsSpawnDataDeterminist) == 0x000038, "Wrong size on FMassTransformsSpawnDataDeterminist");

}

