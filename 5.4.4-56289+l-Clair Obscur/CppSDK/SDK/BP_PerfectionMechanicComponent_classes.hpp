#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PerfectionMechanicComponent

#include "Basic.hpp"

#include "EPerfectionReason_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_PerfectionUpdateType_structs.hpp"
#include "E_Perfection_Ranks_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PerfectionMechanicComponent.BP_PerfectionMechanicComponent_C
// 0x01E8 (0x0288 - 0x00A0)
class UBP_PerfectionMechanicComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         Perfection;                                        // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_UniqueMechanic_Perfection_C*       PerfectionUI;                                      // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(E_PerfectionUpdateType PerfectionChangeType, int32 PerfectionValue, EPerfectionReason PerfectionChangeReason)> OnPerfectionChange; // 0x00B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMap<int32, E_Perfection_Ranks>               RankMapping;                                       // 0x00C8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<E_Perfection_Ranks, int32>               RankMapping_Inverted;                              // 0x0118(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	E_Perfection_Ranks                            CurrentRank;                                       // 0x0168(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(E_Perfection_Ranks NewRank)> OnRankChangedUp;                      // 0x0170(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(E_Perfection_Ranks NewRank)> OnRankChangedDown;                    // 0x0180(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<E_Perfection_Ranks>                    RankOrder;                                         // 0x0190(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         MaximumPerfection;                                 // 0x01A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<E_Perfection_Ranks, double>              PerfectionFinalDamageMultipliers;                  // 0x01A8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EPerfectionReason, int32>                PerfectionToAdd;                                   // 0x01F8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<EPerfectionReason>                     PerfectionLossReasons;                             // 0x0248(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<EPerfectionReason>                     PerfectionGainReasons;                             // 0x0258(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         PerfectionMultiplier;                              // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UBP_BattleDamagePerfectionChangeEvent_C* PerfectionChangeEvent)> OnBattleDamagePerfectionChange; // 0x0270(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          LoseOneRankAtATime;                                // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddPerfection(int32 PerfectionToAdd_0, EPerfectionReason PerfectionChangeReason);
	void ApplyPerfectionManagerBuff();
	void CreatePortraitWidget(class UUserWidget** CreatedUserWidget, int32* SlotIndex);
	void ExecuteUbergraph_BP_PerfectionMechanicComponent(int32 EntryPoint);
	void Get_Rank_from_Perfection(int32 PerfectionInput, E_Perfection_Ranks* Value);
	int32 GetMaximumPerfectionForRank(const E_Perfection_Ranks& Rank);
	int32 GetMinimumPerfectionForRank(const E_Perfection_Ranks& Rank);
	void GetNextRank(const E_Perfection_Ranks& Rank, bool* IsValid, E_Perfection_Ranks* Output);
	void HideUI();
	void IncreaseOrDecreaseRank(int32 NbRanks, EPerfectionReason Reason, E_Perfection_Ranks* NewRank);
	void LoseOneRankAtATimeOnHit();
	void On_DodgeSuccessful(class ABP_jRPG_Character_Battle_Base_C* Character, class ABP_jRPG_Character_Battle_Base_C* Enemy);
	void OnDeath();
	void OnParrySuccessful(class ABP_jRPG_Character_Battle_Base_C* Character, class ABP_jRPG_Character_Battle_Base_C* Enemy);
	void OnRankDown(E_Perfection_Ranks NewRank);
	void OnRankUp(E_Perfection_Ranks NewRank);
	void OnTurnEnd();
	void OnTurnStart();
	void OverridePerfectionGainReasons(TArray<EPerfectionReason>& NewGainPerfectionReasons);
	void OverridePerfectionLossReasons(TArray<EPerfectionReason>& NewReasons);
	void OverridePerfectionMapping(const TMap<E_Perfection_Ranks, int32>& NewMap);
	void OverridePerfectionToAdd(EPerfectionReason ValueToChange, int32 NewPerfection);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void RemoveAllPerfection();
	void RemoveXPerfection(int32 PerfectionToRemove, EPerfectionReason PerfectionReason);
	void ResetMechaState(EPerfectionReason Reason);
	void Set_Perfection_Clamped(int32 NewPerfection, E_PerfectionUpdateType UpdatePerfectionType, EPerfectionReason PerfectionChangeReason);
	void SetSpecificRank(E_Perfection_Ranks Rank, EPerfectionReason Reason);
	void TryPlayPerfectionTutorial();
	void TryRemoveMechanicWidget();
	void TryUnlockAchievementVersoPerfection(E_Perfection_Ranks CurrentRank_0);
	void UpdatePerfectionFinalDamageMultipliers(double RankDMultiplier, double RankCMultiplier, double RankBMultiplier, double RankAMultiplier, double RankSMultiplier);
	void UpdateRank();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PerfectionMechanicComponent_C">();
	}
	static class UBP_PerfectionMechanicComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PerfectionMechanicComponent_C>();
	}
};
static_assert(alignof(UBP_PerfectionMechanicComponent_C) == 0x000008, "Wrong alignment on UBP_PerfectionMechanicComponent_C");
static_assert(sizeof(UBP_PerfectionMechanicComponent_C) == 0x000288, "Wrong size on UBP_PerfectionMechanicComponent_C");
static_assert(offsetof(UBP_PerfectionMechanicComponent_C, UberGraphFrame) == 0x0000A0, "Member 'UBP_PerfectionMechanicComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_PerfectionMechanicComponent_C, Perfection) == 0x0000A8, "Member 'UBP_PerfectionMechanicComponent_C::Perfection' has a wrong offset!");
static_assert(offsetof(UBP_PerfectionMechanicComponent_C, PerfectionUI) == 0x0000B0, "Member 'UBP_PerfectionMechanicComponent_C::PerfectionUI' has a wrong offset!");
static_assert(offsetof(UBP_PerfectionMechanicComponent_C, OnPerfectionChange) == 0x0000B8, "Member 'UBP_PerfectionMechanicComponent_C::OnPerfectionChange' has a wrong offset!");
static_assert(offsetof(UBP_PerfectionMechanicComponent_C, RankMapping) == 0x0000C8, "Member 'UBP_PerfectionMechanicComponent_C::RankMapping' has a wrong offset!");
static_assert(offsetof(UBP_PerfectionMechanicComponent_C, RankMapping_Inverted) == 0x000118, "Member 'UBP_PerfectionMechanicComponent_C::RankMapping_Inverted' has a wrong offset!");
static_assert(offsetof(UBP_PerfectionMechanicComponent_C, CurrentRank) == 0x000168, "Member 'UBP_PerfectionMechanicComponent_C::CurrentRank' has a wrong offset!");
static_assert(offsetof(UBP_PerfectionMechanicComponent_C, OnRankChangedUp) == 0x000170, "Member 'UBP_PerfectionMechanicComponent_C::OnRankChangedUp' has a wrong offset!");
static_assert(offsetof(UBP_PerfectionMechanicComponent_C, OnRankChangedDown) == 0x000180, "Member 'UBP_PerfectionMechanicComponent_C::OnRankChangedDown' has a wrong offset!");
static_assert(offsetof(UBP_PerfectionMechanicComponent_C, RankOrder) == 0x000190, "Member 'UBP_PerfectionMechanicComponent_C::RankOrder' has a wrong offset!");
static_assert(offsetof(UBP_PerfectionMechanicComponent_C, MaximumPerfection) == 0x0001A0, "Member 'UBP_PerfectionMechanicComponent_C::MaximumPerfection' has a wrong offset!");
static_assert(offsetof(UBP_PerfectionMechanicComponent_C, PerfectionFinalDamageMultipliers) == 0x0001A8, "Member 'UBP_PerfectionMechanicComponent_C::PerfectionFinalDamageMultipliers' has a wrong offset!");
static_assert(offsetof(UBP_PerfectionMechanicComponent_C, PerfectionToAdd) == 0x0001F8, "Member 'UBP_PerfectionMechanicComponent_C::PerfectionToAdd' has a wrong offset!");
static_assert(offsetof(UBP_PerfectionMechanicComponent_C, PerfectionLossReasons) == 0x000248, "Member 'UBP_PerfectionMechanicComponent_C::PerfectionLossReasons' has a wrong offset!");
static_assert(offsetof(UBP_PerfectionMechanicComponent_C, PerfectionGainReasons) == 0x000258, "Member 'UBP_PerfectionMechanicComponent_C::PerfectionGainReasons' has a wrong offset!");
static_assert(offsetof(UBP_PerfectionMechanicComponent_C, PerfectionMultiplier) == 0x000268, "Member 'UBP_PerfectionMechanicComponent_C::PerfectionMultiplier' has a wrong offset!");
static_assert(offsetof(UBP_PerfectionMechanicComponent_C, OnBattleDamagePerfectionChange) == 0x000270, "Member 'UBP_PerfectionMechanicComponent_C::OnBattleDamagePerfectionChange' has a wrong offset!");
static_assert(offsetof(UBP_PerfectionMechanicComponent_C, LoseOneRankAtATime) == 0x000280, "Member 'UBP_PerfectionMechanicComponent_C::LoseOneRankAtATime' has a wrong offset!");

}

