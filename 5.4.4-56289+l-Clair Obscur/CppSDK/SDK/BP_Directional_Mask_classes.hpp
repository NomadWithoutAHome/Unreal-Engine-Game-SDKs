#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Directional_Mask

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Directional_Mask.BP_Directional_Mask_C
// 0x0048 (0x02D8 - 0x0290)
class ABP_Directional_Mask_C final : public AActor
{
public:
	class UBoxComponent*                          Box;                                               // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               DirectionalMask_SceneCapture2D;                    // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               LightFunctionDynamic;                              // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable_Directional_Mask;                           // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADirectionalLight*                      DirectionalLight;                                  // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Directional_Mask_Texture;                          // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        MaskAreaSize;                                      // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DebugBoxHeight;                                    // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void UpdateMask();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Directional_Mask_C">();
	}
	static class ABP_Directional_Mask_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Directional_Mask_C>();
	}
};
static_assert(alignof(ABP_Directional_Mask_C) == 0x000008, "Wrong alignment on ABP_Directional_Mask_C");
static_assert(sizeof(ABP_Directional_Mask_C) == 0x0002D8, "Wrong size on ABP_Directional_Mask_C");
static_assert(offsetof(ABP_Directional_Mask_C, Box) == 0x000290, "Member 'ABP_Directional_Mask_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_Directional_Mask_C, DirectionalMask_SceneCapture2D) == 0x000298, "Member 'ABP_Directional_Mask_C::DirectionalMask_SceneCapture2D' has a wrong offset!");
static_assert(offsetof(ABP_Directional_Mask_C, DefaultSceneRoot) == 0x0002A0, "Member 'ABP_Directional_Mask_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Directional_Mask_C, LightFunctionDynamic) == 0x0002A8, "Member 'ABP_Directional_Mask_C::LightFunctionDynamic' has a wrong offset!");
static_assert(offsetof(ABP_Directional_Mask_C, Enable_Directional_Mask) == 0x0002B0, "Member 'ABP_Directional_Mask_C::Enable_Directional_Mask' has a wrong offset!");
static_assert(offsetof(ABP_Directional_Mask_C, DirectionalLight) == 0x0002B8, "Member 'ABP_Directional_Mask_C::DirectionalLight' has a wrong offset!");
static_assert(offsetof(ABP_Directional_Mask_C, Directional_Mask_Texture) == 0x0002C0, "Member 'ABP_Directional_Mask_C::Directional_Mask_Texture' has a wrong offset!");
static_assert(offsetof(ABP_Directional_Mask_C, MaskAreaSize) == 0x0002C8, "Member 'ABP_Directional_Mask_C::MaskAreaSize' has a wrong offset!");
static_assert(offsetof(ABP_Directional_Mask_C, DebugBoxHeight) == 0x0002D0, "Member 'ABP_Directional_Mask_C::DebugBoxHeight' has a wrong offset!");

}

