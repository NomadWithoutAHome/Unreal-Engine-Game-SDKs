#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AN_ExploBreath

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AN_ExploBreath.AN_ExploBreath_C.ResetHeartRate
// 0x0020 (0x0020 - 0x0000)
struct AN_ExploBreath_C_ResetHeartRate final
{
public:
	class ABP_jRPG_Character_World_C*             Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 String;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AN_ExploBreath_C_ResetHeartRate) == 0x000008, "Wrong alignment on AN_ExploBreath_C_ResetHeartRate");
static_assert(sizeof(AN_ExploBreath_C_ResetHeartRate) == 0x000020, "Wrong size on AN_ExploBreath_C_ResetHeartRate");
static_assert(offsetof(AN_ExploBreath_C_ResetHeartRate, Target) == 0x000000, "Member 'AN_ExploBreath_C_ResetHeartRate::Target' has a wrong offset!");
static_assert(offsetof(AN_ExploBreath_C_ResetHeartRate, String) == 0x000008, "Member 'AN_ExploBreath_C_ResetHeartRate::String' has a wrong offset!");
static_assert(offsetof(AN_ExploBreath_C_ResetHeartRate, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000018, "Member 'AN_ExploBreath_C_ResetHeartRate::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");

// Function AN_ExploBreath.AN_ExploBreath_C.Received_Notify
// 0x0120 (0x0120 - 0x0000)
struct AN_ExploBreath_C_Received_Notify final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Animation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAnimNotifyEventReference              EventReference;                                    // 0x0010(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MaxClamp;                                          // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_World_C*             K2Node_DynamicCast_AsBP_J_RPG_Character_World;     // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AudioCharacter_GetComponents_C> K2Node_DynamicCast_AsBPI_Audio_Character_Get_Components; // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_GetAudioComponentByType_AudioComponent;   // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAudioParameterControllerInterface> CallFunc_SetFloatParameter_self_CastInput; // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IAudioParameterControllerInterface> CallFunc_SetTriggerParameter_self_CastInput; // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast;   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AN_ExploBreath_C_Received_Notify) == 0x000008, "Wrong alignment on AN_ExploBreath_C_Received_Notify");
static_assert(sizeof(AN_ExploBreath_C_Received_Notify) == 0x000120, "Wrong size on AN_ExploBreath_C_Received_Notify");
static_assert(offsetof(AN_ExploBreath_C_Received_Notify, MeshComp) == 0x000000, "Member 'AN_ExploBreath_C_Received_Notify::MeshComp' has a wrong offset!");
static_assert(offsetof(AN_ExploBreath_C_Received_Notify, Animation) == 0x000008, "Member 'AN_ExploBreath_C_Received_Notify::Animation' has a wrong offset!");
static_assert(offsetof(AN_ExploBreath_C_Received_Notify, EventReference) == 0x000010, "Member 'AN_ExploBreath_C_Received_Notify::EventReference' has a wrong offset!");
static_assert(offsetof(AN_ExploBreath_C_Received_Notify, ReturnValue) == 0x000040, "Member 'AN_ExploBreath_C_Received_Notify::ReturnValue' has a wrong offset!");
static_assert(offsetof(AN_ExploBreath_C_Received_Notify, MaxClamp) == 0x000048, "Member 'AN_ExploBreath_C_Received_Notify::MaxClamp' has a wrong offset!");
static_assert(offsetof(AN_ExploBreath_C_Received_Notify, CallFunc_GetOwner_ReturnValue) == 0x000050, "Member 'AN_ExploBreath_C_Received_Notify::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AN_ExploBreath_C_Received_Notify, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000058, "Member 'AN_ExploBreath_C_Received_Notify::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AN_ExploBreath_C_Received_Notify, K2Node_DynamicCast_AsBP_J_RPG_Character_World) == 0x000068, "Member 'AN_ExploBreath_C_Received_Notify::K2Node_DynamicCast_AsBP_J_RPG_Character_World' has a wrong offset!");
static_assert(offsetof(AN_ExploBreath_C_Received_Notify, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'AN_ExploBreath_C_Received_Notify::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AN_ExploBreath_C_Received_Notify, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000071, "Member 'AN_ExploBreath_C_Received_Notify::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(AN_ExploBreath_C_Received_Notify, K2Node_DynamicCast_AsBPI_Audio_Character_Get_Components) == 0x000078, "Member 'AN_ExploBreath_C_Received_Notify::K2Node_DynamicCast_AsBPI_Audio_Character_Get_Components' has a wrong offset!");
static_assert(offsetof(AN_ExploBreath_C_Received_Notify, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'AN_ExploBreath_C_Received_Notify::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AN_ExploBreath_C_Received_Notify, CallFunc_GetVelocity_ReturnValue) == 0x000090, "Member 'AN_ExploBreath_C_Received_Notify::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(AN_ExploBreath_C_Received_Notify, CallFunc_GetAudioComponentByType_AudioComponent) == 0x0000A8, "Member 'AN_ExploBreath_C_Received_Notify::CallFunc_GetAudioComponentByType_AudioComponent' has a wrong offset!");
static_assert(offsetof(AN_ExploBreath_C_Received_Notify, CallFunc_VSize_ReturnValue) == 0x0000B0, "Member 'AN_ExploBreath_C_Received_Notify::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(AN_ExploBreath_C_Received_Notify, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'AN_ExploBreath_C_Received_Notify::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AN_ExploBreath_C_Received_Notify, CallFunc_SetFloatParameter_self_CastInput) == 0x0000C0, "Member 'AN_ExploBreath_C_Received_Notify::CallFunc_SetFloatParameter_self_CastInput' has a wrong offset!");
static_assert(offsetof(AN_ExploBreath_C_Received_Notify, CallFunc_BooleanAND_ReturnValue) == 0x0000D0, "Member 'AN_ExploBreath_C_Received_Notify::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AN_ExploBreath_C_Received_Notify, CallFunc_IsValid_ReturnValue) == 0x0000D1, "Member 'AN_ExploBreath_C_Received_Notify::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AN_ExploBreath_C_Received_Notify, CallFunc_IsValid_ReturnValue_1) == 0x0000D2, "Member 'AN_ExploBreath_C_Received_Notify::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AN_ExploBreath_C_Received_Notify, CallFunc_BooleanAND_ReturnValue_1) == 0x0000D3, "Member 'AN_ExploBreath_C_Received_Notify::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AN_ExploBreath_C_Received_Notify, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'AN_ExploBreath_C_Received_Notify::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AN_ExploBreath_C_Received_Notify, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x0000E0, "Member 'AN_ExploBreath_C_Received_Notify::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AN_ExploBreath_C_Received_Notify, CallFunc_FClamp_ReturnValue) == 0x0000F0, "Member 'AN_ExploBreath_C_Received_Notify::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AN_ExploBreath_C_Received_Notify, CallFunc_Conv_StringToName_ReturnValue) == 0x0000F8, "Member 'AN_ExploBreath_C_Received_Notify::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AN_ExploBreath_C_Received_Notify, CallFunc_SetTriggerParameter_self_CastInput) == 0x000100, "Member 'AN_ExploBreath_C_Received_Notify::CallFunc_SetTriggerParameter_self_CastInput' has a wrong offset!");
static_assert(offsetof(AN_ExploBreath_C_Received_Notify, CallFunc_SetFloatParameter_InFloat_ImplicitCast) == 0x000110, "Member 'AN_ExploBreath_C_Received_Notify::CallFunc_SetFloatParameter_InFloat_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AN_ExploBreath_C_Received_Notify, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000118, "Member 'AN_ExploBreath_C_Received_Notify::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");

}

