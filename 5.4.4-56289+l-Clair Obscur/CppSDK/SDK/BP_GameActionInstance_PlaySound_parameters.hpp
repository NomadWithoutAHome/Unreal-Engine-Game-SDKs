#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameActionInstance_PlaySound

#include "Basic.hpp"

#include "S_SpawnSoundParameters_structs.hpp"
#include "S_PlaySoundParameters_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_GameActionInstance_PlaySound.BP_GameActionInstance_PlaySound_C.PlaySoundAttachedToPlayer
// 0x00C0 (0x00C0 - 0x0000)
struct BP_GameActionInstance_PlaySound_C_PlaySoundAttachedToPlayer final
{
public:
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_PlaySoundParameters                 CallFunc_GetPlaySoundParameters_PlaySoundParameters; // 0x0008(0x0098)(HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SpawnSoundAttached_VolumeMultiplier_ImplicitCast; // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SpawnSoundAttached_PitchMultiplier_ImplicitCast; // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SpawnSoundAttached_StartTime_ImplicitCast; // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_PlaySound_C_PlaySoundAttachedToPlayer) == 0x000008, "Wrong alignment on BP_GameActionInstance_PlaySound_C_PlaySoundAttachedToPlayer");
static_assert(sizeof(BP_GameActionInstance_PlaySound_C_PlaySoundAttachedToPlayer) == 0x0000C0, "Wrong size on BP_GameActionInstance_PlaySound_C_PlaySoundAttachedToPlayer");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_PlaySoundAttachedToPlayer, CallFunc_GetPlayerPawn_ReturnValue) == 0x000000, "Member 'BP_GameActionInstance_PlaySound_C_PlaySoundAttachedToPlayer::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_PlaySoundAttachedToPlayer, CallFunc_GetPlaySoundParameters_PlaySoundParameters) == 0x000008, "Member 'BP_GameActionInstance_PlaySound_C_PlaySoundAttachedToPlayer::CallFunc_GetPlaySoundParameters_PlaySoundParameters' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_PlaySoundAttachedToPlayer, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0000A0, "Member 'BP_GameActionInstance_PlaySound_C_PlaySoundAttachedToPlayer::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_PlaySoundAttachedToPlayer, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0000A8, "Member 'BP_GameActionInstance_PlaySound_C_PlaySoundAttachedToPlayer::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_PlaySoundAttachedToPlayer, CallFunc_SpawnSoundAttached_VolumeMultiplier_ImplicitCast) == 0x0000B0, "Member 'BP_GameActionInstance_PlaySound_C_PlaySoundAttachedToPlayer::CallFunc_SpawnSoundAttached_VolumeMultiplier_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_PlaySoundAttachedToPlayer, CallFunc_SpawnSoundAttached_PitchMultiplier_ImplicitCast) == 0x0000B4, "Member 'BP_GameActionInstance_PlaySound_C_PlaySoundAttachedToPlayer::CallFunc_SpawnSoundAttached_PitchMultiplier_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_PlaySoundAttachedToPlayer, CallFunc_SpawnSoundAttached_StartTime_ImplicitCast) == 0x0000B8, "Member 'BP_GameActionInstance_PlaySound_C_PlaySoundAttachedToPlayer::CallFunc_SpawnSoundAttached_StartTime_ImplicitCast' has a wrong offset!");

// Function BP_GameActionInstance_PlaySound.BP_GameActionInstance_PlaySound_C.PlaySoundAtLocation
// 0x00E0 (0x00E0 - 0x0000)
struct BP_GameActionInstance_PlaySound_C_PlaySoundAtLocation final
{
public:
	struct FS_PlaySoundParameters                 CallFunc_GetPlaySoundParameters_PlaySoundParameters; // 0x0000(0x0098)(HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSpawnLocationAndRoation_Location;      // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSpawnLocationAndRoation_Rotation;      // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SpawnSoundAtLocation_VolumeMultiplier_ImplicitCast; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SpawnSoundAtLocation_PitchMultiplier_ImplicitCast; // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SpawnSoundAtLocation_StartTime_ImplicitCast; // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_PlaySound_C_PlaySoundAtLocation) == 0x000008, "Wrong alignment on BP_GameActionInstance_PlaySound_C_PlaySoundAtLocation");
static_assert(sizeof(BP_GameActionInstance_PlaySound_C_PlaySoundAtLocation) == 0x0000E0, "Wrong size on BP_GameActionInstance_PlaySound_C_PlaySoundAtLocation");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_PlaySoundAtLocation, CallFunc_GetPlaySoundParameters_PlaySoundParameters) == 0x000000, "Member 'BP_GameActionInstance_PlaySound_C_PlaySoundAtLocation::CallFunc_GetPlaySoundParameters_PlaySoundParameters' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_PlaySoundAtLocation, CallFunc_GetSpawnLocationAndRoation_Location) == 0x000098, "Member 'BP_GameActionInstance_PlaySound_C_PlaySoundAtLocation::CallFunc_GetSpawnLocationAndRoation_Location' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_PlaySoundAtLocation, CallFunc_GetSpawnLocationAndRoation_Rotation) == 0x0000B0, "Member 'BP_GameActionInstance_PlaySound_C_PlaySoundAtLocation::CallFunc_GetSpawnLocationAndRoation_Rotation' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_PlaySoundAtLocation, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x0000C8, "Member 'BP_GameActionInstance_PlaySound_C_PlaySoundAtLocation::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_PlaySoundAtLocation, CallFunc_SpawnSoundAtLocation_VolumeMultiplier_ImplicitCast) == 0x0000D0, "Member 'BP_GameActionInstance_PlaySound_C_PlaySoundAtLocation::CallFunc_SpawnSoundAtLocation_VolumeMultiplier_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_PlaySoundAtLocation, CallFunc_SpawnSoundAtLocation_PitchMultiplier_ImplicitCast) == 0x0000D4, "Member 'BP_GameActionInstance_PlaySound_C_PlaySoundAtLocation::CallFunc_SpawnSoundAtLocation_PitchMultiplier_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_PlaySoundAtLocation, CallFunc_SpawnSoundAtLocation_StartTime_ImplicitCast) == 0x0000D8, "Member 'BP_GameActionInstance_PlaySound_C_PlaySoundAtLocation::CallFunc_SpawnSoundAtLocation_StartTime_ImplicitCast' has a wrong offset!");

// Function BP_GameActionInstance_PlaySound.BP_GameActionInstance_PlaySound_C.PlaySound2D
// 0x00B0 (0x00B0 - 0x0000)
struct BP_GameActionInstance_PlaySound_C_PlaySound2D final
{
public:
	struct FS_PlaySoundParameters                 CallFunc_GetPlaySoundParameters_PlaySoundParameters; // 0x0000(0x0098)(HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SpawnSound2D_VolumeMultiplier_ImplicitCast; // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SpawnSound2D_PitchMultiplier_ImplicitCast; // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SpawnSound2D_StartTime_ImplicitCast;      // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_PlaySound_C_PlaySound2D) == 0x000008, "Wrong alignment on BP_GameActionInstance_PlaySound_C_PlaySound2D");
static_assert(sizeof(BP_GameActionInstance_PlaySound_C_PlaySound2D) == 0x0000B0, "Wrong size on BP_GameActionInstance_PlaySound_C_PlaySound2D");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_PlaySound2D, CallFunc_GetPlaySoundParameters_PlaySoundParameters) == 0x000000, "Member 'BP_GameActionInstance_PlaySound_C_PlaySound2D::CallFunc_GetPlaySoundParameters_PlaySoundParameters' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_PlaySound2D, CallFunc_SpawnSound2D_ReturnValue) == 0x000098, "Member 'BP_GameActionInstance_PlaySound_C_PlaySound2D::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_PlaySound2D, CallFunc_SpawnSound2D_VolumeMultiplier_ImplicitCast) == 0x0000A0, "Member 'BP_GameActionInstance_PlaySound_C_PlaySound2D::CallFunc_SpawnSound2D_VolumeMultiplier_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_PlaySound2D, CallFunc_SpawnSound2D_PitchMultiplier_ImplicitCast) == 0x0000A4, "Member 'BP_GameActionInstance_PlaySound_C_PlaySound2D::CallFunc_SpawnSound2D_PitchMultiplier_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_PlaySound2D, CallFunc_SpawnSound2D_StartTime_ImplicitCast) == 0x0000A8, "Member 'BP_GameActionInstance_PlaySound_C_PlaySound2D::CallFunc_SpawnSound2D_StartTime_ImplicitCast' has a wrong offset!");

// Function BP_GameActionInstance_PlaySound.BP_GameActionInstance_PlaySound_C.OnAudioComponentSpawned
// 0x0028 (0x0028 - 0x0000)
struct BP_GameActionInstance_PlaySound_C_OnAudioComponentSpawned final
{
public:
	class UAudioComponent*                        AudioComponent;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          WaitForAudioToFinishGameAction;                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GameActionExecutorComponent_C*      CallFunc_GetGameActionExecutor_GameActionExecutor; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_PlaySound_C_OnAudioComponentSpawned) == 0x000008, "Wrong alignment on BP_GameActionInstance_PlaySound_C_OnAudioComponentSpawned");
static_assert(sizeof(BP_GameActionInstance_PlaySound_C_OnAudioComponentSpawned) == 0x000028, "Wrong size on BP_GameActionInstance_PlaySound_C_OnAudioComponentSpawned");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_OnAudioComponentSpawned, AudioComponent) == 0x000000, "Member 'BP_GameActionInstance_PlaySound_C_OnAudioComponentSpawned::AudioComponent' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_OnAudioComponentSpawned, WaitForAudioToFinishGameAction) == 0x000008, "Member 'BP_GameActionInstance_PlaySound_C_OnAudioComponentSpawned::WaitForAudioToFinishGameAction' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_OnAudioComponentSpawned, CallFunc_GetGameActionExecutor_GameActionExecutor) == 0x000010, "Member 'BP_GameActionInstance_PlaySound_C_OnAudioComponentSpawned::CallFunc_GetGameActionExecutor_GameActionExecutor' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_OnAudioComponentSpawned, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'BP_GameActionInstance_PlaySound_C_OnAudioComponentSpawned::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_GameActionInstance_PlaySound.BP_GameActionInstance_PlaySound_C.GetSpawnLocationAndRoation
// 0x00E0 (0x00E0 - 0x0000)
struct BP_GameActionInstance_PlaySound_C_GetSpawnLocationAndRoation final
{
public:
	struct FS_SpawnSoundParameters                SpawnParameters;                                   // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0060(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0078(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 Temp_wildcard_Variable;                            // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_PlaySound_C_GetSpawnLocationAndRoation) == 0x000008, "Wrong alignment on BP_GameActionInstance_PlaySound_C_GetSpawnLocationAndRoation");
static_assert(sizeof(BP_GameActionInstance_PlaySound_C_GetSpawnLocationAndRoation) == 0x0000E0, "Wrong size on BP_GameActionInstance_PlaySound_C_GetSpawnLocationAndRoation");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_GetSpawnLocationAndRoation, SpawnParameters) == 0x000000, "Member 'BP_GameActionInstance_PlaySound_C_GetSpawnLocationAndRoation::SpawnParameters' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_GetSpawnLocationAndRoation, Location) == 0x000060, "Member 'BP_GameActionInstance_PlaySound_C_GetSpawnLocationAndRoation::Location' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_GetSpawnLocationAndRoation, Rotation) == 0x000078, "Member 'BP_GameActionInstance_PlaySound_C_GetSpawnLocationAndRoation::Rotation' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_GetSpawnLocationAndRoation, Temp_wildcard_Variable) == 0x000090, "Member 'BP_GameActionInstance_PlaySound_C_GetSpawnLocationAndRoation::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_GetSpawnLocationAndRoation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000098, "Member 'BP_GameActionInstance_PlaySound_C_GetSpawnLocationAndRoation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_GetSpawnLocationAndRoation, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0000B0, "Member 'BP_GameActionInstance_PlaySound_C_GetSpawnLocationAndRoation::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_GetSpawnLocationAndRoation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B8, "Member 'BP_GameActionInstance_PlaySound_C_GetSpawnLocationAndRoation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_GetSpawnLocationAndRoation, K2Node_DynamicCast_AsActor) == 0x0000D0, "Member 'BP_GameActionInstance_PlaySound_C_GetSpawnLocationAndRoation::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_GetSpawnLocationAndRoation, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'BP_GameActionInstance_PlaySound_C_GetSpawnLocationAndRoation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_GetSpawnLocationAndRoation, CallFunc_IsValid_ReturnValue) == 0x0000D9, "Member 'BP_GameActionInstance_PlaySound_C_GetSpawnLocationAndRoation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GameActionInstance_PlaySound.BP_GameActionInstance_PlaySound_C.ExecuteUbergraph_BP_GameActionInstance_PlaySound
// 0x00B0 (0x00B0 - 0x0000)
struct BP_GameActionInstance_PlaySound_C_ExecuteUbergraph_BP_GameActionInstance_PlaySound final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class APlayerController*                K2Node_Event_Controller;                           // 0x0008(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_PlaySoundParameters                 CallFunc_GetPlaySoundParameters_PlaySoundParameters; // 0x0010(0x0098)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_PlaySound_C_ExecuteUbergraph_BP_GameActionInstance_PlaySound) == 0x000008, "Wrong alignment on BP_GameActionInstance_PlaySound_C_ExecuteUbergraph_BP_GameActionInstance_PlaySound");
static_assert(sizeof(BP_GameActionInstance_PlaySound_C_ExecuteUbergraph_BP_GameActionInstance_PlaySound) == 0x0000B0, "Wrong size on BP_GameActionInstance_PlaySound_C_ExecuteUbergraph_BP_GameActionInstance_PlaySound");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_ExecuteUbergraph_BP_GameActionInstance_PlaySound, EntryPoint) == 0x000000, "Member 'BP_GameActionInstance_PlaySound_C_ExecuteUbergraph_BP_GameActionInstance_PlaySound::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_ExecuteUbergraph_BP_GameActionInstance_PlaySound, K2Node_Event_Controller) == 0x000008, "Member 'BP_GameActionInstance_PlaySound_C_ExecuteUbergraph_BP_GameActionInstance_PlaySound::K2Node_Event_Controller' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_ExecuteUbergraph_BP_GameActionInstance_PlaySound, CallFunc_GetPlaySoundParameters_PlaySoundParameters) == 0x000010, "Member 'BP_GameActionInstance_PlaySound_C_ExecuteUbergraph_BP_GameActionInstance_PlaySound::CallFunc_GetPlaySoundParameters_PlaySoundParameters' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_ExecuteUbergraph_BP_GameActionInstance_PlaySound, K2Node_SwitchEnum_CmpSuccess) == 0x0000A8, "Member 'BP_GameActionInstance_PlaySound_C_ExecuteUbergraph_BP_GameActionInstance_PlaySound::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_GameActionInstance_PlaySound.BP_GameActionInstance_PlaySound_C.ExecuteGameAction
// 0x0008 (0x0008 - 0x0000)
struct BP_GameActionInstance_PlaySound_C_ExecuteGameAction final
{
public:
	const class APlayerController*                Controller;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_PlaySound_C_ExecuteGameAction) == 0x000008, "Wrong alignment on BP_GameActionInstance_PlaySound_C_ExecuteGameAction");
static_assert(sizeof(BP_GameActionInstance_PlaySound_C_ExecuteGameAction) == 0x000008, "Wrong size on BP_GameActionInstance_PlaySound_C_ExecuteGameAction");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_ExecuteGameAction, Controller) == 0x000000, "Member 'BP_GameActionInstance_PlaySound_C_ExecuteGameAction::Controller' has a wrong offset!");

// Function BP_GameActionInstance_PlaySound.BP_GameActionInstance_PlaySound_C.ShouldTriggerAutoSaveAfterExecution
// 0x0001 (0x0001 - 0x0000)
struct BP_GameActionInstance_PlaySound_C_ShouldTriggerAutoSaveAfterExecution final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_PlaySound_C_ShouldTriggerAutoSaveAfterExecution) == 0x000001, "Wrong alignment on BP_GameActionInstance_PlaySound_C_ShouldTriggerAutoSaveAfterExecution");
static_assert(sizeof(BP_GameActionInstance_PlaySound_C_ShouldTriggerAutoSaveAfterExecution) == 0x000001, "Wrong size on BP_GameActionInstance_PlaySound_C_ShouldTriggerAutoSaveAfterExecution");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_ShouldTriggerAutoSaveAfterExecution, ReturnValue) == 0x000000, "Member 'BP_GameActionInstance_PlaySound_C_ShouldTriggerAutoSaveAfterExecution::ReturnValue' has a wrong offset!");

// Function BP_GameActionInstance_PlaySound.BP_GameActionInstance_PlaySound_C.GetPlaySoundParameters
// 0x00A8 (0x00A8 - 0x0000)
struct BP_GameActionInstance_PlaySound_C_GetPlaySoundParameters final
{
public:
	struct FS_PlaySoundParameters                 PlaySoundParameters;                               // 0x0000(0x0098)(Parm, OutParm, HasGetValueTypeHash)
	class UBP_GameAction_PlaySound_C*             K2Node_DynamicCast_As_AUDIO__Play_Sound;           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_PlaySound_C_GetPlaySoundParameters) == 0x000008, "Wrong alignment on BP_GameActionInstance_PlaySound_C_GetPlaySoundParameters");
static_assert(sizeof(BP_GameActionInstance_PlaySound_C_GetPlaySoundParameters) == 0x0000A8, "Wrong size on BP_GameActionInstance_PlaySound_C_GetPlaySoundParameters");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_GetPlaySoundParameters, PlaySoundParameters) == 0x000000, "Member 'BP_GameActionInstance_PlaySound_C_GetPlaySoundParameters::PlaySoundParameters' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_GetPlaySoundParameters, K2Node_DynamicCast_As_AUDIO__Play_Sound) == 0x000098, "Member 'BP_GameActionInstance_PlaySound_C_GetPlaySoundParameters::K2Node_DynamicCast_As_AUDIO__Play_Sound' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_GetPlaySoundParameters, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_GameActionInstance_PlaySound_C_GetPlaySoundParameters::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_GameActionInstance_PlaySound.BP_GameActionInstance_PlaySound_C.GetDebugString
// 0x0198 (0x0198 - 0x0000)
struct BP_GameActionInstance_PlaySound_C_GetDebugString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	struct FS_PlaySoundParameters                 CallFunc_GetPlaySoundParameters_PlaySoundParameters; // 0x0010(0x0098)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00C8(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00D8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00E8(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0130(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0178(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_PlaySound_C_GetDebugString) == 0x000008, "Wrong alignment on BP_GameActionInstance_PlaySound_C_GetDebugString");
static_assert(sizeof(BP_GameActionInstance_PlaySound_C_GetDebugString) == 0x000198, "Wrong size on BP_GameActionInstance_PlaySound_C_GetDebugString");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_GetDebugString, ReturnValue) == 0x000000, "Member 'BP_GameActionInstance_PlaySound_C_GetDebugString::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_GetDebugString, CallFunc_GetPlaySoundParameters_PlaySoundParameters) == 0x000010, "Member 'BP_GameActionInstance_PlaySound_C_GetDebugString::CallFunc_GetPlaySoundParameters_PlaySoundParameters' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_GetDebugString, CallFunc_GetDisplayName_ReturnValue) == 0x0000A8, "Member 'BP_GameActionInstance_PlaySound_C_GetDebugString::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_GetDebugString, CallFunc_GetDisplayName_ReturnValue_1) == 0x0000B8, "Member 'BP_GameActionInstance_PlaySound_C_GetDebugString::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_GetDebugString, CallFunc_Conv_StringToText_ReturnValue) == 0x0000C8, "Member 'BP_GameActionInstance_PlaySound_C_GetDebugString::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_GetDebugString, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000D8, "Member 'BP_GameActionInstance_PlaySound_C_GetDebugString::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_GetDebugString, K2Node_MakeStruct_FormatArgumentData) == 0x0000E8, "Member 'BP_GameActionInstance_PlaySound_C_GetDebugString::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_GetDebugString, K2Node_MakeStruct_FormatArgumentData_1) == 0x000130, "Member 'BP_GameActionInstance_PlaySound_C_GetDebugString::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_GetDebugString, K2Node_MakeArray_Array) == 0x000178, "Member 'BP_GameActionInstance_PlaySound_C_GetDebugString::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_PlaySound_C_GetDebugString, CallFunc_Format_ReturnValue) == 0x000188, "Member 'BP_GameActionInstance_PlaySound_C_GetDebugString::CallFunc_Format_ReturnValue' has a wrong offset!");

}

