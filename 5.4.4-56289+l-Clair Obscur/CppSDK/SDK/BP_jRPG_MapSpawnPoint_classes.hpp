#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_jRPG_MapSpawnPoint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "S_AreaAudioParameters_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_jRPG_MapSpawnPoint.BP_jRPG_MapSpawnPoint_C
// 0x0098 (0x0328 - 0x0290)
class ABP_jRPG_MapSpawnPoint_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        Arrow;                                             // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   TextRender;                                        // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule;                                           // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   SpawnPointName;                                    // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FGameplayTag                           SpawnPointTag;                                     // 0x02C0(0x0008)(Edit, BlueprintVisible, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FS_AreaAudioParameters                 SpawnPointMusic;                                   // 0x02C8(0x0038)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ABP_LightingScenarioReference_C> LightingScenario;                          // 0x0300(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)

public:
	bool CheckForErrors(TArray<class FText>& ErrorMessages);
	void ExecuteUbergraph_BP_jRPG_MapSpawnPoint(int32 EntryPoint);
	class FString GetDebugString();
	void GetSpawnTransfrom(struct FTransform* SpawnTransform);
	void PrevizLightingScenario();
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_jRPG_MapSpawnPoint_C">();
	}
	static class ABP_jRPG_MapSpawnPoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_jRPG_MapSpawnPoint_C>();
	}
};
static_assert(alignof(ABP_jRPG_MapSpawnPoint_C) == 0x000008, "Wrong alignment on ABP_jRPG_MapSpawnPoint_C");
static_assert(sizeof(ABP_jRPG_MapSpawnPoint_C) == 0x000328, "Wrong size on ABP_jRPG_MapSpawnPoint_C");
static_assert(offsetof(ABP_jRPG_MapSpawnPoint_C, UberGraphFrame) == 0x000290, "Member 'ABP_jRPG_MapSpawnPoint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_jRPG_MapSpawnPoint_C, Arrow) == 0x000298, "Member 'ABP_jRPG_MapSpawnPoint_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_jRPG_MapSpawnPoint_C, Scene) == 0x0002A0, "Member 'ABP_jRPG_MapSpawnPoint_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_jRPG_MapSpawnPoint_C, TextRender) == 0x0002A8, "Member 'ABP_jRPG_MapSpawnPoint_C::TextRender' has a wrong offset!");
static_assert(offsetof(ABP_jRPG_MapSpawnPoint_C, Capsule) == 0x0002B0, "Member 'ABP_jRPG_MapSpawnPoint_C::Capsule' has a wrong offset!");
static_assert(offsetof(ABP_jRPG_MapSpawnPoint_C, SpawnPointName) == 0x0002B8, "Member 'ABP_jRPG_MapSpawnPoint_C::SpawnPointName' has a wrong offset!");
static_assert(offsetof(ABP_jRPG_MapSpawnPoint_C, SpawnPointTag) == 0x0002C0, "Member 'ABP_jRPG_MapSpawnPoint_C::SpawnPointTag' has a wrong offset!");
static_assert(offsetof(ABP_jRPG_MapSpawnPoint_C, SpawnPointMusic) == 0x0002C8, "Member 'ABP_jRPG_MapSpawnPoint_C::SpawnPointMusic' has a wrong offset!");
static_assert(offsetof(ABP_jRPG_MapSpawnPoint_C, LightingScenario) == 0x000300, "Member 'ABP_jRPG_MapSpawnPoint_C::LightingScenario' has a wrong offset!");

}

