#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_WeaponIcon

#include "Basic.hpp"

#include "S_WeaponIconsDataRow_structs.hpp"


namespace SDK::Params
{

// Function WBP_WeaponIcon.WBP_WeaponIcon_C.ExecuteUbergraph_WBP_WeaponIcon
// 0x0010 (0x0010 - 0x0000)
struct WBP_WeaponIcon_C_ExecuteUbergraph_WBP_WeaponIcon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMaxDesiredWidth_InMaxDesiredWidth_ImplicitCast; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponIcon_C_ExecuteUbergraph_WBP_WeaponIcon) == 0x000004, "Wrong alignment on WBP_WeaponIcon_C_ExecuteUbergraph_WBP_WeaponIcon");
static_assert(sizeof(WBP_WeaponIcon_C_ExecuteUbergraph_WBP_WeaponIcon) == 0x000010, "Wrong size on WBP_WeaponIcon_C_ExecuteUbergraph_WBP_WeaponIcon");
static_assert(offsetof(WBP_WeaponIcon_C_ExecuteUbergraph_WBP_WeaponIcon, EntryPoint) == 0x000000, "Member 'WBP_WeaponIcon_C_ExecuteUbergraph_WBP_WeaponIcon::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_WeaponIcon_C_ExecuteUbergraph_WBP_WeaponIcon, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_WeaponIcon_C_ExecuteUbergraph_WBP_WeaponIcon::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_WeaponIcon_C_ExecuteUbergraph_WBP_WeaponIcon, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x000008, "Member 'WBP_WeaponIcon_C_ExecuteUbergraph_WBP_WeaponIcon::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_WeaponIcon_C_ExecuteUbergraph_WBP_WeaponIcon, CallFunc_SetMaxDesiredWidth_InMaxDesiredWidth_ImplicitCast) == 0x00000C, "Member 'WBP_WeaponIcon_C_ExecuteUbergraph_WBP_WeaponIcon::CallFunc_SetMaxDesiredWidth_InMaxDesiredWidth_ImplicitCast' has a wrong offset!");

// Function WBP_WeaponIcon.WBP_WeaponIcon_C.LoadWeaponIcon
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_WeaponIcon_C_LoadWeaponIcon final
{
public:
	class FName                                   InWeaponName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponIconsDataRow                  CallFunc_GetDataTableRowFromName_OutRow;           // 0x0010(0x0088)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponIcon_C_LoadWeaponIcon) == 0x000008, "Wrong alignment on WBP_WeaponIcon_C_LoadWeaponIcon");
static_assert(sizeof(WBP_WeaponIcon_C_LoadWeaponIcon) == 0x0000A0, "Wrong size on WBP_WeaponIcon_C_LoadWeaponIcon");
static_assert(offsetof(WBP_WeaponIcon_C_LoadWeaponIcon, InWeaponName) == 0x000000, "Member 'WBP_WeaponIcon_C_LoadWeaponIcon::InWeaponName' has a wrong offset!");
static_assert(offsetof(WBP_WeaponIcon_C_LoadWeaponIcon, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_WeaponIcon_C_LoadWeaponIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponIcon_C_LoadWeaponIcon, CallFunc_GetDataTableRowFromName_OutRow) == 0x000010, "Member 'WBP_WeaponIcon_C_LoadWeaponIcon::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_WeaponIcon_C_LoadWeaponIcon, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000098, "Member 'WBP_WeaponIcon_C_LoadWeaponIcon::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function WBP_WeaponIcon.WBP_WeaponIcon_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_WeaponIcon_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponIcon_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_WeaponIcon_C_PreConstruct");
static_assert(sizeof(WBP_WeaponIcon_C_PreConstruct) == 0x000001, "Wrong size on WBP_WeaponIcon_C_PreConstruct");
static_assert(offsetof(WBP_WeaponIcon_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_WeaponIcon_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

