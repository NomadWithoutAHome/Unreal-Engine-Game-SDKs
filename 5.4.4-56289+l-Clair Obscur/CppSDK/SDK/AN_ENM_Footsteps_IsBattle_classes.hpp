#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AN_ENM_Footsteps_IsBattle

#include "Basic.hpp"

#include "EFootstepsType_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "Engine_classes.hpp"
#include "ESizeOfMonster_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass AN_ENM_Footsteps_IsBattle.AN_ENM_Footsteps_IsBattle_C
// 0x0010 (0x0048 - 0x0038)
class UAN_ENM_Footsteps_IsBattle_C final : public UAnimNotify
{
public:
	bool                                          RightFoot;                                         // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x0039(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFootstepsType                                FootstepsType;                                     // 0x003A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESizeOfMonster                                SizeOfMonster;                                     // 0x003B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAttenuation*                      AttenuationBattleOverride;                         // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	bool Received_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, const struct FAnimNotifyEventReference& EventReference) const;
	void PlaySoundBasedOnMonsterSize(EPhysicalSurface SurfaceType_0, const struct FVector& PlaySoundLocation, bool IsBattle_) const;
	void PlaySmallSound(EPhysicalSurface SurfaceType_0, const struct FVector& PlaySoundLocation, bool IsBattle_) const;
	void PlayMediumSound(EPhysicalSurface SurfaceType_0, const struct FVector& PlaySoundLocation, bool IsBattle_) const;
	void PlayLargeSound(EPhysicalSurface SurfaceType_0, const struct FVector& PlaySoundLocation, bool IsBattle_) const;
	void PlayHumanoidSound(EPhysicalSurface SurfaceType_0, const struct FVector& PlaySoundLocation, bool IsBattle_) const;
	void PlayExtraSmallSound(EPhysicalSurface SurfaceType_0, const struct FVector& PlaySoundLocation, bool IsBattle_) const;
	void ExecutreTriggerParametersForSurfaceType(EPhysicalSurface Index_0) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AN_ENM_Footsteps_IsBattle_C">();
	}
	static class UAN_ENM_Footsteps_IsBattle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAN_ENM_Footsteps_IsBattle_C>();
	}
};
static_assert(alignof(UAN_ENM_Footsteps_IsBattle_C) == 0x000008, "Wrong alignment on UAN_ENM_Footsteps_IsBattle_C");
static_assert(sizeof(UAN_ENM_Footsteps_IsBattle_C) == 0x000048, "Wrong size on UAN_ENM_Footsteps_IsBattle_C");
static_assert(offsetof(UAN_ENM_Footsteps_IsBattle_C, RightFoot) == 0x000038, "Member 'UAN_ENM_Footsteps_IsBattle_C::RightFoot' has a wrong offset!");
static_assert(offsetof(UAN_ENM_Footsteps_IsBattle_C, SurfaceType) == 0x000039, "Member 'UAN_ENM_Footsteps_IsBattle_C::SurfaceType' has a wrong offset!");
static_assert(offsetof(UAN_ENM_Footsteps_IsBattle_C, FootstepsType) == 0x00003A, "Member 'UAN_ENM_Footsteps_IsBattle_C::FootstepsType' has a wrong offset!");
static_assert(offsetof(UAN_ENM_Footsteps_IsBattle_C, SizeOfMonster) == 0x00003B, "Member 'UAN_ENM_Footsteps_IsBattle_C::SizeOfMonster' has a wrong offset!");
static_assert(offsetof(UAN_ENM_Footsteps_IsBattle_C, AttenuationBattleOverride) == 0x000040, "Member 'UAN_ENM_Footsteps_IsBattle_C::AttenuationBattleOverride' has a wrong offset!");

}

