#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ExecuteGameActionRequest

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_ExecuteGameActionRequest.BP_ExecuteGameActionRequest_C.ExecuteUbergraph_BP_ExecuteGameActionRequest
// 0x0020 (0x0020 - 0x0000)
struct BP_ExecuteGameActionRequest_C_ExecuteUbergraph_BP_ExecuteGameActionRequest final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidGameActionWrapper_IsValid;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GameActionExecutorComponent_C*      CallFunc_GetGameActionExecutor_GameActionExecutor; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UGameAction* GameAction)> K2Node_CreateDelegate_OutputDelegate;             // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExecuteGameActionRequest_C_ExecuteUbergraph_BP_ExecuteGameActionRequest) == 0x000008, "Wrong alignment on BP_ExecuteGameActionRequest_C_ExecuteUbergraph_BP_ExecuteGameActionRequest");
static_assert(sizeof(BP_ExecuteGameActionRequest_C_ExecuteUbergraph_BP_ExecuteGameActionRequest) == 0x000020, "Wrong size on BP_ExecuteGameActionRequest_C_ExecuteUbergraph_BP_ExecuteGameActionRequest");
static_assert(offsetof(BP_ExecuteGameActionRequest_C_ExecuteUbergraph_BP_ExecuteGameActionRequest, EntryPoint) == 0x000000, "Member 'BP_ExecuteGameActionRequest_C_ExecuteUbergraph_BP_ExecuteGameActionRequest::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ExecuteGameActionRequest_C_ExecuteUbergraph_BP_ExecuteGameActionRequest, CallFunc_IsValidGameActionWrapper_IsValid) == 0x000004, "Member 'BP_ExecuteGameActionRequest_C_ExecuteUbergraph_BP_ExecuteGameActionRequest::CallFunc_IsValidGameActionWrapper_IsValid' has a wrong offset!");
static_assert(offsetof(BP_ExecuteGameActionRequest_C_ExecuteUbergraph_BP_ExecuteGameActionRequest, CallFunc_GetGameActionExecutor_GameActionExecutor) == 0x000008, "Member 'BP_ExecuteGameActionRequest_C_ExecuteUbergraph_BP_ExecuteGameActionRequest::CallFunc_GetGameActionExecutor_GameActionExecutor' has a wrong offset!");
static_assert(offsetof(BP_ExecuteGameActionRequest_C_ExecuteUbergraph_BP_ExecuteGameActionRequest, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_ExecuteGameActionRequest_C_ExecuteUbergraph_BP_ExecuteGameActionRequest::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_ExecuteGameActionRequest.BP_ExecuteGameActionRequest_C.OnGameActionExecuted
// 0x0030 (0x0030 - 0x0000)
struct BP_ExecuteGameActionRequest_C_OnGameActionExecuted final
{
public:
	class UGameAction*                            GameAction;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UGameAction* GameAction)> K2Node_CreateDelegate_OutputDelegate;             // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_GameActionExecutorComponent_C*      CallFunc_GetGameActionExecutor_GameActionExecutor; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGameAction*                            CallFunc_GetGameActionFromWrapperPure_GameAction;  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualsObjects_ReturnValue;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExecuteGameActionRequest_C_OnGameActionExecuted) == 0x000008, "Wrong alignment on BP_ExecuteGameActionRequest_C_OnGameActionExecuted");
static_assert(sizeof(BP_ExecuteGameActionRequest_C_OnGameActionExecuted) == 0x000030, "Wrong size on BP_ExecuteGameActionRequest_C_OnGameActionExecuted");
static_assert(offsetof(BP_ExecuteGameActionRequest_C_OnGameActionExecuted, GameAction) == 0x000000, "Member 'BP_ExecuteGameActionRequest_C_OnGameActionExecuted::GameAction' has a wrong offset!");
static_assert(offsetof(BP_ExecuteGameActionRequest_C_OnGameActionExecuted, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_ExecuteGameActionRequest_C_OnGameActionExecuted::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ExecuteGameActionRequest_C_OnGameActionExecuted, CallFunc_GetGameActionExecutor_GameActionExecutor) == 0x000018, "Member 'BP_ExecuteGameActionRequest_C_OnGameActionExecuted::CallFunc_GetGameActionExecutor_GameActionExecutor' has a wrong offset!");
static_assert(offsetof(BP_ExecuteGameActionRequest_C_OnGameActionExecuted, CallFunc_GetGameActionFromWrapperPure_GameAction) == 0x000020, "Member 'BP_ExecuteGameActionRequest_C_OnGameActionExecuted::CallFunc_GetGameActionFromWrapperPure_GameAction' has a wrong offset!");
static_assert(offsetof(BP_ExecuteGameActionRequest_C_OnGameActionExecuted, CallFunc_EqualsObjects_ReturnValue) == 0x000028, "Member 'BP_ExecuteGameActionRequest_C_OnGameActionExecuted::CallFunc_EqualsObjects_ReturnValue' has a wrong offset!");

}

