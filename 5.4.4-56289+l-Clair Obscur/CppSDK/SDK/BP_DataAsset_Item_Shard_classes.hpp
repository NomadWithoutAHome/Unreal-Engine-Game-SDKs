#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DataAsset_Item_Shard

#include "Basic.hpp"

#include "BP_DataAsset_Item_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DataAsset_Item_Shard.BP_DataAsset_Item_Shard_C
// 0x0030 (0x0060 - 0x0030)
class UBP_DataAsset_Item_Shard_C final : public UBP_DataAsset_Item_C
{
public:
	struct FDataTableRowHandle                    BaseConsumableItemType;                            // 0x0030(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	TArray<struct FDataTableRowHandle>            ConsumableItemPerLevel;                            // 0x0040(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FDataTableRowHandle                    UpgradeItemRow;                                    // 0x0050(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void GetShardUpgradeCost(TArray<struct FS_ItemQuantity>* RequiredItems);
	void GetConsumablesList(TArray<struct FDataTableRowHandle>* ConsumableItemPerLevel_0);
	struct FDataTableRowHandle GetUpgradeLevelConsumableRow(int32 UpgradeLevel);
	void OnAddedToInventory(class UAC_jRPG_InventoryManager_C* InventoryManager, class FName ItemId, struct FS_LootContext& LootContext, class UBP_GeneratedItemInfo_Base_C** GeneratedItem);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DataAsset_Item_Shard_C">();
	}
	static class UBP_DataAsset_Item_Shard_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_DataAsset_Item_Shard_C>();
	}
};
static_assert(alignof(UBP_DataAsset_Item_Shard_C) == 0x000008, "Wrong alignment on UBP_DataAsset_Item_Shard_C");
static_assert(sizeof(UBP_DataAsset_Item_Shard_C) == 0x000060, "Wrong size on UBP_DataAsset_Item_Shard_C");
static_assert(offsetof(UBP_DataAsset_Item_Shard_C, BaseConsumableItemType) == 0x000030, "Member 'UBP_DataAsset_Item_Shard_C::BaseConsumableItemType' has a wrong offset!");
static_assert(offsetof(UBP_DataAsset_Item_Shard_C, ConsumableItemPerLevel) == 0x000040, "Member 'UBP_DataAsset_Item_Shard_C::ConsumableItemPerLevel' has a wrong offset!");
static_assert(offsetof(UBP_DataAsset_Item_Shard_C, UpgradeItemRow) == 0x000050, "Member 'UBP_DataAsset_Item_Shard_C::UpgradeItemRow' has a wrong offset!");

}

