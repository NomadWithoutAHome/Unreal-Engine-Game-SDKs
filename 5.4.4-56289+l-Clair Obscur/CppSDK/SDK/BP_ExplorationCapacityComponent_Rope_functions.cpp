#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ExplorationCapacityComponent_Rope

#include "Basic.hpp"

#include "BP_ExplorationCapacityComponent_Rope_classes.hpp"
#include "BP_ExplorationCapacityComponent_Rope_parameters.hpp"


namespace SDK
{

// Function BP_ExplorationCapacityComponent_Rope.BP_ExplorationCapacityComponent_Rope_C.AccumulateDeltaTime
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationCapacityComponent_Rope_C::AccumulateDeltaTime(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_Rope_C", "AccumulateDeltaTime");

	Params::BP_ExplorationCapacityComponent_Rope_C_AccumulateDeltaTime Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExplorationCapacityComponent_Rope.BP_ExplorationCapacityComponent_Rope_C.ComputeCurrentMoveSpeed
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationCapacityComponent_Rope_C::ComputeCurrentMoveSpeed(double DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_Rope_C", "ComputeCurrentMoveSpeed");

	Params::BP_ExplorationCapacityComponent_Rope_C_ComputeCurrentMoveSpeed Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExplorationCapacityComponent_Rope.BP_ExplorationCapacityComponent_Rope_C.ComputeTimeRatio
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_ExplorationCapacityComponent_Rope_C::ComputeTimeRatio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_Rope_C", "ComputeTimeRatio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExplorationCapacityComponent_Rope.BP_ExplorationCapacityComponent_Rope_C.ExecuteUbergraph_BP_ExplorationCapacityComponent_Rope
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationCapacityComponent_Rope_C::ExecuteUbergraph_BP_ExplorationCapacityComponent_Rope(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_Rope_C", "ExecuteUbergraph_BP_ExplorationCapacityComponent_Rope");

	Params::BP_ExplorationCapacityComponent_Rope_C_ExecuteUbergraph_BP_ExplorationCapacityComponent_Rope Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExplorationCapacityComponent_Rope.BP_ExplorationCapacityComponent_Rope_C.GetAlphaForEnterTransition
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UBP_ExplorationCapacityComponent_Rope_C::GetAlphaForEnterTransition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_Rope_C", "GetAlphaForEnterTransition");

	Params::BP_ExplorationCapacityComponent_Rope_C_GetAlphaForEnterTransition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ExplorationCapacityComponent_Rope.BP_ExplorationCapacityComponent_Rope_C.GetCurrentRopeDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_RopeMovementDirection*                CurrentDirection_0                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationCapacityComponent_Rope_C::GetCurrentRopeDirection(E_RopeMovementDirection* CurrentDirection_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_Rope_C", "GetCurrentRopeDirection");

	Params::BP_ExplorationCapacityComponent_Rope_C_GetCurrentRopeDirection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentDirection_0 != nullptr)
		*CurrentDirection_0 = Parms.CurrentDirection_0;
}


// Function BP_ExplorationCapacityComponent_Rope.BP_ExplorationCapacityComponent_Rope_C.GetCurrentRopeStep
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_RopeMovementStep*                     CurrentStep_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationCapacityComponent_Rope_C::GetCurrentRopeStep(E_RopeMovementStep* CurrentStep_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_Rope_C", "GetCurrentRopeStep");

	Params::BP_ExplorationCapacityComponent_Rope_C_GetCurrentRopeStep Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentStep_0 != nullptr)
		*CurrentStep_0 = Parms.CurrentStep_0;
}


// Function BP_ExplorationCapacityComponent_Rope.BP_ExplorationCapacityComponent_Rope_C.IsPerformingMovement
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_ExplorationCapacityComponent_Rope_C::IsPerformingMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_Rope_C", "IsPerformingMovement");

	Params::BP_ExplorationCapacityComponent_Rope_C_IsPerformingMovement Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ExplorationCapacityComponent_Rope.BP_ExplorationCapacityComponent_Rope_C.OnEnterTransitionAnimationDone
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ExplorationCapacityComponent_Rope_C::OnEnterTransitionAnimationDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_Rope_C", "OnEnterTransitionAnimationDone");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExplorationCapacityComponent_Rope.BP_ExplorationCapacityComponent_Rope_C.OnExitTransitionAnimationDone
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ExplorationCapacityComponent_Rope_C::OnExitTransitionAnimationDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_Rope_C", "OnExitTransitionAnimationDone");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExplorationCapacityComponent_Rope.BP_ExplorationCapacityComponent_Rope_C.PlayCameraEffects
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ExplorationCapacityComponent_Rope_C::PlayCameraEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_Rope_C", "PlayCameraEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExplorationCapacityComponent_Rope.BP_ExplorationCapacityComponent_Rope_C.PlayForceFeedback
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_ExplorationCapacityComponent_Rope_C::PlayForceFeedback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_Rope_C", "PlayForceFeedback");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExplorationCapacityComponent_Rope.BP_ExplorationCapacityComponent_Rope_C.PlayLinkToRopeFX
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_ExplorationCapacityComponent_Rope_C::PlayLinkToRopeFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_Rope_C", "PlayLinkToRopeFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExplorationCapacityComponent_Rope.BP_ExplorationCapacityComponent_Rope_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationCapacityComponent_Rope_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_Rope_C", "ReceiveTick");

	Params::BP_ExplorationCapacityComponent_Rope_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExplorationCapacityComponent_Rope.BP_ExplorationCapacityComponent_Rope_C.ResetRuntimeVariables
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_ExplorationCapacityComponent_Rope_C::ResetRuntimeVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_Rope_C", "ResetRuntimeVariables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExplorationCapacityComponent_Rope.BP_ExplorationCapacityComponent_Rope_C.SetRopeMovementCurrentStep
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_RopeMovementStep                      step                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationCapacityComponent_Rope_C::SetRopeMovementCurrentStep(E_RopeMovementStep step)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_Rope_C", "SetRopeMovementCurrentStep");

	Params::BP_ExplorationCapacityComponent_Rope_C_SetRopeMovementCurrentStep Parms{};

	Parms.step = step;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExplorationCapacityComponent_Rope.BP_ExplorationCapacityComponent_Rope_C.ShouldExitMovingAlongRope
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_ExplorationCapacityComponent_Rope_C::ShouldExitMovingAlongRope()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_Rope_C", "ShouldExitMovingAlongRope");

	Params::BP_ExplorationCapacityComponent_Rope_C_ShouldExitMovingAlongRope Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ExplorationCapacityComponent_Rope.BP_ExplorationCapacityComponent_Rope_C.StartMovementWithRope
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_GPE_Rope_C*                   Rope                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// E_RopeMovementDirection                 Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationCapacityComponent_Rope_C::StartMovementWithRope(class ABP_GPE_Rope_C* Rope, E_RopeMovementDirection Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_Rope_C", "StartMovementWithRope");

	Params::BP_ExplorationCapacityComponent_Rope_C_StartMovementWithRope Parms{};

	Parms.Rope = Rope;
	Parms.Direction = Direction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExplorationCapacityComponent_Rope.BP_ExplorationCapacityComponent_Rope_C.StartRopeMovement
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ExplorationCapacityComponent_Rope_C::StartRopeMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_Rope_C", "StartRopeMovement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExplorationCapacityComponent_Rope.BP_ExplorationCapacityComponent_Rope_C.StopAllEffects
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_ExplorationCapacityComponent_Rope_C::StopAllEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_Rope_C", "StopAllEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExplorationCapacityComponent_Rope.BP_ExplorationCapacityComponent_Rope_C.StopRopeMovement
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ExplorationCapacityComponent_Rope_C::StopRopeMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_Rope_C", "StopRopeMovement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExplorationCapacityComponent_Rope.BP_ExplorationCapacityComponent_Rope_C.UpdateActorLocation
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ExplorationCapacityComponent_Rope_C::UpdateActorLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_Rope_C", "UpdateActorLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExplorationCapacityComponent_Rope.BP_ExplorationCapacityComponent_Rope_C.UpdateActorRotation
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_ExplorationCapacityComponent_Rope_C::UpdateActorRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_Rope_C", "UpdateActorRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExplorationCapacityComponent_Rope.BP_ExplorationCapacityComponent_Rope_C.UpdateEnterTransition
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationCapacityComponent_Rope_C::UpdateEnterTransition(double DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_Rope_C", "UpdateEnterTransition");

	Params::BP_ExplorationCapacityComponent_Rope_C_UpdateEnterTransition Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExplorationCapacityComponent_Rope.BP_ExplorationCapacityComponent_Rope_C.UpdateExitTransition
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationCapacityComponent_Rope_C::UpdateExitTransition(double DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_Rope_C", "UpdateExitTransition");

	Params::BP_ExplorationCapacityComponent_Rope_C_UpdateExitTransition Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExplorationCapacityComponent_Rope.BP_ExplorationCapacityComponent_Rope_C.UpdateMovement
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationCapacityComponent_Rope_C::UpdateMovement(double DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_Rope_C", "UpdateMovement");

	Params::BP_ExplorationCapacityComponent_Rope_C_UpdateMovement Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExplorationCapacityComponent_Rope.BP_ExplorationCapacityComponent_Rope_C.UpdateMovingAlongRope
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationCapacityComponent_Rope_C::UpdateMovingAlongRope(double DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_Rope_C", "UpdateMovingAlongRope");

	Params::BP_ExplorationCapacityComponent_Rope_C_UpdateMovingAlongRope Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExplorationCapacityComponent_Rope.BP_ExplorationCapacityComponent_Rope_C.UpdateRopeMovement
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationCapacityComponent_Rope_C::UpdateRopeMovement(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationCapacityComponent_Rope_C", "UpdateRopeMovement");

	Params::BP_ExplorationCapacityComponent_Rope_C_UpdateRopeMovement Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}

}

