#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TargetingGroup

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TargetingGroup.BP_TargetingGroup_C
// 0x0028 (0x0050 - 0x0028)
class UBP_TargetingGroup_C final : public UObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0028(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Characters;                                      // 0x0030(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, ExposeOnSpawn)
	class UAC_jRPG_TargetingManager_C*            TargetingManager;                                  // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          hasRegistered;                                     // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPretargeting;                                    // 0x0049(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_TargetingGroup(int32 EntryPoint);
	void FocusTargetGroup();
	void GetCharacters(TArray<class ABP_jRPG_Character_Battle_Base_C*>* Characters_0);
	void GetTiedObject(class UObject** Object);
	void OnUIAction();
	void OnUINavigationFocus(const class UBP_UINavigationFocusEvent_C* FocusEventBP);
	void OnUINavigationFocusLost();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TargetingGroup_C">();
	}
	static class UBP_TargetingGroup_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_TargetingGroup_C>();
	}
};
static_assert(alignof(UBP_TargetingGroup_C) == 0x000008, "Wrong alignment on UBP_TargetingGroup_C");
static_assert(sizeof(UBP_TargetingGroup_C) == 0x000050, "Wrong size on UBP_TargetingGroup_C");
static_assert(offsetof(UBP_TargetingGroup_C, UberGraphFrame) == 0x000028, "Member 'UBP_TargetingGroup_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_TargetingGroup_C, Characters) == 0x000030, "Member 'UBP_TargetingGroup_C::Characters' has a wrong offset!");
static_assert(offsetof(UBP_TargetingGroup_C, TargetingManager) == 0x000040, "Member 'UBP_TargetingGroup_C::TargetingManager' has a wrong offset!");
static_assert(offsetof(UBP_TargetingGroup_C, hasRegistered) == 0x000048, "Member 'UBP_TargetingGroup_C::hasRegistered' has a wrong offset!");
static_assert(offsetof(UBP_TargetingGroup_C, IsPretargeting) == 0x000049, "Member 'UBP_TargetingGroup_C::IsPretargeting' has a wrong offset!");

}

