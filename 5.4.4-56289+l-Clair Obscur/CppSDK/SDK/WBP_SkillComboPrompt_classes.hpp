#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SkillComboPrompt

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_SkillComboPrompt.WBP_SkillComboPrompt_C
// 0x0210 (0x04F0 - 0x02E0)
class UWBP_SkillComboPrompt_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       QTEFail;                                           // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       QTESuccess;                                        // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       QTEStarting;                                       // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       QTEFinished;                                       // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border_Current;                                    // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_Current_1;                                  // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_Current_OLD;                                // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_Target_End_OLD;                             // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_Target_Start_OLD;                           // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_0;                                     // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Target;                                      // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Target_Shadow;                               // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCurveLinearColor*                      ColorCurve;                                        // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UBP_QTEManager_C*                       QTEManager;                                        // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsLocked;                                          // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        lockedProgress;                                    // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           lockedColor;                                       // 0x0368(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        preTime;                                           // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StartTime;                                         // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EndTime;                                           // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        endTimeOffset;                                     // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        targetSize;                                        // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        preSize;                                           // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MaterialParam_InnerOffset;                         // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaterialValue_InnerOffset;                         // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MaterialParam_OuterWidth;                          // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Border_Target_MaterialInstance;                    // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Material_PaintIntroProgress;                       // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FName                                   MaterialParam_RevealProgress;                      // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            TargetBrush;                                       // 0x03E0(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        ShadowInitialSize;                                 // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            Image_Target_Color;                                // 0x04B8(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	uint8                                         Pad_4CC[0x4];                                      // 0x04CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        spinBaseSpeed;                                     // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        spinAnimationMultiplier;                           // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   sequencePlayerTimeSource;                          // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_WBP_SkillComboPrompt(int32 EntryPoint);
	double Get_Skill_Combo_Progress_Full();
	struct FSlateBrush Get_Image_Target_Brush_0();
	double GetCurrentSequenceTime();
	class FText GetDebugText();
	struct FLinearColor GetFillColorAndOpacity_0();
	double GetPercent_0();
	double GetSkillComboProgressInWindow();
	void On_Action(bool IsSuccess);
	void OnFail();
	void OnSkillComboFinished(bool IsSuccess);
	void OnSkillComboStarted(double preTime_0, double StartTime_0, double EndTime_0, class ULevelSequencePlayer* sequencePlayerTimeSource_0);
	void OnSuccess();
	double Remap_Progress_Full_Duration(double Time);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_SkillComboPrompt_C">();
	}
	static class UWBP_SkillComboPrompt_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_SkillComboPrompt_C>();
	}
};
static_assert(alignof(UWBP_SkillComboPrompt_C) == 0x000010, "Wrong alignment on UWBP_SkillComboPrompt_C");
static_assert(sizeof(UWBP_SkillComboPrompt_C) == 0x0004F0, "Wrong size on UWBP_SkillComboPrompt_C");
static_assert(offsetof(UWBP_SkillComboPrompt_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_SkillComboPrompt_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, QTEFail) == 0x0002E8, "Member 'UWBP_SkillComboPrompt_C::QTEFail' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, QTESuccess) == 0x0002F0, "Member 'UWBP_SkillComboPrompt_C::QTESuccess' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, QTEStarting) == 0x0002F8, "Member 'UWBP_SkillComboPrompt_C::QTEStarting' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, QTEFinished) == 0x000300, "Member 'UWBP_SkillComboPrompt_C::QTEFinished' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, Border_Current) == 0x000308, "Member 'UWBP_SkillComboPrompt_C::Border_Current' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, Border_Current_1) == 0x000310, "Member 'UWBP_SkillComboPrompt_C::Border_Current_1' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, Border_Current_OLD) == 0x000318, "Member 'UWBP_SkillComboPrompt_C::Border_Current_OLD' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, Border_Target_End_OLD) == 0x000320, "Member 'UWBP_SkillComboPrompt_C::Border_Target_End_OLD' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, Border_Target_Start_OLD) == 0x000328, "Member 'UWBP_SkillComboPrompt_C::Border_Target_Start_OLD' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, CanvasPanel_0) == 0x000330, "Member 'UWBP_SkillComboPrompt_C::CanvasPanel_0' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, Image_Target) == 0x000338, "Member 'UWBP_SkillComboPrompt_C::Image_Target' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, Image_Target_Shadow) == 0x000340, "Member 'UWBP_SkillComboPrompt_C::Image_Target_Shadow' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, ColorCurve) == 0x000348, "Member 'UWBP_SkillComboPrompt_C::ColorCurve' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, QTEManager) == 0x000350, "Member 'UWBP_SkillComboPrompt_C::QTEManager' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, IsLocked) == 0x000358, "Member 'UWBP_SkillComboPrompt_C::IsLocked' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, lockedProgress) == 0x000360, "Member 'UWBP_SkillComboPrompt_C::lockedProgress' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, lockedColor) == 0x000368, "Member 'UWBP_SkillComboPrompt_C::lockedColor' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, preTime) == 0x000378, "Member 'UWBP_SkillComboPrompt_C::preTime' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, StartTime) == 0x000380, "Member 'UWBP_SkillComboPrompt_C::StartTime' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, EndTime) == 0x000388, "Member 'UWBP_SkillComboPrompt_C::EndTime' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, endTimeOffset) == 0x000390, "Member 'UWBP_SkillComboPrompt_C::endTimeOffset' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, IsActive) == 0x000398, "Member 'UWBP_SkillComboPrompt_C::IsActive' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, targetSize) == 0x0003A0, "Member 'UWBP_SkillComboPrompt_C::targetSize' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, preSize) == 0x0003A8, "Member 'UWBP_SkillComboPrompt_C::preSize' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, MaterialParam_InnerOffset) == 0x0003B0, "Member 'UWBP_SkillComboPrompt_C::MaterialParam_InnerOffset' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, MaterialValue_InnerOffset) == 0x0003B8, "Member 'UWBP_SkillComboPrompt_C::MaterialValue_InnerOffset' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, MaterialParam_OuterWidth) == 0x0003C0, "Member 'UWBP_SkillComboPrompt_C::MaterialParam_OuterWidth' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, Border_Target_MaterialInstance) == 0x0003C8, "Member 'UWBP_SkillComboPrompt_C::Border_Target_MaterialInstance' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, Material_PaintIntroProgress) == 0x0003D0, "Member 'UWBP_SkillComboPrompt_C::Material_PaintIntroProgress' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, MaterialParam_RevealProgress) == 0x0003D8, "Member 'UWBP_SkillComboPrompt_C::MaterialParam_RevealProgress' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, TargetBrush) == 0x0003E0, "Member 'UWBP_SkillComboPrompt_C::TargetBrush' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, ShadowInitialSize) == 0x0004B0, "Member 'UWBP_SkillComboPrompt_C::ShadowInitialSize' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, Image_Target_Color) == 0x0004B8, "Member 'UWBP_SkillComboPrompt_C::Image_Target_Color' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, spinBaseSpeed) == 0x0004D0, "Member 'UWBP_SkillComboPrompt_C::spinBaseSpeed' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, spinAnimationMultiplier) == 0x0004D8, "Member 'UWBP_SkillComboPrompt_C::spinAnimationMultiplier' has a wrong offset!");
static_assert(offsetof(UWBP_SkillComboPrompt_C, sequencePlayerTimeSource) == 0x0004E0, "Member 'UWBP_SkillComboPrompt_C::sequencePlayerTimeSource' has a wrong offset!");

}

