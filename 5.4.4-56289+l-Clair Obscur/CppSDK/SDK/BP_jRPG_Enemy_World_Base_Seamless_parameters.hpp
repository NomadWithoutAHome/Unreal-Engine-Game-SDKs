#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_jRPG_Enemy_World_Base_Seamless

#include "Basic.hpp"

#include "GameplayCameras_structs.hpp"
#include "Engine_structs.hpp"
#include "EInputDevices_structs.hpp"
#include "SandFall_structs.hpp"
#include "EInWorldAudioContainerComponents_structs.hpp"
#include "FPromptParams_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ActorDetectionParameters_structs.hpp"
#include "E_jRPG_EngageTypes_structs.hpp"
#include "FBattleStartParams_structs.hpp"
#include "S_jRPG_Encounter_structs.hpp"
#include "EBattleEndResult_structs.hpp"
#include "E_AiStates_structs.hpp"
#include "E_EnemyIdleState_structs.hpp"


namespace SDK::Params
{

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.AddAggroLock
// 0x000C (0x000C - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_AddAggroLock final
{
public:
	class FName                                   LockName;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_AddAggroLock) == 0x000004, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_AddAggroLock");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_AddAggroLock) == 0x00000C, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_AddAggroLock");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_AddAggroLock, LockName) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_AddAggroLock::LockName' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_AddAggroLock, CallFunc_Array_AddUnique_ReturnValue) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_AddAggroLock::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.AddInteractable
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_AddInteractable final
{
public:
	class AActor*                                 Interactable;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_AddInteractable) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_AddInteractable");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_AddInteractable) == 0x000008, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_AddInteractable");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_AddInteractable, Interactable) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_AddInteractable::Interactable' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.BeginCustomScriptState
// 0x0098 (0x0098 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_BeginCustomScriptState final
{
public:
	class UObject*                                SourceObject;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0008(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0010)()
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_BeginCustomScriptState) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_BeginCustomScriptState");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_BeginCustomScriptState) == 0x000098, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_BeginCustomScriptState");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_BeginCustomScriptState, SourceObject) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_BeginCustomScriptState::SourceObject' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_BeginCustomScriptState, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_BeginCustomScriptState::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_BeginCustomScriptState, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_BeginCustomScriptState::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_BeginCustomScriptState, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_BeginCustomScriptState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_BeginCustomScriptState, K2Node_MakeArray_Array) == 0x000068, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_BeginCustomScriptState::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_BeginCustomScriptState, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000078, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_BeginCustomScriptState::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_BeginCustomScriptState, CallFunc_Format_ReturnValue) == 0x000080, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_BeginCustomScriptState::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_BeginCustomScriptState, CallFunc_Array_AddUnique_ReturnValue) == 0x000090, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_BeginCustomScriptState::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_BeginCustomScriptState, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000094, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_BeginCustomScriptState::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.BndEvt__BP_jRPG_Enemy_World_Base_Seamless_EncounterCapsuleRange_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_EncounterCapsuleRange_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_EncounterCapsuleRange_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_EncounterCapsuleRange_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_EncounterCapsuleRange_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_EncounterCapsuleRange_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_EncounterCapsuleRange_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_EncounterCapsuleRange_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_EncounterCapsuleRange_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_EncounterCapsuleRange_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_EncounterCapsuleRange_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_EncounterCapsuleRange_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_EncounterCapsuleRange_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_EncounterCapsuleRange_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_EncounterCapsuleRange_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_EncounterCapsuleRange_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_EncounterCapsuleRange_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_EncounterCapsuleRange_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_BndEvt__BP_jRPG_Enemy_World_Base_Seamless_PPBattleTransitionZone_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.CanInteractWithMount
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_CanInteractWithMount final
{
public:
	bool                                          CanInteract;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_CanInteractWithMount) == 0x000001, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_CanInteractWithMount");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_CanInteractWithMount) == 0x000001, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_CanInteractWithMount");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CanInteractWithMount, CanInteract) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CanInteractWithMount::CanInteract' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.CanStartBattleWithCharacter
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_CanStartBattleWithCharacter final
{
public:
	class ABP_jRPG_Character_World_C*             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsAttachedToMovingPlatform_ReturnValue; // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_CanStartBattleWithCharacter) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_CanStartBattleWithCharacter");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_CanStartBattleWithCharacter) == 0x000010, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_CanStartBattleWithCharacter");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CanStartBattleWithCharacter, Character) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CanStartBattleWithCharacter::Character' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CanStartBattleWithCharacter, ReturnValue) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CanStartBattleWithCharacter::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CanStartBattleWithCharacter, CallFunc_GetIsAttachedToMovingPlatform_ReturnValue) == 0x000009, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CanStartBattleWithCharacter::CallFunc_GetIsAttachedToMovingPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CanStartBattleWithCharacter, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CanStartBattleWithCharacter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.CheckForErrors
// 0x01E8 (0x01E8 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors final
{
public:
	TArray<class FText>                           ErrorMessages;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0010)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_RoamingAiComponent_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCurrentLevelProductionLevel_ReturnValue; // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB[0x1];                                       // 0x00AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x00C0(0x0010)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    CallFunc_Array_Get_Item;                           // 0x00E0(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x00F8(0x0010)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0110(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_DoesDataTableRowExist_ReturnValue;        // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0160(0x0010)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0178(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x01C0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x01D0(0x0010)()
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors) == 0x0001E8, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, ErrorMessages) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::ErrorMessages' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, ReturnValue) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000020, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, K2Node_MakeArray_Array) == 0x000078, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, CallFunc_Format_ReturnValue) == 0x000088, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000098, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, CallFunc_GetComponentByClass_ReturnValue) == 0x0000A0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, CallFunc_IsCurrentLevelProductionLevel_ReturnValue) == 0x0000A8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::CallFunc_IsCurrentLevelProductionLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, CallFunc_Array_IsEmpty_ReturnValue) == 0x0000A9, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, CallFunc_BooleanAND_ReturnValue) == 0x0000AA, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, CallFunc_Array_Add_ReturnValue) == 0x0000AC, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, K2Node_MakeArray_Array_1) == 0x0000B0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, CallFunc_Format_ReturnValue_1) == 0x0000C0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000D0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, CallFunc_Array_Add_ReturnValue_1) == 0x0000D4, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, CallFunc_GetBoolCVar_ReturnValue) == 0x0000D8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, CallFunc_Conv_NameToText_ReturnValue) == 0x0000F8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, CallFunc_Less_IntInt_ReturnValue) == 0x000108, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, K2Node_MakeStruct_FormatArgumentData_1) == 0x000110, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, CallFunc_DoesDataTableRowExist_ReturnValue) == 0x000158, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::CallFunc_DoesDataTableRowExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000160, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, CallFunc_Not_PreBool_ReturnValue) == 0x000170, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, K2Node_MakeStruct_FormatArgumentData_2) == 0x000178, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, K2Node_MakeArray_Array_2) == 0x0001C0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, CallFunc_Format_ReturnValue_2) == 0x0001D0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors, CallFunc_Array_Add_ReturnValue_2) == 0x0001E0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_CheckForErrors::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.ComputeDetectionParameters
// 0x00C0 (0x00C0 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_ComputeDetectionParameters final
{
public:
	struct FActorDetectionParameters              DetectionParameters;                               // 0x0000(0x0028)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_wildcard_Variable;                            // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActorDetectionParameters              K2Node_MakeStruct_ActorDetectionParameters;        // 0x0080(0x0028)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_ComputeDetectionParameters) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_ComputeDetectionParameters");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_ComputeDetectionParameters) == 0x0000C0, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_ComputeDetectionParameters");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ComputeDetectionParameters, DetectionParameters) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ComputeDetectionParameters::DetectionParameters' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ComputeDetectionParameters, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000028, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ComputeDetectionParameters::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ComputeDetectionParameters, Temp_wildcard_Variable) == 0x000030, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ComputeDetectionParameters::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ComputeDetectionParameters, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ComputeDetectionParameters::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ComputeDetectionParameters, CallFunc_VSize_ReturnValue) == 0x000060, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ComputeDetectionParameters::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ComputeDetectionParameters, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000068, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ComputeDetectionParameters::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ComputeDetectionParameters, K2Node_MakeStruct_ActorDetectionParameters) == 0x000080, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ComputeDetectionParameters::K2Node_MakeStruct_ActorDetectionParameters' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ComputeDetectionParameters, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000A8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ComputeDetectionParameters::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.DEBUG_OnCVarChanged_DisplayVisionDebug
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_OnCVarChanged_DisplayVisionDebug final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_OnCVarChanged_DisplayVisionDebug) == 0x000001, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_OnCVarChanged_DisplayVisionDebug");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_OnCVarChanged_DisplayVisionDebug) == 0x000001, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_OnCVarChanged_DisplayVisionDebug");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_OnCVarChanged_DisplayVisionDebug, NewValue) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_OnCVarChanged_DisplayVisionDebug::NewValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.DEBUG_SetOptimizationActive
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_SetOptimizationActive final
{
public:
	bool                                          LODOptimizationActive_0;                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_SetOptimizationActive) == 0x000001, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_SetOptimizationActive");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_SetOptimizationActive) == 0x000001, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_SetOptimizationActive");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_SetOptimizationActive, LODOptimizationActive_0) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_SetOptimizationActive::LODOptimizationActive_0' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.DEBUG_ShowState
// 0x0188 (0x0188 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState final
{
public:
	class ATargetPoint*                           CallFunc_GetNextTargetPoint_CurrentTargetPoint;    // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATargetPoint*                           CallFunc_GetCurrentTargetPoint_CurrentTargetPoint; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0048)(HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0110(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0120(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0168(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState) == 0x000188, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState, CallFunc_GetNextTargetPoint_CurrentTargetPoint) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState::CallFunc_GetNextTargetPoint_CurrentTargetPoint' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState, CallFunc_GetCurrentTargetPoint_CurrentTargetPoint) == 0x000070, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState::CallFunc_GetCurrentTargetPoint_CurrentTargetPoint' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState, CallFunc_IsValid_ReturnValue_1) == 0x000078, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000080, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState, CallFunc_BooleanOR_ReturnValue) == 0x000098, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState, CallFunc_MakeVector_ReturnValue) == 0x0000E8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000100, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState, CallFunc_Conv_StringToText_ReturnValue) == 0x000110, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState, K2Node_MakeStruct_FormatArgumentData_2) == 0x000120, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState, K2Node_MakeArray_Array) == 0x000168, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState, CallFunc_Format_ReturnValue) == 0x000178, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowState::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.EndCustomScriptState
// 0x0088 (0x0088 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_EndCustomScriptState final
{
public:
	const class UObject*                          CustomScriptSource;                                // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	E_AiStates                                    DesiredState;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0010(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0078(0x0010)()
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_EndCustomScriptState) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_EndCustomScriptState");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_EndCustomScriptState) == 0x000088, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_EndCustomScriptState");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_EndCustomScriptState, CustomScriptSource) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_EndCustomScriptState::CustomScriptSource' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_EndCustomScriptState, DesiredState) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_EndCustomScriptState::DesiredState' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_EndCustomScriptState, CallFunc_Array_IsEmpty_ReturnValue) == 0x000009, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_EndCustomScriptState::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_EndCustomScriptState, CallFunc_Array_RemoveItem_ReturnValue) == 0x00000A, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_EndCustomScriptState::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_EndCustomScriptState, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_EndCustomScriptState::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_EndCustomScriptState, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_EndCustomScriptState::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_EndCustomScriptState, K2Node_MakeArray_Array) == 0x000068, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_EndCustomScriptState::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_EndCustomScriptState, CallFunc_Format_ReturnValue) == 0x000078, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_EndCustomScriptState::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.EnterStunState
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_EnterStunState final
{
public:
	double                                        StunDuration;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_EnterStunState) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_EnterStunState");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_EnterStunState) == 0x000008, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_EnterStunState");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_EnterStunState, StunDuration) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_EnterStunState::StunDuration' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless
// 0x0E60 (0x0E60 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_EngageTypes                            Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_EngageTypes                            Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Interactable_1;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Interactable;                         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_World_C*             K2Node_Event_InteractingWorldCharacter;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Instant;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InteractionState;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWithinMaxAggroRange_ReturnValue;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdatePlayerCharacterDetection_Detected;  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_World_C*             K2Node_DynamicCast_AsBP_J_RPG_Character_World;     // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnVisionShapeEndOverlap_ValidEvent;       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldReactToCharacter_ReturnValue;       // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ShouldReactToCharacter_DebugReason;       // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetGlobalObjectID_ObjectID;               // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0xC];                                       // 0x0094(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00A0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_BattleState;                          // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0110(0x0010)()
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0128(0x0048)(HasGetValueTypeHash)
	class ABP_jRPG_Character_World_C*             K2Node_Event_PlayerCharacter;                      // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_ImpactPoint;                          // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_World_C*             K2Node_Event_PlayerCharacterWorld;                 // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDisabled;                           // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStartBattleWithCharacter_ReturnValue;  // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            K2Node_DynamicCast_AsBP_J_RPG_Controller_World;    // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInBattle_ReturnValue;                   // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F2[0x6];                                      // 0x01F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_1;            // 0x0210(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0220(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B2[0x6];                                      // 0x02B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_2;         // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x0308(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_315[0x3];                                      // 0x0315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0318(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_jRPG_Character_World_C*             K2Node_DynamicCast_AsBP_J_RPG_Character_World_1;   // 0x0410(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_419[0x3];                                      // 0x0419(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0420(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0428(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0430(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x043C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43D[0x3];                                      // 0x043D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0440(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0538(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0540(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0548(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_554[0x4];                                      // 0x0554(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_World_C*             K2Node_CustomEvent_JRPG_Character_world;           // 0x0558(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_561[0x7];                                      // 0x0561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_3;         // 0x0568(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_1;          // 0x0570(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_1;                   // 0x0578(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_1;                    // 0x0580(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_1;               // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x058C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58D[0x3];                                      // 0x058D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x0590(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent;            // 0x0688(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0690(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x0698(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x06A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A4[0x4];                                      // 0x06A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_World_C*             K2Node_DynamicCast_AsBP_J_RPG_Character_World_2;   // 0x06A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x06B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnVisionShapeEndOverlap_ValidEvent_1;     // 0x06B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanBeDetectedByEnemies_ReturnValue;       // 0x06B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B3[0x5];                                      // 0x06B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x06B8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x06C8(0x0048)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0710(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0718(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsActorAggroTriggerRoom_IsTriggerRoom;    // 0x0728(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_729[0x7];                                      // 0x0729(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0730(0x0010)()
	bool                                          Temp_wildcard_Variable;                            // 0x0740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_741[0x7];                                      // 0x0741(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameplayRoom_C*                     CallFunc_Array_Get_Item;                           // 0x0748(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_751[0x3];                                      // 0x0751(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0754(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ABP_jRPG_Character_World_C* Character)> K2Node_CreateDelegate_OutputDelegate; // 0x0758(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_World_C*             K2Node_CustomEvent_Character;                      // 0x0768(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateCharacterRoomsRequirement_ReturnValue; // 0x0770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x0771(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldReactToCharacter_ReturnValue_1;     // 0x0772(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_773[0x5];                                      // 0x0773(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ShouldReactToCharacter_DebugReason_1;     // 0x0778(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_MultiGate_FirstRun;                         // 0x0789(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_MultiGate_ScratchBool;                      // 0x078A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78B[0x1];                                      // 0x078B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_MultiGate_ScratchIndex;                     // 0x078C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_LODOptimizationActive;          // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0791(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_792[0x6];                                      // 0x0792(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0798(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x07A8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x07B8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0800(0x0010)(ReferenceParm)
	TDelegate<void(bool NewValue)>                K2Node_CreateDelegate_OutputDelegate_1;            // 0x0810(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0820(0x0010)()
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0830(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0840(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0848(0x0010)()
	class AController_WorldAI_C*                  K2Node_DynamicCast_AsController_World_AI;          // 0x0858(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_861[0x7];                                      // 0x0861(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0868(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x08B0(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue_2;                     // 0x08C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x08D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewValue;                       // 0x08D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x08D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x08D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D4[0x4];                                      // 0x08D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x08D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x08E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E1[0x7];                                      // 0x08E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x08E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0900(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Paused;                               // 0x0960(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_961[0xF];                                      // 0x0961(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSavedEnemyTransform_Transform;         // 0x0970(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSavedEnemyTransform_IsValid;           // 0x09D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D1[0xF];                                      // 0x09D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_SelectTransform_ReturnValue;              // 0x09E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0A40(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0B38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B39[0x7];                                      // 0x0B39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0B40(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0B58(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0B60(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue_1;         // 0x0B78(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0B80(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue_2;         // 0x0B98(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanBeDetectedByEnemies_ReturnValue_1;     // 0x0BA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateCharacterRoomsRequirement_ReturnValue_1; // 0x0BA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0BA2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldReactToCharacter_ReturnValue_2;     // 0x0BA3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA4[0x4];                                      // 0x0BA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ShouldReactToCharacter_DebugReason_2;     // 0x0BA8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0BB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0BB9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0BBA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0BBB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BBC[0x4];                                      // 0x0BBC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0BC0(0x0010)(ReferenceParm, ContainsInstancedReference)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0BD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD1[0x7];                                      // 0x0BD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0BD8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            K2Node_DynamicCast_AsBP_J_RPG_Controller_World_1;  // 0x0BE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0BE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE9[0x7];                                      // 0x0BE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0BF0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UABP_Battle_Global_C*                   K2Node_DynamicCast_AsABP_Battle_Global;            // 0x0BF8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0C00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C01[0x7];                                      // 0x0C01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x0C08(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_1;         // 0x0C20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x0C38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C39[0x7];                                      // 0x0C39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0C40(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0C58(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0C70(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    CallFunc_Array_Random_OutItem;                     // 0x0C88(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0C98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9C[0x4];                                      // 0x0C9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_1;      // 0x0CA0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0CA8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_WorldInfoComponent_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0CB0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0CB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_WorldInfoComponent_C*               CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0CC0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0CC8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBrainComponent*                        CallFunc_GetComponentByClass_ReturnValue_2;        // 0x0CD0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStartBattleWithCharacter_ReturnValue_1; // 0x0CD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0CD9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CDA[0x6];                                      // 0x0CDA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_2;            // 0x0CE0(0x0010)()
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0CF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CF1[0x7];                                      // 0x0CF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0CF8(0x0048)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0D40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEnemyBattleState_BattleState;          // 0x0D44(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D45[0x3];                                      // 0x0D45(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_3;            // 0x0D48(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0D58(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x0DA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA1[0x7];                                      // 0x0DA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0DA8(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0DB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DB9[0x7];                                      // 0x0DB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue_3;                     // 0x0DC0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0DD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD1[0x3];                                      // 0x0DD1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0DD4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE4[0x4];                                      // 0x0DE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0DE8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default;                             // 0x0DF0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0DF8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetEnemyBattleState_BattleState_1;        // 0x0E10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E11[0x3];                                      // 0x0E11(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0E14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0E18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0E1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0E20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0E38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanBeDetectedByEnemies_ReturnValue_2;     // 0x0E39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E3A[0x6];                                      // 0x0E3A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_StunDuration;                   // 0x0E40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0E48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0E4C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4D[0x3];                                      // 0x0E4D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0E50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_EngageTypes                            K2Node_Select_Default_1;                           // 0x0E54(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E55[0x3];                                      // 0x0E55(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_VariableSet_MaxWalkSpeed_ImplicitCast;      // 0x0E58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast; // 0x0E5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless) == 0x000010, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless) == 0x000E60, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, EntryPoint) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, Temp_bool_Variable) == 0x000004, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, Temp_byte_Variable) == 0x000005, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, Temp_byte_Variable_1) == 0x000006, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_Event_Interactable_1) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_Event_Interactable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_Event_Interactable) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_Event_Interactable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_Event_InteractingWorldCharacter) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_Event_InteractingWorldCharacter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_Event_Instant) == 0x000020, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_Event_Instant' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_Event_InteractionState) == 0x000021, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_Event_InteractionState' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_Event_DeltaSeconds) == 0x000024, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_IsWithinMaxAggroRange_ReturnValue) == 0x000028, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_IsWithinMaxAggroRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_UpdatePlayerCharacterDetection_Detected) == 0x00002A, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_UpdatePlayerCharacterDetection_Detected' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000030, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Not_PreBool_ReturnValue_1) == 0x000038, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_DynamicCast_AsBP_J_RPG_Character_World) == 0x000040, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_DynamicCast_AsBP_J_RPG_Character_World' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000050, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_OnVisionShapeEndOverlap_ValidEvent) == 0x000058, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_OnVisionShapeEndOverlap_ValidEvent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_ShouldReactToCharacter_ReturnValue) == 0x000059, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_ShouldReactToCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_ShouldReactToCharacter_DebugReason) == 0x000060, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_ShouldReactToCharacter_DebugReason' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000070, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Concat_StrStr_ReturnValue) == 0x000078, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Not_PreBool_ReturnValue_2) == 0x000088, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_GetGlobalObjectID_ObjectID) == 0x00008C, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_GetGlobalObjectID_ObjectID' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_GetTransform_ReturnValue) == 0x0000A0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_GetCustomGI_ReturnValue) == 0x000100, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_Event_BattleState) == 0x000108, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_Event_BattleState' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Conv_BoolToText_ReturnValue) == 0x000110, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Not_PreBool_ReturnValue_3) == 0x000120, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_MakeStruct_FormatArgumentData) == 0x000128, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_Event_PlayerCharacter) == 0x000170, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_Event_PlayerCharacter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_Event_ImpactPoint) == 0x000178, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_Event_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_Event_PlayerCharacterWorld) == 0x000190, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_Event_PlayerCharacterWorld' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_Event_HitLocation) == 0x000198, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_Event_IsDisabled) == 0x0001B0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_Event_IsDisabled' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x0001B8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001C0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_CanStartBattleWithCharacter_ReturnValue) == 0x0001D8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_CanStartBattleWithCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_GetPlayerController_ReturnValue) == 0x0001E0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_DynamicCast_AsBP_J_RPG_Controller_World) == 0x0001E8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_DynamicCast_AsBP_J_RPG_Controller_World' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_DynamicCast_bSuccess_1) == 0x0001F0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_IsInBattle_ReturnValue) == 0x0001F1, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_IsInBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0001F8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Conv_BoolToText_ReturnValue_1) == 0x000210, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Conv_BoolToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_MakeStruct_FormatArgumentData_1) == 0x000220, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Not_PreBool_ReturnValue_4) == 0x000268, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000270, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_BreakRotator_Roll) == 0x000288, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_BreakRotator_Pitch) == 0x00028C, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_BreakRotator_Yaw) == 0x000290, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000298, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_SwitchEnum_CmpSuccess) == 0x0002B0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0002B1, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_GetPlayerCharacter_ReturnValue_2) == 0x0002B8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_GetPlayerCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_IsValid_ReturnValue) == 0x0002C0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0002C8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_FindLookAtRotation_ReturnValue) == 0x0002E0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x0002F8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_ComponentBoundEvent_OtherActor_2) == 0x000300, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_ComponentBoundEvent_OtherComp_2) == 0x000308, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x000310, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x000314, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000318, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_DynamicCast_AsBP_J_RPG_Character_World_1) == 0x000410, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_DynamicCast_AsBP_J_RPG_Character_World_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_DynamicCast_bSuccess_2) == 0x000418, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, Temp_int_Array_Index_Variable) == 0x00041C, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000420, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000428, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000430, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000438, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_ComponentBoundEvent_bFromSweep) == 0x00043C, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_ComponentBoundEvent_SweepResult) == 0x000440, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000538, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_ComponentBoundEvent_OtherActor) == 0x000540, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_ComponentBoundEvent_OtherComp) == 0x000548, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000550, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_CustomEvent_JRPG_Character_world) == 0x000558, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_CustomEvent_JRPG_Character_world' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_SwitchEnum_CmpSuccess_1) == 0x000560, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_GetPlayerCharacter_ReturnValue_3) == 0x000568, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_GetPlayerCharacter_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_CustomEvent_OverlappedComponent_1) == 0x000570, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_CustomEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_CustomEvent_OtherActor_1) == 0x000578, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_CustomEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_CustomEvent_OtherComp_1) == 0x000580, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_CustomEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_CustomEvent_OtherBodyIndex_1) == 0x000588, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_CustomEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_CustomEvent_bFromSweep) == 0x00058C, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_CustomEvent_SweepResult) == 0x000590, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_CustomEvent_OverlappedComponent) == 0x000688, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_CustomEvent_OtherActor) == 0x000690, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_CustomEvent_OtherComp) == 0x000698, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_CustomEvent_OtherBodyIndex) == 0x0006A0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_DynamicCast_AsBP_J_RPG_Character_World_2) == 0x0006A8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_DynamicCast_AsBP_J_RPG_Character_World_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_DynamicCast_bSuccess_3) == 0x0006B0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_OnVisionShapeEndOverlap_ValidEvent_1) == 0x0006B1, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_OnVisionShapeEndOverlap_ValidEvent_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_CanBeDetectedByEnemies_ReturnValue) == 0x0006B2, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_CanBeDetectedByEnemies_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Conv_ObjectToText_ReturnValue) == 0x0006B8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_MakeStruct_FormatArgumentData_2) == 0x0006C8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_GetOwner_ReturnValue) == 0x000710, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_MakeArray_Array) == 0x000718, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_IsActorAggroTriggerRoom_IsTriggerRoom) == 0x000728, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_IsActorAggroTriggerRoom_IsTriggerRoom' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Format_ReturnValue) == 0x000730, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, Temp_wildcard_Variable) == 0x000740, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Array_Get_Item) == 0x000748, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Not_PreBool_ReturnValue_5) == 0x000750, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Array_Length_ReturnValue) == 0x000754, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_CreateDelegate_OutputDelegate) == 0x000758, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_CustomEvent_Character) == 0x000768, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_UpdateCharacterRoomsRequirement_ReturnValue) == 0x000770, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_UpdateCharacterRoomsRequirement_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Not_PreBool_ReturnValue_6) == 0x000771, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_ShouldReactToCharacter_ReturnValue_1) == 0x000772, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_ShouldReactToCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_ShouldReactToCharacter_DebugReason_1) == 0x000778, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_ShouldReactToCharacter_DebugReason_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_SwitchEnum_CmpSuccess_2) == 0x000788, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_MultiGate_FirstRun) == 0x000789, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_MultiGate_FirstRun' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_MultiGate_ScratchBool) == 0x00078A, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_MultiGate_ScratchBool' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_MultiGate_ScratchIndex) == 0x00078C, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_MultiGate_ScratchIndex' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_CustomEvent_LODOptimizationActive) == 0x000790, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_CustomEvent_LODOptimizationActive' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000791, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000798, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Conv_StringToText_ReturnValue) == 0x0007A8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_MakeStruct_FormatArgumentData_3) == 0x0007B8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_MakeArray_Array_1) == 0x000800, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_CreateDelegate_OutputDelegate_1) == 0x000810, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Format_ReturnValue_1) == 0x000820, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_GetDisplayName_ReturnValue) == 0x000830, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_GetController_ReturnValue) == 0x000840, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000848, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_DynamicCast_AsController_World_AI) == 0x000858, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_DynamicCast_AsController_World_AI' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_DynamicCast_bSuccess_4) == 0x000860, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_MakeStruct_FormatArgumentData_4) == 0x000868, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_MakeArray_Array_2) == 0x0008B0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Format_ReturnValue_2) == 0x0008C0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0008D0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_CustomEvent_NewValue) == 0x0008D1, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x0008D2, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Not_PreBool_ReturnValue_7) == 0x0008D3, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_GetPlayerPawn_ReturnValue) == 0x0008D8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0008E0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x0008E8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_GetTransform_ReturnValue_1) == 0x000900, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_Event_Paused) == 0x000960, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_Event_Paused' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_GetSavedEnemyTransform_Transform) == 0x000970, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_GetSavedEnemyTransform_Transform' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_GetSavedEnemyTransform_IsValid) == 0x0009D0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_GetSavedEnemyTransform_IsValid' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_SelectTransform_ReturnValue) == 0x0009E0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_SelectTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000A40, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000B38, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000B40, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000B58, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000B60, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_SpawnSoundAttached_ReturnValue_1) == 0x000B78, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_SpawnSoundAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000B80, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_SpawnSoundAttached_ReturnValue_2) == 0x000B98, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_SpawnSoundAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_CanBeDetectedByEnemies_ReturnValue_1) == 0x000BA0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_CanBeDetectedByEnemies_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_UpdateCharacterRoomsRequirement_ReturnValue_1) == 0x000BA1, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_UpdateCharacterRoomsRequirement_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000BA2, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_ShouldReactToCharacter_ReturnValue_2) == 0x000BA3, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_ShouldReactToCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_ShouldReactToCharacter_DebugReason_2) == 0x000BA8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_ShouldReactToCharacter_DebugReason_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000BB8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000BB9, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000BBA, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000BBB, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000BC0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_Event_EndPlayReason) == 0x000BD0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_GetPlayerController_ReturnValue_1) == 0x000BD8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_DynamicCast_AsBP_J_RPG_Controller_World_1) == 0x000BE0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_DynamicCast_AsBP_J_RPG_Controller_World_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_DynamicCast_bSuccess_5) == 0x000BE8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_GetAnimInstance_ReturnValue) == 0x000BF0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_DynamicCast_AsABP_Battle_Global) == 0x000BF8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_DynamicCast_AsABP_Battle_Global' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_DynamicCast_bSuccess_6) == 0x000C00, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x000C08, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_FindLookAtRotation_ReturnValue_1) == 0x000C20, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_FindLookAtRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Not_PreBool_ReturnValue_8) == 0x000C38, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_GetForwardVector_ReturnValue) == 0x000C40, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000C58, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Add_VectorVector_ReturnValue) == 0x000C70, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Array_Random_OutItem) == 0x000C88, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Array_Random_OutIndex) == 0x000C98, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_SpawnSystemAtLocation_ReturnValue_1) == 0x000CA0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_SpawnSystemAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_GetGameMode_ReturnValue) == 0x000CA8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_GetComponentByClass_ReturnValue) == 0x000CB0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_GetGameMode_ReturnValue_1) == 0x000CB8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000CC0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_GetController_ReturnValue_1) == 0x000CC8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_GetComponentByClass_ReturnValue_2) == 0x000CD0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_CanStartBattleWithCharacter_ReturnValue_1) == 0x000CD8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_CanStartBattleWithCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_BooleanAND_ReturnValue) == 0x000CD9, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Conv_BoolToText_ReturnValue_2) == 0x000CE0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Conv_BoolToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_BooleanAND_ReturnValue_1) == 0x000CF0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_MakeStruct_FormatArgumentData_5) == 0x000CF8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, Temp_int_Variable) == 0x000D40, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_GetEnemyBattleState_BattleState) == 0x000D44, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_GetEnemyBattleState_BattleState' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Conv_BoolToText_ReturnValue_3) == 0x000D48, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Conv_BoolToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_MakeStruct_FormatArgumentData_6) == 0x000D58, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Not_PreBool_ReturnValue_9) == 0x000DA0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_MakeArray_Array_3) == 0x000DA8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_BooleanAND_ReturnValue_2) == 0x000DB8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Format_ReturnValue_3) == 0x000DC0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, Temp_bool_Variable_1) == 0x000DD0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_CreateDelegate_OutputDelegate_2) == 0x000DD4, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000DE8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_Select_Default) == 0x000DF0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_RLerp_ReturnValue) == 0x000DF8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_GetEnemyBattleState_BattleState_1) == 0x000E10, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_GetEnemyBattleState_BattleState_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_BreakRotator_Roll_1) == 0x000E14, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_BreakRotator_Pitch_1) == 0x000E18, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_BreakRotator_Yaw_1) == 0x000E1C, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_MakeRotator_ReturnValue) == 0x000E20, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000E38, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_CanBeDetectedByEnemies_ReturnValue_2) == 0x000E39, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_CanBeDetectedByEnemies_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_CustomEvent_StunDuration) == 0x000E40, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_CustomEvent_StunDuration' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, Temp_int_Loop_Counter_Variable) == 0x000E48, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Less_IntInt_ReturnValue) == 0x000E4C, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_Add_IntInt_ReturnValue) == 0x000E50, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_Select_Default_1) == 0x000E54, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, K2Node_VariableSet_MaxWalkSpeed_ImplicitCast) == 0x000E58, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::K2Node_VariableSet_MaxWalkSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless, CallFunc_RetriggerableDelay_Duration_ImplicitCast) == 0x000E5C, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExecuteUbergraph_BP_jRPG_Enemy_World_Base_Seamless::CallFunc_RetriggerableDelay_Duration_ImplicitCast' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.ExplorationAttacked
// 0x0020 (0x0020 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_ExplorationAttacked final
{
public:
	class ABP_jRPG_Character_World_C*             PlayerCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactPoint;                                       // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_ExplorationAttacked) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_ExplorationAttacked");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_ExplorationAttacked) == 0x000020, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_ExplorationAttacked");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExplorationAttacked, PlayerCharacter) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExplorationAttacked::PlayerCharacter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ExplorationAttacked, ImpactPoint) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ExplorationAttacked::ImpactPoint' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.FreeAimHit
// 0x0028 (0x0028 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_FreeAimHit final
{
public:
	class ABP_jRPG_Character_World_C*             PlayerCharacterWorld;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDisabled;                                        // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_FreeAimHit) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_FreeAimHit");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_FreeAimHit) == 0x000028, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_FreeAimHit");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_FreeAimHit, PlayerCharacterWorld) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_FreeAimHit::PlayerCharacterWorld' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_FreeAimHit, HitLocation) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_FreeAimHit::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_FreeAimHit, IsDisabled) == 0x000020, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_FreeAimHit::IsDisabled' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.GetAllAudioComponents
// 0x0020 (0x0020 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_GetAllAudioComponents final
{
public:
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_GetAllAudioComponents) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_GetAllAudioComponents");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_GetAllAudioComponents) == 0x000020, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_GetAllAudioComponents");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetAllAudioComponents, AudioComponents) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetAllAudioComponents::AudioComponents' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetAllAudioComponents, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetAllAudioComponents::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.GetAudioCharacterManager
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioCharacterManager final
{
public:
	class UActorComponent*                        AudioCharacterManager;                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioCharacterManager) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioCharacterManager");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioCharacterManager) == 0x000008, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioCharacterManager");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioCharacterManager, AudioCharacterManager) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioCharacterManager::AudioCharacterManager' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.GetAudioComponentByType
// 0x0020 (0x0020 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponentByType final
{
public:
	EInWorldAudioContainerComponents              Type;                                              // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        AudioComponent;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EInWorldAudioContainerComponents              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponentByType) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponentByType");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponentByType) == 0x000020, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponentByType");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponentByType, Type) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponentByType::Type' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponentByType, AudioComponent) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponentByType::AudioComponent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponentByType, Temp_byte_Variable) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponentByType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponentByType, K2Node_Select_Default) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponentByType::K2Node_Select_Default' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.GetAudioComponents
// 0x0070 (0x0070 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents final
{
public:
	class UAudioComponent*                        AC_SFX_01_0;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AC_Foleys_01_0;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AC_FT_L_0;                                         // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AC_Vocals_01;                                      // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AC_SFX_02_0;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AC_Foleys_02_0;                                    // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AC_FT_R_0;                                         // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AC_Vocals_02;                                      // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AC_Idle_0;                                         // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AC_Weapon_L_01;                                    // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AC_Weapon_L_02;                                    // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AC_Weapon_R_01;                                    // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AC_Hand_L_01;                                      // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AC_Hand_R_01;                                      // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents) == 0x000070, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents, AC_SFX_01_0) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents::AC_SFX_01_0' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents, AC_Foleys_01_0) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents::AC_Foleys_01_0' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents, AC_FT_L_0) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents::AC_FT_L_0' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents, AC_Vocals_01) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents::AC_Vocals_01' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents, AC_SFX_02_0) == 0x000020, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents::AC_SFX_02_0' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents, AC_Foleys_02_0) == 0x000028, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents::AC_Foleys_02_0' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents, AC_FT_R_0) == 0x000030, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents::AC_FT_R_0' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents, AC_Vocals_02) == 0x000038, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents::AC_Vocals_02' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents, AC_Idle_0) == 0x000040, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents::AC_Idle_0' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents, AC_Weapon_L_01) == 0x000048, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents::AC_Weapon_L_01' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents, AC_Weapon_L_02) == 0x000050, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents::AC_Weapon_L_02' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents, AC_Weapon_R_01) == 0x000058, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents::AC_Weapon_R_01' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents, AC_Hand_L_01) == 0x000060, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents::AC_Hand_L_01' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents, AC_Hand_R_01) == 0x000068, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetAudioComponents::AC_Hand_R_01' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.GetBattleCameraTransition
// 0x0018 (0x0018 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_GetBattleCameraTransition final
{
public:
	class UCameraAnimationSequence*               CameraTransition;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraAnimationSequence*               CallFunc_Array_Random_OutItem;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_GetBattleCameraTransition) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_GetBattleCameraTransition");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_GetBattleCameraTransition) == 0x000018, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_GetBattleCameraTransition");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetBattleCameraTransition, CameraTransition) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetBattleCameraTransition::CameraTransition' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetBattleCameraTransition, CallFunc_Array_Random_OutItem) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetBattleCameraTransition::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetBattleCameraTransition, CallFunc_Array_Random_OutIndex) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetBattleCameraTransition::CallFunc_Array_Random_OutIndex' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.GetClosestInteractable
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_GetClosestInteractable final
{
public:
	class AActor*                                 Interactable;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_GetClosestInteractable) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_GetClosestInteractable");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_GetClosestInteractable) == 0x000008, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_GetClosestInteractable");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetClosestInteractable, Interactable) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetClosestInteractable::Interactable' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.GetCurrentInputDevice
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_GetCurrentInputDevice final
{
public:
	EInputDevices::EInputDevices                  InputDevice;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_GetCurrentInputDevice) == 0x000001, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_GetCurrentInputDevice");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_GetCurrentInputDevice) == 0x000001, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_GetCurrentInputDevice");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetCurrentInputDevice, InputDevice) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetCurrentInputDevice::InputDevice' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.GetGlobalObjectIDWithGroup
// 0x0030 (0x0030 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_GetGlobalObjectIDWithGroup final
{
public:
	class FName                                   ObjectId;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetGlobalObjectID_ObjectID;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_EnemyGroup_C*                       K2Node_DynamicCast_AsBP_Enemy_Group;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetGlobalObjectID_ObjectID_1;             // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_GetGlobalObjectIDWithGroup) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_GetGlobalObjectIDWithGroup");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_GetGlobalObjectIDWithGroup) == 0x000030, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_GetGlobalObjectIDWithGroup");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetGlobalObjectIDWithGroup, ObjectId) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetGlobalObjectIDWithGroup::ObjectId' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetGlobalObjectIDWithGroup, CallFunc_GetGlobalObjectID_ObjectID) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetGlobalObjectIDWithGroup::CallFunc_GetGlobalObjectID_ObjectID' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetGlobalObjectIDWithGroup, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetGlobalObjectIDWithGroup::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetGlobalObjectIDWithGroup, K2Node_DynamicCast_AsBP_Enemy_Group) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetGlobalObjectIDWithGroup::K2Node_DynamicCast_AsBP_Enemy_Group' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetGlobalObjectIDWithGroup, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetGlobalObjectIDWithGroup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetGlobalObjectIDWithGroup, CallFunc_GetGlobalObjectID_ObjectID_1) == 0x000024, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetGlobalObjectIDWithGroup::CallFunc_GetGlobalObjectID_ObjectID_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetGlobalObjectIDWithGroup, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetGlobalObjectIDWithGroup::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.GetInitialTransform
// 0x0060 (0x0060 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_GetInitialTransform final
{
public:
	struct FTransform                             ReturnValue;                                       // 0x0000(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_GetInitialTransform) == 0x000010, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_GetInitialTransform");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_GetInitialTransform) == 0x000060, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_GetInitialTransform");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetInitialTransform, ReturnValue) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetInitialTransform::ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.GetInteractionPromptParams
// 0x0018 (0x0018 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_GetInteractionPromptParams final
{
public:
	struct FFPromptParams                         PromptParams;                                      // 0x0000(0x0018)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_GetInteractionPromptParams) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_GetInteractionPromptParams");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_GetInteractionPromptParams) == 0x000018, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_GetInteractionPromptParams");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetInteractionPromptParams, PromptParams) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetInteractionPromptParams::PromptParams' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.GetLookAtRotator
// 0x00A8 (0x00A8 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_GetLookAtRotator final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotator;                                           // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_GetLookAtRotator) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_GetLookAtRotator");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_GetLookAtRotator) == 0x0000A8, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_GetLookAtRotator");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetLookAtRotator, Target) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetLookAtRotator::Target' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetLookAtRotator, Rotator) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetLookAtRotator::Rotator' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetLookAtRotator, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetLookAtRotator::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetLookAtRotator, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000038, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetLookAtRotator::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetLookAtRotator, CallFunc_FindLookAtRotation_ReturnValue) == 0x000050, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetLookAtRotator::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetLookAtRotator, CallFunc_BreakRotator_Roll) == 0x000068, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetLookAtRotator::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetLookAtRotator, CallFunc_BreakRotator_Pitch) == 0x00006C, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetLookAtRotator::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetLookAtRotator, CallFunc_BreakRotator_Yaw) == 0x000070, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetLookAtRotator::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetLookAtRotator, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000078, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetLookAtRotator::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetLookAtRotator, CallFunc_MakeRotator_ReturnValue) == 0x000080, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetLookAtRotator::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetLookAtRotator, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000098, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetLookAtRotator::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetLookAtRotator, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0000A0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetLookAtRotator::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.GetPlayerCharacterIsInDetectionRange
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_GetPlayerCharacterIsInDetectionRange final
{
public:
	bool                                          PlayerCharacterIsInDetectionRange_0;               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_GetPlayerCharacterIsInDetectionRange) == 0x000001, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_GetPlayerCharacterIsInDetectionRange");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_GetPlayerCharacterIsInDetectionRange) == 0x000001, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_GetPlayerCharacterIsInDetectionRange");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetPlayerCharacterIsInDetectionRange, PlayerCharacterIsInDetectionRange_0) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetPlayerCharacterIsInDetectionRange::PlayerCharacterIsInDetectionRange_0' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.InitializeGameplayRooms
// 0x00C8 (0x00C8 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ABP_GameplayRoom_C>      CallFunc_Array_Get_Item;                           // 0x0018(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameplayRoom_C*                     K2Node_DynamicCast_AsBP_Gameplay_Room;             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ABP_GameplayRoom_C>      CallFunc_Array_Get_Item_1;                         // 0x0070(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameplayRoom_C*                     K2Node_DynamicCast_AsBP_Gameplay_Room_1;           // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms) == 0x0000C8, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms, Temp_int_Loop_Counter_Variable_1) == 0x00000C, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000048, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms, K2Node_DynamicCast_AsBP_Gameplay_Room) == 0x000058, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms::K2Node_DynamicCast_AsBP_Gameplay_Room' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms, CallFunc_Array_Add_ReturnValue) == 0x000064, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms, CallFunc_Array_Length_ReturnValue_1) == 0x000098, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x0000A0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms, K2Node_DynamicCast_AsBP_Gameplay_Room_1) == 0x0000B0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms::K2Node_DynamicCast_AsBP_Gameplay_Room_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms, K2Node_DynamicCast_bSuccess_1) == 0x0000B8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms, CallFunc_Array_Add_ReturnValue_1) == 0x0000BC, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms, CallFunc_IsValid_ReturnValue_1) == 0x0000C0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_InitializeGameplayRooms::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.IsActorAggroTriggerRoom
// 0x0020 (0x0020 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_IsActorAggroTriggerRoom final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTriggerRoom;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameplayRoom_C*                     K2Node_DynamicCast_AsBP_Gameplay_Room;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_IsActorAggroTriggerRoom) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_IsActorAggroTriggerRoom");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_IsActorAggroTriggerRoom) == 0x000020, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_IsActorAggroTriggerRoom");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_IsActorAggroTriggerRoom, Actor) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_IsActorAggroTriggerRoom::Actor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_IsActorAggroTriggerRoom, IsTriggerRoom) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_IsActorAggroTriggerRoom::IsTriggerRoom' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_IsActorAggroTriggerRoom, K2Node_DynamicCast_AsBP_Gameplay_Room) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_IsActorAggroTriggerRoom::K2Node_DynamicCast_AsBP_Gameplay_Room' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_IsActorAggroTriggerRoom, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_IsActorAggroTriggerRoom::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_IsActorAggroTriggerRoom, CallFunc_Array_Contains_ReturnValue) == 0x000019, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_IsActorAggroTriggerRoom::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.IsFreeAimTargetDisabled
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_IsFreeAimTargetDisabled final
{
public:
	bool                                          IsDisabled;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_IsFreeAimTargetDisabled) == 0x000001, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_IsFreeAimTargetDisabled");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_IsFreeAimTargetDisabled) == 0x000001, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_IsFreeAimTargetDisabled");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_IsFreeAimTargetDisabled, IsDisabled) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_IsFreeAimTargetDisabled::IsDisabled' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.IsInteractionAvailable
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_IsInteractionAvailable final
{
public:
	bool                                          Available;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_IsInteractionAvailable) == 0x000001, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_IsInteractionAvailable");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_IsInteractionAvailable) == 0x000001, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_IsInteractionAvailable");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_IsInteractionAvailable, Available) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_IsInteractionAvailable::Available' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.IsInteractionDone
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_IsInteractionDone final
{
public:
	bool                                          Done;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_IsInteractionDone) == 0x000001, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_IsInteractionDone");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_IsInteractionDone) == 0x000001, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_IsInteractionDone");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_IsInteractionDone, Done) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_IsInteractionDone::Done' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.IsPlayerTooPowerfullToChase
// 0x0090 (0x0090 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_IsPlayerTooPowerfullToChase final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeamLevel_MaxValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_WorldInfoComponent_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEncounterDataTableRow_Found;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Encounter                      CallFunc_GetEncounterDataTableRow_EncounterData;   // 0x0020(0x0060)(HasGetValueTypeHash)
	int32                                         CallFunc_GetMaximumLevelGapToChasePlayer_MaximumLevelGapToChasePlayer; // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ComputeEncounterLevelForBattle_EncounterLevel; // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_IsPlayerTooPowerfullToChase) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_IsPlayerTooPowerfullToChase");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_IsPlayerTooPowerfullToChase) == 0x000090, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_IsPlayerTooPowerfullToChase");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_IsPlayerTooPowerfullToChase, ReturnValue) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_IsPlayerTooPowerfullToChase::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_IsPlayerTooPowerfullToChase, CallFunc_GetTeamLevel_MaxValue) == 0x000004, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_IsPlayerTooPowerfullToChase::CallFunc_GetTeamLevel_MaxValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_IsPlayerTooPowerfullToChase, CallFunc_GetGameMode_ReturnValue) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_IsPlayerTooPowerfullToChase::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_IsPlayerTooPowerfullToChase, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_IsPlayerTooPowerfullToChase::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_IsPlayerTooPowerfullToChase, CallFunc_GetEncounterDataTableRow_Found) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_IsPlayerTooPowerfullToChase::CallFunc_GetEncounterDataTableRow_Found' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_IsPlayerTooPowerfullToChase, CallFunc_GetEncounterDataTableRow_EncounterData) == 0x000020, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_IsPlayerTooPowerfullToChase::CallFunc_GetEncounterDataTableRow_EncounterData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_IsPlayerTooPowerfullToChase, CallFunc_GetMaximumLevelGapToChasePlayer_MaximumLevelGapToChasePlayer) == 0x000080, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_IsPlayerTooPowerfullToChase::CallFunc_GetMaximumLevelGapToChasePlayer_MaximumLevelGapToChasePlayer' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_IsPlayerTooPowerfullToChase, CallFunc_ComputeEncounterLevelForBattle_EncounterLevel) == 0x000084, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_IsPlayerTooPowerfullToChase::CallFunc_ComputeEncounterLevelForBattle_EncounterLevel' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_IsPlayerTooPowerfullToChase, CallFunc_Subtract_IntInt_ReturnValue) == 0x000088, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_IsPlayerTooPowerfullToChase::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_IsPlayerTooPowerfullToChase, CallFunc_Greater_IntInt_ReturnValue) == 0x00008C, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_IsPlayerTooPowerfullToChase::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.IsWithinMaxAggroRange
// 0x0050 (0x0050 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_IsWithinMaxAggroRange final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_IsWithinMaxAggroRange) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_IsWithinMaxAggroRange");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_IsWithinMaxAggroRange) == 0x000050, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_IsWithinMaxAggroRange");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_IsWithinMaxAggroRange, ReturnValue) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_IsWithinMaxAggroRange::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_IsWithinMaxAggroRange, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_IsWithinMaxAggroRange::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_IsWithinMaxAggroRange, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000020, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_IsWithinMaxAggroRange::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_IsWithinMaxAggroRange, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000028, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_IsWithinMaxAggroRange::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_IsWithinMaxAggroRange, CallFunc_Vector_Distance_ReturnValue) == 0x000040, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_IsWithinMaxAggroRange::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_IsWithinMaxAggroRange, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_IsWithinMaxAggroRange::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.OnBattleFinished
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_OnBattleFinished final
{
public:
	EBattleEndResult                              BattleEndResult;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_OnBattleFinished) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_OnBattleFinished");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_OnBattleFinished) == 0x000010, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_OnBattleFinished");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnBattleFinished, BattleEndResult) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnBattleFinished::BattleEndResult' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnBattleFinished, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnBattleFinished::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnBattleFinished, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnBattleFinished::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.OnCharacterEnteredVisionRange
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_OnCharacterEnteredVisionRange final
{
public:
	class ABP_jRPG_Character_World_C*             JRPG_Character_world;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_OnCharacterEnteredVisionRange) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_OnCharacterEnteredVisionRange");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_OnCharacterEnteredVisionRange) == 0x000008, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_OnCharacterEnteredVisionRange");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnCharacterEnteredVisionRange, JRPG_Character_world) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnCharacterEnteredVisionRange::JRPG_Character_world' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.OnCharacterLeftVisionHysteresisTimerCompleted
// 0x0014 (0x0014 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_OnCharacterLeftVisionHysteresisTimerCompleted final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ABP_jRPG_Character_World_C* Character)> K2Node_CreateDelegate_OutputDelegate; // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_OnCharacterLeftVisionHysteresisTimerCompleted) == 0x000004, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_OnCharacterLeftVisionHysteresisTimerCompleted");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_OnCharacterLeftVisionHysteresisTimerCompleted) == 0x000014, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_OnCharacterLeftVisionHysteresisTimerCompleted");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnCharacterLeftVisionHysteresisTimerCompleted, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnCharacterLeftVisionHysteresisTimerCompleted::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnCharacterLeftVisionHysteresisTimerCompleted, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000001, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnCharacterLeftVisionHysteresisTimerCompleted::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnCharacterLeftVisionHysteresisTimerCompleted, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnCharacterLeftVisionHysteresisTimerCompleted::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.OnDetectedCharacterChangedRoom
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_OnDetectedCharacterChangedRoom final
{
public:
	class ABP_jRPG_Character_World_C*             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_OnDetectedCharacterChangedRoom) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_OnDetectedCharacterChangedRoom");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_OnDetectedCharacterChangedRoom) == 0x000008, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_OnDetectedCharacterChangedRoom");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnDetectedCharacterChangedRoom, Character) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnDetectedCharacterChangedRoom::Character' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.OnEnemyBattledEvent
// 0x0014 (0x0014 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_OnEnemyBattledEvent final
{
public:
	class FName                                   EnemyID;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetGlobalObjectIDWithGroup_ObjectID;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEnemyBattleState_BattleState;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_OnEnemyBattledEvent) == 0x000004, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_OnEnemyBattledEvent");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_OnEnemyBattledEvent) == 0x000014, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_OnEnemyBattledEvent");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnEnemyBattledEvent, EnemyID) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnEnemyBattledEvent::EnemyID' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnEnemyBattledEvent, CallFunc_GetGlobalObjectIDWithGroup_ObjectID) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnEnemyBattledEvent::CallFunc_GetGlobalObjectIDWithGroup_ObjectID' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnEnemyBattledEvent, CallFunc_GetEnemyBattleState_BattleState) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnEnemyBattledEvent::CallFunc_GetEnemyBattleState_BattleState' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnEnemyBattledEvent, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000011, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnEnemyBattledEvent::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.OnEnemyBattleStateLoaded
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_OnEnemyBattleStateLoaded final
{
public:
	bool                                          BattleState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_OnEnemyBattleStateLoaded) == 0x000001, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_OnEnemyBattleStateLoaded");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_OnEnemyBattleStateLoaded) == 0x000001, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_OnEnemyBattleStateLoaded");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnEnemyBattleStateLoaded, BattleState) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnEnemyBattleStateLoaded::BattleState' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.OnExtraVisionShapeBeginOverlap
// 0x0118 (0x0118 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_OnExtraVisionShapeBeginOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_OnExtraVisionShapeBeginOverlap) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_OnExtraVisionShapeBeginOverlap");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_OnExtraVisionShapeBeginOverlap) == 0x000118, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_OnExtraVisionShapeBeginOverlap");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnExtraVisionShapeBeginOverlap, OverlappedComponent) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnExtraVisionShapeBeginOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnExtraVisionShapeBeginOverlap, OtherActor) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnExtraVisionShapeBeginOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnExtraVisionShapeBeginOverlap, OtherComp) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnExtraVisionShapeBeginOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnExtraVisionShapeBeginOverlap, OtherBodyIndex) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnExtraVisionShapeBeginOverlap::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnExtraVisionShapeBeginOverlap, bFromSweep) == 0x00001C, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnExtraVisionShapeBeginOverlap::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnExtraVisionShapeBeginOverlap, SweepResult) == 0x000020, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnExtraVisionShapeBeginOverlap::SweepResult' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.OnExtraVisionShapeEndOverlap
// 0x0020 (0x0020 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_OnExtraVisionShapeEndOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_OnExtraVisionShapeEndOverlap) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_OnExtraVisionShapeEndOverlap");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_OnExtraVisionShapeEndOverlap) == 0x000020, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_OnExtraVisionShapeEndOverlap");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnExtraVisionShapeEndOverlap, OverlappedComponent) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnExtraVisionShapeEndOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnExtraVisionShapeEndOverlap, OtherActor) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnExtraVisionShapeEndOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnExtraVisionShapeEndOverlap, OtherComp) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnExtraVisionShapeEndOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnExtraVisionShapeEndOverlap, OtherBodyIndex) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnExtraVisionShapeEndOverlap::OtherBodyIndex' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.OnFailedDetection
// 0x0018 (0x0018 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_OnFailedDetection final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_OnFailedDetection) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_OnFailedDetection");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_OnFailedDetection) == 0x000018, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_OnFailedDetection");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnFailedDetection, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnFailedDetection::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnFailedDetection, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnFailedDetection::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.OnInteractionRequested
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_OnInteractionRequested final
{
public:
	class ABP_jRPG_Character_World_C*             InteractingWorldCharacter;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Instant;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_OnInteractionRequested) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_OnInteractionRequested");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_OnInteractionRequested) == 0x000010, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_OnInteractionRequested");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnInteractionRequested, InteractingWorldCharacter) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnInteractionRequested::InteractingWorldCharacter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnInteractionRequested, Instant) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnInteractionRequested::Instant' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.OnObjectInteractionStateLoaded
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_OnObjectInteractionStateLoaded final
{
public:
	bool                                          InteractionState;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_OnObjectInteractionStateLoaded) == 0x000001, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_OnObjectInteractionStateLoaded");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_OnObjectInteractionStateLoaded) == 0x000001, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_OnObjectInteractionStateLoaded");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnObjectInteractionStateLoaded, InteractionState) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnObjectInteractionStateLoaded::InteractionState' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.OnVisionShapeBeginOverlap
// 0x0098 (0x0098 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeBeginOverlap final
{
public:
	const class UPrimitiveComponent*              Primitive;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class FString                                 Reason;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeBeginOverlap) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeBeginOverlap");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeBeginOverlap) == 0x000098, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeBeginOverlap");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeBeginOverlap, Primitive) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeBeginOverlap::Primitive' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeBeginOverlap, Reason) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeBeginOverlap::Reason' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeBeginOverlap, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeBeginOverlap::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeBeginOverlap, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeBeginOverlap::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeBeginOverlap, K2Node_MakeArray_Array) == 0x000070, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeBeginOverlap::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeBeginOverlap, CallFunc_Array_Add_ReturnValue) == 0x000080, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeBeginOverlap::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeBeginOverlap, CallFunc_Format_ReturnValue) == 0x000088, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeBeginOverlap::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.OnVisionShapeEndOverlap
// 0x00D0 (0x00D0 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap final
{
public:
	const class UPrimitiveComponent*              Component;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Reason;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          ValidEvent;                                        // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0010)()
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_World_C*             K2Node_DynamicCast_AsBP_J_RPG_Character_World;     // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0010)()
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap) == 0x0000D0, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap, Component) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap::Component' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap, Actor) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap::Actor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap, Reason) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap::Reason' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap, ValidEvent) == 0x000020, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap::ValidEvent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000048, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap, K2Node_MakeArray_Array) == 0x000098, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap, K2Node_DynamicCast_AsBP_J_RPG_Character_World) == 0x0000A8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap::K2Node_DynamicCast_AsBP_J_RPG_Character_World' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap, CallFunc_Array_IsEmpty_ReturnValue) == 0x0000C8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000C9, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap, CallFunc_Not_PreBool_ReturnValue) == 0x0000CA, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OnVisionShapeEndOverlap::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.OptimizeCharacterMovementComponent
// 0x0020 (0x0020 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeCharacterMovementComponent final
{
public:
	bool                                          local_WasMeshRecentlyRendered;                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_wildcard_Variable;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetPrimitiveScreenPercentage_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasPrimitiveRecentlyRenderedOnScreen_ReturnValue; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeCharacterMovementComponent) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeCharacterMovementComponent");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeCharacterMovementComponent) == 0x000020, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeCharacterMovementComponent");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeCharacterMovementComponent, local_WasMeshRecentlyRendered) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeCharacterMovementComponent::local_WasMeshRecentlyRendered' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeCharacterMovementComponent, Temp_wildcard_Variable) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeCharacterMovementComponent::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeCharacterMovementComponent, CallFunc_GetPrimitiveScreenPercentage_ReturnValue) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeCharacterMovementComponent::CallFunc_GetPrimitiveScreenPercentage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeCharacterMovementComponent, CallFunc_WasPrimitiveRecentlyRenderedOnScreen_ReturnValue) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeCharacterMovementComponent::CallFunc_WasPrimitiveRecentlyRenderedOnScreen_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.OptimizeSkeletalMeshComponents
// 0x0020 (0x0020 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeSkeletalMeshComponents final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasRecentlyRendered_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeSkeletalMeshComponents) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeSkeletalMeshComponents");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeSkeletalMeshComponents) == 0x000020, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeSkeletalMeshComponents");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeSkeletalMeshComponents, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeSkeletalMeshComponents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeSkeletalMeshComponents, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeSkeletalMeshComponents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeSkeletalMeshComponents, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeSkeletalMeshComponents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeSkeletalMeshComponents, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeSkeletalMeshComponents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeSkeletalMeshComponents, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeSkeletalMeshComponents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeSkeletalMeshComponents, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeSkeletalMeshComponents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeSkeletalMeshComponents, CallFunc_WasRecentlyRendered_ReturnValue) == 0x000019, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_OptimizeSkeletalMeshComponents::CallFunc_WasRecentlyRendered_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.PauseAllSound
// 0x0028 (0x0028 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_PauseAllSound final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAudioComponent*>                CallFunc_GetAllAudioComponents_AudioComponents;    // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UAudioComponent*                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_PauseAllSound) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_PauseAllSound");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_PauseAllSound) == 0x000028, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_PauseAllSound");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_PauseAllSound, Temp_int_Variable) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_PauseAllSound::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_PauseAllSound, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_PauseAllSound::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_PauseAllSound, CallFunc_GetAllAudioComponents_AudioComponents) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_PauseAllSound::CallFunc_GetAllAudioComponents_AudioComponents' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_PauseAllSound, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_PauseAllSound::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_PauseAllSound, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_PauseAllSound::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_PauseAllSound, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_PauseAllSound::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.PlayBattleCameraTransition
// 0x0078 (0x0078 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_PlayBattleCameraTransition final
{
public:
	class UConfigurableGameUserSettings*          CallFunc_GetConfigurableGameUserSettings_GameUserSettings; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraAnimationSequence*               CallFunc_GetBattleCameraTransition_CameraTransition; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEnableCameraMovement_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraAnimationParams                 K2Node_MakeStruct_CameraAnimationParams;           // 0x0018(0x0048)(NoDestructor)
	class UGameplayCamerasSubsystem*              CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCameraAnimationHandle                 CallFunc_PlayCameraAnimation_ReturnValue;          // 0x0070(0x0004)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_PlayBattleCameraTransition) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_PlayBattleCameraTransition");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_PlayBattleCameraTransition) == 0x000078, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_PlayBattleCameraTransition");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_PlayBattleCameraTransition, CallFunc_GetConfigurableGameUserSettings_GameUserSettings) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_PlayBattleCameraTransition::CallFunc_GetConfigurableGameUserSettings_GameUserSettings' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_PlayBattleCameraTransition, CallFunc_GetBattleCameraTransition_CameraTransition) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_PlayBattleCameraTransition::CallFunc_GetBattleCameraTransition_CameraTransition' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_PlayBattleCameraTransition, CallFunc_GetEnableCameraMovement_ReturnValue) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_PlayBattleCameraTransition::CallFunc_GetEnableCameraMovement_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_PlayBattleCameraTransition, K2Node_MakeStruct_CameraAnimationParams) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_PlayBattleCameraTransition::K2Node_MakeStruct_CameraAnimationParams' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_PlayBattleCameraTransition, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000060, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_PlayBattleCameraTransition::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_PlayBattleCameraTransition, CallFunc_GetPlayerController_ReturnValue) == 0x000068, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_PlayBattleCameraTransition::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_PlayBattleCameraTransition, CallFunc_PlayCameraAnimation_ReturnValue) == 0x000070, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_PlayBattleCameraTransition::CallFunc_PlayCameraAnimation_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.PlayFeedbackHitCanBeAttacked
// 0x0048 (0x0048 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanBeAttacked final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanBeAttacked) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanBeAttacked");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanBeAttacked) == 0x000048, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanBeAttacked");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanBeAttacked, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanBeAttacked::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanBeAttacked, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanBeAttacked::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanBeAttacked, CallFunc_SpawnSystemAtLocation_ReturnValue_1) == 0x000020, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanBeAttacked::CallFunc_SpawnSystemAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanBeAttacked, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000028, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanBeAttacked::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanBeAttacked, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000030, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanBeAttacked::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.PlayFeedbackHitCanNotBeAttacked
// 0x00E0 (0x00E0 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanNotBeAttacked final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanNotBeAttacked) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanNotBeAttacked");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanNotBeAttacked) == 0x0000E0, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanNotBeAttacked");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanNotBeAttacked, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanNotBeAttacked::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanNotBeAttacked, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanNotBeAttacked::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanNotBeAttacked, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000030, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanNotBeAttacked::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanNotBeAttacked, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000048, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanNotBeAttacked::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanNotBeAttacked, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000060, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanNotBeAttacked::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanNotBeAttacked, CallFunc_FindLookAtRotation_ReturnValue) == 0x000078, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanNotBeAttacked::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanNotBeAttacked, CallFunc_GetForwardVector_ReturnValue) == 0x000090, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanNotBeAttacked::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanNotBeAttacked, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000A8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanNotBeAttacked::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanNotBeAttacked, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanNotBeAttacked::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanNotBeAttacked, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x0000D8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_PlayFeedbackHitCanNotBeAttacked::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_ReceiveEndPlay");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_ReceiveEndPlay");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_ReceiveTick");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_ReceiveTick) == 0x000004, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_ReceiveTick");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.RegisterEvents
// 0x0018 (0x0018 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_RegisterEvents final
{
public:
	TDelegate<void(class FName EnemyID)>          K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_RegisterEvents) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_RegisterEvents");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_RegisterEvents) == 0x000018, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_RegisterEvents");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_RegisterEvents, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_RegisterEvents::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_RegisterEvents, CallFunc_GetCustomGI_ReturnValue) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_RegisterEvents::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.RegisterExtraVisionShape
// 0x0028 (0x0028 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_RegisterExtraVisionShape final
{
public:
	class UPrimitiveComponent*                    Primitive;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate; // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_RegisterExtraVisionShape) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_RegisterExtraVisionShape");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_RegisterExtraVisionShape) == 0x000028, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_RegisterExtraVisionShape");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_RegisterExtraVisionShape, Primitive) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_RegisterExtraVisionShape::Primitive' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_RegisterExtraVisionShape, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_RegisterExtraVisionShape::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_RegisterExtraVisionShape, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_RegisterExtraVisionShape::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.RemoveAggroLock
// 0x000C (0x000C - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_RemoveAggroLock final
{
public:
	class FName                                   LockName;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_RemoveAggroLock) == 0x000004, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_RemoveAggroLock");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_RemoveAggroLock) == 0x00000C, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_RemoveAggroLock");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_RemoveAggroLock, LockName) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_RemoveAggroLock::LockName' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_RemoveAggroLock, CallFunc_Array_IsEmpty_ReturnValue) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_RemoveAggroLock::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_RemoveAggroLock, CallFunc_Array_RemoveItem_ReturnValue) == 0x000009, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_RemoveAggroLock::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.RemoveInteractable
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_RemoveInteractable final
{
public:
	class AActor*                                 Interactable;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_RemoveInteractable) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_RemoveInteractable");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_RemoveInteractable) == 0x000008, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_RemoveInteractable");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_RemoveInteractable, Interactable) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_RemoveInteractable::Interactable' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.ResetAnimation
// 0x0018 (0x0018 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_ResetAnimation final
{
public:
	class UClass*                                 Temp_wildcard_Variable;                            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_ResetAnimation) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_ResetAnimation");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_ResetAnimation) == 0x000018, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_ResetAnimation");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ResetAnimation, Temp_wildcard_Variable) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ResetAnimation::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ResetAnimation, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ResetAnimation::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ResetAnimation, CallFunc_GetObjectClass_ReturnValue) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ResetAnimation::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.ResetStateInternal
// 0x0058 (0x0058 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_ResetStateInternal final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBrainComponent*                        CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UActorComponent*>                CallFunc_GetComponentsByInterface_ReturnValue;     // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UActorComponent*                        CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameplayResettable_C> K2Node_DynamicCast_AsBPI_Gameplay_Resettable;  // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_ResetStateInternal) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_ResetStateInternal");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_ResetStateInternal) == 0x000058, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_ResetStateInternal");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ResetStateInternal, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ResetStateInternal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ResetStateInternal, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ResetStateInternal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ResetStateInternal, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ResetStateInternal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ResetStateInternal, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ResetStateInternal::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ResetStateInternal, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ResetStateInternal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ResetStateInternal, CallFunc_GetComponentsByInterface_ReturnValue) == 0x000020, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ResetStateInternal::CallFunc_GetComponentsByInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ResetStateInternal, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ResetStateInternal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ResetStateInternal, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ResetStateInternal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ResetStateInternal, K2Node_DynamicCast_AsBPI_Gameplay_Resettable) == 0x000040, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ResetStateInternal::K2Node_DynamicCast_AsBPI_Gameplay_Resettable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ResetStateInternal, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ResetStateInternal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ResetStateInternal, CallFunc_Less_IntInt_ReturnValue) == 0x000051, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ResetStateInternal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.RestoreTransformIfNeeded
// 0x0190 (0x0190 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_RestoreTransformIfNeeded final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   K2Node_DynamicCast_AsBP_J_RPG_GI_Custom;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0xF];                                       // 0x0011(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetEnemyTransformBeforeBattle_Transform;  // 0x0020(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEnemyTransformBeforeBattle_IsValid;    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0088(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_RestoreTransformIfNeeded) == 0x000010, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_RestoreTransformIfNeeded");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_RestoreTransformIfNeeded) == 0x000190, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_RestoreTransformIfNeeded");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_RestoreTransformIfNeeded, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_RestoreTransformIfNeeded::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_RestoreTransformIfNeeded, K2Node_DynamicCast_AsBP_J_RPG_GI_Custom) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_RestoreTransformIfNeeded::K2Node_DynamicCast_AsBP_J_RPG_GI_Custom' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_RestoreTransformIfNeeded, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_RestoreTransformIfNeeded::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_RestoreTransformIfNeeded, CallFunc_GetEnemyTransformBeforeBattle_Transform) == 0x000020, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_RestoreTransformIfNeeded::CallFunc_GetEnemyTransformBeforeBattle_Transform' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_RestoreTransformIfNeeded, CallFunc_GetEnemyTransformBeforeBattle_IsValid) == 0x000080, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_RestoreTransformIfNeeded::CallFunc_GetEnemyTransformBeforeBattle_IsValid' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_RestoreTransformIfNeeded, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000088, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_RestoreTransformIfNeeded::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_RestoreTransformIfNeeded, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000180, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_RestoreTransformIfNeeded::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.SetAiState
// 0x01D8 (0x01D8 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState final
{
public:
	E_AiStates                                    NewAiState;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0010)()
	bool                                          CallFunc_SetCurrentBT_ReturnValue;                 // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetCurrentBT_ReturnValue_1;               // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedBuild_ReturnValue;              // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93[0x5];                                       // 0x0093(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00A8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0100(0x0010)(ReferenceParm)
	class UBP_RoamingAiComponent_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue_1;                     // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetCurrentBT_ReturnValue_2;               // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0148(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0158(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x01A0(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue_2;                     // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue_1;              // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetCurrentBT_ReturnValue_3;               // 0x01C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetCurrentBT_ReturnValue_4;               // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetCurrentBT_ReturnValue_5;               // 0x01C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C6[0x2];                                      // 0x01C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_VariableSet_MaxWalkSpeed_ImplicitCast;      // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeed_ImplicitCast_1;    // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeed_ImplicitCast_2;    // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeed_ImplicitCast_3;    // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState) == 0x0001D8, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, NewAiState) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::NewAiState' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, K2Node_MakeArray_Array) == 0x000070, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, CallFunc_Format_ReturnValue) == 0x000080, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, CallFunc_SetCurrentBT_ReturnValue) == 0x000090, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::CallFunc_SetCurrentBT_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, CallFunc_SetCurrentBT_ReturnValue_1) == 0x000091, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::CallFunc_SetCurrentBT_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, CallFunc_IsPackagedBuild_ReturnValue) == 0x000092, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::CallFunc_IsPackagedBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, CallFunc_GetDisplayName_ReturnValue) == 0x000098, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000A8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, K2Node_MakeArray_Array_1) == 0x000100, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, CallFunc_GetComponentByClass_ReturnValue) == 0x000110, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, CallFunc_Format_ReturnValue_1) == 0x000118, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, CallFunc_Array_IsEmpty_ReturnValue) == 0x000128, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, CallFunc_GetDisplayName_ReturnValue_1) == 0x000130, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, CallFunc_SetCurrentBT_ReturnValue_2) == 0x000140, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::CallFunc_SetCurrentBT_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000148, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, K2Node_MakeStruct_FormatArgumentData_2) == 0x000158, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, K2Node_MakeArray_Array_2) == 0x0001A0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, CallFunc_Format_ReturnValue_2) == 0x0001B0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, CallFunc_Array_IsEmpty_ReturnValue_1) == 0x0001C0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::CallFunc_Array_IsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, CallFunc_BooleanOR_ReturnValue) == 0x0001C1, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0001C2, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, CallFunc_SetCurrentBT_ReturnValue_3) == 0x0001C3, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::CallFunc_SetCurrentBT_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, CallFunc_SetCurrentBT_ReturnValue_4) == 0x0001C4, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::CallFunc_SetCurrentBT_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, CallFunc_SetCurrentBT_ReturnValue_5) == 0x0001C5, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::CallFunc_SetCurrentBT_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, K2Node_VariableSet_MaxWalkSpeed_ImplicitCast) == 0x0001C8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::K2Node_VariableSet_MaxWalkSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, K2Node_VariableSet_MaxWalkSpeed_ImplicitCast_1) == 0x0001CC, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::K2Node_VariableSet_MaxWalkSpeed_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, K2Node_VariableSet_MaxWalkSpeed_ImplicitCast_2) == 0x0001D0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::K2Node_VariableSet_MaxWalkSpeed_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState, K2Node_VariableSet_MaxWalkSpeed_ImplicitCast_3) == 0x0001D4, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAiState::K2Node_VariableSet_MaxWalkSpeed_ImplicitCast_3' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.SetAllOverlapCollision
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_SetAllOverlapCollision final
{
public:
	ECollisionEnabled                             NewType;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAllOverlapCollision) == 0x000001, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_SetAllOverlapCollision");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAllOverlapCollision) == 0x000001, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_SetAllOverlapCollision");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetAllOverlapCollision, NewType) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetAllOverlapCollision::NewType' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.SetCurrentBT
// 0x0020 (0x0020 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_SetCurrentBT final
{
public:
	class UBehaviorTree*                          BTAsset;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBrainComponent*                        CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RunBehaviorTree_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_SetCurrentBT) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_SetCurrentBT");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_SetCurrentBT) == 0x000020, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_SetCurrentBT");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetCurrentBT, BTAsset) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetCurrentBT::BTAsset' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetCurrentBT, ReturnValue) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetCurrentBT::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetCurrentBT, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetCurrentBT::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetCurrentBT, CallFunc_RunBehaviorTree_ReturnValue) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetCurrentBT::CallFunc_RunBehaviorTree_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetCurrentBT, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetCurrentBT::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.SetCurrentIdleState
// 0x0020 (0x0020 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_SetCurrentIdleState final
{
public:
	E_EnemyIdleState                              CurrentIdleState_0;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UABP_Battle_Global_C*                   K2Node_DynamicCast_AsABP_Battle_Global;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_SetCurrentIdleState) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_SetCurrentIdleState");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_SetCurrentIdleState) == 0x000020, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_SetCurrentIdleState");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetCurrentIdleState, CurrentIdleState_0) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetCurrentIdleState::CurrentIdleState_0' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetCurrentIdleState, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetCurrentIdleState::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetCurrentIdleState, K2Node_DynamicCast_AsABP_Battle_Global) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetCurrentIdleState::K2Node_DynamicCast_AsABP_Battle_Global' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetCurrentIdleState, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetCurrentIdleState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.SetGameplayPaused
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_SetGameplayPaused final
{
public:
	bool                                          Paused;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_SetGameplayPaused) == 0x000001, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_SetGameplayPaused");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_SetGameplayPaused) == 0x000001, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_SetGameplayPaused");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SetGameplayPaused, Paused) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SetGameplayPaused::Paused' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.ShouldEncounterCapsuleGenerateOverlaps
// 0x0004 (0x0004 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_ShouldEncounterCapsuleGenerateOverlaps final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldEncounterCapsuleGenerateOverlaps) == 0x000001, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_ShouldEncounterCapsuleGenerateOverlaps");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldEncounterCapsuleGenerateOverlaps) == 0x000004, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_ShouldEncounterCapsuleGenerateOverlaps");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldEncounterCapsuleGenerateOverlaps, ReturnValue) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ShouldEncounterCapsuleGenerateOverlaps::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldEncounterCapsuleGenerateOverlaps, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ShouldEncounterCapsuleGenerateOverlaps::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldEncounterCapsuleGenerateOverlaps, CallFunc_Array_IsEmpty_ReturnValue) == 0x000002, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ShouldEncounterCapsuleGenerateOverlaps::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldEncounterCapsuleGenerateOverlaps, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ShouldEncounterCapsuleGenerateOverlaps::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.ShouldHideDistantInteraction
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_ShouldHideDistantInteraction final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldHideDistantInteraction) == 0x000001, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_ShouldHideDistantInteraction");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldHideDistantInteraction) == 0x000001, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_ShouldHideDistantInteraction");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldHideDistantInteraction, ReturnValue) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ShouldHideDistantInteraction::ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.ShouldReactToCharacter
// 0x0038 (0x0038 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DebugReason;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsAttachedToMovingPlatform_ReturnValue; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTooPowerfullToChase_ReturnValue;  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanBeDetectedByEnemies_ReturnValue;       // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWithinMaxAggroRange_ReturnValue;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter) == 0x000038, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter, ReturnValue) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter, DebugReason) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter::DebugReason' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter, CallFunc_GetIsAttachedToMovingPlatform_ReturnValue) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter::CallFunc_GetIsAttachedToMovingPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000019, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter, CallFunc_IsPlayerTooPowerfullToChase_ReturnValue) == 0x00001A, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter::CallFunc_IsPlayerTooPowerfullToChase_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter, CallFunc_CanBeDetectedByEnemies_ReturnValue) == 0x00001D, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter::CallFunc_CanBeDetectedByEnemies_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter, CallFunc_Not_PreBool_ReturnValue) == 0x00001E, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter, CallFunc_Not_PreBool_ReturnValue_1) == 0x00001F, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter, CallFunc_Not_PreBool_ReturnValue_2) == 0x000020, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000021, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter, CallFunc_GetDistanceTo_ReturnValue) == 0x000024, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter, CallFunc_IsWithinMaxAggroRange_ReturnValue) == 0x000028, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter::CallFunc_IsWithinMaxAggroRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000029, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter, CallFunc_BooleanAND_ReturnValue_1) == 0x00002A, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter, CallFunc_BooleanAND_ReturnValue_2) == 0x00002B, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter, CallFunc_Not_PreBool_ReturnValue_3) == 0x00002C, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x00002D, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter, CallFunc_Not_PreBool_ReturnValue_4) == 0x00002E, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x00002F, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000030, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_ShouldReactToCharacter::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.SpawnDesintegrationFX
// 0x00B0 (0x00B0 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_SpawnDesintegrationFX final
{
public:
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0000(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_SpawnDesintegrationFX) == 0x000010, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_SpawnDesintegrationFX");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_SpawnDesintegrationFX) == 0x0000B0, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_SpawnDesintegrationFX");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SpawnDesintegrationFX, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SpawnDesintegrationFX::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SpawnDesintegrationFX, CallFunc_BreakTransform_Location) == 0x000060, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SpawnDesintegrationFX::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SpawnDesintegrationFX, CallFunc_BreakTransform_Rotation) == 0x000078, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SpawnDesintegrationFX::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SpawnDesintegrationFX, CallFunc_BreakTransform_Scale) == 0x000090, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SpawnDesintegrationFX::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_SpawnDesintegrationFX, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x0000A8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_SpawnDesintegrationFX::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.StartBattle
// 0x0198 (0x0198 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_StartBattle final
{
public:
	E_jRPG_EngageTypes                            EngagementType;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetGlobalObjectIDWithGroup_ObjectID;      // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFBattleStartParams                    K2Node_MakeStruct_FBattleStartParams;              // 0x0040(0x0158)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_StartBattle) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_StartBattle");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_StartBattle) == 0x000198, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_StartBattle");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_StartBattle, EngagementType) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_StartBattle::EngagementType' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_StartBattle, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_StartBattle::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_StartBattle, CallFunc_Format_ReturnValue) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_StartBattle::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_StartBattle, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_StartBattle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_StartBattle, CallFunc_GetGlobalObjectIDWithGroup_ObjectID) == 0x00002C, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_StartBattle::CallFunc_GetGlobalObjectIDWithGroup_ObjectID' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_StartBattle, CallFunc_GetBattleManager_ReturnValue) == 0x000038, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_StartBattle::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_StartBattle, K2Node_MakeStruct_FBattleStartParams) == 0x000040, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_StartBattle::K2Node_MakeStruct_FBattleStartParams' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.StartChasingSoundTimer
// 0x0028 (0x0028 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_StartChasingSoundTimer final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_StartChasingSoundTimer) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_StartChasingSoundTimer");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_StartChasingSoundTimer) == 0x000028, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_StartChasingSoundTimer");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_StartChasingSoundTimer, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_StartChasingSoundTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_StartChasingSoundTimer, CallFunc_RandomFloatInRange_ReturnValue) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_StartChasingSoundTimer::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_StartChasingSoundTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_StartChasingSoundTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_StartChasingSoundTimer, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000020, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_StartChasingSoundTimer::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.StartExplorationSoundTimer
// 0x0028 (0x0028 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_StartExplorationSoundTimer final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_StartExplorationSoundTimer) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_StartExplorationSoundTimer");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_StartExplorationSoundTimer) == 0x000028, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_StartExplorationSoundTimer");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_StartExplorationSoundTimer, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_StartExplorationSoundTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_StartExplorationSoundTimer, CallFunc_RandomFloatInRange_ReturnValue) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_StartExplorationSoundTimer::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_StartExplorationSoundTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_StartExplorationSoundTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_StartExplorationSoundTimer, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000020, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_StartExplorationSoundTimer::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.UnpauseAllSound
// 0x0028 (0x0028 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_UnpauseAllSound final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAudioComponent*>                CallFunc_GetAllAudioComponents_AudioComponents;    // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UAudioComponent*                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_UnpauseAllSound) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_UnpauseAllSound");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_UnpauseAllSound) == 0x000028, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_UnpauseAllSound");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UnpauseAllSound, Temp_int_Variable) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UnpauseAllSound::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UnpauseAllSound, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UnpauseAllSound::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UnpauseAllSound, CallFunc_GetAllAudioComponents_AudioComponents) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UnpauseAllSound::CallFunc_GetAllAudioComponents_AudioComponents' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UnpauseAllSound, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UnpauseAllSound::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UnpauseAllSound, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UnpauseAllSound::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UnpauseAllSound, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UnpauseAllSound::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.UpdateCharacterRoomsRequirement
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_UpdateCharacterRoomsRequirement final
{
public:
	class ABP_jRPG_Character_World_C*             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInAnyRoom_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateCharacterRoomsRequirement) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_UpdateCharacterRoomsRequirement");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateCharacterRoomsRequirement) == 0x000010, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_UpdateCharacterRoomsRequirement");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateCharacterRoomsRequirement, Character) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateCharacterRoomsRequirement::Character' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateCharacterRoomsRequirement, ReturnValue) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateCharacterRoomsRequirement::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateCharacterRoomsRequirement, CallFunc_IsInAnyRoom_ReturnValue) == 0x000009, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateCharacterRoomsRequirement::CallFunc_IsInAnyRoom_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateCharacterRoomsRequirement, CallFunc_Array_IsEmpty_ReturnValue) == 0x00000A, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateCharacterRoomsRequirement::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateCharacterRoomsRequirement, CallFunc_BooleanOR_ReturnValue) == 0x00000B, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateCharacterRoomsRequirement::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.UpdateDetectionInVisionCone
// 0x00A8 (0x00A8 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionInVisionCone final
{
public:
	struct FActorDetectionParameters              DetectionParameters;                               // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Detected;                                          // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                local_deltaVector;                                 // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_distanceToCharacter;                         // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateDetectionWithLineOfSight_IsVisible; // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegCos_ReturnValue;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionInVisionCone) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionInVisionCone");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionInVisionCone) == 0x0000A8, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionInVisionCone");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionInVisionCone, DetectionParameters) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionInVisionCone::DetectionParameters' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionInVisionCone, Detected) == 0x000028, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionInVisionCone::Detected' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionInVisionCone, local_deltaVector) == 0x000030, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionInVisionCone::local_deltaVector' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionInVisionCone, local_distanceToCharacter) == 0x000048, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionInVisionCone::local_distanceToCharacter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionInVisionCone, CallFunc_UpdateDetectionWithLineOfSight_IsVisible) == 0x000050, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionInVisionCone::CallFunc_UpdateDetectionWithLineOfSight_IsVisible' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionInVisionCone, CallFunc_Normal_ReturnValue) == 0x000058, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionInVisionCone::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionInVisionCone, CallFunc_GetActorForwardVector_ReturnValue) == 0x000070, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionInVisionCone::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionInVisionCone, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000088, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionInVisionCone::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionInVisionCone, CallFunc_Dot_VectorVector_ReturnValue) == 0x000090, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionInVisionCone::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionInVisionCone, CallFunc_DegCos_ReturnValue) == 0x000098, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionInVisionCone::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionInVisionCone, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionInVisionCone::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionInVisionCone, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000A1, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionInVisionCone::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.UpdateDetectionProgress
// 0x0002 (0x0002 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgress final
{
public:
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgress) == 0x000001, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgress");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgress) == 0x000002, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgress");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgress, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgress::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgress, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgress::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.UpdateDetectionProgressDurationMultiplier
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressDurationMultiplier final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressDurationMultiplier) == 0x000001, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressDurationMultiplier");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressDurationMultiplier) == 0x000001, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressDurationMultiplier");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressDurationMultiplier, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressDurationMultiplier::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.UpdateDetectionProgressDurationMultiplierByGait
// 0x0040 (0x0040 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressDurationMultiplierByGait final
{
public:
	class UALSCharacterMovementComponent*         CallFunc_GetMyMovementComponent_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_InRangeB_ImplicitCast;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressDurationMultiplierByGait) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressDurationMultiplierByGait");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressDurationMultiplierByGait) == 0x000040, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressDurationMultiplierByGait");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressDurationMultiplierByGait, CallFunc_GetMyMovementComponent_ReturnValue) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressDurationMultiplierByGait::CallFunc_GetMyMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressDurationMultiplierByGait, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressDurationMultiplierByGait::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressDurationMultiplierByGait, CallFunc_GetVelocity_ReturnValue) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressDurationMultiplierByGait::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressDurationMultiplierByGait, CallFunc_VSize_ReturnValue) == 0x000028, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressDurationMultiplierByGait::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressDurationMultiplierByGait, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressDurationMultiplierByGait::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressDurationMultiplierByGait, CallFunc_MapRangeClamped_InRangeB_ImplicitCast) == 0x000038, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressDurationMultiplierByGait::CallFunc_MapRangeClamped_InRangeB_ImplicitCast' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.UpdateDetectionProgressMultiplierByDistance
// 0x0020 (0x0020 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressMultiplierByDistance final
{
public:
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressMultiplierByDistance) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressMultiplierByDistance");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressMultiplierByDistance) == 0x000020, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressMultiplierByDistance");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressMultiplierByDistance, CallFunc_GetDistanceTo_ReturnValue) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressMultiplierByDistance::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressMultiplierByDistance, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressMultiplierByDistance::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressMultiplierByDistance, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressMultiplierByDistance::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressMultiplierByDistance, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressMultiplierByDistance::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.UpdateDetectionProgressValue
// 0x0048 (0x0048 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressValue final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressValue) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressValue");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressValue) == 0x000048, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressValue");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressValue, Temp_bool_Variable) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressValue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressValue, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressValue::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressValue, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressValue::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressValue, K2Node_Select_Default) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressValue::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressValue, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressValue::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressValue, CallFunc_SafeDivide_ReturnValue) == 0x000028, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressValue::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressValue, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000030, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressValue::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressValue, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressValue::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressValue, CallFunc_FClamp_ReturnValue) == 0x000040, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionProgressValue::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.UpdateDetectionWithLineOfSight
// 0x0268 (0x0268 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight final
{
public:
	struct FActorDetectionParameters              DetectionParameters;                               // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsVisible;                                         // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                local_deltaVector;                                 // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_distanceToCharacter;                         // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0090(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18B[0x1];                                      // 0x018B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0208(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight) == 0x000268, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight, DetectionParameters) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight::DetectionParameters' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight, IsVisible) == 0x000028, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight::IsVisible' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight, local_deltaVector) == 0x000030, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight::local_deltaVector' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight, local_distanceToCharacter) == 0x000048, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight::local_distanceToCharacter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight, K2Node_MakeArray_Array) == 0x000050, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000078, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight, CallFunc_LineTraceSingle_OutHit) == 0x000090, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight, CallFunc_LineTraceSingle_ReturnValue) == 0x000188, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight, CallFunc_BreakHitResult_bBlockingHit) == 0x000189, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight, CallFunc_BreakHitResult_bInitialOverlap) == 0x00018A, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight, CallFunc_BreakHitResult_Time) == 0x00018C, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight, CallFunc_BreakHitResult_Distance) == 0x000190, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight, CallFunc_BreakHitResult_Location) == 0x000198, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight, CallFunc_BreakHitResult_ImpactPoint) == 0x0001B0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight, CallFunc_BreakHitResult_Normal) == 0x0001C8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight, CallFunc_BreakHitResult_ImpactNormal) == 0x0001E0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight, CallFunc_BreakHitResult_PhysMat) == 0x0001F8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight, CallFunc_BreakHitResult_HitActor) == 0x000200, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight, CallFunc_BreakHitResult_HitComponent) == 0x000208, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight, CallFunc_BreakHitResult_HitBoneName) == 0x000210, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight, CallFunc_BreakHitResult_BoneName) == 0x000218, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight, CallFunc_BreakHitResult_HitItem) == 0x000220, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight, CallFunc_BreakHitResult_ElementIndex) == 0x000224, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight, CallFunc_BreakHitResult_FaceIndex) == 0x000228, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight, CallFunc_BreakHitResult_TraceStart) == 0x000230, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight, CallFunc_BreakHitResult_TraceEnd) == 0x000248, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000260, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateDetectionWithLineOfSight::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.UpdateEncounterCapsuleSettings
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_UpdateEncounterCapsuleSettings final
{
public:
	bool                                          CallFunc_ShouldEncounterCapsuleGenerateOverlaps_ReturnValue; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateEncounterCapsuleSettings) == 0x000001, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_UpdateEncounterCapsuleSettings");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateEncounterCapsuleSettings) == 0x000001, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_UpdateEncounterCapsuleSettings");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateEncounterCapsuleSettings, CallFunc_ShouldEncounterCapsuleGenerateOverlaps_ReturnValue) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateEncounterCapsuleSettings::CallFunc_ShouldEncounterCapsuleGenerateOverlaps_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.UpdateFreeAimCollisionBox
// 0x0128 (0x0128 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_UpdateFreeAimCollisionBox final
{
public:
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0030(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateFreeAimCollisionBox) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_UpdateFreeAimCollisionBox");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateFreeAimCollisionBox) == 0x000128, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_UpdateFreeAimCollisionBox");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateFreeAimCollisionBox, CallFunc_GetActorBounds_Origin) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateFreeAimCollisionBox::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateFreeAimCollisionBox, CallFunc_GetActorBounds_BoxExtent) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateFreeAimCollisionBox::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdateFreeAimCollisionBox, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000030, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdateFreeAimCollisionBox::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.UpdatePlayerCharacterDetection
// 0x0090 (0x0090 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_UpdatePlayerCharacterDetection final
{
public:
	bool                                          Detected;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                local_deltaVector;                                 // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_distanceToCharacter;                         // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActorDetectionParameters              Temp_wildcard_Variable;                            // 0x0028(0x0028)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateDetectionInVisionCone_Detected;     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActorDetectionParameters              CallFunc_ComputeDetectionParameters_DetectionParameters; // 0x0058(0x0028)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdatePlayerCharacterDetection) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_UpdatePlayerCharacterDetection");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdatePlayerCharacterDetection) == 0x000090, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_UpdatePlayerCharacterDetection");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdatePlayerCharacterDetection, Detected) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdatePlayerCharacterDetection::Detected' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdatePlayerCharacterDetection, local_deltaVector) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdatePlayerCharacterDetection::local_deltaVector' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdatePlayerCharacterDetection, local_distanceToCharacter) == 0x000020, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdatePlayerCharacterDetection::local_distanceToCharacter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdatePlayerCharacterDetection, Temp_wildcard_Variable) == 0x000028, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdatePlayerCharacterDetection::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdatePlayerCharacterDetection, CallFunc_UpdateDetectionInVisionCone_Detected) == 0x000050, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdatePlayerCharacterDetection::CallFunc_UpdateDetectionInVisionCone_Detected' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdatePlayerCharacterDetection, CallFunc_ComputeDetectionParameters_DetectionParameters) == 0x000058, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdatePlayerCharacterDetection::CallFunc_ComputeDetectionParameters_DetectionParameters' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdatePlayerCharacterDetection, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000080, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdatePlayerCharacterDetection::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdatePlayerCharacterDetection, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdatePlayerCharacterDetection::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdatePlayerCharacterDetection, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000089, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdatePlayerCharacterDetection::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UpdatePlayerCharacterDetection, CallFunc_BooleanAND_ReturnValue) == 0x00008A, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UpdatePlayerCharacterDetection::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.UserConstructionScript
// 0x0048 (0x0048 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_UserConstructionScript final
{
public:
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_EnemyGroup_C*                       K2Node_DynamicCast_AsBP_Enemy_Group;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundBase>              CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0018(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_UserConstructionScript");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_UserConstructionScript) == 0x000048, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_UserConstructionScript");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UserConstructionScript, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UserConstructionScript::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UserConstructionScript, K2Node_DynamicCast_AsBP_Enemy_Group) == 0x000008, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UserConstructionScript::K2Node_DynamicCast_AsBP_Enemy_Group' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UserConstructionScript, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UserConstructionScript::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_1) == 0x000041, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.DEBUG_ShowVisionCone
// 0x0108 (0x0108 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone final
{
public:
	float                                         Lifetime;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_8;                            // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_9;                            // 0x0094(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_10;                           // 0x00A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AiStates                                    Temp_byte_Variable;                                // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DrawDebugCircle_Radius_ImplicitCast;      // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DisplayVisionAngle_Radius_ImplicitCast;   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DrawDebugCircle_Radius_ImplicitCast_1;    // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DrawDebugCircle_Radius_ImplicitCast_2;    // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone) == 0x000108, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone, Lifetime) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone::Lifetime' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone, Temp_struct_Variable) == 0x000004, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone, Temp_struct_Variable_1) == 0x000014, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone, Temp_struct_Variable_2) == 0x000024, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone, Temp_struct_Variable_3) == 0x000034, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone, Temp_struct_Variable_4) == 0x000044, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone, Temp_struct_Variable_5) == 0x000054, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone, Temp_struct_Variable_6) == 0x000064, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone, Temp_struct_Variable_7) == 0x000074, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone, Temp_struct_Variable_8) == 0x000084, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone, Temp_struct_Variable_9) == 0x000094, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone, Temp_struct_Variable_10) == 0x0000A4, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone, Temp_byte_Variable) == 0x0000B4, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000D0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone, K2Node_Select_Default) == 0x0000E8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone, CallFunc_DrawDebugCircle_Radius_ImplicitCast) == 0x0000F8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone::CallFunc_DrawDebugCircle_Radius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone, CallFunc_DisplayVisionAngle_Radius_ImplicitCast) == 0x0000FC, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone::CallFunc_DisplayVisionAngle_Radius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone, CallFunc_DrawDebugCircle_Radius_ImplicitCast_1) == 0x000100, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone::CallFunc_DrawDebugCircle_Radius_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone, CallFunc_DrawDebugCircle_Radius_ImplicitCast_2) == 0x000104, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DEBUG_ShowVisionCone::CallFunc_DrawDebugCircle_Radius_ImplicitCast_2' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.DisplayVisionAngle
// 0x0148 (0x0148 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle final
{
public:
	struct FVector                                Center;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        A;                                                 // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lifetime;                                          // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0024(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegreesToRadians_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast; // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast_1; // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DrawDebugCircleArc_AngleWidth_ImplicitCast; // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1;  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle) == 0x000148, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle, Center) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle::Center' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle, A) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle::A' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle, Lifetime) == 0x000020, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle::Lifetime' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle, Color) == 0x000024, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle::Color' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle, Radius) == 0x000034, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle::Radius' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle, CallFunc_GetActorForwardVector_ReturnValue) == 0x000038, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000050, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000068, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000080, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle, CallFunc_DegreesToRadians_ReturnValue) == 0x000088, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle::CallFunc_DegreesToRadians_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000090, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle, CallFunc_RotateAngleAxis_ReturnValue) == 0x000098, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x0000B0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000C8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0000E0, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F8, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000110, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast) == 0x000128, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast_1) == 0x000130, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x000138, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle, CallFunc_DrawDebugCircleArc_AngleWidth_ImplicitCast) == 0x00013C, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle::CallFunc_DrawDebugCircleArc_AngleWidth_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1) == 0x000140, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_DisplayVisionAngle::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.Editor_DrawDebugShapes
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_Editor_DrawDebugShapes final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_Editor_DrawDebugShapes) == 0x000001, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_Editor_DrawDebugShapes");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_Editor_DrawDebugShapes) == 0x000001, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_Editor_DrawDebugShapes");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_Editor_DrawDebugShapes, ReturnValue) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_Editor_DrawDebugShapes::ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.Editor_GetDebugShapes
// 0x0028 (0x0028 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_Editor_GetDebugShapes final
{
public:
	TArray<struct FEditorDebugShape_Arrow>        Arrows;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FEditorDebugShape_Arrow>        Lines;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_Editor_GetDebugShapes) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_Editor_GetDebugShapes");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_Editor_GetDebugShapes) == 0x000028, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_Editor_GetDebugShapes");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_Editor_GetDebugShapes, Arrows) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_Editor_GetDebugShapes::Arrows' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_Editor_GetDebugShapes, Lines) == 0x000010, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_Editor_GetDebugShapes::Lines' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_Editor_GetDebugShapes, ReturnValue) == 0x000020, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_Editor_GetDebugShapes::ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.GetInteractionFeedbackLocation
// 0x0030 (0x0030 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_GetInteractionFeedbackLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_GetInteractionFeedbackLocation) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_GetInteractionFeedbackLocation");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_GetInteractionFeedbackLocation) == 0x000030, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_GetInteractionFeedbackLocation");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetInteractionFeedbackLocation, Location) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetInteractionFeedbackLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetInteractionFeedbackLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetInteractionFeedbackLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_World_Base_Seamless.BP_jRPG_Enemy_World_Base_Seamless_C.GetInteractionLocation
// 0x0030 (0x0030 - 0x0000)
struct BP_jRPG_Enemy_World_Base_Seamless_C_GetInteractionLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_World_Base_Seamless_C_GetInteractionLocation) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_World_Base_Seamless_C_GetInteractionLocation");
static_assert(sizeof(BP_jRPG_Enemy_World_Base_Seamless_C_GetInteractionLocation) == 0x000030, "Wrong size on BP_jRPG_Enemy_World_Base_Seamless_C_GetInteractionLocation");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetInteractionLocation, Location) == 0x000000, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetInteractionLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_World_Base_Seamless_C_GetInteractionLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_jRPG_Enemy_World_Base_Seamless_C_GetInteractionLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

}

