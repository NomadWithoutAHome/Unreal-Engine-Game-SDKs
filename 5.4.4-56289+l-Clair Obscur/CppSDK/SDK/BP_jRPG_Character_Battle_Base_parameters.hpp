#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_jRPG_Character_Battle_Base

#include "Basic.hpp"

#include "FEnemyDataRow_structs.hpp"
#include "EFreeAimType_structs.hpp"
#include "E_StatusEffects_structs.hpp"
#include "ECharacterTeamSelector_structs.hpp"
#include "SandFall_structs.hpp"
#include "S_CharacterCustomization_structs.hpp"
#include "S_jRPG_Enemy_structs.hpp"
#include "EBattleTurnState_structs.hpp"
#include "E_GameDifficulty_structs.hpp"
#include "E_jRPG_CombatStyle_structs.hpp"
#include "EElementalAffinity_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_BalancingTableFloatEntry_structs.hpp"
#include "EHealReason_structs.hpp"
#include "E_QuestStatus_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "E_JRPG_VFXSpawnSpots_structs.hpp"
#include "SlateCore_structs.hpp"
#include "ECounterType_structs.hpp"
#include "CinematicCamera_structs.hpp"
#include "FRoutedEventHandle_structs.hpp"
#include "EBuffApplicationProbability_structs.hpp"
#include "EAttackType_structs.hpp"
#include "FEquipmentSlot_structs.hpp"
#include "E_jRPG_CharacterAttachmentSlot_structs.hpp"
#include "S_jRPG_Item_StaticData_structs.hpp"
#include "E_EnemyIdleState_structs.hpp"
#include "S_jRPG_Encounter_structs.hpp"
#include "EBattleForbiddenActionReason_structs.hpp"
#include "FElementalAffinityList_structs.hpp"
#include "EAPChangeReason_structs.hpp"
#include "E_FreezeFrame_structs.hpp"
#include "FBattleTurnSequence_CharacterData_structs.hpp"
#include "E_jRPG_StatType_structs.hpp"
#include "FSoundEvent_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "E_jRPG_ActionType_structs.hpp"
#include "EDamageReason_structs.hpp"
#include "EFreeAimBodyPartType_structs.hpp"
#include "EPermeateIntensity_structs.hpp"


namespace SDK::Params
{

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnInstigatedActorSpawned
// 0x0050 (0x0050 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnInstigatedActorSpawned final
{
public:
	class AActor*                                 SpawnedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AActor>                  CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0010(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class AController*                            K2Node_DynamicCast_AsController;                   // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnInstigatedActorSpawned) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnInstigatedActorSpawned");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnInstigatedActorSpawned) == 0x000050, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnInstigatedActorSpawned");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnInstigatedActorSpawned, SpawnedActor) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnInstigatedActorSpawned::SpawnedActor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnInstigatedActorSpawned, ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_OnInstigatedActorSpawned::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnInstigatedActorSpawned, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_OnInstigatedActorSpawned::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnInstigatedActorSpawned, K2Node_DynamicCast_AsController) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_OnInstigatedActorSpawned::K2Node_DynamicCast_AsController' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnInstigatedActorSpawned, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_OnInstigatedActorSpawned::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnInstigatedActorSpawned, CallFunc_Array_AddUnique_ReturnValue) == 0x000044, "Member 'BP_jRPG_Character_Battle_Base_C_OnInstigatedActorSpawned::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnInstigatedActorSpawned, CallFunc_Not_PreBool_ReturnValue) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_OnInstigatedActorSpawned::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.BPI_GetDependencies
// 0x02C8 (0x02C8 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies final
{
public:
	TArray<TSoftClassPtr<class UClass>>           Classes;                                           // 0x0000(0x0010)(Parm, OutParm)
	TArray<TSoftObjectPtr<class UObject>>         Assets;                                            // 0x0010(0x0010)(Parm, OutParm)
	TArray<TScriptInterface<class IBPI_LoadingDependenciesSource_C>> ExternalDependencies;           // 0x0020(0x0010)(Parm, OutParm)
	TArray<TSoftClassPtr<class UClass>>           local_classes;                                     // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<TSoftClassPtr<class UClass>>           Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0040(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           Temp_wildcard_Temp_buffer_array_Variable;          // 0x0060(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_GetCharacterBattleLinesClass_CharacterBattleLineClass; // 0x0078(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEnemyDataRow                         CallFunc_Array_Get_Item;                           // 0x00A8(0x0010)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Enemy                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x00C0(0x0200)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x3];                                      // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies) == 0x0002C8, "Wrong size on BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies, Classes) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies::Classes' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies, Assets) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies::Assets' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies, ExternalDependencies) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies::ExternalDependencies' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies, local_classes) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies::local_classes' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies, Temp_wildcard_Temp_buffer_array_Variable) == 0x000060, "Member 'BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies, CallFunc_GetCharacterBattleLinesClass_CharacterBattleLineClass) == 0x000078, "Member 'BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies::CallFunc_GetCharacterBattleLinesClass_CharacterBattleLineClass' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies, CallFunc_Array_Add_ReturnValue) == 0x0000A0, "Member 'BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x0000A4, "Member 'BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies, CallFunc_Less_IntInt_ReturnValue) == 0x0000BC, "Member 'BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000C0, "Member 'BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0002C0, "Member 'BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies, CallFunc_Array_Add_ReturnValue_1) == 0x0002C4, "Member 'BP_jRPG_Character_Battle_Base_C_BPI_GetDependencies::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetBattleAudioProfile
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetBattleAudioProfile final
{
public:
	class UBP_DataAsset_CharacterBattleAudioProfile_C* AudioProfile;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetBattleAudioProfile) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetBattleAudioProfile");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetBattleAudioProfile) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetBattleAudioProfile");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleAudioProfile, AudioProfile) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleAudioProfile::AudioProfile' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetBattleAudioContainerComponents
// 0x0040 (0x0040 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetBattleAudioContainerComponents final
{
public:
	class USceneComponent*                        SFX;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        weapon_l;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        weapon_r;                                          // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Foley;                                             // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Vocal;                                             // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        foot_l;                                            // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Foot_R;                                            // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        HitBy;                                             // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetBattleAudioContainerComponents) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetBattleAudioContainerComponents");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetBattleAudioContainerComponents) == 0x000040, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetBattleAudioContainerComponents");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleAudioContainerComponents, SFX) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleAudioContainerComponents::SFX' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleAudioContainerComponents, weapon_l) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleAudioContainerComponents::weapon_l' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleAudioContainerComponents, weapon_r) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleAudioContainerComponents::weapon_r' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleAudioContainerComponents, Foley) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleAudioContainerComponents::Foley' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleAudioContainerComponents, Vocal) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleAudioContainerComponents::Vocal' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleAudioContainerComponents, foot_l) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleAudioContainerComponents::foot_l' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleAudioContainerComponents, Foot_R) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleAudioContainerComponents::Foot_R' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleAudioContainerComponents, HitBy) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleAudioContainerComponents::HitBy' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetBattleAudioCharacterManager
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetBattleAudioCharacterManager final
{
public:
	class UBP_AudioCharacter_BattleManager_C*     AudioCharacterBattleManager;                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetBattleAudioCharacterManager) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetBattleAudioCharacterManager");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetBattleAudioCharacterManager) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetBattleAudioCharacterManager");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleAudioCharacterManager, AudioCharacterBattleManager) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleAudioCharacterManager::AudioCharacterBattleManager' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetTiedObject
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetTiedObject final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetTiedObject) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetTiedObject");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetTiedObject) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetTiedObject");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTiedObject, Object) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetTiedObject::Object' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetIsDead
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetIsDead final
{
public:
	bool                                          Dead;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetIsDead) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetIsDead");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetIsDead) == 0x000001, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetIsDead");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetIsDead, Dead) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetIsDead::Dead' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetIsDefending
// 0x0002 (0x0002 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetIsDefending final
{
public:
	bool                                          Defending;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetIsDefending) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetIsDefending");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetIsDefending) == 0x000002, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetIsDefending");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetIsDefending, Defending) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetIsDefending::Defending' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetIsDefending, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_jRPG_Character_Battle_Base_C_GetIsDefending::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetCharacterCombatStyle
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetCharacterCombatStyle final
{
public:
	E_jRPG_CombatStyle                            CombatStyle;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetCharacterCombatStyle) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetCharacterCombatStyle");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetCharacterCombatStyle) == 0x000001, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetCharacterCombatStyle");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetCharacterCombatStyle, CombatStyle) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetCharacterCombatStyle::CombatStyle' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.FlushAdditionalTurnEndEvent
// 0x0002 (0x0002 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_FlushAdditionalTurnEndEvent final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_output;                                      // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_FlushAdditionalTurnEndEvent) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_FlushAdditionalTurnEndEvent");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_FlushAdditionalTurnEndEvent) == 0x000002, "Wrong size on BP_jRPG_Character_Battle_Base_C_FlushAdditionalTurnEndEvent");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_FlushAdditionalTurnEndEvent, Value) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_FlushAdditionalTurnEndEvent::Value' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_FlushAdditionalTurnEndEvent, local_output) == 0x000001, "Member 'BP_jRPG_Character_Battle_Base_C_FlushAdditionalTurnEndEvent::local_output' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.HasFinisherSequence
// 0x0002 (0x0002 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_HasFinisherSequence final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_HasFinisherSequence) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_HasFinisherSequence");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_HasFinisherSequence) == 0x000002, "Wrong size on BP_jRPG_Character_Battle_Base_C_HasFinisherSequence");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HasFinisherSequence, ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_HasFinisherSequence::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HasFinisherSequence, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000001, "Member 'BP_jRPG_Character_Battle_Base_C_HasFinisherSequence::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetTransformForBattleSequenceSnapping
// 0x0130 (0x0130 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetTransformForBattleSequenceSnapping final
{
public:
	struct FTransform                             ReturnValue;                                       // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0060(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x00D0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetTransformForBattleSequenceSnapping) == 0x000010, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetTransformForBattleSequenceSnapping");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetTransformForBattleSequenceSnapping) == 0x000130, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetTransformForBattleSequenceSnapping");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTransformForBattleSequenceSnapping, ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetTransformForBattleSequenceSnapping::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTransformForBattleSequenceSnapping, CallFunc_GetTransform_ReturnValue) == 0x000060, "Member 'BP_jRPG_Character_Battle_Base_C_GetTransformForBattleSequenceSnapping::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTransformForBattleSequenceSnapping, CallFunc_GetOwner_ReturnValue) == 0x0000C0, "Member 'BP_jRPG_Character_Battle_Base_C_GetTransformForBattleSequenceSnapping::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTransformForBattleSequenceSnapping, CallFunc_IsValid_ReturnValue) == 0x0000C8, "Member 'BP_jRPG_Character_Battle_Base_C_GetTransformForBattleSequenceSnapping::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTransformForBattleSequenceSnapping, CallFunc_GetTransform_ReturnValue_1) == 0x0000D0, "Member 'BP_jRPG_Character_Battle_Base_C_GetTransformForBattleSequenceSnapping::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.AddLifeLinkedCharacter
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_AddLifeLinkedCharacter final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       LifeLinkedCharacter;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_AddLifeLinkedCharacter) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_AddLifeLinkedCharacter");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_AddLifeLinkedCharacter) == 0x000010, "Wrong size on BP_jRPG_Character_Battle_Base_C_AddLifeLinkedCharacter");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddLifeLinkedCharacter, LifeLinkedCharacter) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_AddLifeLinkedCharacter::LifeLinkedCharacter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddLifeLinkedCharacter, CallFunc_Array_AddUnique_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_AddLifeLinkedCharacter::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddLifeLinkedCharacter, CallFunc_Array_AddUnique_ReturnValue_1) == 0x00000C, "Member 'BP_jRPG_Character_Battle_Base_C_AddLifeLinkedCharacter::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.IsLifeLinkedMaster
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_IsLifeLinkedMaster final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_IsLifeLinkedMaster) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_IsLifeLinkedMaster");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_IsLifeLinkedMaster) == 0x000001, "Wrong size on BP_jRPG_Character_Battle_Base_C_IsLifeLinkedMaster");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_IsLifeLinkedMaster, ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_IsLifeLinkedMaster::ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.IsLifeLinked
// 0x0003 (0x0003 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_IsLifeLinked final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_IsLifeLinked) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_IsLifeLinked");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_IsLifeLinked) == 0x000003, "Wrong size on BP_jRPG_Character_Battle_Base_C_IsLifeLinked");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_IsLifeLinked, ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_IsLifeLinked::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_IsLifeLinked, CallFunc_Array_IsEmpty_ReturnValue) == 0x000001, "Member 'BP_jRPG_Character_Battle_Base_C_IsLifeLinked::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_IsLifeLinked, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_jRPG_Character_Battle_Base_C_IsLifeLinked::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetLocationForSequenceSnapping
// 0x0040 (0x0040 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetLocationForSequenceSnapping final
{
public:
	struct FVector                                InitialLocation;                                   // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetLocationForSequenceSnapping) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetLocationForSequenceSnapping");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetLocationForSequenceSnapping) == 0x000040, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetLocationForSequenceSnapping");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLocationForSequenceSnapping, InitialLocation) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetLocationForSequenceSnapping::InitialLocation' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLocationForSequenceSnapping, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_GetLocationForSequenceSnapping::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLocationForSequenceSnapping, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_GetLocationForSequenceSnapping::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLocationForSequenceSnapping, CallFunc_GetCharacterBattleBase_IsValid) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_GetLocationForSequenceSnapping::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLocationForSequenceSnapping, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_jRPG_Character_Battle_Base_C_GetLocationForSequenceSnapping::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetCounterDamageLevelMultiplier
// 0x0040 (0x0040 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetCounterDamageLevelMultiplier final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_BalancingTableFloatEntry            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    CallFunc_GetCharacterByID_CharacterData;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetCounterDamageLevelMultiplier) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetCounterDamageLevelMultiplier");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetCounterDamageLevelMultiplier) == 0x000040, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetCounterDamageLevelMultiplier");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetCounterDamageLevelMultiplier, ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetCounterDamageLevelMultiplier::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetCounterDamageLevelMultiplier, CallFunc_GetDataTableRowFromName_OutRow) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_GetCounterDamageLevelMultiplier::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetCounterDamageLevelMultiplier, CallFunc_GetCustomGI_ReturnValue) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_GetCounterDamageLevelMultiplier::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetCounterDamageLevelMultiplier, CallFunc_GetCharacterByID_CharacterData) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_GetCounterDamageLevelMultiplier::CallFunc_GetCharacterByID_CharacterData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetCounterDamageLevelMultiplier, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_GetCounterDamageLevelMultiplier::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetCounterDamageLevelMultiplier, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_GetCounterDamageLevelMultiplier::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetCounterDamageLevelMultiplier, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_GetCounterDamageLevelMultiplier::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetCounterDamageLevelMultiplier, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_GetCounterDamageLevelMultiplier::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.PlayBattleDialogueLine
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_PlayBattleDialogueLine final
{
public:
	class USoundBase*                             SoundAsset;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_PlayBattleDialogueLine) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_PlayBattleDialogueLine");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_PlayBattleDialogueLine) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_PlayBattleDialogueLine");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PlayBattleDialogueLine, SoundAsset) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_PlayBattleDialogueLine::SoundAsset' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.PlaySkillBattleLine
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_PlaySkillBattleLine final
{
public:
	class USoundBase*                             SoundAsset;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_PlaySkillBattleLine) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_PlaySkillBattleLine");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_PlaySkillBattleLine) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_PlaySkillBattleLine");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PlaySkillBattleLine, SoundAsset) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_PlaySkillBattleLine::SoundAsset' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetBattleLineModel
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetBattleLineModel final
{
public:
	class UBP_BattleLinesModel_Base_C*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleLinesModel_Base_C*            CallFunc_GetBattleLineModel_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetBattleLineModel) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetBattleLineModel");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetBattleLineModel) == 0x000010, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetBattleLineModel");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleLineModel, ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleLineModel::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleLineModel, CallFunc_GetBattleLineModel_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleLineModel::CallFunc_GetBattleLineModel_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ApplyDifficultySettings
// 0x0070 (0x0070 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings final
{
public:
	struct FS_BalancingTableFloatEntry            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_BalancingTableFloatEntry            CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GameDifficulty                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BalancingTableFloatEntry            CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GameDifficulty                              Temp_byte_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_BalancingTableFloatEntry            CallFunc_GetDataTableRowFromName_OutRow_3;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GameDifficulty                              CallFunc_GetCurrentBattleDifficulty_ReturnValue;   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BalancingTableFloatEntry            CallFunc_GetDataTableRowFromName_OutRow_4;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_BalancingTableFloatEntry            CallFunc_GetDataTableRowFromName_OutRow_5;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue_1;           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_BalancingTableFloatEntry            K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GameDifficulty                              CallFunc_GetCurrentBattleDifficulty_ReturnValue_1; // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BalancingTableFloatEntry            K2Node_Select_Default_1;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings) == 0x000070, "Wrong size on BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings, CallFunc_GetDataTableRowFromName_OutRow) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings, Temp_byte_Variable) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings, Temp_byte_Variable_1) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings, CallFunc_GetBattleManager_ReturnValue) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings, CallFunc_GetDataTableRowFromName_OutRow_3) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings::CallFunc_GetDataTableRowFromName_OutRow_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings, CallFunc_GetCurrentBattleDifficulty_ReturnValue) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings::CallFunc_GetCurrentBattleDifficulty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings, CallFunc_GetDataTableRowFromName_OutRow_4) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings::CallFunc_GetDataTableRowFromName_OutRow_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings, CallFunc_GetDataTableRowFromName_OutRow_5) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings::CallFunc_GetDataTableRowFromName_OutRow_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings, CallFunc_GetBattleManager_ReturnValue_1) == 0x000050, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings::CallFunc_GetBattleManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings, K2Node_Select_Default) == 0x000058, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings, CallFunc_GetCurrentBattleDifficulty_ReturnValue_1) == 0x000060, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings::CallFunc_GetCurrentBattleDifficulty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings, K2Node_Select_Default_1) == 0x000068, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyDifficultySettings::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.Internal_SetUniqueMechanicOverpoweredState
// 0x0002 (0x0002 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_Internal_SetUniqueMechanicOverpoweredState final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_Internal_SetUniqueMechanicOverpoweredState) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_Internal_SetUniqueMechanicOverpoweredState");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_Internal_SetUniqueMechanicOverpoweredState) == 0x000002, "Wrong size on BP_jRPG_Character_Battle_Base_C_Internal_SetUniqueMechanicOverpoweredState");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Internal_SetUniqueMechanicOverpoweredState, Enabled) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_Internal_SetUniqueMechanicOverpoweredState::Enabled' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Internal_SetUniqueMechanicOverpoweredState, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'BP_jRPG_Character_Battle_Base_C_Internal_SetUniqueMechanicOverpoweredState::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetParryImmuneDuration
// 0x0058 (0x0058 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetParryImmuneDuration final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UModifierStack_Float*                   CallFunc_GetParryWindowModifier_Stack;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UModifierStack_Float*                   CallFunc_GetGlobalParryWindowModifier_Stack;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentValue_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentValue_ReturnValue_1;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_1;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetParryImmuneDuration) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetParryImmuneDuration");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetParryImmuneDuration) == 0x000058, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetParryImmuneDuration");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetParryImmuneDuration, ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetParryImmuneDuration::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetParryImmuneDuration, CallFunc_GetBattleManager_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_GetParryImmuneDuration::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetParryImmuneDuration, CallFunc_GetParryWindowModifier_Stack) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_GetParryImmuneDuration::CallFunc_GetParryWindowModifier_Stack' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetParryImmuneDuration, CallFunc_GetGlobalParryWindowModifier_Stack) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_GetParryImmuneDuration::CallFunc_GetGlobalParryWindowModifier_Stack' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetParryImmuneDuration, CallFunc_GetCurrentValue_ReturnValue) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_GetParryImmuneDuration::CallFunc_GetCurrentValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetParryImmuneDuration, CallFunc_GetCurrentValue_ReturnValue_1) == 0x000024, "Member 'BP_jRPG_Character_Battle_Base_C_GetParryImmuneDuration::CallFunc_GetCurrentValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetParryImmuneDuration, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_GetParryImmuneDuration::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetParryImmuneDuration, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_GetParryImmuneDuration::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetParryImmuneDuration, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_GetParryImmuneDuration::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetParryImmuneDuration, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_GetParryImmuneDuration::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetParryImmuneDuration, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_GetParryImmuneDuration::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetParryImmuneDuration, CallFunc_Add_DoubleDouble_B_ImplicitCast_1) == 0x000050, "Member 'BP_jRPG_Character_Battle_Base_C_GetParryImmuneDuration::CallFunc_Add_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetDodgeImmuneDuration
// 0x0058 (0x0058 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetDodgeImmuneDuration final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UModifierStack_Float*                   CallFunc_GetDodgeWindowModifier_Stack;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UModifierStack_Float*                   CallFunc_GetGlobalDodgeWindowModifier_Stack;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentValue_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentValue_ReturnValue_1;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_1;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetDodgeImmuneDuration) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetDodgeImmuneDuration");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetDodgeImmuneDuration) == 0x000058, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetDodgeImmuneDuration");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDodgeImmuneDuration, ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetDodgeImmuneDuration::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDodgeImmuneDuration, CallFunc_GetBattleManager_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_GetDodgeImmuneDuration::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDodgeImmuneDuration, CallFunc_GetDodgeWindowModifier_Stack) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_GetDodgeImmuneDuration::CallFunc_GetDodgeWindowModifier_Stack' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDodgeImmuneDuration, CallFunc_GetGlobalDodgeWindowModifier_Stack) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_GetDodgeImmuneDuration::CallFunc_GetGlobalDodgeWindowModifier_Stack' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDodgeImmuneDuration, CallFunc_GetCurrentValue_ReturnValue) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_GetDodgeImmuneDuration::CallFunc_GetCurrentValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDodgeImmuneDuration, CallFunc_GetCurrentValue_ReturnValue_1) == 0x000024, "Member 'BP_jRPG_Character_Battle_Base_C_GetDodgeImmuneDuration::CallFunc_GetCurrentValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDodgeImmuneDuration, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_GetDodgeImmuneDuration::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDodgeImmuneDuration, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_GetDodgeImmuneDuration::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDodgeImmuneDuration, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_GetDodgeImmuneDuration::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDodgeImmuneDuration, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_GetDodgeImmuneDuration::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDodgeImmuneDuration, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_GetDodgeImmuneDuration::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDodgeImmuneDuration, CallFunc_Add_DoubleDouble_B_ImplicitCast_1) == 0x000050, "Member 'BP_jRPG_Character_Battle_Base_C_GetDodgeImmuneDuration::CallFunc_Add_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetIsBeingCountered
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetIsBeingCountered final
{
public:
	bool                                          IsBeingCountered_0;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetIsBeingCountered) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetIsBeingCountered");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetIsBeingCountered) == 0x000001, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetIsBeingCountered");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetIsBeingCountered, IsBeingCountered_0) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetIsBeingCountered::IsBeingCountered_0' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetBattleSpotIndex
// 0x0004 (0x0004 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetBattleSpotIndex final
{
public:
	int32                                         BattleSpotIndex_0;                                 // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetBattleSpotIndex) == 0x000004, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetBattleSpotIndex");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetBattleSpotIndex) == 0x000004, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetBattleSpotIndex");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleSpotIndex, BattleSpotIndex_0) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleSpotIndex::BattleSpotIndex_0' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetAcquiredTargets
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetAcquiredTargets final
{
public:
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Characters;                                      // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetAcquiredTargets) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetAcquiredTargets");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetAcquiredTargets) == 0x000010, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetAcquiredTargets");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetAcquiredTargets, Characters) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetAcquiredTargets::Characters' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ClearAcquiredTargets
// 0x0060 (0x0060 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ClearAcquiredTargets final
{
public:
	TMap<class UAC_jRPG_CharacterBattleStats_C*, class UAC_jRPG_CharacterBattleStats_C*> local_interceptions; // 0x0000(0x0050)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> local_targetsToAcquire;                          // 0x0050(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ClearAcquiredTargets) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ClearAcquiredTargets");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ClearAcquiredTargets) == 0x000060, "Wrong size on BP_jRPG_Character_Battle_Base_C_ClearAcquiredTargets");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ClearAcquiredTargets, local_interceptions) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ClearAcquiredTargets::local_interceptions' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ClearAcquiredTargets, local_targetsToAcquire) == 0x000050, "Member 'BP_jRPG_Character_Battle_Base_C_ClearAcquiredTargets::local_targetsToAcquire' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.TryStopParryAnim
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_TryStopParryAnim final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_TryStopParryAnim) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_TryStopParryAnim");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_TryStopParryAnim) == 0x000001, "Wrong size on BP_jRPG_Character_Battle_Base_C_TryStopParryAnim");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStopParryAnim, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_TryStopParryAnim::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnGroupCounterAttackBegin
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnGroupCounterAttackBegin final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       CounterAttackTarget;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnGroupCounterAttackBegin) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnGroupCounterAttackBegin");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnGroupCounterAttackBegin) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnGroupCounterAttackBegin");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnGroupCounterAttackBegin, CounterAttackTarget) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnGroupCounterAttackBegin::CounterAttackTarget' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetHasAimingSkill
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetHasAimingSkill final
{
public:
	bool                                          HasAimingSkill_0;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetHasAimingSkill) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetHasAimingSkill");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetHasAimingSkill) == 0x000001, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetHasAimingSkill");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetHasAimingSkill, HasAimingSkill_0) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetHasAimingSkill::HasAimingSkill_0' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetActiveCounterSequence
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetActiveCounterSequence final
{
public:
	class ABP_EpicBattleSequenceActor_C*          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetActiveCounterSequence) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetActiveCounterSequence");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetActiveCounterSequence) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetActiveCounterSequence");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetActiveCounterSequence, ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetActiveCounterSequence::ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.CanCounterAttackCurrentEnemy
// 0x0004 (0x0004 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_CanCounterAttackCurrentEnemy final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanCounterAttackCurrentEnemySkill_ReturnValue; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_CanCounterAttackCurrentEnemy) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_CanCounterAttackCurrentEnemy");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_CanCounterAttackCurrentEnemy) == 0x000004, "Wrong size on BP_jRPG_Character_Battle_Base_C_CanCounterAttackCurrentEnemy");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CanCounterAttackCurrentEnemy, ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_CanCounterAttackCurrentEnemy::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CanCounterAttackCurrentEnemy, CallFunc_CanCounterAttackCurrentEnemySkill_ReturnValue) == 0x000001, "Member 'BP_jRPG_Character_Battle_Base_C_CanCounterAttackCurrentEnemy::CallFunc_CanCounterAttackCurrentEnemySkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CanCounterAttackCurrentEnemy, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_jRPG_Character_Battle_Base_C_CanCounterAttackCurrentEnemy::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CanCounterAttackCurrentEnemy, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BP_jRPG_Character_Battle_Base_C_CanCounterAttackCurrentEnemy::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.HasUnlockedJump
// 0x0028 (0x0028 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_HasUnlockedJump final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuestObjectiveIdentifier              CallFunc_CreateQuestObjectiveIdentifier_ReturnValue; // 0x0004(0x0010)(NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_QuestSystem_C*                      CallFunc_GetQuestSystem_QuestSystem;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasPersistentFlag_Result;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_QuestStatus                                 CallFunc_GetObjectiveStatus_Status;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_HasUnlockedJump) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_HasUnlockedJump");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_HasUnlockedJump) == 0x000028, "Wrong size on BP_jRPG_Character_Battle_Base_C_HasUnlockedJump");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HasUnlockedJump, ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_HasUnlockedJump::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HasUnlockedJump, CallFunc_CreateQuestObjectiveIdentifier_ReturnValue) == 0x000004, "Member 'BP_jRPG_Character_Battle_Base_C_HasUnlockedJump::CallFunc_CreateQuestObjectiveIdentifier_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HasUnlockedJump, CallFunc_GetQuestSystem_QuestSystem) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_HasUnlockedJump::CallFunc_GetQuestSystem_QuestSystem' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HasUnlockedJump, CallFunc_HasPersistentFlag_Result) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_HasUnlockedJump::CallFunc_HasPersistentFlag_Result' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HasUnlockedJump, CallFunc_GetObjectiveStatus_Status) == 0x000021, "Member 'BP_jRPG_Character_Battle_Base_C_HasUnlockedJump::CallFunc_GetObjectiveStatus_Status' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HasUnlockedJump, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000022, "Member 'BP_jRPG_Character_Battle_Base_C_HasUnlockedJump::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HasUnlockedJump, CallFunc_BooleanOR_ReturnValue) == 0x000023, "Member 'BP_jRPG_Character_Battle_Base_C_HasUnlockedJump::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ActivateLightingScenarioWithTag
// 0x0030 (0x0030 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ActivateLightingScenarioWithTag final
{
public:
	class FName                                   LightingScenarioTag;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ChangeSpeedMultiplier;                             // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LighingScenarioMain_DONOTTOUCH_C*   CallFunc_GetActorOfClass_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_LightingScenarioReference_C*> CallFunc_GetAllActorsOfClassWithTag_OutActors;    // 0x0018(0x0010)(ReferenceParm)
	class ABP_LightingScenarioReference_C*        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ActivateLightingScenarioWithTag) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ActivateLightingScenarioWithTag");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ActivateLightingScenarioWithTag) == 0x000030, "Wrong size on BP_jRPG_Character_Battle_Base_C_ActivateLightingScenarioWithTag");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateLightingScenarioWithTag, LightingScenarioTag) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateLightingScenarioWithTag::LightingScenarioTag' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateLightingScenarioWithTag, ChangeSpeedMultiplier) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateLightingScenarioWithTag::ChangeSpeedMultiplier' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateLightingScenarioWithTag, CallFunc_GetActorOfClass_ReturnValue) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateLightingScenarioWithTag::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateLightingScenarioWithTag, CallFunc_GetAllActorsOfClassWithTag_OutActors) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateLightingScenarioWithTag::CallFunc_GetAllActorsOfClassWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateLightingScenarioWithTag, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateLightingScenarioWithTag::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetBattleWheel2DOffsetForPage
// 0x0018 (0x0018 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetBattleWheel2DOffsetForPage final
{
public:
	struct FGameplayTag                           WheelPageTag;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              TwoDOffset;                                        // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetBattleWheel2DOffsetForPage) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetBattleWheel2DOffsetForPage");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetBattleWheel2DOffsetForPage) == 0x000018, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetBattleWheel2DOffsetForPage");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleWheel2DOffsetForPage, WheelPageTag) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleWheel2DOffsetForPage::WheelPageTag' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleWheel2DOffsetForPage, TwoDOffset) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleWheel2DOffsetForPage::TwoDOffset' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.SetBattleCharacterVisible
// 0x0060 (0x0060 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_SetBattleCharacterVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AActor>                  CallFunc_Array_Get_Item;                           // 0x0010(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_SetBattleCharacterVisible) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_SetBattleCharacterVisible");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_SetBattleCharacterVisible) == 0x000060, "Wrong size on BP_jRPG_Character_Battle_Base_C_SetBattleCharacterVisible");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetBattleCharacterVisible, Visible) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_SetBattleCharacterVisible::Visible' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetBattleCharacterVisible, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_jRPG_Character_Battle_Base_C_SetBattleCharacterVisible::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetBattleCharacterVisible, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_jRPG_Character_Battle_Base_C_SetBattleCharacterVisible::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetBattleCharacterVisible, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_SetBattleCharacterVisible::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetBattleCharacterVisible, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_SetBattleCharacterVisible::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetBattleCharacterVisible, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_SetBattleCharacterVisible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetBattleCharacterVisible, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_SetBattleCharacterVisible::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetBattleCharacterVisible, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_SetBattleCharacterVisible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetBattleCharacterVisible, K2Node_DynamicCast_AsActor) == 0x000050, "Member 'BP_jRPG_Character_Battle_Base_C_SetBattleCharacterVisible::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetBattleCharacterVisible, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_jRPG_Character_Battle_Base_C_SetBattleCharacterVisible::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetBattleCharacterVisible, CallFunc_IsValid_ReturnValue) == 0x000059, "Member 'BP_jRPG_Character_Battle_Base_C_SetBattleCharacterVisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetBattleCharacterVisible, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_jRPG_Character_Battle_Base_C_SetBattleCharacterVisible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.SetShouldPlayFinisherAtTurnEnd
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_SetShouldPlayFinisherAtTurnEnd final
{
public:
	bool                                          ShouldPlayFinisherWhenTurnEnd_0;                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_SetShouldPlayFinisherAtTurnEnd) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_SetShouldPlayFinisherAtTurnEnd");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_SetShouldPlayFinisherAtTurnEnd) == 0x000001, "Wrong size on BP_jRPG_Character_Battle_Base_C_SetShouldPlayFinisherAtTurnEnd");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetShouldPlayFinisherAtTurnEnd, ShouldPlayFinisherWhenTurnEnd_0) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_SetShouldPlayFinisherAtTurnEnd::ShouldPlayFinisherWhenTurnEnd_0' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetShouldPlayFinisher
// 0x0018 (0x0018 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetShouldPlayFinisher final
{
public:
	bool                                          ShouldPlayFinisherWhenTurnEnd_0;                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBattleEnding_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetShouldPlayFinisher) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetShouldPlayFinisher");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetShouldPlayFinisher) == 0x000018, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetShouldPlayFinisher");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetShouldPlayFinisher, ShouldPlayFinisherWhenTurnEnd_0) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetShouldPlayFinisher::ShouldPlayFinisherWhenTurnEnd_0' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetShouldPlayFinisher, CallFunc_GetBattleManager_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_GetShouldPlayFinisher::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetShouldPlayFinisher, CallFunc_IsBattleEnding_ReturnValue) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_GetShouldPlayFinisher::CallFunc_IsBattleEnding_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetShouldPlayFinisher, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_jRPG_Character_Battle_Base_C_GetShouldPlayFinisher::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetShouldPlayFinisher, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'BP_jRPG_Character_Battle_Base_C_GetShouldPlayFinisher::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetBattleMap
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetBattleMap final
{
public:
	class ABP_BattleMap_C*                        BattleMap;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetBattleMap) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetBattleMap");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetBattleMap) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetBattleMap");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleMap, BattleMap) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleMap::BattleMap' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetCharacterAudioManager
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetCharacterAudioManager final
{
public:
	class UBP_AudioCharacter_BattleManager_C*     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetCharacterAudioManager) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetCharacterAudioManager");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetCharacterAudioManager) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetCharacterAudioManager");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetCharacterAudioManager, ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetCharacterAudioManager::ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.LODSyncBattle
// 0x0018 (0x0018 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_LODSyncBattle final
{
public:
	TDelegate<void(const class UConfigurableGameUserSettings* UserConfig)> K2Node_CreateDelegate_OutputDelegate; // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UConfigurableGameUserSettings*          CallFunc_GetConfigurableGameUserSettings_GameUserSettings; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_LODSyncBattle) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_LODSyncBattle");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_LODSyncBattle) == 0x000018, "Wrong size on BP_jRPG_Character_Battle_Base_C_LODSyncBattle");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_LODSyncBattle, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_LODSyncBattle::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_LODSyncBattle, CallFunc_GetConfigurableGameUserSettings_GameUserSettings) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_LODSyncBattle::CallFunc_GetConfigurableGameUserSettings_GameUserSettings' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.LODSyncApplyParameter
// 0x0018 (0x0018 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_LODSyncApplyParameter final
{
public:
	class UConfigurableGameUserSettings*          UserSettings;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue;   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_LODSyncApplyParameter) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_LODSyncApplyParameter");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_LODSyncApplyParameter) == 0x000018, "Wrong size on BP_jRPG_Character_Battle_Base_C_LODSyncApplyParameter");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_LODSyncApplyParameter, UserSettings) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_LODSyncApplyParameter::UserSettings' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_LODSyncApplyParameter, CallFunc_GetConsoleVariableIntValue_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_LODSyncApplyParameter::CallFunc_GetConsoleVariableIntValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_LODSyncApplyParameter, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BP_jRPG_Character_Battle_Base_C_LODSyncApplyParameter::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_LODSyncApplyParameter, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_LODSyncApplyParameter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.SummonSingleMinion
// 0x0348 (0x0348 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_SummonSingleMinion final
{
public:
	struct FDataTableRowHandle                    EnemyRow;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	int32                                         BattleSpotIndex_0;                                 // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NotifyBattleStart;                                 // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       SpawnedCharacter;                                  // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpawnLocation;                                     // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0038(0x0010)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0048(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0048)(HasGetValueTypeHash)
	struct FFEnemyDataRow                         K2Node_MakeStruct_FEnemyDataRow;                   // 0x00E8(0x0010)(NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0108(0x0010)()
	bool                                          CallFunc_GetEnemyDataTableRow_Found;               // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Enemy                          CallFunc_GetEnemyDataTableRow_EnemyData;           // 0x0120(0x0200)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_322[0x6];                                      // 0x0322(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_SpawnEnemyOnSpot_SpawnedEnemy;            // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SpawnEnemyOnSpot_EnemySpawnedLocation;    // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_SummonSingleMinion) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_SummonSingleMinion");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_SummonSingleMinion) == 0x000348, "Wrong size on BP_jRPG_Character_Battle_Base_C_SummonSingleMinion");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonSingleMinion, EnemyRow) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_SummonSingleMinion::EnemyRow' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonSingleMinion, BattleSpotIndex_0) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_SummonSingleMinion::BattleSpotIndex_0' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonSingleMinion, NotifyBattleStart) == 0x000014, "Member 'BP_jRPG_Character_Battle_Base_C_SummonSingleMinion::NotifyBattleStart' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonSingleMinion, SpawnedCharacter) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_SummonSingleMinion::SpawnedCharacter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonSingleMinion, SpawnLocation) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_SummonSingleMinion::SpawnLocation' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonSingleMinion, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_SummonSingleMinion::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonSingleMinion, CallFunc_Conv_NameToText_ReturnValue) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_SummonSingleMinion::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonSingleMinion, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'BP_jRPG_Character_Battle_Base_C_SummonSingleMinion::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonSingleMinion, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'BP_jRPG_Character_Battle_Base_C_SummonSingleMinion::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonSingleMinion, K2Node_MakeStruct_FEnemyDataRow) == 0x0000E8, "Member 'BP_jRPG_Character_Battle_Base_C_SummonSingleMinion::K2Node_MakeStruct_FEnemyDataRow' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonSingleMinion, K2Node_MakeArray_Array) == 0x0000F8, "Member 'BP_jRPG_Character_Battle_Base_C_SummonSingleMinion::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonSingleMinion, CallFunc_Format_ReturnValue) == 0x000108, "Member 'BP_jRPG_Character_Battle_Base_C_SummonSingleMinion::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonSingleMinion, CallFunc_GetEnemyDataTableRow_Found) == 0x000118, "Member 'BP_jRPG_Character_Battle_Base_C_SummonSingleMinion::CallFunc_GetEnemyDataTableRow_Found' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonSingleMinion, CallFunc_GetEnemyDataTableRow_EnemyData) == 0x000120, "Member 'BP_jRPG_Character_Battle_Base_C_SummonSingleMinion::CallFunc_GetEnemyDataTableRow_EnemyData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonSingleMinion, CallFunc_Array_Contains_ReturnValue) == 0x000320, "Member 'BP_jRPG_Character_Battle_Base_C_SummonSingleMinion::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonSingleMinion, CallFunc_Not_PreBool_ReturnValue) == 0x000321, "Member 'BP_jRPG_Character_Battle_Base_C_SummonSingleMinion::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonSingleMinion, CallFunc_SpawnEnemyOnSpot_SpawnedEnemy) == 0x000328, "Member 'BP_jRPG_Character_Battle_Base_C_SummonSingleMinion::CallFunc_SpawnEnemyOnSpot_SpawnedEnemy' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonSingleMinion, CallFunc_SpawnEnemyOnSpot_EnemySpawnedLocation) == 0x000330, "Member 'BP_jRPG_Character_Battle_Base_C_SummonSingleMinion::CallFunc_SpawnEnemyOnSpot_EnemySpawnedLocation' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.CleanInstigatedActors
// 0x0318 (0x0318 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors final
{
public:
	TArray<class FString>                         local_unspawned;                                   // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         local_errorLines;                                  // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AActor>                  CallFunc_Array_Get_Item;                           // 0x0040(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B[0x5];                                       // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_JoinStringArray_ReturnValue;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00A0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00B0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_1;           // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_JoinStringArray_ReturnValue_1;            // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0130(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0140(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0188(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue_1;                     // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class AActor>                  CallFunc_Array_Get_Item_1;                         // 0x01A8(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_SoftObjectReferenceToString_ReturnValue; // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor_1;                      // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x01F8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0208(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0260(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0270(0x0010)()
	class FString                                 CallFunc_Format_ReturnValue_2;                     // 0x0280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0290(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x02E0(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue_3;                     // 0x02F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30D[0x3];                                      // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0315(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors) == 0x000318, "Wrong size on BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, local_unspawned) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::local_unspawned' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, local_errorLines) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::local_errorLines' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000024, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, Temp_int_Array_Index_Variable_1) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000070, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, K2Node_DynamicCast_AsActor) == 0x000080, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_IsValid_ReturnValue) == 0x000089, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x00008A, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_JoinStringArray_ReturnValue) == 0x000090, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_JoinStringArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_Conv_StringToText_ReturnValue) == 0x0000A0, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, K2Node_MakeStruct_FormatArgumentData) == 0x0000B0, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, K2Node_MakeArray_Array) == 0x0000F8, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_Array_IsNotEmpty_ReturnValue_1) == 0x000108, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_Array_IsNotEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_Format_ReturnValue) == 0x000110, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_JoinStringArray_ReturnValue_1) == 0x000120, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_JoinStringArray_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000130, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, K2Node_MakeStruct_FormatArgumentData_1) == 0x000140, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, K2Node_MakeArray_Array_1) == 0x000188, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_Format_ReturnValue_1) == 0x000198, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_Array_Get_Item_1) == 0x0001A8, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x0001D0, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_Conv_SoftObjectReferenceToString_ReturnValue) == 0x0001D8, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_Conv_SoftObjectReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, K2Node_DynamicCast_AsActor_1) == 0x0001E8, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::K2Node_DynamicCast_AsActor_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, K2Node_DynamicCast_bSuccess_1) == 0x0001F0, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0001F8, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, K2Node_MakeStruct_FormatArgumentData_2) == 0x000208, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_GetDisplayName_ReturnValue) == 0x000250, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, K2Node_MakeArray_Array_2) == 0x000260, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000270, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_Format_ReturnValue_2) == 0x000280, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, K2Node_MakeStruct_FormatArgumentData_3) == 0x000290, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_Array_Add_ReturnValue) == 0x0002D8, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, K2Node_MakeArray_Array_3) == 0x0002E0, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_IsValid_ReturnValue_1) == 0x0002F0, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_Format_ReturnValue_3) == 0x0002F8, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_Array_Add_ReturnValue_1) == 0x000308, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_Array_Contains_ReturnValue) == 0x00030C, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_Array_Length_ReturnValue_1) == 0x000310, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_Not_PreBool_ReturnValue) == 0x000314, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors, CallFunc_Less_IntInt_ReturnValue_1) == 0x000315, "Member 'BP_jRPG_Character_Battle_Base_C_CleanInstigatedActors::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.RegisterExternalActor
// 0x0038 (0x0038 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_RegisterExternalActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class AActor>                  CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0008(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_RegisterExternalActor) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_RegisterExternalActor");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_RegisterExternalActor) == 0x000038, "Wrong size on BP_jRPG_Character_Battle_Base_C_RegisterExternalActor");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RegisterExternalActor, Actor) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_RegisterExternalActor::Actor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RegisterExternalActor, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_RegisterExternalActor::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RegisterExternalActor, CallFunc_Array_Add_ReturnValue) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_RegisterExternalActor::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ProcessDamageReceivedSound
// 0x0050 (0x0050 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ProcessDamageReceivedSound final
{
public:
	class UBP_BattleDamages_C*                    BattleDamage;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsWeakness_IsWeakness;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsResistant_IsResistant;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_GetSourceCharacter_SourceCharacter;       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsCriticalHit_IsCritical;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AudioCharacter_BattleManager_C*     CallFunc_GetCharacterAudioManager_ReturnValue;     // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_AudioBattleCharacterManager_C> CallFunc_PlayHitByCommonEvent_self_CastInput; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ProcessDamageReceivedSound) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ProcessDamageReceivedSound");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ProcessDamageReceivedSound) == 0x000050, "Wrong size on BP_jRPG_Character_Battle_Base_C_ProcessDamageReceivedSound");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ProcessDamageReceivedSound, BattleDamage) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ProcessDamageReceivedSound::BattleDamage' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ProcessDamageReceivedSound, CallFunc_GetIsWeakness_IsWeakness) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_ProcessDamageReceivedSound::CallFunc_GetIsWeakness_IsWeakness' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ProcessDamageReceivedSound, CallFunc_GetIsResistant_IsResistant) == 0x000009, "Member 'BP_jRPG_Character_Battle_Base_C_ProcessDamageReceivedSound::CallFunc_GetIsResistant_IsResistant' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ProcessDamageReceivedSound, CallFunc_GetSourceCharacter_SourceCharacter) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_ProcessDamageReceivedSound::CallFunc_GetSourceCharacter_SourceCharacter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ProcessDamageReceivedSound, CallFunc_GetIsCriticalHit_IsCritical) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_ProcessDamageReceivedSound::CallFunc_GetIsCriticalHit_IsCritical' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ProcessDamageReceivedSound, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_ProcessDamageReceivedSound::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ProcessDamageReceivedSound, CallFunc_GetCharacterBattleBase_IsValid) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_ProcessDamageReceivedSound::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ProcessDamageReceivedSound, CallFunc_GetCharacterAudioManager_ReturnValue) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_ProcessDamageReceivedSound::CallFunc_GetCharacterAudioManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ProcessDamageReceivedSound, CallFunc_PlayHitByCommonEvent_self_CastInput) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_ProcessDamageReceivedSound::CallFunc_PlayHitByCommonEvent_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ProcessDamageReceivedSound, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_ProcessDamageReceivedSound::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.SpawnDamagePopupFromDamages
// 0x00B0 (0x00B0 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages final
{
public:
	class UBP_BattleDamages_C*                    BattleDamages;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_HUD_DamageFeedback_C*              DamageWidget;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_HUD_DamageFeedback_C*              CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_2;                        // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_3;                        // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FMargin>                        K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                CallFunc_Array_Get_Item;                           // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeVector2D_X_ImplicitCast;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages) == 0x0000B0, "Wrong size on BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages, BattleDamages) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages::BattleDamages' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages, DamageWidget) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages::DamageWidget' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages, CallFunc_Create_ReturnValue) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages, K2Node_MakeStruct_Margin) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages, K2Node_MakeStruct_Margin_1) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages, K2Node_MakeStruct_Margin_2) == 0x000050, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages::K2Node_MakeStruct_Margin_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages, K2Node_MakeStruct_Margin_3) == 0x000060, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages::K2Node_MakeStruct_Margin_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages, K2Node_MakeArray_Array) == 0x000070, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages, CallFunc_Array_Get_Item) == 0x000084, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages, CallFunc_Percent_IntInt_ReturnValue) == 0x000098, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages, CallFunc_MakeVector2D_X_ImplicitCast) == 0x0000A0, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages::CallFunc_MakeVector2D_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages, CallFunc_MakeVector2D_Y_ImplicitCast) == 0x0000A8, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnDamagePopupFromDamages::CallFunc_MakeVector2D_Y_ImplicitCast' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ResolveHitSound
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ResolveHitSound final
{
public:
	class UObject*                                local_HitSound;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ResolveHitSound) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ResolveHitSound");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ResolveHitSound) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_ResolveHitSound");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ResolveHitSound, local_HitSound) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ResolveHitSound::local_HitSound' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.Attach Weapons to Hands
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_Attach_Weapons_to_Hands final
{
public:
	class ABP_WeaponSkin_C*                       WeaponActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_Attach_Weapons_to_Hands) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_Attach_Weapons_to_Hands");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_Attach_Weapons_to_Hands) == 0x000010, "Wrong size on BP_jRPG_Character_Battle_Base_C_Attach_Weapons_to_Hands");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Attach_Weapons_to_Hands, WeaponActor) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_Attach_Weapons_to_Hands::WeaponActor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Attach_Weapons_to_Hands, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_Attach_Weapons_to_Hands::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Attach_Weapons_to_Hands, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x000009, "Member 'BP_jRPG_Character_Battle_Base_C_Attach_Weapons_to_Hands::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.InitializeCameraFocus
// 0x00A0 (0x00A0 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_InitializeCameraFocus final
{
public:
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCameraFocusSettings                   K2Node_MakeStruct_CameraFocusSettings;             // 0x0038(0x0060)()
	float                                         K2Node_MakeStruct_ManualFocusDistance_ImplicitCast; // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_InitializeCameraFocus) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_InitializeCameraFocus");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_InitializeCameraFocus) == 0x0000A0, "Wrong size on BP_jRPG_Character_Battle_Base_C_InitializeCameraFocus");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_InitializeCameraFocus, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_InitializeCameraFocus::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_InitializeCameraFocus, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_InitializeCameraFocus::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_InitializeCameraFocus, CallFunc_Vector_Distance_ReturnValue) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_InitializeCameraFocus::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_InitializeCameraFocus, K2Node_MakeStruct_CameraFocusSettings) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_InitializeCameraFocus::K2Node_MakeStruct_CameraFocusSettings' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_InitializeCameraFocus, K2Node_MakeStruct_ManualFocusDistance_ImplicitCast) == 0x000098, "Member 'BP_jRPG_Character_Battle_Base_C_InitializeCameraFocus::K2Node_MakeStruct_ManualFocusDistance_ImplicitCast' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetDamagePopupWorldLocation
// 0x0030 (0x0030 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetDamagePopupWorldLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetDamagePopupWorldLocation) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetDamagePopupWorldLocation");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetDamagePopupWorldLocation) == 0x000030, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetDamagePopupWorldLocation");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDamagePopupWorldLocation, ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetDamagePopupWorldLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDamagePopupWorldLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_GetDamagePopupWorldLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ExecuteSkillAction
// 0x00E0 (0x00E0 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction final
{
public:
	class FName                                   SkillID;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SkillState_C*                       local_skillState;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          local_shouldSpendAP;                               // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DataAsset_Skill_C*                  local_skillData;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSkillCost_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasSkillCostCanceled_ReturnValue;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0010)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SkillState_C*                       CallFunc_GetSkillState_Value;                      // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_DataAsset_Skill_C*                  CallFunc_FindEquippedSkillByID_Skill;              // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction) == 0x0000E0, "Wrong size on BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction, SkillID) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction::SkillID' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction, local_skillState) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction::local_skillState' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction, local_shouldSpendAP) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction::local_shouldSpendAP' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction, local_skillData) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction::local_skillData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction, CallFunc_GetSkillCost_ReturnValue) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction::CallFunc_GetSkillCost_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction, CallFunc_WasSkillCostCanceled_ReturnValue) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction::CallFunc_WasSkillCostCanceled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction, CallFunc_GetDisplayName_ReturnValue) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction, K2Node_SwitchEnum_CmpSuccess) == 0x000058, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction, K2Node_MakeArray_Array) == 0x0000A8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x0000C8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction, CallFunc_GetSkillState_Value) == 0x0000D0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction::CallFunc_GetSkillState_Value' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction, CallFunc_FindEquippedSkillByID_Skill) == 0x0000D8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillAction::CallFunc_FindEquippedSkillByID_Skill' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ClearActionEffectNumber
// 0x0020 (0x0020 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ClearActionEffectNumber final
{
public:
	class FString                                 Reason;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ClearActionEffectNumber) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ClearActionEffectNumber");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ClearActionEffectNumber) == 0x000020, "Wrong size on BP_jRPG_Character_Battle_Base_C_ClearActionEffectNumber");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ClearActionEffectNumber, Reason) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ClearActionEffectNumber::Reason' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ClearActionEffectNumber, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_ClearActionEffectNumber::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetAttackedLocation
// 0x00A8 (0x00A8 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetAttackedLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetAttackedLocation) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetAttackedLocation");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetAttackedLocation) == 0x0000A8, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetAttackedLocation");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetAttackedLocation, ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetAttackedLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetAttackedLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_GetAttackedLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetAttackedLocation, Temp_bool_Variable) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_GetAttackedLocation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetAttackedLocation, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_jRPG_Character_Battle_Base_C_GetAttackedLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetAttackedLocation, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_GetAttackedLocation::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetAttackedLocation, CallFunc_GetCharacterBattleBase_IsValid) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_GetAttackedLocation::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetAttackedLocation, K2Node_Select_Default) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_GetAttackedLocation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetAttackedLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000060, "Member 'BP_jRPG_Character_Battle_Base_C_GetAttackedLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetAttackedLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000078, "Member 'BP_jRPG_Character_Battle_Base_C_GetAttackedLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetAttackedLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000090, "Member 'BP_jRPG_Character_Battle_Base_C_GetAttackedLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.HasReceivedBattleStart
// 0x0002 (0x0002 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_HasReceivedBattleStart final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_HasReceivedBattleStart) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_HasReceivedBattleStart");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_HasReceivedBattleStart) == 0x000002, "Wrong size on BP_jRPG_Character_Battle_Base_C_HasReceivedBattleStart");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HasReceivedBattleStart, ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_HasReceivedBattleStart::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HasReceivedBattleStart, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_jRPG_Character_Battle_Base_C_HasReceivedBattleStart::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetWeaponActor
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetWeaponActor final
{
public:
	class ABP_WeaponSkin_C*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetWeaponActor) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetWeaponActor");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetWeaponActor) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetWeaponActor");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetWeaponActor, ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetWeaponActor::ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.StartCounterableMove
// 0x0090 (0x0090 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_StartCounterableMove final
{
public:
	ECounterType                                  CounterType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_StartCounterableMove) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_StartCounterableMove");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_StartCounterableMove) == 0x000090, "Wrong size on BP_jRPG_Character_Battle_Base_C_StartCounterableMove");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartCounterableMove, CounterType) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_StartCounterableMove::CounterType' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartCounterableMove, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_StartCounterableMove::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartCounterableMove, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_StartCounterableMove::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartCounterableMove, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_StartCounterableMove::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartCounterableMove, K2Node_MakeArray_Array) == 0x000070, "Member 'BP_jRPG_Character_Battle_Base_C_StartCounterableMove::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartCounterableMove, CallFunc_Format_ReturnValue) == 0x000080, "Member 'BP_jRPG_Character_Battle_Base_C_StartCounterableMove::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.PerformActionByAI_Internal
// 0x0003 (0x0003 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_PerformActionByAI_Internal final
{
public:
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_Guid_ReturnValue;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_PerformActionByAI_Internal) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_PerformActionByAI_Internal");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_PerformActionByAI_Internal) == 0x000003, "Wrong size on BP_jRPG_Character_Battle_Base_C_PerformActionByAI_Internal");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformActionByAI_Internal, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_PerformActionByAI_Internal::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformActionByAI_Internal, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_jRPG_Character_Battle_Base_C_PerformActionByAI_Internal::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformActionByAI_Internal, CallFunc_IsValid_Guid_ReturnValue) == 0x000002, "Member 'BP_jRPG_Character_Battle_Base_C_PerformActionByAI_Internal::CallFunc_IsValid_Guid_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ExecuteSkillEvent
// 0x0100 (0x0100 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ExecuteSkillEvent final
{
public:
	struct FFRoutedEventHandle                    SkillHandle;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_GuidToString_ReturnValue;            // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0088(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillEvent) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ExecuteSkillEvent");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillEvent) == 0x000100, "Wrong size on BP_jRPG_Character_Battle_Base_C_ExecuteSkillEvent");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillEvent, SkillHandle) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillEvent::SkillHandle' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillEvent, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillEvent::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillEvent, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillEvent::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillEvent, CallFunc_Conv_GuidToString_ReturnValue) == 0x000078, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillEvent::CallFunc_Conv_GuidToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillEvent, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000088, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillEvent::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillEvent, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillEvent::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillEvent, K2Node_MakeArray_Array) == 0x0000E0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillEvent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillEvent, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillEvent::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.DeclareSkillEvent
// 0x00B8 (0x00B8 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_DeclareSkillEvent final
{
public:
	struct FFRoutedEventHandle                    SkillHandle;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
	TDelegate<void()>                             Event;                                             // 0x0020(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class FString                                 DebugName;                                         // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_DeclareSkillEvent) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_DeclareSkillEvent");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_DeclareSkillEvent) == 0x0000B8, "Wrong size on BP_jRPG_Character_Battle_Base_C_DeclareSkillEvent");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DeclareSkillEvent, SkillHandle) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_DeclareSkillEvent::SkillHandle' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DeclareSkillEvent, Event) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_DeclareSkillEvent::Event' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DeclareSkillEvent, DebugName) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_DeclareSkillEvent::DebugName' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DeclareSkillEvent, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_DeclareSkillEvent::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DeclareSkillEvent, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'BP_jRPG_Character_Battle_Base_C_DeclareSkillEvent::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DeclareSkillEvent, K2Node_MakeArray_Array) == 0x000098, "Member 'BP_jRPG_Character_Battle_Base_C_DeclareSkillEvent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DeclareSkillEvent, CallFunc_Format_ReturnValue) == 0x0000A8, "Member 'BP_jRPG_Character_Battle_Base_C_DeclareSkillEvent::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ExecuteSkillScript
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ExecuteSkillScript final
{
public:
	class ABP_Battle_SkillScript_C*               SkillScriptInstance;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillScript) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ExecuteSkillScript");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillScript) == 0x000010, "Wrong size on BP_jRPG_Character_Battle_Base_C_ExecuteSkillScript");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillScript, SkillScriptInstance) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillScript::SkillScriptInstance' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillScript, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillScript, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ShouldDoLastStand
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ShouldDoLastStand final
{
public:
	bool                                          DoLastStand;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ShouldDoLastStand) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ShouldDoLastStand");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ShouldDoLastStand) == 0x000001, "Wrong size on BP_jRPG_Character_Battle_Base_C_ShouldDoLastStand");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ShouldDoLastStand, DoLastStand) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ShouldDoLastStand::DoLastStand' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.AdjustDefensiveMoveLockTimer
// 0x01B8 (0x01B8 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer final
{
public:
	double                                        NewDuration;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Reason;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	double                                        local_newTimeLeft;                                 // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0078(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00E8(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_K2_TimerExistsHandle_ReturnValue;         // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue; // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0138(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0188(0x0010)(ReferenceParm)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue_1;                     // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer) == 0x0001B8, "Wrong size on BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer, NewDuration) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer::NewDuration' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer, Reason) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer::Reason' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer, local_newTimeLeft) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer::local_newTimeLeft' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer, K2Node_MakeStruct_FormatArgumentData_1) == 0x000078, "Member 'BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer, K2Node_MakeArray_Array) == 0x0000C0, "Member 'BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer, CallFunc_Format_ReturnValue) == 0x0000D8, "Member 'BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000E8, "Member 'BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer, CallFunc_K2_TimerExistsHandle_ReturnValue) == 0x000130, "Member 'BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer::CallFunc_K2_TimerExistsHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer, CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue) == 0x000134, "Member 'BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer::CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer, K2Node_MakeStruct_FormatArgumentData_3) == 0x000138, "Member 'BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000180, "Member 'BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer, K2Node_MakeArray_Array_1) == 0x000188, "Member 'BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer, CallFunc_FMax_ReturnValue) == 0x000198, "Member 'BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer, CallFunc_Format_ReturnValue_1) == 0x0001A0, "Member 'BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0001B0, "Member 'BP_jRPG_Character_Battle_Base_C_AdjustDefensiveMoveLockTimer::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.Acquire Targets
// 0x02E8 (0x02E8 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_Acquire_Targets final
{
public:
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Targets;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> AcquiredTargets;                                 // 0x0010(0x0010)(Parm, OutParm)
	class UAC_jRPG_CharacterBattleStats_C*        local_interceptor;                                 // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        local_protected;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMap<class UAC_jRPG_CharacterBattleStats_C*, class UAC_jRPG_CharacterBattleStats_C*> local_interceptions; // 0x0030(0x0050)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> local_targetsToAcquire;                          // 0x0080(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ConcatenateDisplayNamesString_Result;     // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00B0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00C0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0108(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterTeamSelector                        CallFunc_GetTeam_Team;                             // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterReactionSystem_C*          CallFunc_GetCharacterReactionSystem_ReturnValue;   // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1; // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_1;         // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue_1;           // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetDummyMiddleCharacter_ReturnValue;      // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBattleEnding_ReturnValue;               // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> K2Node_MakeArray_Array_1;                        // 0x01B0(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CD[0x3];                                      // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_Map_Find_Value;                           // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAC_jRPG_CharacterBattleStats_C*> CallFunc_Map_Keys_Keys;                           // 0x01E0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_Array_Get_Item_1;                         // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualsObjects_ReturnValue;                // 0x01FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FF[0x1];                                      // 0x01FF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAC_jRPG_CharacterBattleStats_C*> CallFunc_Map_Keys_Keys_1;                         // 0x0200(0x0010)(ReferenceParm, ContainsInstancedReference)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_2;                         // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21D[0x3];                                      // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue_2;           // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_TryGetInterceptingCharacter_CharacterStats; // 0x0228(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_2; // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_2;         // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0242(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0243(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0245(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_246[0x2];                                      // 0x0246(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_3;                         // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_1;           // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ConcatenateDisplayNamesString_Result_1;   // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0268(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0278(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_2;           // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x02C8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue_1;                     // 0x02D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_Acquire_Targets");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets) == 0x0002E8, "Wrong size on BP_jRPG_Character_Battle_Base_C_Acquire_Targets");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, Targets) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::Targets' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, AcquiredTargets) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::AcquiredTargets' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, local_interceptor) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::local_interceptor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, local_protected) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::local_protected' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, local_interceptions) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::local_interceptions' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, local_targetsToAcquire) == 0x000080, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::local_targetsToAcquire' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, Temp_int_Array_Index_Variable) == 0x000090, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000098, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_ConcatenateDisplayNamesString_Result) == 0x0000A0, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_ConcatenateDisplayNamesString_Result' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Conv_StringToText_ReturnValue) == 0x0000B0, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, K2Node_MakeStruct_FormatArgumentData) == 0x0000C0, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, K2Node_MakeArray_Array) == 0x000108, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Format_ReturnValue) == 0x000118, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, Temp_int_Loop_Counter_Variable) == 0x000128, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, Temp_int_Loop_Counter_Variable_1) == 0x00012C, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Less_IntInt_ReturnValue) == 0x000130, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Add_IntInt_ReturnValue) == 0x000134, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Add_IntInt_ReturnValue_1) == 0x000138, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, Temp_int_Array_Index_Variable_1) == 0x00013C, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_GetTeam_Team) == 0x000140, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_GetTeam_Team' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_GetCharacterReactionSystem_ReturnValue) == 0x000148, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_GetCharacterReactionSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000150, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, Temp_int_Loop_Counter_Variable_2) == 0x000154, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Add_IntInt_ReturnValue_2) == 0x000158, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000160, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_GetCharacterBattleBase_IsValid) == 0x000168, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1) == 0x000170, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_GetCharacterBattleBase_IsValid_1) == 0x000178, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_GetCharacterBattleBase_IsValid_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, Temp_int_Array_Index_Variable_2) == 0x00017C, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Array_Get_Item) == 0x000180, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_IsValid_ReturnValue) == 0x000188, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_GetBattleManager_ReturnValue) == 0x000190, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_GetBattleManager_ReturnValue_1) == 0x000198, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_GetBattleManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_GetDummyMiddleCharacter_ReturnValue) == 0x0001A0, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_GetDummyMiddleCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_IsBattleEnding_ReturnValue) == 0x0001A8, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_IsBattleEnding_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, K2Node_MakeArray_Array_1) == 0x0001B0, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Not_PreBool_ReturnValue) == 0x0001C0, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Array_AddUnique_ReturnValue) == 0x0001C4, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Array_Add_ReturnValue) == 0x0001C8, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Array_RemoveItem_ReturnValue) == 0x0001CC, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Map_Find_Value) == 0x0001D0, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Map_Find_ReturnValue) == 0x0001D8, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Map_Keys_Keys) == 0x0001E0, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Array_Get_Item_1) == 0x0001F0, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Array_Length_ReturnValue_1) == 0x0001F8, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001FC, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_EqualsObjects_ReturnValue) == 0x0001FD, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_EqualsObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001FE, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Map_Keys_Keys_1) == 0x000200, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Array_Get_Item_2) == 0x000210, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Array_Length_ReturnValue_2) == 0x000218, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Less_IntInt_ReturnValue_2) == 0x00021C, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_GetBattleManager_ReturnValue_2) == 0x000220, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_GetBattleManager_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_TryGetInterceptingCharacter_CharacterStats) == 0x000228, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_TryGetInterceptingCharacter_CharacterStats' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Array_Contains_ReturnValue) == 0x000230, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_2) == 0x000238, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_GetCharacterBattleBase_IsValid_2) == 0x000240, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_GetCharacterBattleBase_IsValid_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Not_PreBool_ReturnValue_2) == 0x000241, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Array_Contains_ReturnValue_1) == 0x000242, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_IsValid_ReturnValue_1) == 0x000243, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Not_PreBool_ReturnValue_3) == 0x000244, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_BooleanAND_ReturnValue) == 0x000245, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Array_Get_Item_3) == 0x000248, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Array_IsNotEmpty_ReturnValue_1) == 0x000250, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Array_IsNotEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_ConcatenateDisplayNamesString_Result_1) == 0x000258, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_ConcatenateDisplayNamesString_Result_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000268, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, K2Node_MakeStruct_FormatArgumentData_1) == 0x000278, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Array_IsNotEmpty_ReturnValue_2) == 0x0002C0, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Array_IsNotEmpty_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, K2Node_MakeArray_Array_2) == 0x0002C8, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Acquire_Targets, CallFunc_Format_ReturnValue_1) == 0x0002D8, "Member 'BP_jRPG_Character_Battle_Base_C_Acquire_Targets::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.IsLastActionEffectOfSkill
// 0x000C (0x000C - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_IsLastActionEffectOfSkill final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_IsLastActionEffectOfSkill) == 0x000004, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_IsLastActionEffectOfSkill");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_IsLastActionEffectOfSkill) == 0x00000C, "Wrong size on BP_jRPG_Character_Battle_Base_C_IsLastActionEffectOfSkill");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_IsLastActionEffectOfSkill, ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_IsLastActionEffectOfSkill::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_IsLastActionEffectOfSkill, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000001, "Member 'BP_jRPG_Character_Battle_Base_C_IsLastActionEffectOfSkill::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_IsLastActionEffectOfSkill, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'BP_jRPG_Character_Battle_Base_C_IsLastActionEffectOfSkill::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_IsLastActionEffectOfSkill, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_IsLastActionEffectOfSkill::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ApplyStandardStatusEffectOnTarget
// 0x00D0 (0x00D0 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget final
{
public:
	E_StatusEffects                               StatusEffect;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TurnDuration;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBuffApplicationProbability                   StatusEffectProbability;                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Condition;                                         // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       TargetCharacter;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleBuffInstance_C*               local_StatusEffectInstance;                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0010)()
	class UClass*                                 CallFunc_GetStatusEffectBuffClass_BP_Class;        // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0048)(HasGetValueTypeHash)
	class UBP_BattleBuffInstance_C*               CallFunc_SpawnObject_ReturnValue;                  // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0010)()
	bool                                          CallFunc_ActivateBuff_Success;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget) == 0x0000D0, "Wrong size on BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget, StatusEffect) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget::StatusEffect' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget, TurnDuration) == 0x000004, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget::TurnDuration' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget, StatusEffectProbability) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget::StatusEffectProbability' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget, Condition) == 0x000009, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget::Condition' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget, TargetCharacter) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget::TargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget, Success) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget::Success' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget, local_StatusEffectInstance) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget::local_StatusEffectInstance' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget, CallFunc_GetStatusEffectBuffClass_BP_Class) == 0x000050, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget::CallFunc_GetStatusEffectBuffClass_BP_Class' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget, CallFunc_SpawnObject_ReturnValue) == 0x0000A0, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget, K2Node_MakeArray_Array) == 0x0000A8, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget, CallFunc_ActivateBuff_Success) == 0x0000C8, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffectOnTarget::CallFunc_ActivateBuff_Success' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ApplyStandardStatusEffect
// 0x0020 (0x0020 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffect final
{
public:
	E_StatusEffects                               StatusEffect;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TurnDuration;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBuffApplicationProbability                   StatusEffectProbability;                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Condition;                                         // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleBuffInstance_C*               local_StatusEffectInstance;                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ApplyStandardStatusEffectOnTarget_Success; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffect) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffect");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffect) == 0x000020, "Wrong size on BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffect");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffect, StatusEffect) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffect::StatusEffect' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffect, TurnDuration) == 0x000004, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffect::TurnDuration' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffect, StatusEffectProbability) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffect::StatusEffectProbability' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffect, Condition) == 0x000009, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffect::Condition' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffect, Success) == 0x00000A, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffect::Success' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffect, local_StatusEffectInstance) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffect::local_StatusEffectInstance' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffect, CallFunc_ApplyStandardStatusEffectOnTarget_Success) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_ApplyStandardStatusEffect::CallFunc_ApplyStandardStatusEffectOnTarget_Success' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.PerformStandardHit
// 0x0088 (0x0088 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_PerformStandardHit final
{
public:
	bool                                          CanBeCountered_0;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanBeJumped;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RequiresGradientCounter;                           // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DamageMultiplier;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttackType                                   DamageElement;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasHit;                                            // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_BattleDamages_C*>            BattleDamages;                                     // 0x0018(0x0010)(Parm, OutParm, ContainsInstancedReference)
	bool                                          local_hasHit;                                      // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_BattleDamages_C*>            Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0030(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_BattleDamages_C*>            Temp_wildcard_Temp_buffer_array_Variable;          // 0x0050(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PerformStandardHitOnCharacter_HasHit;     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleDamages_C*                    CallFunc_PerformStandardHitOnCharacter_BattleDamages; // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_PerformStandardHit) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_PerformStandardHit");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_PerformStandardHit) == 0x000088, "Wrong size on BP_jRPG_Character_Battle_Base_C_PerformStandardHit");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHit, CanBeCountered_0) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHit::CanBeCountered_0' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHit, CanBeJumped) == 0x000001, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHit::CanBeJumped' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHit, RequiresGradientCounter) == 0x000002, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHit::RequiresGradientCounter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHit, DamageMultiplier) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHit::DamageMultiplier' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHit, DamageElement) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHit::DamageElement' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHit, HasHit) == 0x000011, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHit::HasHit' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHit, BattleDamages) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHit::BattleDamages' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHit, local_hasHit) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHit::local_hasHit' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHit, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHit::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHit, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHit::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHit, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHit::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHit, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHit::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHit, Temp_wildcard_Temp_buffer_array_Variable) == 0x000050, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHit::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHit, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHit::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHit, CallFunc_PerformStandardHitOnCharacter_HasHit) == 0x000068, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHit::CallFunc_PerformStandardHitOnCharacter_HasHit' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHit, CallFunc_PerformStandardHitOnCharacter_BattleDamages) == 0x000070, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHit::CallFunc_PerformStandardHitOnCharacter_BattleDamages' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHit, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHit::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHit, CallFunc_Array_Add_ReturnValue) == 0x00007C, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHit::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHit, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHit::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.PerformStandardHitOnCharacter
// 0x0068 (0x0068 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       TargetCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CanBeCountered_0;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanBeJumped;                                       // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RequiresGradientCounter;                           // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DamageMultiplier;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttackType                                   DamageElement;                                     // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasHit;                                            // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleDamages_C*                    BattleDamages;                                     // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIBattleDamageSource_C> CallFunc_ReceiveDamage_DamageSourceCharacter_CastInput; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ReceiveDamage_DamageDealt;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamage_HasHit;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamage_DodgeSuccess;               // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamage_ParrySuccess;               // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamage_QTESuccess_;                // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleDamages_C*                    CallFunc_ReceiveDamage_BattleDamages;              // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter) == 0x000068, "Wrong size on BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter, TargetCharacter) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter::TargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter, CanBeCountered_0) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter::CanBeCountered_0' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter, CanBeJumped) == 0x000009, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter::CanBeJumped' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter, RequiresGradientCounter) == 0x00000A, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter::RequiresGradientCounter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter, DamageMultiplier) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter::DamageMultiplier' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter, DamageElement) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter::DamageElement' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter, HasHit) == 0x000019, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter::HasHit' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter, BattleDamages) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter::BattleDamages' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter, Temp_bool_Variable) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter, K2Node_Select_Default) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter, CallFunc_ReceiveDamage_DamageSourceCharacter_CastInput) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter::CallFunc_ReceiveDamage_DamageSourceCharacter_CastInput' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter, CallFunc_ReceiveDamage_DamageDealt) == 0x000050, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter::CallFunc_ReceiveDamage_DamageDealt' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter, CallFunc_ReceiveDamage_HasHit) == 0x000058, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter::CallFunc_ReceiveDamage_HasHit' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter, CallFunc_ReceiveDamage_DodgeSuccess) == 0x000059, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter::CallFunc_ReceiveDamage_DodgeSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter, CallFunc_ReceiveDamage_ParrySuccess) == 0x00005A, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter::CallFunc_ReceiveDamage_ParrySuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter, CallFunc_ReceiveDamage_QTESuccess_) == 0x00005B, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter::CallFunc_ReceiveDamage_QTESuccess_' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter, CallFunc_ReceiveDamage_BattleDamages) == 0x000060, "Member 'BP_jRPG_Character_Battle_Base_C_PerformStandardHitOnCharacter::CallFunc_ReceiveDamage_BattleDamages' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.SetActiveFreeAimHand
// 0x00C8 (0x00C8 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand final
{
public:
	bool                                          UseRightHand;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BoneOverride;                                      // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_1;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        K2Node_Select_Default_2;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0040(0x0010)()
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0010)()
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand) == 0x0000C8, "Wrong size on BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand, UseRightHand) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand::UseRightHand' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand, BoneOverride) == 0x000004, "Member 'BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand::BoneOverride' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand, Temp_bool_Variable) == 0x00000C, "Member 'BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand, CallFunc_NotEqual_NameName_ReturnValue) == 0x00000D, "Member 'BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand, Temp_name_Variable) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand, Temp_name_Variable_1) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand, Temp_bool_Variable_1) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand, K2Node_Select_Default) == 0x000024, "Member 'BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand, Temp_bool_Variable_2) == 0x00002C, "Member 'BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand, K2Node_Select_Default_1) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand, K2Node_Select_Default_2) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand, CallFunc_Conv_NameToText_ReturnValue) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand, CallFunc_DoesSocketExist_ReturnValue) == 0x000050, "Member 'BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand, CallFunc_Not_PreBool_ReturnValue) == 0x0000A0, "Member 'BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand, K2Node_MakeArray_Array) == 0x0000A8, "Member 'BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'BP_jRPG_Character_Battle_Base_C_SetActiveFreeAimHand::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.TryPerformLastStand
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_TryPerformLastStand final
{
public:
	class UBP_LastStandRequest_C*                 LastStandRequest;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_TryPerformLastStand) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_TryPerformLastStand");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_TryPerformLastStand) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_TryPerformLastStand");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryPerformLastStand, LastStandRequest) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_TryPerformLastStand::LastStandRequest' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.StartLastStandMove
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_StartLastStandMove final
{
public:
	class FString                                 DebugName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_StartLastStandMove) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_StartLastStandMove");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_StartLastStandMove) == 0x000010, "Wrong size on BP_jRPG_Character_Battle_Base_C_StartLastStandMove");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartLastStandMove, DebugName) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_StartLastStandMove::DebugName' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.StartGradientAttack
// 0x0080 (0x0080 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_StartGradientAttack final
{
public:
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_StartGradientAttack) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_StartGradientAttack");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_StartGradientAttack) == 0x000080, "Wrong size on BP_jRPG_Character_Battle_Base_C_StartGradientAttack");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartGradientAttack, CallFunc_GetComponentBounds_Origin) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_StartGradientAttack::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartGradientAttack, CallFunc_GetComponentBounds_BoxExtent) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_StartGradientAttack::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartGradientAttack, CallFunc_GetComponentBounds_SphereRadius) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_StartGradientAttack::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartGradientAttack, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_StartGradientAttack::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartGradientAttack, CallFunc_FClamp_ReturnValue) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_StartGradientAttack::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartGradientAttack, CallFunc_GetSocketLocation_ReturnValue) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_StartGradientAttack::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartGradientAttack, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000060, "Member 'BP_jRPG_Character_Battle_Base_C_StartGradientAttack::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartGradientAttack, CallFunc_Not_PreBool_ReturnValue) == 0x000068, "Member 'BP_jRPG_Character_Battle_Base_C_StartGradientAttack::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartGradientAttack, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000070, "Member 'BP_jRPG_Character_Battle_Base_C_StartGradientAttack::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartGradientAttack, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000078, "Member 'BP_jRPG_Character_Battle_Base_C_StartGradientAttack::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.IsInImmunityPhase
// 0x0018 (0x0018 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_IsInImmunityPhase final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_IsInImmunityPhase) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_IsInImmunityPhase");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_IsInImmunityPhase) == 0x000018, "Wrong size on BP_jRPG_Character_Battle_Base_C_IsInImmunityPhase");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_IsInImmunityPhase, ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_IsInImmunityPhase::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_IsInImmunityPhase, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_IsInImmunityPhase::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_IsInImmunityPhase, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_IsInImmunityPhase::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_IsInImmunityPhase, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000011, "Member 'BP_jRPG_Character_Battle_Base_C_IsInImmunityPhase::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_IsInImmunityPhase, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'BP_jRPG_Character_Battle_Base_C_IsInImmunityPhase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.TryStartJump
// 0x00D0 (0x00D0 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_TryStartJump final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasUnlockedJump_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0058(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm)
	float                                         CallFunc_PlayAnimMontage_ReturnValue;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0010)()
	bool                                          CallFunc_CanDoDefensiveMove_CanDoDefensiveMove;    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_TryStartJump) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_TryStartJump");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_TryStartJump) == 0x0000D0, "Wrong size on BP_jRPG_Character_Battle_Base_C_TryStartJump");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartJump, Success) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartJump::Success' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartJump, CallFunc_HasUnlockedJump_ReturnValue) == 0x000001, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartJump::CallFunc_HasUnlockedJump_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartJump, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartJump::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartJump, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartJump::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartJump, K2Node_MakeStruct_FormatArgumentData_1) == 0x000058, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartJump::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartJump, K2Node_MakeArray_Array) == 0x0000A0, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartJump::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartJump, CallFunc_PlayAnimMontage_ReturnValue) == 0x0000B0, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartJump::CallFunc_PlayAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartJump, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartJump::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartJump, CallFunc_CanDoDefensiveMove_CanDoDefensiveMove) == 0x0000C8, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartJump::CallFunc_CanDoDefensiveMove_CanDoDefensiveMove' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ResetCurrentSkill
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ResetCurrentSkill final
{
public:
	class ABP_Battle_SkillScript_C*               CallFunc_GetForcedSkillOnNextTurn_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ResetCurrentSkill) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ResetCurrentSkill");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ResetCurrentSkill) == 0x000010, "Wrong size on BP_jRPG_Character_Battle_Base_C_ResetCurrentSkill");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ResetCurrentSkill, CallFunc_GetForcedSkillOnNextTurn_ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ResetCurrentSkill::CallFunc_GetForcedSkillOnNextTurn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ResetCurrentSkill, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_ResetCurrentSkill::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ResetCurrentSkill, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_jRPG_Character_Battle_Base_C_ResetCurrentSkill::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ResetCurrentSkill, CallFunc_IsValid_ReturnValue_1) == 0x00000A, "Member 'BP_jRPG_Character_Battle_Base_C_ResetCurrentSkill::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ExecuteSkillScriptFromState
// 0x00D8 (0x00D8 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ExecuteSkillScriptFromState final
{
public:
	class UBP_SkillState_C*                       SkillState;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0008(0x0010)()
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x0018(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0070(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C8(0x0010)()
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillScriptFromState) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ExecuteSkillScriptFromState");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillScriptFromState) == 0x0000D8, "Wrong size on BP_jRPG_Character_Battle_Base_C_ExecuteSkillScriptFromState");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillScriptFromState, SkillState) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillScriptFromState::SkillState' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillScriptFromState, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillScriptFromState::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillScriptFromState, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillScriptFromState::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillScriptFromState, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillScriptFromState::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillScriptFromState, K2Node_MakeStruct_FormatArgumentData_1) == 0x000070, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillScriptFromState::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillScriptFromState, K2Node_MakeArray_Array) == 0x0000B8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillScriptFromState::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSkillScriptFromState, CallFunc_Format_ReturnValue) == 0x0000C8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSkillScriptFromState::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnCharacterReintegratesBattle
// 0x0028 (0x0028 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnCharacterReintegratesBattle final
{
public:
	float                                         CallFunc_PlayAnimMontage_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnCharacterReintegratesBattle) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnCharacterReintegratesBattle");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnCharacterReintegratesBattle) == 0x000028, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnCharacterReintegratesBattle");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnCharacterReintegratesBattle, CallFunc_PlayAnimMontage_ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnCharacterReintegratesBattle::CallFunc_PlayAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnCharacterReintegratesBattle, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_OnCharacterReintegratesBattle::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnCharacterReintegratesBattle, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_OnCharacterReintegratesBattle::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.KickCharacterFromBattle
// 0x0048 (0x0048 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_KickCharacterFromBattle final
{
public:
	struct FGuid                                  KickedCharacterHandle;                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class ABP_jRPG_Character_Battle_Base_C* Temp_object_Variable;                              // 0x0010(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   K2Node_DynamicCast_AsBP_J_RPG_GI_Custom;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterData_C*                    CallFunc_GetCharacterByID_CharacterData;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_KickCharacterFromBattle_Internal_KickedCharacterHandle; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_KickCharacterFromBattle) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_KickCharacterFromBattle");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_KickCharacterFromBattle) == 0x000048, "Wrong size on BP_jRPG_Character_Battle_Base_C_KickCharacterFromBattle");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_KickCharacterFromBattle, KickedCharacterHandle) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_KickCharacterFromBattle::KickedCharacterHandle' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_KickCharacterFromBattle, Temp_object_Variable) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_KickCharacterFromBattle::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_KickCharacterFromBattle, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_KickCharacterFromBattle::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_KickCharacterFromBattle, K2Node_DynamicCast_AsBP_J_RPG_GI_Custom) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_KickCharacterFromBattle::K2Node_DynamicCast_AsBP_J_RPG_GI_Custom' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_KickCharacterFromBattle, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_KickCharacterFromBattle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_KickCharacterFromBattle, CallFunc_GetCharacterByID_CharacterData) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_KickCharacterFromBattle::CallFunc_GetCharacterByID_CharacterData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_KickCharacterFromBattle, CallFunc_KickCharacterFromBattle_Internal_KickedCharacterHandle) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_KickCharacterFromBattle::CallFunc_KickCharacterFromBattle_Internal_KickedCharacterHandle' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.RegisterExternalFreeAimTarget
// 0x00C8 (0x00C8 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_FreeAimTargetPart_C*>        CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_FreeAimTargetPart_C*                CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0040(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A8(0x0010)()
	class FText                                   CallFunc_AppendStack__Content__Result;             // 0x00B8(0x0010)()
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget) == 0x0000C8, "Wrong size on BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget, Actor) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget::Actor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget, CallFunc_Array_AddUnique_ReturnValue) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget, CallFunc_Array_AddUnique_ReturnValue_1) == 0x00003C, "Member 'BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget, K2Node_MakeArray_Array) == 0x000098, "Member 'BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget, CallFunc_Format_ReturnValue) == 0x0000A8, "Member 'BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget, CallFunc_AppendStack__Content__Result) == 0x0000B8, "Member 'BP_jRPG_Character_Battle_Base_C_RegisterExternalFreeAimTarget::CallFunc_AppendStack__Content__Result' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetAllEnemiesExceptSelf
// 0x0040 (0x0040 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetAllEnemiesExceptSelf final
{
public:
	TArray<class ABP_jRPG_Character_Battle_Base_C*> EnemiesExceptSelf;                               // 0x0000(0x0010)(Parm, OutParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> local_EnemiesExceptSelfArray;                    // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetAllEnemiesExceptSelf) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetAllEnemiesExceptSelf");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetAllEnemiesExceptSelf) == 0x000040, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetAllEnemiesExceptSelf");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetAllEnemiesExceptSelf, EnemiesExceptSelf) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetAllEnemiesExceptSelf::EnemiesExceptSelf' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetAllEnemiesExceptSelf, local_EnemiesExceptSelfArray) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_GetAllEnemiesExceptSelf::local_EnemiesExceptSelfArray' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetAllEnemiesExceptSelf, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_GetAllEnemiesExceptSelf::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetAllEnemiesExceptSelf, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_jRPG_Character_Battle_Base_C_GetAllEnemiesExceptSelf::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetAllEnemiesExceptSelf, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_GetAllEnemiesExceptSelf::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetAllEnemiesExceptSelf, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_jRPG_Character_Battle_Base_C_GetAllEnemiesExceptSelf::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetAllEnemiesExceptSelf, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_GetAllEnemiesExceptSelf::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetAllEnemiesExceptSelf, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_GetAllEnemiesExceptSelf::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetAllEnemiesExceptSelf, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000039, "Member 'BP_jRPG_Character_Battle_Base_C_GetAllEnemiesExceptSelf::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetAllEnemiesExceptSelf, CallFunc_Array_Add_ReturnValue) == 0x00003C, "Member 'BP_jRPG_Character_Battle_Base_C_GetAllEnemiesExceptSelf::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.TryStartGradientParry
// 0x00D0 (0x00D0 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_TryStartGradientParry final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasUnlockedGradientParry_ReturnValue;     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0058(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm)
	float                                         CallFunc_PlayAnimMontage_ReturnValue;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0010)()
	bool                                          CallFunc_CanDoDefensiveMove_CanDoDefensiveMove;    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_TryStartGradientParry) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_TryStartGradientParry");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_TryStartGradientParry) == 0x0000D0, "Wrong size on BP_jRPG_Character_Battle_Base_C_TryStartGradientParry");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartGradientParry, Success) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartGradientParry::Success' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartGradientParry, CallFunc_HasUnlockedGradientParry_ReturnValue) == 0x000001, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartGradientParry::CallFunc_HasUnlockedGradientParry_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartGradientParry, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartGradientParry::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartGradientParry, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartGradientParry::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartGradientParry, K2Node_MakeStruct_FormatArgumentData_1) == 0x000058, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartGradientParry::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartGradientParry, K2Node_MakeArray_Array) == 0x0000A0, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartGradientParry::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartGradientParry, CallFunc_PlayAnimMontage_ReturnValue) == 0x0000B0, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartGradientParry::CallFunc_PlayAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartGradientParry, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartGradientParry::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartGradientParry, CallFunc_CanDoDefensiveMove_CanDoDefensiveMove) == 0x0000C8, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartGradientParry::CallFunc_CanDoDefensiveMove_CanDoDefensiveMove' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.StartUnblockableAttack
// 0x0040 (0x0040 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_StartUnblockableAttack final
{
public:
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_StartUnblockableAttack) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_StartUnblockableAttack");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_StartUnblockableAttack) == 0x000040, "Wrong size on BP_jRPG_Character_Battle_Base_C_StartUnblockableAttack");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartUnblockableAttack, CallFunc_GetActorBounds_Origin) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_StartUnblockableAttack::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartUnblockableAttack, CallFunc_GetActorBounds_BoxExtent) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_StartUnblockableAttack::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartUnblockableAttack, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_StartUnblockableAttack::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartUnblockableAttack, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_StartUnblockableAttack::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.StartUndodgeableAttack
// 0x0040 (0x0040 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_StartUndodgeableAttack final
{
public:
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_StartUndodgeableAttack) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_StartUndodgeableAttack");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_StartUndodgeableAttack) == 0x000040, "Wrong size on BP_jRPG_Character_Battle_Base_C_StartUndodgeableAttack");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartUndodgeableAttack, CallFunc_GetActorBounds_Origin) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_StartUndodgeableAttack::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartUndodgeableAttack, CallFunc_GetActorBounds_BoxExtent) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_StartUndodgeableAttack::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartUndodgeableAttack, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_StartUndodgeableAttack::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartUndodgeableAttack, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_StartUndodgeableAttack::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetFreeAimTargetPartsComponents
// 0x0088 (0x0088 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetFreeAimTargetPartsComponents final
{
public:
	TArray<class UBP_FreeAimTargetPart_C*>        ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	TArray<class UBP_FreeAimTargetPart_C*>        local_outputArray;                                 // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UChildActorComponent*>           Temp_wildcard_Variable;                            // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UChildActorComponent*                   CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_FreeAimTargetPart_C*>        CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UChildActorComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue_1;    // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UBP_FreeAimTargetPart_C*>        CallFunc_K2_GetComponentsByClass_ReturnValue_2;    // 0x0078(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetFreeAimTargetPartsComponents) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetFreeAimTargetPartsComponents");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetFreeAimTargetPartsComponents) == 0x000088, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetFreeAimTargetPartsComponents");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetFreeAimTargetPartsComponents, ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetFreeAimTargetPartsComponents::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetFreeAimTargetPartsComponents, local_outputArray) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_GetFreeAimTargetPartsComponents::local_outputArray' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetFreeAimTargetPartsComponents, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_GetFreeAimTargetPartsComponents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetFreeAimTargetPartsComponents, Temp_wildcard_Variable) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_GetFreeAimTargetPartsComponents::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetFreeAimTargetPartsComponents, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_GetFreeAimTargetPartsComponents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetFreeAimTargetPartsComponents, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_GetFreeAimTargetPartsComponents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetFreeAimTargetPartsComponents, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_GetFreeAimTargetPartsComponents::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetFreeAimTargetPartsComponents, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_jRPG_Character_Battle_Base_C_GetFreeAimTargetPartsComponents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetFreeAimTargetPartsComponents, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'BP_jRPG_Character_Battle_Base_C_GetFreeAimTargetPartsComponents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetFreeAimTargetPartsComponents, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_jRPG_Character_Battle_Base_C_GetFreeAimTargetPartsComponents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetFreeAimTargetPartsComponents, CallFunc_K2_GetComponentsByClass_ReturnValue_1) == 0x000068, "Member 'BP_jRPG_Character_Battle_Base_C_GetFreeAimTargetPartsComponents::CallFunc_K2_GetComponentsByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetFreeAimTargetPartsComponents, CallFunc_K2_GetComponentsByClass_ReturnValue_2) == 0x000078, "Member 'BP_jRPG_Character_Battle_Base_C_GetFreeAimTargetPartsComponents::CallFunc_K2_GetComponentsByClass_ReturnValue_2' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.SpawnWeaponAndSetSkin
// 0x04F0 (0x04F0 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin final
{
public:
	class UBP_ItemInstance_Gear_Weapon_C*         local_equippedItemInstance;                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    local_characterData;                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          local_ShouldSpawnWeapon;                           // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Weapon_Skin;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterData_C*                    CallFunc_GetCharacterByID_CharacterData;           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamCharacter_IsPlayerTeam;       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFEquipmentSlot                        K2Node_MakeStruct_FEquipmentSlot;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSlotUsed_ReturnValue;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Gear_C*                CallFunc_GetItemInstanceInSlot_ItemInstance;       // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_StaticData                CallFunc_GetItemStaticData_ItemStaticData;         // 0x0080(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DataAsset_Item_Pictos_C*            K2Node_DynamicCast_AsBP_Data_Asset_Item_Pictos;    // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x01E8(0x0010)()
	class FName                                   Temp_name_Variable_1;                              // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0200(0x0048)(HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterialInstance_Dynamic_Material_Instance; // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterialInstance_Dynamic_Material_Instance_1; // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0270(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_WeaponSkin_C*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedWeaponItemInstance_Valid;      // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Gear_Weapon_C*         CallFunc_GetEquippedWeaponItemInstance_ReturnValue; // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_jRPG_Item_StaticData                CallFunc_GetItemStaticData_ItemStaticData_1;       // 0x02F0(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0420(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_DataAsset_Weapon_C*                 K2Node_DynamicCast_AsBP_Data_Asset_Weapon;         // 0x0428(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_1;                 // 0x0438(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_441[0x7];                                      // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x0448(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0458(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1[0x7];                                      // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x04A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x04B8(0x0010)()
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C9[0x7];                                      // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x04D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Weapon_Skin_1;        // 0x04D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin) == 0x000010, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin) == 0x0004F0, "Wrong size on BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, local_equippedItemInstance) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::local_equippedItemInstance' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, local_characterData) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::local_characterData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, local_ShouldSpawnWeapon) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::local_ShouldSpawnWeapon' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, K2Node_ClassDynamicCast_AsBP_Weapon_Skin) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::K2Node_ClassDynamicCast_AsBP_Weapon_Skin' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, K2Node_ClassDynamicCast_bSuccess) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, Temp_name_Variable) == 0x000024, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, CallFunc_GetGameInstance_ReturnValue) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, CallFunc_GetCustomGI_ReturnValue) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, CallFunc_GetCharacterByID_CharacterData) == 0x000050, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::CallFunc_GetCharacterByID_CharacterData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, CallFunc_IsPlayerTeamCharacter_IsPlayerTeam) == 0x000058, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::CallFunc_IsPlayerTeamCharacter_IsPlayerTeam' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, Temp_int_Variable) == 0x00005C, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, K2Node_MakeStruct_FEquipmentSlot) == 0x000060, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::K2Node_MakeStruct_FEquipmentSlot' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, CallFunc_IsSlotUsed_ReturnValue) == 0x000068, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::CallFunc_IsSlotUsed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, CallFunc_GetItemInstanceInSlot_ItemInstance) == 0x000070, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::CallFunc_GetItemInstanceInSlot_ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, CallFunc_IsValid_ReturnValue_2) == 0x000078, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, CallFunc_GetItemStaticData_ItemStaticData) == 0x000080, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::CallFunc_GetItemStaticData_ItemStaticData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001B0, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, K2Node_DynamicCast_AsBP_Data_Asset_Item_Pictos) == 0x0001B8, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::K2Node_DynamicCast_AsBP_Data_Asset_Item_Pictos' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, K2Node_DynamicCast_bSuccess) == 0x0001C0, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, CallFunc_Add_IntInt_ReturnValue) == 0x0001C4, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0001C8, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x0001D0, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, K2Node_DynamicCast_AsTexture_2D) == 0x0001D8, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, K2Node_DynamicCast_bSuccess_1) == 0x0001E0, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, CallFunc_Conv_ObjectToText_ReturnValue) == 0x0001E8, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, Temp_name_Variable_1) == 0x0001F8, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, K2Node_MakeStruct_FormatArgumentData) == 0x000200, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, Temp_name_Variable_2) == 0x000248, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, CallFunc_GetDynamicMaterialInstance_Dynamic_Material_Instance) == 0x000250, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::CallFunc_GetDynamicMaterialInstance_Dynamic_Material_Instance' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, Temp_int_Variable_1) == 0x000258, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, CallFunc_GetDynamicMaterialInstance_Dynamic_Material_Instance_1) == 0x000260, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::CallFunc_GetDynamicMaterialInstance_Dynamic_Material_Instance_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, K2Node_Select_Default) == 0x000268, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, CallFunc_MakeTransform_ReturnValue) == 0x000270, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0002D0, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, CallFunc_FinishSpawningActor_ReturnValue) == 0x0002D8, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, CallFunc_GetEquippedWeaponItemInstance_Valid) == 0x0002E0, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::CallFunc_GetEquippedWeaponItemInstance_Valid' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, CallFunc_GetEquippedWeaponItemInstance_ReturnValue) == 0x0002E8, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::CallFunc_GetEquippedWeaponItemInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, CallFunc_GetItemStaticData_ItemStaticData_1) == 0x0002F0, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::CallFunc_GetItemStaticData_ItemStaticData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000420, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, K2Node_DynamicCast_AsBP_Data_Asset_Weapon) == 0x000428, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::K2Node_DynamicCast_AsBP_Data_Asset_Weapon' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, K2Node_DynamicCast_bSuccess_2) == 0x000430, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, K2Node_DynamicCast_AsTexture_2D_1) == 0x000438, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::K2Node_DynamicCast_AsTexture_2D_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, K2Node_DynamicCast_bSuccess_3) == 0x000440, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x000448, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, K2Node_MakeStruct_FormatArgumentData_1) == 0x000458, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, CallFunc_IsValid_ReturnValue_3) == 0x0004A0, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, K2Node_MakeArray_Array) == 0x0004A8, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, CallFunc_Format_ReturnValue) == 0x0004B8, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x0004C8, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x0004D0, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, K2Node_ClassDynamicCast_AsBP_Weapon_Skin_1) == 0x0004D8, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::K2Node_ClassDynamicCast_AsBP_Weapon_Skin_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, K2Node_ClassDynamicCast_bSuccess_1) == 0x0004E0, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin, CallFunc_IsValidClass_ReturnValue) == 0x0004E1, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnWeaponAndSetSkin::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetDynamicMaterialInstance
// 0x0040 (0x0040 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetDynamicMaterialInstance final
{
public:
	int32                                         Material_Index;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         Mesh_0;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Dynamic_Material_Instance;                         // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Temp_wildcard_Variable;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_AsMaterial_Instance_Dynamic;    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetDynamicMaterialInstance) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetDynamicMaterialInstance");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetDynamicMaterialInstance) == 0x000040, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetDynamicMaterialInstance");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDynamicMaterialInstance, Material_Index) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetDynamicMaterialInstance::Material_Index' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDynamicMaterialInstance, Mesh_0) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_GetDynamicMaterialInstance::Mesh_0' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDynamicMaterialInstance, Dynamic_Material_Instance) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_GetDynamicMaterialInstance::Dynamic_Material_Instance' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDynamicMaterialInstance, Temp_wildcard_Variable) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_GetDynamicMaterialInstance::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDynamicMaterialInstance, CallFunc_GetMaterial_ReturnValue) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_GetDynamicMaterialInstance::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDynamicMaterialInstance, K2Node_DynamicCast_AsMaterial_Instance_Dynamic) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_GetDynamicMaterialInstance::K2Node_DynamicCast_AsMaterial_Instance_Dynamic' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDynamicMaterialInstance, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_GetDynamicMaterialInstance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDynamicMaterialInstance, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_GetDynamicMaterialInstance::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.StartMoveToControlledBySequence
// 0x00C0 (0x00C0 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       TargetCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B[0x5];                                       // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Compute_Move_to_Character_Transform_NewParam; // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence) == 0x0000C0, "Wrong size on BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence, TargetCharacter) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence::TargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence, Distance) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence::Distance' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence, CallFunc_GetActorScale3D_ReturnValue) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence, CallFunc_BreakVector_X) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence, CallFunc_BreakVector_Y) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence, CallFunc_BreakVector_Z) == 0x000050, "Member 'BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000058, "Member 'BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence, CallFunc_Not_PreBool_ReturnValue) == 0x000068, "Member 'BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence, CallFunc_GetBoolCVar_ReturnValue) == 0x000069, "Member 'BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence, CallFunc_BooleanAND_ReturnValue) == 0x00006A, "Member 'BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence, CallFunc_FindLookAtRotation_ReturnValue) == 0x000070, "Member 'BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000088, "Member 'BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000090, "Member 'BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence, CallFunc_Compute_Move_to_Character_Transform_NewParam) == 0x0000A8, "Member 'BP_jRPG_Character_Battle_Base_C_StartMoveToControlledBySequence::CallFunc_Compute_Move_to_Character_Transform_NewParam' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.SetMoveToControlForSequence
// 0x01D0 (0x01D0 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence final
{
public:
	double                                        MoveToControlForSequence_0;                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable;                              // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable_1;                            // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInSimulateMode_ReturnValue;             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_1;                           // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x00D0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VLerp_Alpha_ImplicitCast;                 // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence) == 0x0001D0, "Wrong size on BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence, MoveToControlForSequence_0) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence::MoveToControlForSequence_0' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence, Temp_bool_Variable) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence, Temp_struct_Variable) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence, Temp_bool_Variable_1) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence, Temp_struct_Variable_1) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence, CallFunc_IsInSimulateMode_ReturnValue) == 0x000049, "Member 'BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence::CallFunc_IsInSimulateMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence, CallFunc_FindLookAtRotation_ReturnValue) == 0x000050, "Member 'BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence, CallFunc_Not_PreBool_ReturnValue) == 0x000068, "Member 'BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000069, "Member 'BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence, K2Node_Select_Default) == 0x000070, "Member 'BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence, K2Node_Select_Default_1) == 0x000088, "Member 'BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence, CallFunc_VLerp_ReturnValue) == 0x0000A0, "Member 'BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B8, "Member 'BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0000D0, "Member 'BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0001C8, "Member 'BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence, CallFunc_VLerp_Alpha_ImplicitCast) == 0x0001CC, "Member 'BP_jRPG_Character_Battle_Base_C_SetMoveToControlForSequence::CallFunc_VLerp_Alpha_ImplicitCast' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.SetCurrentIdleState
// 0x0048 (0x0048 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_SetCurrentIdleState final
{
public:
	E_EnemyIdleState                              CurrentIdleState_0;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Idle_Transition_AnimMontage;                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         AnimMontageDuration;                               // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MontageDuration;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PlayAnimMontage_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UABP_Battle_Global_C*                   K2Node_DynamicCast_AsABP_Battle_Global;            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_FunctionResult_AnimMontageDuration_ImplicitCast; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_MontageDuration_ImplicitCast;   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_SetCurrentIdleState) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_SetCurrentIdleState");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_SetCurrentIdleState) == 0x000048, "Wrong size on BP_jRPG_Character_Battle_Base_C_SetCurrentIdleState");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetCurrentIdleState, CurrentIdleState_0) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_SetCurrentIdleState::CurrentIdleState_0' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetCurrentIdleState, Idle_Transition_AnimMontage) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_SetCurrentIdleState::Idle_Transition_AnimMontage' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetCurrentIdleState, AnimMontageDuration) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_SetCurrentIdleState::AnimMontageDuration' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetCurrentIdleState, MontageDuration) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_SetCurrentIdleState::MontageDuration' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetCurrentIdleState, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_SetCurrentIdleState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetCurrentIdleState, CallFunc_PlayAnimMontage_ReturnValue) == 0x000024, "Member 'BP_jRPG_Character_Battle_Base_C_SetCurrentIdleState::CallFunc_PlayAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetCurrentIdleState, CallFunc_GetAnimInstance_ReturnValue) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_SetCurrentIdleState::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetCurrentIdleState, K2Node_DynamicCast_AsABP_Battle_Global) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_SetCurrentIdleState::K2Node_DynamicCast_AsABP_Battle_Global' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetCurrentIdleState, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_SetCurrentIdleState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetCurrentIdleState, K2Node_FunctionResult_AnimMontageDuration_ImplicitCast) == 0x00003C, "Member 'BP_jRPG_Character_Battle_Base_C_SetCurrentIdleState::K2Node_FunctionResult_AnimMontageDuration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetCurrentIdleState, K2Node_VariableSet_MontageDuration_ImplicitCast) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_SetCurrentIdleState::K2Node_VariableSet_MontageDuration_ImplicitCast' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.SummonMinions
// 0x0238 (0x0238 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_SummonMinions final
{
public:
	struct FDataTableRowHandle                    EncounterRow;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          NotifyBattleStart;                                 // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> SpawnedCharacters;                               // 0x0018(0x0010)(Parm, OutParm)
	TArray<struct FVector>                        SpawnLocations;                                    // 0x0028(0x0010)(Parm, OutParm)
	TArray<struct FVector>                        Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0038(0x0010)(ConstParm, ReferenceParm)
	struct FS_jRPG_Encounter                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0048(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        Temp_wildcard_Temp_buffer_array_Variable;          // 0x00B0(0x0010)(ConstParm, ReferenceParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable_1; // 0x00C0(0x0010)(ConstParm, ReferenceParm)
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x00D0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x00F8(0x0010)()
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0110(0x0048)(HasGetValueTypeHash)
	struct FDataTableRowHandle                    CallFunc_Map_Find_Value;                           // 0x0158(0x0010)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEnemyDataRow                         K2Node_MakeStruct_FEnemyDataRow;                   // 0x0170(0x0010)(NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0180(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0190(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01E8(0x0010)()
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FA[0x6];                                      // 0x01FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Temp_buffer_array_Variable_1;      // 0x0200(0x0010)(ConstParm, ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_SpawnEnemyOnSpot_SpawnedEnemy;            // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SpawnEnemyOnSpot_EnemySpawnedLocation;    // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_SummonMinions) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_SummonMinions");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_SummonMinions) == 0x000238, "Wrong size on BP_jRPG_Character_Battle_Base_C_SummonMinions");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, EncounterRow) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::EncounterRow' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, NotifyBattleStart) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::NotifyBattleStart' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, SpawnedCharacters) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::SpawnedCharacters' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, SpawnLocations) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::SpawnLocations' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, CallFunc_GetDataTableRowFromName_OutRow) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000A8, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, Temp_wildcard_Temp_buffer_array_Variable) == 0x0000B0, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable_1) == 0x0000C0, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, CallFunc_Map_Keys_Keys) == 0x0000D0, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, Temp_int_Loop_Counter_Variable) == 0x0000E4, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, CallFunc_Less_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, CallFunc_Add_IntInt_ReturnValue) == 0x0000EC, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, Temp_int_Array_Index_Variable) == 0x0000F0, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, CallFunc_Array_Get_Item) == 0x0000F4, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, CallFunc_Conv_ObjectToText_ReturnValue) == 0x0000F8, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, CallFunc_Add_IntInt_ReturnValue_1) == 0x000108, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, K2Node_MakeStruct_FormatArgumentData) == 0x000110, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, CallFunc_Map_Find_Value) == 0x000158, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, CallFunc_Map_Find_ReturnValue) == 0x000168, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, K2Node_MakeStruct_FEnemyDataRow) == 0x000170, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::K2Node_MakeStruct_FEnemyDataRow' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, CallFunc_Conv_NameToText_ReturnValue) == 0x000180, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, K2Node_MakeStruct_FormatArgumentData_1) == 0x000190, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, K2Node_MakeArray_Array) == 0x0001D8, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, CallFunc_Format_ReturnValue) == 0x0001E8, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, CallFunc_Array_Contains_ReturnValue) == 0x0001F8, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, CallFunc_Not_PreBool_ReturnValue) == 0x0001F9, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, Temp_wildcard_Temp_buffer_array_Variable_1) == 0x000200, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::Temp_wildcard_Temp_buffer_array_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, CallFunc_SpawnEnemyOnSpot_SpawnedEnemy) == 0x000210, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::CallFunc_SpawnEnemyOnSpot_SpawnedEnemy' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, CallFunc_SpawnEnemyOnSpot_EnemySpawnedLocation) == 0x000218, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::CallFunc_SpawnEnemyOnSpot_EnemySpawnedLocation' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, CallFunc_Array_Add_ReturnValue) == 0x000230, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SummonMinions, CallFunc_Array_Add_ReturnValue_1) == 0x000234, "Member 'BP_jRPG_Character_Battle_Base_C_SummonMinions::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ReactToCharacterThatWasAttacked
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ReactToCharacterThatWasAttacked final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        OtherCharacter;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ReactToCharacterThatWasAttacked) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ReactToCharacterThatWasAttacked");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ReactToCharacterThatWasAttacked) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_ReactToCharacterThatWasAttacked");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ReactToCharacterThatWasAttacked, OtherCharacter) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ReactToCharacterThatWasAttacked::OtherCharacter' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ReactToRevivingOther
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ReactToRevivingOther final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        RevivedCharacterStats;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ReactToRevivingOther) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ReactToRevivingOther");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ReactToRevivingOther) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_ReactToRevivingOther");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ReactToRevivingOther, RevivedCharacterStats) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ReactToRevivingOther::RevivedCharacterStats' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ReactToBeingRevived
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ReactToBeingRevived final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        ReviverCharacterStats;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ReactToBeingRevived) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ReactToBeingRevived");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ReactToBeingRevived) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_ReactToBeingRevived");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ReactToBeingRevived, ReviverCharacterStats) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ReactToBeingRevived::ReviverCharacterStats' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ReactToGivingBuff
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ReactToGivingBuff final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        TargetCharacterStats;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleBuffInstance_C*               GivenBuffInstance;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ReactToGivingBuff) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ReactToGivingBuff");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ReactToGivingBuff) == 0x000010, "Wrong size on BP_jRPG_Character_Battle_Base_C_ReactToGivingBuff");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ReactToGivingBuff, TargetCharacterStats) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ReactToGivingBuff::TargetCharacterStats' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ReactToGivingBuff, GivenBuffInstance) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_ReactToGivingBuff::GivenBuffInstance' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ReactToBuffReceived
// 0x0020 (0x0020 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ReactToBuffReceived final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        SourceCharacterStats;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleBuffInstance_C*               BuffInstance;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamCharacter_IsPlayerTeam;       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ReactToBuffReceived) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ReactToBuffReceived");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ReactToBuffReceived) == 0x000020, "Wrong size on BP_jRPG_Character_Battle_Base_C_ReactToBuffReceived");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ReactToBuffReceived, SourceCharacterStats) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ReactToBuffReceived::SourceCharacterStats' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ReactToBuffReceived, BuffInstance) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_ReactToBuffReceived::BuffInstance' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ReactToBuffReceived, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_ReactToBuffReceived::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ReactToBuffReceived, CallFunc_GetCharacterBattleBase_IsValid) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_ReactToBuffReceived::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ReactToBuffReceived, CallFunc_IsPlayerTeamCharacter_IsPlayerTeam) == 0x000019, "Member 'BP_jRPG_Character_Battle_Base_C_ReactToBuffReceived::CallFunc_IsPlayerTeamCharacter_IsPlayerTeam' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnTriedForbiddenAction
// 0x0002 (0x0002 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnTriedForbiddenAction final
{
public:
	EBattleForbiddenActionReason                  ForbiddenActionReason;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnTriedForbiddenAction) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnTriedForbiddenAction");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnTriedForbiddenAction) == 0x000002, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnTriedForbiddenAction");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTriedForbiddenAction, ForbiddenActionReason) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnTriedForbiddenAction::ForbiddenActionReason' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTriedForbiddenAction, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_jRPG_Character_Battle_Base_C_OnTriedForbiddenAction::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.UI_AppearOnDamagePosition
// 0x0040 (0x0040 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_UI_AppearOnDamagePosition final
{
public:
	class UUserWidget*                            UIElement;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_UI_AppearOnDamagePosition) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_UI_AppearOnDamagePosition");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_UI_AppearOnDamagePosition) == 0x000040, "Wrong size on BP_jRPG_Character_Battle_Base_C_UI_AppearOnDamagePosition");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UI_AppearOnDamagePosition, UIElement) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_UI_AppearOnDamagePosition::UIElement' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UI_AppearOnDamagePosition, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_UI_AppearOnDamagePosition::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UI_AppearOnDamagePosition, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_UI_AppearOnDamagePosition::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UI_AppearOnDamagePosition, CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_UI_AppearOnDamagePosition::CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UI_AppearOnDamagePosition, CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_UI_AppearOnDamagePosition::CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.UpdateDamageSkin
// 0x0020 (0x0020 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_UpdateDamageSkin final
{
public:
	class USkeletalMeshComponent*                 FaceMesh;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        VeinPowerValue;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DamageSkinValue;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCurrentHPPercentage_Percent01;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_UpdateDamageSkin) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_UpdateDamageSkin");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_UpdateDamageSkin) == 0x000020, "Wrong size on BP_jRPG_Character_Battle_Base_C_UpdateDamageSkin");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateDamageSkin, FaceMesh) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateDamageSkin::FaceMesh' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateDamageSkin, VeinPowerValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateDamageSkin::VeinPowerValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateDamageSkin, DamageSkinValue) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateDamageSkin::DamageSkinValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateDamageSkin, CallFunc_GetCurrentHPPercentage_Percent01) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateDamageSkin::CallFunc_GetCurrentHPPercentage_Percent01' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnStartAllowQTE
// 0x0038 (0x0038 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnStartAllowQTE final
{
public:
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnStartAllowQTE) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnStartAllowQTE");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnStartAllowQTE) == 0x000038, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnStartAllowQTE");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnStartAllowQTE, CallFunc_GetSocketLocation_ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnStartAllowQTE::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnStartAllowQTE, CallFunc_Add_VectorVector_ReturnValue) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_OnStartAllowQTE::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnStartAllowQTE, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_OnStartAllowQTE::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.SetBaseElementalAffinities
// 0x0050 (0x0050 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_SetBaseElementalAffinities final
{
public:
	TMap<EAttackType, EElementalAffinity>         ElementalAffinities;                               // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_SetBaseElementalAffinities) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_SetBaseElementalAffinities");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_SetBaseElementalAffinities) == 0x000050, "Wrong size on BP_jRPG_Character_Battle_Base_C_SetBaseElementalAffinities");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetBaseElementalAffinities, ElementalAffinities) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_SetBaseElementalAffinities::ElementalAffinities' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.RemoveElementalAllAffinityOverridesFromSource
// 0x00D8 (0x00D8 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource final
{
public:
	class UObject*                                Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFElementalAffinityList                local_currentElementOverrides;                     // 0x0008(0x0050)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue_1;                 // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EElementalAffinity                            CallFunc_Map_Find_Value;                           // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFElementalAffinityList                CallFunc_Map_Find_Value_1;                         // 0x0080(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource) == 0x0000D8, "Wrong size on BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource, Source) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource::Source' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource, local_currentElementOverrides) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource::local_currentElementOverrides' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource, CallFunc_MakeLiteralInt_ReturnValue) == 0x000058, "Member 'BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource, Temp_int_Variable) == 0x00005C, "Member 'BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource, Temp_int_Variable_1) == 0x000060, "Member 'BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource, CallFunc_Conv_IntToByte_ReturnValue) == 0x000064, "Member 'BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource, CallFunc_GetValidValue_ReturnValue) == 0x00006C, "Member 'BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x00006D, "Member 'BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource, CallFunc_Less_IntInt_ReturnValue) == 0x00006E, "Member 'BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x00006F, "Member 'BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000070, "Member 'BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource, CallFunc_Map_Remove_ReturnValue) == 0x000074, "Member 'BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource, CallFunc_Map_Length_ReturnValue) == 0x000078, "Member 'BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource, CallFunc_Map_Remove_ReturnValue_1) == 0x00007C, "Member 'BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource::CallFunc_Map_Remove_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource, CallFunc_Greater_IntInt_ReturnValue) == 0x00007D, "Member 'BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource, CallFunc_Map_Find_Value) == 0x00007E, "Member 'BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource, CallFunc_Map_Find_ReturnValue) == 0x00007F, "Member 'BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource, CallFunc_Map_Find_Value_1) == 0x000080, "Member 'BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource, CallFunc_Map_Find_ReturnValue_1) == 0x0000D0, "Member 'BP_jRPG_Character_Battle_Base_C_RemoveElementalAllAffinityOverridesFromSource::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.AddElementalAffinityOverride
// 0x0198 (0x0198 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride final
{
public:
	class UObject*                                Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EAttackType                                   Element;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EElementalAffinity                            Affinity;                                          // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFElementalAffinityList                local_elementOverrides;                            // 0x0010(0x0050)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0070(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0080(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0090(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0120(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0130(0x0010)()
	struct FFElementalAffinityList                CallFunc_Map_Find_Value;                           // 0x0140(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EElementalAffinity                            CallFunc_Map_Find_Value_1;                         // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0193(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride) == 0x000198, "Wrong size on BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride, Source) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride::Source' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride, Element) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride::Element' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride, Affinity) == 0x000009, "Member 'BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride::Affinity' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride, local_elementOverrides) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride::local_elementOverrides' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000060, "Member 'BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000070, "Member 'BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride, CallFunc_Conv_StringToText_ReturnValue) == 0x000080, "Member 'BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride, K2Node_MakeStruct_FormatArgumentData) == 0x000090, "Member 'BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D8, "Member 'BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride, K2Node_MakeArray_Array) == 0x000120, "Member 'BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride, CallFunc_Format_ReturnValue) == 0x000130, "Member 'BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride, CallFunc_Map_Find_Value) == 0x000140, "Member 'BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride, CallFunc_Map_Find_ReturnValue) == 0x000190, "Member 'BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride, CallFunc_Map_Find_Value_1) == 0x000191, "Member 'BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride, CallFunc_Map_Find_ReturnValue_1) == 0x000192, "Member 'BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride, CallFunc_Not_PreBool_ReturnValue) == 0x000193, "Member 'BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride, CallFunc_Not_PreBool_ReturnValue_1) == 0x000194, "Member 'BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride, CallFunc_BooleanOR_ReturnValue) == 0x000195, "Member 'BP_jRPG_Character_Battle_Base_C_AddElementalAffinityOverride::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetElementalAffinity
// 0x0004 (0x0004 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetElementalAffinity final
{
public:
	EAttackType                                   AttackType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EElementalAffinity                            Value;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EElementalAffinity                            CallFunc_Map_Find_Value;                           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetElementalAffinity) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetElementalAffinity");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetElementalAffinity) == 0x000004, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetElementalAffinity");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetElementalAffinity, AttackType) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetElementalAffinity::AttackType' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetElementalAffinity, Value) == 0x000001, "Member 'BP_jRPG_Character_Battle_Base_C_GetElementalAffinity::Value' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetElementalAffinity, CallFunc_Map_Find_Value) == 0x000002, "Member 'BP_jRPG_Character_Battle_Base_C_GetElementalAffinity::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetElementalAffinity, CallFunc_Map_Find_ReturnValue) == 0x000003, "Member 'BP_jRPG_Character_Battle_Base_C_GetElementalAffinity::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.UpdateElementalAffinities
// 0x00A8 (0x00A8 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities final
{
public:
	EElementalAffinity                            local_currentAffinity;                             // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFElementalAffinityList                CallFunc_Map_Find_Value;                           // 0x0028(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        CallFunc_Map_Keys_Keys;                            // 0x0080(0x0010)(ReferenceParm)
	EElementalAffinity                            CallFunc_Map_Find_Value_1;                         // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EElementalAffinity                            CallFunc_Map_Find_Value_2;                         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities) == 0x0000A8, "Wrong size on BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities, local_currentAffinity) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities::local_currentAffinity' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities, Temp_int_Variable) == 0x000004, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities, Temp_int_Variable_1) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities, CallFunc_Conv_IntToByte_ReturnValue) == 0x00000C, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities, CallFunc_GetValidValue_ReturnValue) == 0x000014, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000015, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000016, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities, CallFunc_MakeLiteralInt_ReturnValue) == 0x00001C, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000021, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities, CallFunc_Map_Find_Value) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities, CallFunc_Map_Find_ReturnValue) == 0x000078, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities, CallFunc_Map_Keys_Keys) == 0x000080, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities, CallFunc_Map_Find_Value_1) == 0x000090, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities, CallFunc_Map_Find_ReturnValue_1) == 0x000091, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities, CallFunc_Array_LastIndex_ReturnValue) == 0x000094, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities, CallFunc_Array_Get_Item) == 0x000098, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities, CallFunc_Map_Find_Value_2) == 0x0000A0, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities, CallFunc_Map_Find_ReturnValue_2) == 0x0000A1, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateElementalAffinities::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.Shield_Explosion
// 0x0090 (0x0090 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_Shield_Explosion final
{
public:
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_Shield_Explosion) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_Shield_Explosion");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_Shield_Explosion) == 0x000090, "Wrong size on BP_jRPG_Character_Battle_Base_C_Shield_Explosion");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Shield_Explosion, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_Shield_Explosion::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Shield_Explosion, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_Shield_Explosion::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Shield_Explosion, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_Shield_Explosion::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Shield_Explosion, CallFunc_BreakRotator_Roll) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_Shield_Explosion::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Shield_Explosion, CallFunc_BreakRotator_Pitch) == 0x00004C, "Member 'BP_jRPG_Character_Battle_Base_C_Shield_Explosion::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Shield_Explosion, CallFunc_BreakRotator_Yaw) == 0x000050, "Member 'BP_jRPG_Character_Battle_Base_C_Shield_Explosion::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Shield_Explosion, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_jRPG_Character_Battle_Base_C_Shield_Explosion::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Shield_Explosion, CallFunc_MakeRotator_ReturnValue) == 0x000060, "Member 'BP_jRPG_Character_Battle_Base_C_Shield_Explosion::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Shield_Explosion, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000078, "Member 'BP_jRPG_Character_Battle_Base_C_Shield_Explosion::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Shield_Explosion, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000080, "Member 'BP_jRPG_Character_Battle_Base_C_Shield_Explosion::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Shield_Explosion, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000088, "Member 'BP_jRPG_Character_Battle_Base_C_Shield_Explosion::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.RegisterSkillChecks
// 0x0018 (0x0018 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_RegisterSkillChecks final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_DataAsset_Skill_C*                  CallFunc_FindEquippedSkillByID_Skill;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_RegisterSkillChecks) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_RegisterSkillChecks");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_RegisterSkillChecks) == 0x000018, "Wrong size on BP_jRPG_Character_Battle_Base_C_RegisterSkillChecks");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RegisterSkillChecks, ActionName) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_RegisterSkillChecks::ActionName' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RegisterSkillChecks, CallFunc_FindEquippedSkillByID_Skill) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_RegisterSkillChecks::CallFunc_FindEquippedSkillByID_Skill' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_RegisterSkillChecks, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_RegisterSkillChecks::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.Feedback_APLostUI
// 0x0030 (0x0030 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI final
{
public:
	int32                                         LostAP;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAPChangeReason                               ChangeReason;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAPChangeReason                               Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_JRPG_APChange_C*                   CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller;   // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI) == 0x000030, "Wrong size on BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI, LostAP) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI::LostAP' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI, ChangeReason) == 0x000004, "Member 'BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI::ChangeReason' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI, Temp_byte_Variable) == 0x000005, "Member 'BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI, Temp_bool_Variable) == 0x000006, "Member 'BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI, Temp_bool_Variable_1) == 0x000007, "Member 'BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI, Temp_bool_Variable_2) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI, Temp_bool_Variable_3) == 0x000009, "Member 'BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI, Temp_bool_Variable_4) == 0x00000A, "Member 'BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI, Temp_bool_Variable_5) == 0x00000B, "Member 'BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI, Temp_bool_Variable_6) == 0x00000C, "Member 'BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI, Temp_bool_Variable_7) == 0x00000D, "Member 'BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI, Temp_bool_Variable_8) == 0x00000E, "Member 'BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI, Temp_bool_Variable_9) == 0x00000F, "Member 'BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI, Temp_bool_Variable_10) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI, Temp_bool_Variable_11) == 0x000011, "Member 'BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI, Temp_bool_Variable_12) == 0x000012, "Member 'BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI, Temp_bool_Variable_13) == 0x000013, "Member 'BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI, CallFunc_Create_ReturnValue) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI, K2Node_Select_Default) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI, CallFunc_GetJRPGControllerWorld_JRPG_Controller) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_Feedback_APLostUI::CallFunc_GetJRPGControllerWorld_JRPG_Controller' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetOverheadStateWidget
// 0x0020 (0x0020 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetOverheadStateWidget final
{
public:
	class UWBP_Battle_CharacterOverheadState_Base_C* WBPOverheadState;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Battle_CharacterOverheadState_C*   K2Node_DynamicCast_AsWBP_Battle_Character_Overhead_State; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetOverheadStateWidget) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetOverheadStateWidget");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetOverheadStateWidget) == 0x000020, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetOverheadStateWidget");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetOverheadStateWidget, WBPOverheadState) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetOverheadStateWidget::WBPOverheadState' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetOverheadStateWidget, CallFunc_GetWidget_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_GetOverheadStateWidget::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetOverheadStateWidget, K2Node_DynamicCast_AsWBP_Battle_Character_Overhead_State) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_GetOverheadStateWidget::K2Node_DynamicCast_AsWBP_Battle_Character_Overhead_State' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetOverheadStateWidget, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_GetOverheadStateWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.StartDefenseLock
// 0x0100 (0x0100 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_StartDefenseLock final
{
public:
	double                                        Duration;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Reason;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0010)()
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0078(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00D0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_StartDefenseLock) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_StartDefenseLock");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_StartDefenseLock) == 0x000100, "Wrong size on BP_jRPG_Character_Battle_Base_C_StartDefenseLock");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartDefenseLock, Duration) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_StartDefenseLock::Duration' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartDefenseLock, Reason) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_StartDefenseLock::Reason' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartDefenseLock, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_StartDefenseLock::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartDefenseLock, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_StartDefenseLock::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartDefenseLock, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_StartDefenseLock::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartDefenseLock, K2Node_MakeStruct_FormatArgumentData_1) == 0x000078, "Member 'BP_jRPG_Character_Battle_Base_C_StartDefenseLock::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartDefenseLock, K2Node_MakeArray_Array) == 0x0000C0, "Member 'BP_jRPG_Character_Battle_Base_C_StartDefenseLock::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartDefenseLock, K2Node_CreateDelegate_OutputDelegate) == 0x0000D0, "Member 'BP_jRPG_Character_Battle_Base_C_StartDefenseLock::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartDefenseLock, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'BP_jRPG_Character_Battle_Base_C_StartDefenseLock::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartDefenseLock, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000F0, "Member 'BP_jRPG_Character_Battle_Base_C_StartDefenseLock::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartDefenseLock, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x0000F8, "Member 'BP_jRPG_Character_Battle_Base_C_StartDefenseLock::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.UpdateFreeAimOnAPChanged
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_UpdateFreeAimOnAPChanged final
{
public:
	int32                                         NewAP;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PreviousAP;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        CharacterStats;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_UpdateFreeAimOnAPChanged) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_UpdateFreeAimOnAPChanged");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_UpdateFreeAimOnAPChanged) == 0x000010, "Wrong size on BP_jRPG_Character_Battle_Base_C_UpdateFreeAimOnAPChanged");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateFreeAimOnAPChanged, NewAP) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateFreeAimOnAPChanged::NewAP' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateFreeAimOnAPChanged, PreviousAP) == 0x000004, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateFreeAimOnAPChanged::PreviousAP' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateFreeAimOnAPChanged, CharacterStats) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateFreeAimOnAPChanged::CharacterStats' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.MakeBoneMap
// 0x00A0 (0x00A0 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_MakeBoneMap final
{
public:
	TMap<class USceneComponent*, double>          Map;                                               // 0x0000(0x0050)(ConstParm, Parm, OutParm, ContainsInstancedReference)
	TMap<class USceneComponent*, double>          K2Node_MakeMap_Map;                                // 0x0050(0x0050)(ConstParm, ContainsInstancedReference)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_MakeBoneMap) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_MakeBoneMap");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_MakeBoneMap) == 0x0000A0, "Wrong size on BP_jRPG_Character_Battle_Base_C_MakeBoneMap");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_MakeBoneMap, Map) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_MakeBoneMap::Map' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_MakeBoneMap, K2Node_MakeMap_Map) == 0x000050, "Member 'BP_jRPG_Character_Battle_Base_C_MakeBoneMap::K2Node_MakeMap_Map' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.Feedback_APRecoverUI
// 0x0020 (0x0020 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_Feedback_APRecoverUI final
{
public:
	double                                        RecoveredAP;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFromTurnStart;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_JRPG_APChange_C*                   CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_Feedback_APRecoverUI) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_Feedback_APRecoverUI");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_Feedback_APRecoverUI) == 0x000020, "Wrong size on BP_jRPG_Character_Battle_Base_C_Feedback_APRecoverUI");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Feedback_APRecoverUI, RecoveredAP) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_Feedback_APRecoverUI::RecoveredAP' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Feedback_APRecoverUI, IsFromTurnStart) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_Feedback_APRecoverUI::IsFromTurnStart' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Feedback_APRecoverUI, CallFunc_Create_ReturnValue) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_Feedback_APRecoverUI::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Feedback_APRecoverUI, CallFunc_FTrunc_ReturnValue) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_Feedback_APRecoverUI::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Feedback_APRecoverUI, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'BP_jRPG_Character_Battle_Base_C_Feedback_APRecoverUI::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.UseDynamicCameraSystem
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_UseDynamicCameraSystem final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_DynamicCameraManager_C*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_UseDynamicCameraSystem) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_UseDynamicCameraSystem");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_UseDynamicCameraSystem) == 0x000010, "Wrong size on BP_jRPG_Character_Battle_Base_C_UseDynamicCameraSystem");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UseDynamicCameraSystem, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_UseDynamicCameraSystem::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UseDynamicCameraSystem, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_UseDynamicCameraSystem::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.IsDataValid
// 0x0018 (0x0018 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_IsDataValid final
{
public:
	TArray<class FText>                           ValidationErrors;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EDataValidationResult                         Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_IsDataValid) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_IsDataValid");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_IsDataValid) == 0x000018, "Wrong size on BP_jRPG_Character_Battle_Base_C_IsDataValid");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_IsDataValid, ValidationErrors) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_IsDataValid::ValidationErrors' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_IsDataValid, Result) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_IsDataValid::Result' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.StartFreeAim_Regular
// 0x0014 (0x0014 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_StartFreeAim_Regular final
{
public:
	TDelegate<void(int32 NewAP, int32 PreviousAP, class UAC_jRPG_CharacterBattleStats_C* CharacterStats)> K2Node_CreateDelegate_OutputDelegate; // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_StartFreeAim_Regular) == 0x000004, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_StartFreeAim_Regular");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_StartFreeAim_Regular) == 0x000014, "Wrong size on BP_jRPG_Character_Battle_Base_C_StartFreeAim_Regular");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartFreeAim_Regular, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_StartFreeAim_Regular::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartFreeAim_Regular, CallFunc_FTrunc_ReturnValue) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_StartFreeAim_Regular::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnDeathPublic
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnDeathPublic final
{
public:
	bool                                          DeathCounter;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnDeathPublic) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnDeathPublic");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnDeathPublic) == 0x000001, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnDeathPublic");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnDeathPublic, DeathCounter) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnDeathPublic::DeathCounter' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnResurrectedPublic
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnResurrectedPublic final
{
public:
	double                                        HealAmount;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnResurrectedPublic) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnResurrectedPublic");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnResurrectedPublic) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnResurrectedPublic");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnResurrectedPublic, HealAmount) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnResurrectedPublic::HealAmount' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnInitiativeReducedPublic
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnInitiativeReducedPublic final
{
public:
	double                                        ReductionAmount;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnInitiativeReducedPublic) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnInitiativeReducedPublic");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnInitiativeReducedPublic) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnInitiativeReducedPublic");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnInitiativeReducedPublic, ReductionAmount) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnInitiativeReducedPublic::ReductionAmount' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnHealedPublic
// 0x0028 (0x0028 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnHealedPublic final
{
public:
	double                                        HealAmount;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RestoredMP_;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AudioBattleCharacterManager_C> K2Node_DynamicCast_AsBPI_Audio_Battle_Character_Manager; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnHealedPublic) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnHealedPublic");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnHealedPublic) == 0x000028, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnHealedPublic");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnHealedPublic, HealAmount) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnHealedPublic::HealAmount' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnHealedPublic, RestoredMP_) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_OnHealedPublic::RestoredMP_' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnHealedPublic, K2Node_DynamicCast_AsBPI_Audio_Battle_Character_Manager) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_OnHealedPublic::K2Node_DynamicCast_AsBPI_Audio_Battle_Character_Manager' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnHealedPublic, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_OnHealedPublic::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.CheckParentCall
// 0x0078 (0x0078 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_CheckParentCall final
{
public:
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0000(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0068(0x0010)()
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_CheckParentCall) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_CheckParentCall");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_CheckParentCall) == 0x000078, "Wrong size on BP_jRPG_Character_Battle_Base_C_CheckParentCall");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CheckParentCall, CallFunc_Conv_StringToText_ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_CheckParentCall::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CheckParentCall, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_CheckParentCall::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CheckParentCall, K2Node_MakeArray_Array) == 0x000058, "Member 'BP_jRPG_Character_Battle_Base_C_CheckParentCall::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CheckParentCall, CallFunc_Format_ReturnValue) == 0x000068, "Member 'BP_jRPG_Character_Battle_Base_C_CheckParentCall::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.StartPublicCall
// 0x0018 (0x0018 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_StartPublicCall final
{
public:
	class FString                                 CallContext;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_StartPublicCall) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_StartPublicCall");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_StartPublicCall) == 0x000018, "Wrong size on BP_jRPG_Character_Battle_Base_C_StartPublicCall");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartPublicCall, CallContext) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_StartPublicCall::CallContext' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartPublicCall, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_StartPublicCall::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ActivateCharacterDynamicCamera
// 0x0088 (0x0088 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera final
{
public:
	EBattleTurnState                              BattleTurnState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleTurnState                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_DynamicCameraManager_C*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera) == 0x000088, "Wrong size on BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera, BattleTurnState) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera::BattleTurnState' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera, Temp_byte_Variable) == 0x000001, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera, Temp_name_Variable) == 0x000004, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera, Temp_name_Variable_1) == 0x00000C, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera, Temp_name_Variable_2) == 0x000014, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera, Temp_name_Variable_3) == 0x00001C, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera, Temp_name_Variable_4) == 0x000024, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera, Temp_name_Variable_5) == 0x00002C, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera, Temp_name_Variable_6) == 0x000034, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera, Temp_name_Variable_7) == 0x00003C, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera, Temp_name_Variable_8) == 0x000044, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera, CallFunc_GetPlayerController_ReturnValue) == 0x000050, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera, CallFunc_GetComponentByClass_ReturnValue) == 0x000058, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera, K2Node_Select_Default) == 0x000060, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera, CallFunc_GetPlayerController_ReturnValue_1) == 0x000068, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000070, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateCharacterDynamicCamera::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.SetIsCounterAttacking
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_SetIsCounterAttacking final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       CounteredCharacter;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGradient;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_SetIsCounterAttacking) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_SetIsCounterAttacking");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_SetIsCounterAttacking) == 0x000010, "Wrong size on BP_jRPG_Character_Battle_Base_C_SetIsCounterAttacking");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetIsCounterAttacking, CounteredCharacter) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_SetIsCounterAttacking::CounteredCharacter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetIsCounterAttacking, IsGradient) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_SetIsCounterAttacking::IsGradient' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.On Action Finished
// 0x0048 (0x0048 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_On_Action_Finished final
{
public:
	bool                                          HasMoreActions;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UAC_jRPG_CharacterBattleStats_C*> CallFunc_GetCurrentlyCounteringCharacters_ReturnValue; // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Force_Play_Again_HasAppliedForcePlayAgain; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_On_Action_Finished) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_On_Action_Finished");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_On_Action_Finished) == 0x000048, "Wrong size on BP_jRPG_Character_Battle_Base_C_On_Action_Finished");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_On_Action_Finished, HasMoreActions) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_On_Action_Finished::HasMoreActions' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_On_Action_Finished, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_jRPG_Character_Battle_Base_C_On_Action_Finished::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_On_Action_Finished, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'BP_jRPG_Character_Battle_Base_C_On_Action_Finished::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_On_Action_Finished, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'BP_jRPG_Character_Battle_Base_C_On_Action_Finished::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_On_Action_Finished, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000004, "Member 'BP_jRPG_Character_Battle_Base_C_On_Action_Finished::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_On_Action_Finished, CallFunc_GetBattleManager_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_On_Action_Finished::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_On_Action_Finished, CallFunc_GetCurrentlyCounteringCharacters_ReturnValue) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_On_Action_Finished::CallFunc_GetCurrentlyCounteringCharacters_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_On_Action_Finished, CallFunc_Force_Play_Again_HasAppliedForcePlayAgain) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_On_Action_Finished::CallFunc_Force_Play_Again_HasAppliedForcePlayAgain' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_On_Action_Finished, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_On_Action_Finished::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_On_Action_Finished, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_On_Action_Finished::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_On_Action_Finished, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_On_Action_Finished::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_On_Action_Finished, CallFunc_GetCharacterBattleBase_IsValid) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_On_Action_Finished::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_On_Action_Finished, CallFunc_IsValid_ReturnValue_2) == 0x000041, "Member 'BP_jRPG_Character_Battle_Base_C_On_Action_Finished::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_On_Action_Finished, CallFunc_IsValid_ReturnValue_3) == 0x000042, "Member 'BP_jRPG_Character_Battle_Base_C_On_Action_Finished::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ActivateActionEffect
// 0x0250 (0x0250 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ActivateActionEffect final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0018(0x0010)()
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x0028(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0080(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E0(0x0010)()
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0108(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0118(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0128(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0170(0x0048)(HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAC_jRPG_ActionsManager_C*              CallFunc_GetComponentByClass_ReturnValue_1;        // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x01D8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x01E8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0230(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0240(0x0010)()
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ActivateActionEffect) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ActivateActionEffect");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ActivateActionEffect) == 0x000250, "Wrong size on BP_jRPG_Character_Battle_Base_C_ActivateActionEffect");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateActionEffect, Temp_int_Variable) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateActionEffect::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateActionEffect, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateActionEffect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateActionEffect, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateActionEffect::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateActionEffect, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateActionEffect::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateActionEffect, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateActionEffect::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateActionEffect, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateActionEffect::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateActionEffect, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateActionEffect::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateActionEffect, K2Node_MakeStruct_FormatArgumentData_1) == 0x000080, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateActionEffect::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateActionEffect, K2Node_MakeArray_Array) == 0x0000C8, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateActionEffect::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateActionEffect, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000D8, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateActionEffect::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateActionEffect, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateActionEffect::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateActionEffect, CallFunc_GetOwner_ReturnValue) == 0x0000F0, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateActionEffect::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateActionEffect, CallFunc_GetDisplayName_ReturnValue) == 0x0000F8, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateActionEffect::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateActionEffect, CallFunc_Conv_NameToText_ReturnValue) == 0x000108, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateActionEffect::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateActionEffect, CallFunc_Conv_StringToText_ReturnValue) == 0x000118, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateActionEffect::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateActionEffect, K2Node_MakeStruct_FormatArgumentData_2) == 0x000128, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateActionEffect::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateActionEffect, K2Node_MakeStruct_FormatArgumentData_3) == 0x000170, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateActionEffect::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateActionEffect, CallFunc_GetPlayerController_ReturnValue_1) == 0x0001B8, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateActionEffect::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateActionEffect, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0001C0, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateActionEffect::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateActionEffect, CallFunc_GetComponentByClass_ReturnValue_1) == 0x0001D0, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateActionEffect::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateActionEffect, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0001D8, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateActionEffect::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateActionEffect, K2Node_MakeStruct_FormatArgumentData_4) == 0x0001E8, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateActionEffect::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateActionEffect, K2Node_MakeArray_Array_1) == 0x000230, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateActionEffect::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ActivateActionEffect, CallFunc_Format_ReturnValue_1) == 0x000240, "Member 'BP_jRPG_Character_Battle_Base_C_ActivateActionEffect::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.PrintDebugText
// 0x03F8 (0x03F8 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_PrintDebugText final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_wildcard_Variable;                            // 0x0008(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0048)(HasGetValueTypeHash)
	TArray<class FString>                         Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0060(0x0010)(ConstParm, ReferenceParm)
	class FString                                 CallFunc_JoinStringArray_ReturnValue;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0080(0x0010)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayDebugCategoryEnabled_ReturnValue; // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         Temp_wildcard_Temp_buffer_array_Variable;          // 0x00F0(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0114(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0138(0x0010)()
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0150(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x01B0(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01C0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01D0(0x0048)(HasGetValueTypeHash)
	class ULevelSequence*                         CallFunc_GetSequence_ReturnValue;                  // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x0228(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0238(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0288(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0298(0x0010)()
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AD[0x3];                                      // 0x02AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x02B0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x02D8(0x0048)(HasGetValueTypeHash)
	class UBP_BattleSequenceTimeline_C*           CallFunc_Map_Find_Value;                           // 0x0320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDebugText_ReturnValue;                 // 0x0330(0x0010)()
	double                                        CallFunc_GetCurrentBattleSequenceTime_Time;        // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0348(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0390(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x03D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x03E8(0x0010)()
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_PrintDebugText) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_PrintDebugText");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_PrintDebugText) == 0x0003F8, "Wrong size on BP_jRPG_Character_Battle_Base_C_PrintDebugText");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, Temp_wildcard_Variable) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000060, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_JoinStringArray_ReturnValue) == 0x000070, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_JoinStringArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_Conv_StringToText_ReturnValue) == 0x000080, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, Temp_int_Loop_Counter_Variable) == 0x000090, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_Add_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, Temp_int_Array_Index_Variable_1) == 0x0000E4, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_IsGameplayDebugCategoryEnabled_ReturnValue) == 0x0000E8, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_IsGameplayDebugCategoryEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, Temp_wildcard_Temp_buffer_array_Variable) == 0x0000F0, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_IsValid_ReturnValue) == 0x000100, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_GetSequencePlayer_ReturnValue) == 0x000108, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_IsPlaying_ReturnValue) == 0x000110, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_Array_Get_Item) == 0x000114, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_Conv_NameToString_ReturnValue) == 0x000120, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_Array_Length_ReturnValue) == 0x000130, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_Array_Add_ReturnValue) == 0x000134, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000138, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x000148, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, K2Node_MakeStruct_FormatArgumentData_2) == 0x000150, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_IsPlaying_ReturnValue_1) == 0x000198, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, K2Node_MakeArray_Array) == 0x0001A0, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_Conv_BoolToText_ReturnValue) == 0x0001B0, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_Format_ReturnValue) == 0x0001C0, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001D0, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_GetSequence_ReturnValue) == 0x000218, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_GetSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, Temp_int_Loop_Counter_Variable_1) == 0x000220, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x000228, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, K2Node_MakeStruct_FormatArgumentData_4) == 0x000238, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_Less_IntInt_ReturnValue) == 0x000280, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, K2Node_MakeArray_Array_1) == 0x000288, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_Format_ReturnValue_1) == 0x000298, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002A8, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_IsValid_ReturnValue_1) == 0x0002AC, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_Map_Keys_Keys) == 0x0002B0, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_Array_Length_ReturnValue_1) == 0x0002C0, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_Array_Get_Item_1) == 0x0002C4, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002C8, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0002D0, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, K2Node_MakeStruct_FormatArgumentData_5) == 0x0002D8, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_Map_Find_Value) == 0x000320, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_Map_Find_ReturnValue) == 0x000328, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_GetDebugText_ReturnValue) == 0x000330, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_GetDebugText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_GetCurrentBattleSequenceTime_Time) == 0x000340, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_GetCurrentBattleSequenceTime_Time' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, K2Node_MakeStruct_FormatArgumentData_6) == 0x000348, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, K2Node_MakeStruct_FormatArgumentData_7) == 0x000390, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, K2Node_MakeArray_Array_2) == 0x0003D8, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PrintDebugText, CallFunc_Format_ReturnValue_2) == 0x0003E8, "Member 'BP_jRPG_Character_Battle_Base_C_PrintDebugText::CallFunc_Format_ReturnValue_2' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetBattleTimelineExpiringSoonest
// 0x0100 (0x0100 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest final
{
public:
	TArray<class UBP_BattleSequenceTimeline_C*>   SortedBattleSequenceTimelines;                     // 0x0000(0x0010)(Parm, OutParm)
	int32                                         local_targetInsertIndex;                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_BattleSequenceTimeline_C*>   local_sortedBattleTimelines;                       // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_BattleSequenceTimeline_C*>   Temp_wildcard_Variable;                            // 0x0040(0x0010)(ConstParm, ReferenceParm)
	class FText                                   Temp_text_Variable;                                // 0x0050(0x0010)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleSequenceTimeline_C*           CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_ConcatenateDisplayNames_Result;           // 0x0088(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x0098(0x0010)()
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleSequenceTimeline_C*           CallFunc_Array_Get_Item_1;                         // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ExpiresSoonerThan_Result;                 // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BF[0x1];                                       // 0x00BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_BattleSequenceTimeline_C*>   CallFunc_Map_Values_Values;                        // 0x00C8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleSequenceTimeline_C*           CallFunc_Array_Get_Item_2;                         // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleSequenceTimeline_C*           CallFunc_Array_Get_Item_3;                         // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest) == 0x000100, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, SortedBattleSequenceTimelines) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::SortedBattleSequenceTimelines' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, local_targetInsertIndex) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::local_targetInsertIndex' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, local_sortedBattleTimelines) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::local_sortedBattleTimelines' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, Temp_bool_True_if_break_was_hit_Variable) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, Temp_wildcard_Variable) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, Temp_text_Variable) == 0x000050, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, Temp_int_Array_Index_Variable_1) == 0x000064, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, Temp_int_Loop_Counter_Variable_1) == 0x000068, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, CallFunc_Add_IntInt_ReturnValue_1) == 0x000070, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, Temp_int_Array_Index_Variable_2) == 0x000074, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, Temp_bool_Variable) == 0x000080, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, CallFunc_Array_IsEmpty_ReturnValue) == 0x000081, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, CallFunc_ConcatenateDisplayNames_Result) == 0x000088, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::CallFunc_ConcatenateDisplayNames_Result' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, K2Node_Select_Default) == 0x000098, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, Temp_int_Loop_Counter_Variable_2) == 0x0000A8, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, CallFunc_Array_Get_Item_1) == 0x0000B0, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, CallFunc_Array_Length_ReturnValue_1) == 0x0000B8, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, CallFunc_ExpiresSoonerThan_Result) == 0x0000BC, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::CallFunc_ExpiresSoonerThan_Result' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000BD, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, CallFunc_BooleanAND_ReturnValue) == 0x0000BE, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000C0, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, CallFunc_Map_Values_Values) == 0x0000C8, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, CallFunc_Array_Length_ReturnValue_2) == 0x0000D8, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, CallFunc_Array_Get_Item_2) == 0x0000E0, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000E8, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, CallFunc_Array_Add_ReturnValue) == 0x0000EC, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, CallFunc_Array_Get_Item_3) == 0x0000F0, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000F8, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleTimelineExpiringSoonest::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetCurrentBattleSequenceTime
// 0x0038 (0x0038 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetCurrentBattleSequenceTime final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FQualifiedFrameTime                    CallFunc_GetCurrentTime_ReturnValue;               // 0x0010(0x0010)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_Time_ImplicitCast;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetCurrentBattleSequenceTime) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetCurrentBattleSequenceTime");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetCurrentBattleSequenceTime) == 0x000038, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetCurrentBattleSequenceTime");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetCurrentBattleSequenceTime, Time) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetCurrentBattleSequenceTime::Time' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetCurrentBattleSequenceTime, CallFunc_GetSequencePlayer_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_GetCurrentBattleSequenceTime::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetCurrentBattleSequenceTime, CallFunc_GetCurrentTime_ReturnValue) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_GetCurrentBattleSequenceTime::CallFunc_GetCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetCurrentBattleSequenceTime, CallFunc_IsPlaying_ReturnValue) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_GetCurrentBattleSequenceTime::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetCurrentBattleSequenceTime, CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue) == 0x000024, "Member 'BP_jRPG_Character_Battle_Base_C_GetCurrentBattleSequenceTime::CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetCurrentBattleSequenceTime, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_GetCurrentBattleSequenceTime::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetCurrentBattleSequenceTime, K2Node_FunctionResult_Time_ImplicitCast) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_GetCurrentBattleSequenceTime::K2Node_FunctionResult_Time_ImplicitCast' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.UpdateBattleTurnState
// 0x0280 (0x0280 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState final
{
public:
	class ULevelSequence*                         local_TurnSequence;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldEnableBattleCameraMovements_Enable; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCurrentTurn_IsCurrentTurn;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0030(0x0010)()
	class ULevelSequence*                         Temp_object_Variable_4;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsPlayerTeamCharacter_IsPlayerTeam;       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A8(0x0010)()
	EBattleTurnState                              Temp_byte_Variable;                                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GameDirectorComponent_C*            CallFunc_Get_Game_Director_Component_ReturnValue;  // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFBattleTurnSequence_CharacterData     K2Node_Select_Default;                             // 0x00C8(0x0020)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EBattleTurnState                              CallFunc_GetCurrentBattleTurnState_ReturnValue;    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_Select_Default_1;                           // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0108(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0118(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0170(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0180(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0190(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01A0(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x01F0(0x0010)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0208(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0250(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0260(0x0010)()
	class UBP_GameDirectorComponent_C*            CallFunc_Get_Game_Director_Component_ReturnValue_1; // 0x0270(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ALevelSequenceActor*                    CallFunc_PreloadLevelSequence_OutActor;            // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState) == 0x000280, "Wrong size on BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, local_TurnSequence) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::local_TurnSequence' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, Temp_object_Variable) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, Temp_object_Variable_1) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, Temp_object_Variable_2) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, Temp_object_Variable_3) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, CallFunc_ShouldEnableBattleCameraMovements_Enable) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::CallFunc_ShouldEnableBattleCameraMovements_Enable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, CallFunc_IsCurrentTurn_IsCurrentTurn) == 0x000029, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::CallFunc_IsCurrentTurn_IsCurrentTurn' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, Temp_object_Variable_4) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, K2Node_MakeArray_Array) == 0x000090, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, CallFunc_IsPlayerTeamCharacter_IsPlayerTeam) == 0x0000A0, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::CallFunc_IsPlayerTeamCharacter_IsPlayerTeam' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, CallFunc_Format_ReturnValue) == 0x0000A8, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, Temp_byte_Variable) == 0x0000B8, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, Temp_bool_Variable) == 0x0000B9, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, CallFunc_Get_Game_Director_Component_ReturnValue) == 0x0000C0, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::CallFunc_Get_Game_Director_Component_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, K2Node_Select_Default) == 0x0000C8, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, CallFunc_GetCurrentBattleTurnState_ReturnValue) == 0x0000E8, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::CallFunc_GetCurrentBattleTurnState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000F0, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, K2Node_Select_Default_1) == 0x000100, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, CallFunc_Conv_StringToText_ReturnValue) == 0x000108, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, K2Node_MakeStruct_FormatArgumentData_1) == 0x000118, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000160, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, K2Node_MakeArray_Array_1) == 0x000170, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000180, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, CallFunc_Format_ReturnValue_1) == 0x000190, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001A0, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0001E8, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x0001F0, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, CallFunc_IsValid_ReturnValue) == 0x000200, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, K2Node_MakeStruct_FormatArgumentData_3) == 0x000208, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, K2Node_MakeArray_Array_2) == 0x000250, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, CallFunc_Format_ReturnValue_2) == 0x000260, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, CallFunc_Get_Game_Director_Component_ReturnValue_1) == 0x000270, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::CallFunc_Get_Game_Director_Component_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState, CallFunc_PreloadLevelSequence_OutActor) == 0x000278, "Member 'BP_jRPG_Character_Battle_Base_C_UpdateBattleTurnState::CallFunc_PreloadLevelSequence_OutActor' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnBattleTurnStateChanged
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnBattleTurnStateChanged final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_GameDirectorComponent_C*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnBattleTurnStateChanged) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnBattleTurnStateChanged");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnBattleTurnStateChanged) == 0x000010, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnBattleTurnStateChanged");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnBattleTurnStateChanged, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnBattleTurnStateChanged::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnBattleTurnStateChanged, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_OnBattleTurnStateChanged::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.PopBattleTurnStates
// 0x0110 (0x0110 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates final
{
public:
	TArray<EBattleTurnState>                      CurrentState;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleTurnState                              CallFunc_Array_Get_Item;                           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0098(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0100(0x0010)()
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates) == 0x000110, "Wrong size on BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates, CurrentState) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates::CurrentState' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates, CallFunc_Array_Get_Item) == 0x00001C, "Member 'BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates, CallFunc_Array_RemoveItem_ReturnValue) == 0x000094, "Member 'BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates, CallFunc_Conv_BoolToText_ReturnValue) == 0x000098, "Member 'BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A8, "Member 'BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates, K2Node_MakeArray_Array) == 0x0000F0, "Member 'BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates, CallFunc_Format_ReturnValue) == 0x000100, "Member 'BP_jRPG_Character_Battle_Base_C_PopBattleTurnStates::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.PopBattleTurnState
// 0x00F0 (0x00F0 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_PopBattleTurnState final
{
public:
	EBattleTurnState                              CurrentState;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0010)()
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0078(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0088(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E0(0x0010)()
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_PopBattleTurnState) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_PopBattleTurnState");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_PopBattleTurnState) == 0x0000F0, "Wrong size on BP_jRPG_Character_Battle_Base_C_PopBattleTurnState");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PopBattleTurnState, CurrentState) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_PopBattleTurnState::CurrentState' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PopBattleTurnState, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_PopBattleTurnState::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PopBattleTurnState, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_PopBattleTurnState::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PopBattleTurnState, CallFunc_Array_RemoveItem_ReturnValue) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_PopBattleTurnState::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PopBattleTurnState, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_PopBattleTurnState::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PopBattleTurnState, CallFunc_Conv_BoolToText_ReturnValue) == 0x000078, "Member 'BP_jRPG_Character_Battle_Base_C_PopBattleTurnState::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PopBattleTurnState, K2Node_MakeStruct_FormatArgumentData_1) == 0x000088, "Member 'BP_jRPG_Character_Battle_Base_C_PopBattleTurnState::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PopBattleTurnState, K2Node_MakeArray_Array) == 0x0000D0, "Member 'BP_jRPG_Character_Battle_Base_C_PopBattleTurnState::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PopBattleTurnState, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'BP_jRPG_Character_Battle_Base_C_PopBattleTurnState::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.PushBattleTurnState
// 0x0098 (0x0098 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_PushBattleTurnState final
{
public:
	EBattleTurnState                              TurnState;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0010)()
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_PushBattleTurnState) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_PushBattleTurnState");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_PushBattleTurnState) == 0x000098, "Wrong size on BP_jRPG_Character_Battle_Base_C_PushBattleTurnState");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PushBattleTurnState, TurnState) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_PushBattleTurnState::TurnState' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PushBattleTurnState, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_jRPG_Character_Battle_Base_C_PushBattleTurnState::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PushBattleTurnState, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_PushBattleTurnState::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PushBattleTurnState, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_PushBattleTurnState::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PushBattleTurnState, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_PushBattleTurnState::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PushBattleTurnState, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'BP_jRPG_Character_Battle_Base_C_PushBattleTurnState::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PushBattleTurnState, K2Node_MakeArray_Array) == 0x000078, "Member 'BP_jRPG_Character_Battle_Base_C_PushBattleTurnState::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PushBattleTurnState, CallFunc_Format_ReturnValue) == 0x000088, "Member 'BP_jRPG_Character_Battle_Base_C_PushBattleTurnState::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetDebugText
// 0x0A30 (0x0A30 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetDebugText final
{
public:
	class FText                                   Result;                                            // 0x0000(0x0010)(Parm, OutParm)
	class FText                                   Temp_text_Variable;                                // 0x0010(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0010)()
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0038(0x0010)()
	class FText                                   Temp_text_Variable_3;                              // 0x0048(0x0010)()
	E_jRPG_StatType                               Temp_byte_Variable;                                // 0x0058(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_4;                              // 0x0060(0x0010)(ConstParm)
	class FText                                   Temp_text_Variable_5;                              // 0x0070(0x0010)(ConstParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_6;                              // 0x0090(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00E8(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0130(0x0010)()
	bool                                          Temp_bool_Variable_2;                              // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0158(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0168(0x0048)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_7;                              // 0x01B8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01C8(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0210(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0258(0x0010)()
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26D[0x3];                                      // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0278(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0288(0x0048)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_8;                              // 0x02E0(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x02F0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0300(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0348(0x0048)(HasGetValueTypeHash)
	TArray<class FString>                         Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0390(0x0010)(ConstParm, ReferenceParm)
	class FString                                 CallFunc_JoinStringArray_ReturnValue;              // 0x03A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x03B0(0x0010)()
	TArray<E_jRPG_StatType>                       CallFunc_Map_Keys_Keys;                            // 0x03C0(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x03D0(0x0048)(HasGetValueTypeHash)
	E_jRPG_StatType                               CallFunc_Array_Get_Item;                           // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_419[0x3];                                      // 0x0419(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0420(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0438(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_9;            // 0x0448(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_499[0x7];                                      // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_10;           // 0x04A0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x04E8(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_1;                         // 0x04F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0500(0x0010)()
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0510(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_11;           // 0x0520(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x056C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56D[0x3];                                      // 0x056D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_12;           // 0x0578(0x0048)(HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_9;                              // 0x05C0(0x0010)()
	class FText                                   Temp_text_Variable_10;                             // 0x05D0(0x0010)()
	TArray<class FString>                         Temp_wildcard_Temp_buffer_array_Variable;          // 0x05E0(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F4[0x4];                                      // 0x05F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleBuffInstanceWrapper_C*        CallFunc_Array_Get_Item_2;                         // 0x05F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0604(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_605[0x3];                                      // 0x0605(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDebugText_DebugInfo;                   // 0x0608(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_13;           // 0x0618(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0660(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0670(0x0010)()
	double                                        CallFunc_Map_Find_Value_1;                         // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_689[0x7];                                      // 0x0689(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_14;           // 0x0690(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_15;           // 0x06D8(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_16;           // 0x0720(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_GetMaxHP_MaxHP;                           // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_17;           // 0x0770(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_18;           // 0x07B8(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_19;           // 0x0800(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0848(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_20;           // 0x0858(0x0048)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x08A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x08A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A2[0x6];                                      // 0x08A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_2;                           // 0x08A8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_21;           // 0x08B8(0x0048)(HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_3;                           // 0x0900(0x0010)(ConstParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0910(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_22;           // 0x0920(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0968(0x0010)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0978(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0988(0x0010)()
	EBattleTurnState                              CallFunc_Array_Get_Item_3;                         // 0x0998(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_999[0x3];                                      // 0x0999(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x099C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x09A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x09B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B1[0x7];                                      // 0x09B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x09B8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_23;           // 0x09C8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x0A10(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x0A20(0x0010)()
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetDebugText) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetDebugText");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetDebugText) == 0x000A30, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetDebugText");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, Result) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::Result' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, Temp_text_Variable) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, Temp_text_Variable_1) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, Temp_bool_Variable) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, Temp_text_Variable_2) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, Temp_text_Variable_3) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, Temp_byte_Variable) == 0x000058, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, Temp_bool_Variable_1) == 0x000059, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, Temp_text_Variable_4) == 0x000060, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, Temp_text_Variable_5) == 0x000070, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, Temp_int_Loop_Counter_Variable) == 0x000080, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000084, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, Temp_int_Array_Index_Variable) == 0x00008C, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, Temp_text_Variable_6) == 0x000090, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData) == 0x0000A0, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000E8, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_MakeLiteralText_ReturnValue) == 0x000130, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, Temp_bool_Variable_2) == 0x000140, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, Temp_int_Array_Index_Variable_1) == 0x000144, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, Temp_int_Loop_Counter_Variable_1) == 0x000148, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00014C, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Add_IntInt_ReturnValue_1) == 0x000150, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_Select_Default) == 0x000158, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_2) == 0x000168, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, Temp_int_Array_Index_Variable_2) == 0x0001B0, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, Temp_text_Variable_7) == 0x0001B8, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001C8, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_4) == 0x000210, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000258, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, Temp_int_Loop_Counter_Variable_2) == 0x000268, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00026C, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Add_IntInt_ReturnValue_2) == 0x000270, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_Select_Default_1) == 0x000278, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_5) == 0x000288, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, Temp_int_Array_Index_Variable_3) == 0x0002D0, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, Temp_int_Loop_Counter_Variable_3) == 0x0002D4, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Add_IntInt_ReturnValue_3) == 0x0002D8, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, Temp_text_Variable_8) == 0x0002E0, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_MakeLiteralText_ReturnValue_2) == 0x0002F0, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_6) == 0x000300, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_7) == 0x000348, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000390, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_JoinStringArray_ReturnValue) == 0x0003A0, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_JoinStringArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Conv_StringToText_ReturnValue) == 0x0003B0, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Map_Keys_Keys) == 0x0003C0, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_8) == 0x0003D0, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Array_Get_Item) == 0x000418, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Array_Length_ReturnValue) == 0x00041C, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000420, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Less_IntInt_ReturnValue) == 0x000430, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000438, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_9) == 0x000448, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Map_Find_Value) == 0x000490, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Map_Find_ReturnValue) == 0x000498, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_10) == 0x0004A0, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_10' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_MakeArray_Array) == 0x0004E8, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Array_Get_Item_1) == 0x0004F8, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Format_ReturnValue) == 0x000500, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_GetDisplayName_ReturnValue) == 0x000510, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_11) == 0x000520, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_11' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Array_Length_ReturnValue_1) == 0x000568, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Less_IntInt_ReturnValue_1) == 0x00056C, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000570, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_12) == 0x000578, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_12' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, Temp_text_Variable_9) == 0x0005C0, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, Temp_text_Variable_10) == 0x0005D0, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, Temp_wildcard_Temp_buffer_array_Variable) == 0x0005E0, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Array_Add_ReturnValue) == 0x0005F0, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Array_Get_Item_2) == 0x0005F8, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Array_Length_ReturnValue_2) == 0x000600, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Less_IntInt_ReturnValue_2) == 0x000604, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_GetDebugText_DebugInfo) == 0x000608, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_GetDebugText_DebugInfo' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_13) == 0x000618, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_13' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_MakeArray_Array_1) == 0x000660, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Format_ReturnValue_1) == 0x000670, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Map_Find_Value_1) == 0x000680, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Map_Find_ReturnValue_1) == 0x000688, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_14) == 0x000690, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_14' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_15) == 0x0006D8, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_15' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_16) == 0x000720, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_16' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_GetMaxHP_MaxHP) == 0x000768, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_GetMaxHP_MaxHP' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_17) == 0x000770, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_17' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_18) == 0x0007B8, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_18' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_19) == 0x000800, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_19' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000848, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_20) == 0x000858, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_20' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, Temp_bool_Variable_3) == 0x0008A0, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0008A1, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_Select_Default_2) == 0x0008A8, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_21) == 0x0008B8, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_21' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_Select_Default_3) == 0x000900, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_MakeArray_Array_2) == 0x000910, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_22) == 0x000920, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_22' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Format_ReturnValue_2) == 0x000968, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_MakeArray_Array_3) == 0x000978, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Format_ReturnValue_3) == 0x000988, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Array_Get_Item_3) == 0x000998, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Array_Length_ReturnValue_3) == 0x00099C, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x0009A0, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Less_IntInt_ReturnValue_3) == 0x0009B0, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0009B8, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_23) == 0x0009C8, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_23' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, K2Node_MakeArray_Array_4) == 0x000A10, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetDebugText, CallFunc_Format_ReturnValue_4) == 0x000A20, "Member 'BP_jRPG_Character_Battle_Base_C_GetDebugText::CallFunc_Format_ReturnValue_4' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.SetAnim_DefaultSlotAlpha
// 0x0020 (0x0020 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_SetAnim_DefaultSlotAlpha final
{
public:
	double                                        Anim_DefaultSlotAlpha_0;                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UOLD_ABP_Battle_Parent_C*               K2Node_DynamicCast_AsOLD_ABP_Battle_Parent;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_SetAnim_DefaultSlotAlpha) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_SetAnim_DefaultSlotAlpha");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_SetAnim_DefaultSlotAlpha) == 0x000020, "Wrong size on BP_jRPG_Character_Battle_Base_C_SetAnim_DefaultSlotAlpha");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetAnim_DefaultSlotAlpha, Anim_DefaultSlotAlpha_0) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_SetAnim_DefaultSlotAlpha::Anim_DefaultSlotAlpha_0' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetAnim_DefaultSlotAlpha, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_SetAnim_DefaultSlotAlpha::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetAnim_DefaultSlotAlpha, K2Node_DynamicCast_AsOLD_ABP_Battle_Parent) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_SetAnim_DefaultSlotAlpha::K2Node_DynamicCast_AsOLD_ABP_Battle_Parent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetAnim_DefaultSlotAlpha, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_SetAnim_DefaultSlotAlpha::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetActionManager
// 0x0018 (0x0018 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetActionManager final
{
public:
	class UAC_jRPG_ActionsManager_C*              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_ActionsManager_C*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetActionManager) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetActionManager");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetActionManager) == 0x000018, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetActionManager");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetActionManager, ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetActionManager::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetActionManager, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_GetActionManager::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetActionManager, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_GetActionManager::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.TryCancelFreeAim
// 0x0018 (0x0018 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_TryCancelFreeAim final
{
public:
	TScriptInterface<class IBPI_AudioBattleCharacterManager_C> K2Node_DynamicCast_AsBPI_Audio_Battle_Character_Manager; // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanCancelFreeAim_ReturnValue;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_TryCancelFreeAim) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_TryCancelFreeAim");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_TryCancelFreeAim) == 0x000018, "Wrong size on BP_jRPG_Character_Battle_Base_C_TryCancelFreeAim");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryCancelFreeAim, K2Node_DynamicCast_AsBPI_Audio_Battle_Character_Manager) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_TryCancelFreeAim::K2Node_DynamicCast_AsBPI_Audio_Battle_Character_Manager' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryCancelFreeAim, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_TryCancelFreeAim::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryCancelFreeAim, CallFunc_CanCancelFreeAim_ReturnValue) == 0x000011, "Member 'BP_jRPG_Character_Battle_Base_C_TryCancelFreeAim::CallFunc_CanCancelFreeAim_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.EnableFreeAim
// 0x0038 (0x0038 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_EnableFreeAim final
{
public:
	EFreeAimType                                  FreeAimType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AmmoCount;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TimeLimit;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ProjectileClass;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimMontage_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_AudioBattleCharacterManager_C> K2Node_DynamicCast_AsBPI_Audio_Battle_Character_Manager; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_EnableFreeAim) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_EnableFreeAim");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_EnableFreeAim) == 0x000038, "Wrong size on BP_jRPG_Character_Battle_Base_C_EnableFreeAim");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_EnableFreeAim, FreeAimType) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_EnableFreeAim::FreeAimType' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_EnableFreeAim, AmmoCount) == 0x000004, "Member 'BP_jRPG_Character_Battle_Base_C_EnableFreeAim::AmmoCount' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_EnableFreeAim, TimeLimit) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_EnableFreeAim::TimeLimit' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_EnableFreeAim, ProjectileClass) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_EnableFreeAim::ProjectileClass' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_EnableFreeAim, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_EnableFreeAim::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_EnableFreeAim, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000019, "Member 'BP_jRPG_Character_Battle_Base_C_EnableFreeAim::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_EnableFreeAim, CallFunc_BooleanOR_ReturnValue) == 0x00001A, "Member 'BP_jRPG_Character_Battle_Base_C_EnableFreeAim::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_EnableFreeAim, CallFunc_IsValid_ReturnValue) == 0x00001B, "Member 'BP_jRPG_Character_Battle_Base_C_EnableFreeAim::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_EnableFreeAim, CallFunc_PlayAnimMontage_ReturnValue) == 0x00001C, "Member 'BP_jRPG_Character_Battle_Base_C_EnableFreeAim::CallFunc_PlayAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_EnableFreeAim, K2Node_DynamicCast_AsBPI_Audio_Battle_Character_Manager) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_EnableFreeAim::K2Node_DynamicCast_AsBPI_Audio_Battle_Character_Manager' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_EnableFreeAim, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_EnableFreeAim::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnStopTargeting
// 0x0038 (0x0038 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnStopTargeting final
{
public:
	EBattleTurnState                              Temp_byte_Variable;                                // 0x0000(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleTurnState                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleTurnState                              Temp_byte_Variable_2;                              // 0x0002(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleTurnState                              Temp_byte_Variable_3;                              // 0x0003(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue_1;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue_2;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue_3;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_MaxOfIntArray_IndexOfMaxValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MaxOfIntArray_MaxValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnStopTargeting) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnStopTargeting");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnStopTargeting) == 0x000038, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnStopTargeting");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnStopTargeting, Temp_byte_Variable) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnStopTargeting::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnStopTargeting, Temp_byte_Variable_1) == 0x000001, "Member 'BP_jRPG_Character_Battle_Base_C_OnStopTargeting::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnStopTargeting, Temp_byte_Variable_2) == 0x000002, "Member 'BP_jRPG_Character_Battle_Base_C_OnStopTargeting::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnStopTargeting, Temp_byte_Variable_3) == 0x000003, "Member 'BP_jRPG_Character_Battle_Base_C_OnStopTargeting::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnStopTargeting, CallFunc_Array_Find_ReturnValue) == 0x000004, "Member 'BP_jRPG_Character_Battle_Base_C_OnStopTargeting::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnStopTargeting, CallFunc_Array_Find_ReturnValue_1) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_OnStopTargeting::CallFunc_Array_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnStopTargeting, CallFunc_Array_Find_ReturnValue_2) == 0x00000C, "Member 'BP_jRPG_Character_Battle_Base_C_OnStopTargeting::CallFunc_Array_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnStopTargeting, CallFunc_Array_Find_ReturnValue_3) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_OnStopTargeting::CallFunc_Array_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnStopTargeting, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_OnStopTargeting::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnStopTargeting, CallFunc_MaxOfIntArray_IndexOfMaxValue) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_OnStopTargeting::CallFunc_MaxOfIntArray_IndexOfMaxValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnStopTargeting, CallFunc_MaxOfIntArray_MaxValue) == 0x00002C, "Member 'BP_jRPG_Character_Battle_Base_C_OnStopTargeting::CallFunc_MaxOfIntArray_MaxValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnStopTargeting, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_OnStopTargeting::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnStartTargeting
// 0x000C (0x000C - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnStartTargeting final
{
public:
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleTurnState                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleTurnState                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleTurnState                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleTurnState                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleTurnState                              Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleTurnState                              Temp_byte_Variable_5;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleTurnState                              Temp_byte_Variable_6;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleTurnState                              Temp_byte_Variable_7;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleTurnState                              Temp_byte_Variable_8;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleTurnState                              CallFunc_GetCurrentBattleTurnState_ReturnValue;    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleTurnState                              K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnStartTargeting) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnStartTargeting");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnStartTargeting) == 0x00000C, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnStartTargeting");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnStartTargeting, CallFunc_MakeLiteralByte_ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnStartTargeting::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnStartTargeting, Temp_byte_Variable) == 0x000001, "Member 'BP_jRPG_Character_Battle_Base_C_OnStartTargeting::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnStartTargeting, Temp_byte_Variable_1) == 0x000002, "Member 'BP_jRPG_Character_Battle_Base_C_OnStartTargeting::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnStartTargeting, Temp_byte_Variable_2) == 0x000003, "Member 'BP_jRPG_Character_Battle_Base_C_OnStartTargeting::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnStartTargeting, Temp_byte_Variable_3) == 0x000004, "Member 'BP_jRPG_Character_Battle_Base_C_OnStartTargeting::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnStartTargeting, Temp_byte_Variable_4) == 0x000005, "Member 'BP_jRPG_Character_Battle_Base_C_OnStartTargeting::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnStartTargeting, Temp_byte_Variable_5) == 0x000006, "Member 'BP_jRPG_Character_Battle_Base_C_OnStartTargeting::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnStartTargeting, Temp_byte_Variable_6) == 0x000007, "Member 'BP_jRPG_Character_Battle_Base_C_OnStartTargeting::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnStartTargeting, Temp_byte_Variable_7) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_OnStartTargeting::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnStartTargeting, Temp_byte_Variable_8) == 0x000009, "Member 'BP_jRPG_Character_Battle_Base_C_OnStartTargeting::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnStartTargeting, CallFunc_GetCurrentBattleTurnState_ReturnValue) == 0x00000A, "Member 'BP_jRPG_Character_Battle_Base_C_OnStartTargeting::CallFunc_GetCurrentBattleTurnState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnStartTargeting, K2Node_Select_Default) == 0x00000B, "Member 'BP_jRPG_Character_Battle_Base_C_OnStartTargeting::K2Node_Select_Default' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ExternalTickCurrentBattleSequenceActionTimeline
// 0x0040 (0x0040 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ExternalTickCurrentBattleSequenceActionTimeline final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleSequenceTimeline_C*           CallFunc_Map_Find_Value;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ExternalTickCurrentBattleSequenceActionTimeline) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ExternalTickCurrentBattleSequenceActionTimeline");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ExternalTickCurrentBattleSequenceActionTimeline) == 0x000040, "Wrong size on BP_jRPG_Character_Battle_Base_C_ExternalTickCurrentBattleSequenceActionTimeline");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExternalTickCurrentBattleSequenceActionTimeline, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ExternalTickCurrentBattleSequenceActionTimeline::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExternalTickCurrentBattleSequenceActionTimeline, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_jRPG_Character_Battle_Base_C_ExternalTickCurrentBattleSequenceActionTimeline::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExternalTickCurrentBattleSequenceActionTimeline, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_ExternalTickCurrentBattleSequenceActionTimeline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExternalTickCurrentBattleSequenceActionTimeline, CallFunc_Map_Keys_Keys) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_ExternalTickCurrentBattleSequenceActionTimeline::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExternalTickCurrentBattleSequenceActionTimeline, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_ExternalTickCurrentBattleSequenceActionTimeline::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExternalTickCurrentBattleSequenceActionTimeline, CallFunc_Array_Get_Item) == 0x000024, "Member 'BP_jRPG_Character_Battle_Base_C_ExternalTickCurrentBattleSequenceActionTimeline::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExternalTickCurrentBattleSequenceActionTimeline, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_ExternalTickCurrentBattleSequenceActionTimeline::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExternalTickCurrentBattleSequenceActionTimeline, CallFunc_Map_Find_Value) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_ExternalTickCurrentBattleSequenceActionTimeline::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExternalTickCurrentBattleSequenceActionTimeline, CallFunc_Map_Find_ReturnValue) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_ExternalTickCurrentBattleSequenceActionTimeline::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExternalTickCurrentBattleSequenceActionTimeline, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_jRPG_Character_Battle_Base_C_ExternalTickCurrentBattleSequenceActionTimeline::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.DeclareBattleSequenceTimingsAsList
// 0x0140 (0x0140 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList final
{
public:
	class ABP_EpicBattleSequenceActor_C*          BattleSequence;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBattleSequenceKeyframe>        BattleSequenceKeyframes;                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TMap<double, EBattleSequenceCameraType>       CameraKeyframes;                                   // 0x0018(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         TrackIndex;                                        // 0x0068(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleSequenceKeyframeType                   lastKeyframeType;                                  // 0x006C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        local_Now;                                         // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                local_ComboWindowEndTimes;                         // 0x0078(0x0010)(Edit, BlueprintVisible)
	TArray<double>                                local_ActionEffectTimes;                           // 0x0088(0x0010)(Edit, BlueprintVisible)
	double                                        local_ComboWindowEndTime;                          // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_ComboWindowStartTime;                        // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_ComboPreTime;                                // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00B8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0100(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0118(0x0010)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x012B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleSequenceTimeline_C*           CallFunc_SpawnObject_ReturnValue;                  // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList) == 0x000140, "Wrong size on BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList, BattleSequence) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList::BattleSequence' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList, BattleSequenceKeyframes) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList::BattleSequenceKeyframes' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList, CameraKeyframes) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList::CameraKeyframes' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList, TrackIndex) == 0x000068, "Member 'BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList::TrackIndex' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList, lastKeyframeType) == 0x00006C, "Member 'BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList::lastKeyframeType' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList, local_Now) == 0x000070, "Member 'BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList::local_Now' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList, local_ComboWindowEndTimes) == 0x000078, "Member 'BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList::local_ComboWindowEndTimes' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList, local_ActionEffectTimes) == 0x000088, "Member 'BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList::local_ActionEffectTimes' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList, local_ComboWindowEndTime) == 0x000098, "Member 'BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList::local_ComboWindowEndTime' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList, local_ComboWindowStartTime) == 0x0000A0, "Member 'BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList::local_ComboWindowStartTime' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList, local_ComboPreTime) == 0x0000A8, "Member 'BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList::local_ComboPreTime' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0000B0, "Member 'BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList, K2Node_MakeStruct_FormatArgumentData) == 0x0000B8, "Member 'BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList, K2Node_MakeArray_Array) == 0x000100, "Member 'BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000110, "Member 'BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList, CallFunc_Format_ReturnValue) == 0x000118, "Member 'BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList, CallFunc_Not_PreBool_ReturnValue) == 0x000128, "Member 'BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList, CallFunc_IsValid_ReturnValue) == 0x000129, "Member 'BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList, CallFunc_Map_Contains_ReturnValue) == 0x00012A, "Member 'BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList, CallFunc_Not_PreBool_ReturnValue_1) == 0x00012B, "Member 'BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList, CallFunc_SpawnObject_ReturnValue) == 0x000130, "Member 'BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList, CallFunc_Add_IntInt_ReturnValue) == 0x000138, "Member 'BP_jRPG_Character_Battle_Base_C_DeclareBattleSequenceTimingsAsList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnSkillComboFailed
// 0x0038 (0x0038 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnSkillComboFailed final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_BattleSequenceTimeline_C*>   CallFunc_Map_Values_Values;                        // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleSequenceTimeline_C*           CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnSkillComboFailed) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnSkillComboFailed");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnSkillComboFailed) == 0x000038, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnSkillComboFailed");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnSkillComboFailed, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnSkillComboFailed::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnSkillComboFailed, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_jRPG_Character_Battle_Base_C_OnSkillComboFailed::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnSkillComboFailed, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_OnSkillComboFailed::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnSkillComboFailed, CallFunc_Map_Values_Values) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_OnSkillComboFailed::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnSkillComboFailed, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_OnSkillComboFailed::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnSkillComboFailed, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_OnSkillComboFailed::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnSkillComboFailed, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_OnSkillComboFailed::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnBattleSequenceFinished
// 0x0170 (0x0170 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished final
{
public:
	class ABP_EpicBattleSequenceActor_C*          ComboSequence;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0010(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0048)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_QTEManager_C*                       CallFunc_GetQTEManager_QTEManager;                 // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_BattleSequenceTimeline_C*>   CallFunc_Map_Values_Values;                        // 0x0078(0x0010)(ReferenceParm)
	class UBP_BattleSequenceTimeline_C*           CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x0098(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A8(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_2;          // 0x00F0(0x0010)()
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0108(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0150(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0160(0x0010)()
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished) == 0x000170, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished, ComboSequence) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished::ComboSequence' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished, CallFunc_GetQTEManager_QTEManager) == 0x000070, "Member 'BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished::CallFunc_GetQTEManager_QTEManager' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished, CallFunc_Map_Values_Values) == 0x000078, "Member 'BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished, CallFunc_Map_Remove_ReturnValue) == 0x000095, "Member 'BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x000098, "Member 'BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A8, "Member 'BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished, CallFunc_Conv_ObjectToText_ReturnValue_2) == 0x0000F0, "Member 'BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished::CallFunc_Conv_ObjectToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000100, "Member 'BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished, K2Node_MakeStruct_FormatArgumentData_2) == 0x000108, "Member 'BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished, K2Node_MakeArray_Array) == 0x000150, "Member 'BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished, CallFunc_Format_ReturnValue) == 0x000160, "Member 'BP_jRPG_Character_Battle_Base_C_OnBattleSequenceFinished::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnBattleSequenceStarts
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnBattleSequenceStarts final
{
public:
	class ABP_EpicBattleSequenceActor_C*          BattleSequence;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnBattleSequenceStarts) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnBattleSequenceStarts");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnBattleSequenceStarts) == 0x000010, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnBattleSequenceStarts");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnBattleSequenceStarts, BattleSequence) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnBattleSequenceStarts::BattleSequence' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnBattleSequenceStarts, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_OnBattleSequenceStarts::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnBattleSequenceStarts, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'BP_jRPG_Character_Battle_Base_C_OnBattleSequenceStarts::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.AssertIsCurrentTurn
// 0x0090 (0x0090 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_AssertIsCurrentTurn final
{
public:
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCurrentTurn_IsCurrentTurn;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0010)()
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_AssertIsCurrentTurn) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_AssertIsCurrentTurn");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_AssertIsCurrentTurn) == 0x000090, "Wrong size on BP_jRPG_Character_Battle_Base_C_AssertIsCurrentTurn");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AssertIsCurrentTurn, CallFunc_GetDisplayName_ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_AssertIsCurrentTurn::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AssertIsCurrentTurn, CallFunc_IsCurrentTurn_IsCurrentTurn) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_AssertIsCurrentTurn::CallFunc_IsCurrentTurn_IsCurrentTurn' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AssertIsCurrentTurn, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_AssertIsCurrentTurn::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AssertIsCurrentTurn, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_AssertIsCurrentTurn::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AssertIsCurrentTurn, K2Node_MakeArray_Array) == 0x000070, "Member 'BP_jRPG_Character_Battle_Base_C_AssertIsCurrentTurn::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AssertIsCurrentTurn, CallFunc_Format_ReturnValue) == 0x000080, "Member 'BP_jRPG_Character_Battle_Base_C_AssertIsCurrentTurn::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.IsCurrentTurn
// 0x0003 (0x0003 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_IsCurrentTurn final
{
public:
	bool                                          IsCurrentTurn_0;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_IsCurrentTurn) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_IsCurrentTurn");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_IsCurrentTurn) == 0x000003, "Wrong size on BP_jRPG_Character_Battle_Base_C_IsCurrentTurn");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_IsCurrentTurn, IsCurrentTurn_0) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_IsCurrentTurn::IsCurrentTurn_0' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_IsCurrentTurn, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_jRPG_Character_Battle_Base_C_IsCurrentTurn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_IsCurrentTurn, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000002, "Member 'BP_jRPG_Character_Battle_Base_C_IsCurrentTurn::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.Try Activate Skill Combo
// 0x00E8 (0x00E8 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo final
{
public:
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_BattleSequenceTimeline_C*>   CallFunc_GetBattleTimelineExpiringSoonest_SortedBattleSequenceTimelines; // 0x0018(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleSequenceTimeline_C*           CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryActivate_Success;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryActivate_Perfect;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0058(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C8(0x0010)()
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller;   // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_QTEManager_C*                       CallFunc_GetQTEManager_QTEManager;                 // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo) == 0x0000E8, "Wrong size on BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo, CallFunc_GetSocketLocation_ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo, CallFunc_GetBattleTimelineExpiringSoonest_SortedBattleSequenceTimelines) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo::CallFunc_GetBattleTimelineExpiringSoonest_SortedBattleSequenceTimelines' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo, CallFunc_Add_VectorVector_ReturnValue) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo, CallFunc_TryActivate_Success) == 0x000050, "Member 'BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo::CallFunc_TryActivate_Success' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo, CallFunc_TryActivate_Perfect) == 0x000051, "Member 'BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo::CallFunc_TryActivate_Perfect' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000052, "Member 'BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo, CallFunc_Conv_BoolToText_ReturnValue) == 0x000058, "Member 'BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo, CallFunc_BooleanAND_ReturnValue) == 0x0000B0, "Member 'BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo, K2Node_MakeArray_Array) == 0x0000B8, "Member 'BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo, CallFunc_Format_ReturnValue) == 0x0000C8, "Member 'BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo, CallFunc_GetJRPGControllerWorld_JRPG_Controller) == 0x0000D8, "Member 'BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo::CallFunc_GetJRPGControllerWorld_JRPG_Controller' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo, CallFunc_GetQTEManager_QTEManager) == 0x0000E0, "Member 'BP_jRPG_Character_Battle_Base_C_Try_Activate_Skill_Combo::CallFunc_GetQTEManager_QTEManager' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnDefendSuccess
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnDefendSuccess final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       DefendedEnemy;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnDefendSuccess) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnDefendSuccess");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnDefendSuccess) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnDefendSuccess");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnDefendSuccess, DefendedEnemy) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnDefendSuccess::DefendedEnemy' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnParrySuccess
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnParrySuccess final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       ParriedEnemy;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnParrySuccess) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnParrySuccess");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnParrySuccess) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnParrySuccess");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnParrySuccess, ParriedEnemy) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnParrySuccess::ParriedEnemy' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnDodgeSuccess
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnDodgeSuccess final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       DodgedEnemy;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPerfectDodge;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnDodgeSuccess) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnDodgeSuccess");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnDodgeSuccess) == 0x000010, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnDodgeSuccess");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnDodgeSuccess, DodgedEnemy) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnDodgeSuccess::DodgedEnemy' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnDodgeSuccess, IsPerfectDodge) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_OnDodgeSuccess::IsPerfectDodge' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ClearDefensiveMoveLock
// 0x0190 (0x0190 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock final
{
public:
	class FString                                 Reason;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          local_wasLocked;                                   // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0090(0x0010)()
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0108(0x0010)()
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0128(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0170(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0180(0x0010)()
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock) == 0x000190, "Wrong size on BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock, Reason) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock::Reason' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock, local_wasLocked) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock::local_wasLocked' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock, CallFunc_GetDisplayName_ReturnValue) == 0x000070, "Member 'BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock, K2Node_MakeArray_Array) == 0x000080, "Member 'BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000090, "Member 'BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B0, "Member 'BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock, K2Node_MakeArray_Array_1) == 0x0000F8, "Member 'BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock, CallFunc_Format_ReturnValue_1) == 0x000108, "Member 'BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000118, "Member 'BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000120, "Member 'BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock, K2Node_MakeStruct_FormatArgumentData_2) == 0x000128, "Member 'BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock, K2Node_MakeArray_Array_2) == 0x000170, "Member 'BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock, CallFunc_Format_ReturnValue_2) == 0x000180, "Member 'BP_jRPG_Character_Battle_Base_C_ClearDefensiveMoveLock::CallFunc_Format_ReturnValue_2' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.TryStartParry
// 0x00F8 (0x00F8 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_TryStartParry final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsParryLocked_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0080(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	float                                         CallFunc_PlayAnimMontage_ReturnValue;              // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E0(0x0010)()
	bool                                          CallFunc_CanDoDefensiveMove_CanDoDefensiveMove;    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PlayAnimMontage_InPlayRate_ImplicitCast;  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_TryStartParry) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_TryStartParry");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_TryStartParry) == 0x0000F8, "Wrong size on BP_jRPG_Character_Battle_Base_C_TryStartParry");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartParry, Success) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartParry::Success' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartParry, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartParry::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartParry, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartParry::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartParry, CallFunc_IsParryLocked_ReturnValue) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartParry::CallFunc_IsParryLocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartParry, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartParry::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartParry, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartParry::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartParry, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartParry::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartParry, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartParry::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartParry, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartParry::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartParry, K2Node_MakeStruct_FormatArgumentData_1) == 0x000080, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartParry::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartParry, K2Node_MakeArray_Array) == 0x0000C8, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartParry::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartParry, CallFunc_PlayAnimMontage_ReturnValue) == 0x0000D8, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartParry::CallFunc_PlayAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartParry, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartParry::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartParry, CallFunc_CanDoDefensiveMove_CanDoDefensiveMove) == 0x0000F0, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartParry::CallFunc_CanDoDefensiveMove_CanDoDefensiveMove' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartParry, CallFunc_PlayAnimMontage_InPlayRate_ImplicitCast) == 0x0000F4, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartParry::CallFunc_PlayAnimMontage_InPlayRate_ImplicitCast' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.TryStartDodge
// 0x0130 (0x0130 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_TryStartDodge final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        local_dodgeDuration;                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_dodgeWindowMultiplier;                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDodgeImmuneDuration_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDodgeLockActive_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0108(0x0010)()
	bool                                          CallFunc_CanDoDefensiveMove_CanDoDefensiveMove;    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Array_Get_Item;                           // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimMontage_ReturnValue;              // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimMontage_InPlayRate_ImplicitCast;  // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_TryStartDodge) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_TryStartDodge");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_TryStartDodge) == 0x000130, "Wrong size on BP_jRPG_Character_Battle_Base_C_TryStartDodge");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartDodge, Success) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartDodge::Success' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartDodge, local_dodgeDuration) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartDodge::local_dodgeDuration' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartDodge, local_dodgeWindowMultiplier) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartDodge::local_dodgeWindowMultiplier' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartDodge, CallFunc_GetDodgeImmuneDuration_ReturnValue) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartDodge::CallFunc_GetDodgeImmuneDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartDodge, CallFunc_IsDodgeLockActive_ReturnValue) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartDodge::CallFunc_IsDodgeLockActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartDodge, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartDodge::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartDodge, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartDodge::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartDodge, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartDodge::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartDodge, CallFunc_Percent_IntInt_ReturnValue) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartDodge::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartDodge, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartDodge::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartDodge, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartDodge::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartDodge, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartDodge::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartDodge, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartDodge::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartDodge, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000058, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartDodge::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartDodge, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartDodge::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartDodge, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A8, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartDodge::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartDodge, K2Node_MakeArray_Array) == 0x0000F0, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartDodge::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartDodge, CallFunc_FMax_ReturnValue) == 0x000100, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartDodge::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartDodge, CallFunc_Format_ReturnValue) == 0x000108, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartDodge::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartDodge, CallFunc_CanDoDefensiveMove_CanDoDefensiveMove) == 0x000118, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartDodge::CallFunc_CanDoDefensiveMove_CanDoDefensiveMove' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartDodge, CallFunc_Array_Get_Item) == 0x000120, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartDodge::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartDodge, CallFunc_PlayAnimMontage_ReturnValue) == 0x000128, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartDodge::CallFunc_PlayAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TryStartDodge, CallFunc_PlayAnimMontage_InPlayRate_ImplicitCast) == 0x00012C, "Member 'BP_jRPG_Character_Battle_Base_C_TryStartDodge::CallFunc_PlayAnimMontage_InPlayRate_ImplicitCast' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.StartDefensiveMove
// 0x00B8 (0x00B8 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_StartDefensiveMove final
{
public:
	double                                        LockDuration;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ImmuneDuration;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WarmUpDuration;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Reason;                                            // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0010)()
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_StartDefensiveMove) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_StartDefensiveMove");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_StartDefensiveMove) == 0x0000B8, "Wrong size on BP_jRPG_Character_Battle_Base_C_StartDefensiveMove");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartDefensiveMove, LockDuration) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_StartDefensiveMove::LockDuration' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartDefensiveMove, ImmuneDuration) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_StartDefensiveMove::ImmuneDuration' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartDefensiveMove, WarmUpDuration) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_StartDefensiveMove::WarmUpDuration' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartDefensiveMove, Reason) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_StartDefensiveMove::Reason' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartDefensiveMove, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_StartDefensiveMove::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartDefensiveMove, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_StartDefensiveMove::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartDefensiveMove, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_StartDefensiveMove::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartDefensiveMove, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_StartDefensiveMove::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartDefensiveMove, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'BP_jRPG_Character_Battle_Base_C_StartDefensiveMove::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartDefensiveMove, K2Node_MakeArray_Array) == 0x000098, "Member 'BP_jRPG_Character_Battle_Base_C_StartDefensiveMove::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartDefensiveMove, CallFunc_Format_ReturnValue) == 0x0000A8, "Member 'BP_jRPG_Character_Battle_Base_C_StartDefensiveMove::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.IsImmunityByDefensiveMoveFinished
// 0x0018 (0x0018 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_IsImmunityByDefensiveMoveFinished final
{
public:
	bool                                          IsFinished;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_IsImmunityByDefensiveMoveFinished) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_IsImmunityByDefensiveMoveFinished");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_IsImmunityByDefensiveMoveFinished) == 0x000018, "Wrong size on BP_jRPG_Character_Battle_Base_C_IsImmunityByDefensiveMoveFinished");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_IsImmunityByDefensiveMoveFinished, IsFinished) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_IsImmunityByDefensiveMoveFinished::IsFinished' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_IsImmunityByDefensiveMoveFinished, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_IsImmunityByDefensiveMoveFinished::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_IsImmunityByDefensiveMoveFinished, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_IsImmunityByDefensiveMoveFinished::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.IsLockedByDefensiveMoveTimer
// 0x0018 (0x0018 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_IsLockedByDefensiveMoveTimer final
{
public:
	bool                                          IsLocked;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_IsLockedByDefensiveMoveTimer) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_IsLockedByDefensiveMoveTimer");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_IsLockedByDefensiveMoveTimer) == 0x000018, "Wrong size on BP_jRPG_Character_Battle_Base_C_IsLockedByDefensiveMoveTimer");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_IsLockedByDefensiveMoveTimer, IsLocked) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_IsLockedByDefensiveMoveTimer::IsLocked' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_IsLockedByDefensiveMoveTimer, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue) == 0x000004, "Member 'BP_jRPG_Character_Battle_Base_C_IsLockedByDefensiveMoveTimer::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_IsLockedByDefensiveMoveTimer, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_IsLockedByDefensiveMoveTimer::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_IsLockedByDefensiveMoveTimer, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_IsLockedByDefensiveMoveTimer::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.CanDoDefensiveMove
// 0x000C (0x000C - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_CanDoDefensiveMove final
{
public:
	bool                                          CanDoDefensiveMove_0;                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterTeamSelector                        CallFunc_GetTeam_Team;                             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLockedByDefensiveMoveTimer_IsLocked;    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDefenseLockActive_ReturnValue;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_CanDoDefensiveMove) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_CanDoDefensiveMove");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_CanDoDefensiveMove) == 0x00000C, "Wrong size on BP_jRPG_Character_Battle_Base_C_CanDoDefensiveMove");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CanDoDefensiveMove, CanDoDefensiveMove_0) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_CanDoDefensiveMove::CanDoDefensiveMove_0' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CanDoDefensiveMove, CallFunc_GetTeam_Team) == 0x000001, "Member 'BP_jRPG_Character_Battle_Base_C_CanDoDefensiveMove::CallFunc_GetTeam_Team' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CanDoDefensiveMove, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_jRPG_Character_Battle_Base_C_CanDoDefensiveMove::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CanDoDefensiveMove, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'BP_jRPG_Character_Battle_Base_C_CanDoDefensiveMove::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CanDoDefensiveMove, CallFunc_IsLockedByDefensiveMoveTimer_IsLocked) == 0x000004, "Member 'BP_jRPG_Character_Battle_Base_C_CanDoDefensiveMove::CallFunc_IsLockedByDefensiveMoveTimer_IsLocked' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CanDoDefensiveMove, CallFunc_Not_PreBool_ReturnValue_1) == 0x000005, "Member 'BP_jRPG_Character_Battle_Base_C_CanDoDefensiveMove::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CanDoDefensiveMove, CallFunc_IsDefenseLockActive_ReturnValue) == 0x000006, "Member 'BP_jRPG_Character_Battle_Base_C_CanDoDefensiveMove::CallFunc_IsDefenseLockActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CanDoDefensiveMove, CallFunc_Not_PreBool_ReturnValue_2) == 0x000007, "Member 'BP_jRPG_Character_Battle_Base_C_CanDoDefensiveMove::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CanDoDefensiveMove, CallFunc_Not_PreBool_ReturnValue_3) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_CanDoDefensiveMove::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CanDoDefensiveMove, CallFunc_BooleanAND_ReturnValue) == 0x000009, "Member 'BP_jRPG_Character_Battle_Base_C_CanDoDefensiveMove::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CanDoDefensiveMove, CallFunc_BooleanAND_ReturnValue_1) == 0x00000A, "Member 'BP_jRPG_Character_Battle_Base_C_CanDoDefensiveMove::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CanDoDefensiveMove, CallFunc_BooleanAND_ReturnValue_2) == 0x00000B, "Member 'BP_jRPG_Character_Battle_Base_C_CanDoDefensiveMove::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OverrideWithShoulderCamera
// 0x0002 (0x0002 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OverrideWithShoulderCamera final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OverrideWithShoulderCamera) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OverrideWithShoulderCamera");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OverrideWithShoulderCamera) == 0x000002, "Wrong size on BP_jRPG_Character_Battle_Base_C_OverrideWithShoulderCamera");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OverrideWithShoulderCamera, Enabled) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OverrideWithShoulderCamera::Enabled' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OverrideWithShoulderCamera, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000001, "Member 'BP_jRPG_Character_Battle_Base_C_OverrideWithShoulderCamera::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnTurnEnded
// 0x0250 (0x0250 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnTurnEnded final
{
public:
	class FText                                   Temp_text_Variable;                                // 0x0000(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0010(0x0010)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0038(0x0010)()
	class FText                                   Temp_text_Variable_2;                              // 0x0048(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00E8(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0130(0x0010)()
	bool                                          CallFunc_IsDeathQueuedForTurnEnd_ReturnValue;      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleTurnState                              CallFunc_Array_Get_Item;                           // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0160(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0170(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x01B8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0200(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0210(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0220(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0230(0x0010)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnTurnEnded");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded) == 0x000250, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnTurnEnded");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded, Temp_text_Variable) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnEnded::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded, Temp_text_Variable_1) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnEnded::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnEnded::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000024, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnEnded::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnEnded::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnEnded::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded, Temp_bool_Variable) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnEnded::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded, K2Node_Select_Default) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnEnded::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded, Temp_text_Variable_2) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnEnded::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnEnded::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnEnded::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000E8, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnEnded::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded, CallFunc_MakeLiteralText_ReturnValue) == 0x000130, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnEnded::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded, CallFunc_IsDeathQueuedForTurnEnd_ReturnValue) == 0x000140, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnEnded::CallFunc_IsDeathQueuedForTurnEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000141, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnEnded::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded, CallFunc_Not_PreBool_ReturnValue) == 0x000142, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnEnded::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded, CallFunc_Array_Get_Item) == 0x000143, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnEnded::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded, CallFunc_Array_Length_ReturnValue) == 0x000144, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnEnded::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000148, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnEnded::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000158, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnEnded::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded, CallFunc_Conv_StringToText_ReturnValue) == 0x000160, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnEnded::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded, K2Node_MakeStruct_FormatArgumentData_3) == 0x000170, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnEnded::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded, K2Node_MakeStruct_FormatArgumentData_4) == 0x0001B8, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnEnded::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded, K2Node_MakeArray_Array) == 0x000200, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnEnded::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded, K2Node_MakeArray_Array_1) == 0x000210, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnEnded::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded, CallFunc_Format_ReturnValue) == 0x000220, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnEnded::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded, CallFunc_Format_ReturnValue_1) == 0x000230, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnEnded::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded, CallFunc_Greater_IntInt_ReturnValue) == 0x000240, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnEnded::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded, CallFunc_Array_Length_ReturnValue_1) == 0x000244, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnEnded::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnEnded, CallFunc_Less_IntInt_ReturnValue) == 0x000248, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnEnded::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnTurnStart
// 0x0020 (0x0020 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnTurnStart final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamCharacter_IsPlayerTeam;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetCurrentHPPercentage_Percent01;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamCharacter_IsPlayerTeam_1;     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSoundEvent                           K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnTurnStart) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnTurnStart");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnTurnStart) == 0x000020, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnTurnStart");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnStart, Temp_bool_Variable) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnStart::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnStart, CallFunc_IsPlayerTeamCharacter_IsPlayerTeam) == 0x000001, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnStart::CallFunc_IsPlayerTeamCharacter_IsPlayerTeam' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnStart, CallFunc_GetCurrentHPPercentage_Percent01) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnStart::CallFunc_GetCurrentHPPercentage_Percent01' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnStart, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnStart::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnStart, CallFunc_IsPlayerTeamCharacter_IsPlayerTeam_1) == 0x000011, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnStart::CallFunc_IsPlayerTeamCharacter_IsPlayerTeam_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnTurnStart, K2Node_Select_Default) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_OnTurnStart::K2Node_Select_Default' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.QTEFailFXAndSound
// 0x0078 (0x0078 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_QTEFailFXAndSound final
{
public:
	struct FVector                                FXScale;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundBase;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        ParticleSystem;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FX_Position_Offset;                                // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSingleTargetLocation_TargetLocation;   // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_QTEFailFXAndSound) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_QTEFailFXAndSound");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_QTEFailFXAndSound) == 0x000078, "Wrong size on BP_jRPG_Character_Battle_Base_C_QTEFailFXAndSound");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_QTEFailFXAndSound, FXScale) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_QTEFailFXAndSound::FXScale' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_QTEFailFXAndSound, SoundBase) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_QTEFailFXAndSound::SoundBase' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_QTEFailFXAndSound, ParticleSystem) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_QTEFailFXAndSound::ParticleSystem' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_QTEFailFXAndSound, FX_Position_Offset) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_QTEFailFXAndSound::FX_Position_Offset' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_QTEFailFXAndSound, CallFunc_GetSingleTargetLocation_TargetLocation) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_QTEFailFXAndSound::CallFunc_GetSingleTargetLocation_TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_QTEFailFXAndSound, CallFunc_Add_VectorVector_ReturnValue) == 0x000058, "Member 'BP_jRPG_Character_Battle_Base_C_QTEFailFXAndSound::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_QTEFailFXAndSound, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000070, "Member 'BP_jRPG_Character_Battle_Base_C_QTEFailFXAndSound::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetSingleTargetLocation
// 0x0030 (0x0030 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetSingleTargetLocation final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetSingleTargetLocation) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetSingleTargetLocation");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetSingleTargetLocation) == 0x000030, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetSingleTargetLocation");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetSingleTargetLocation, TargetLocation) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetSingleTargetLocation::TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetSingleTargetLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_GetSingleTargetLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetTargetHeadLocation
// 0x00D8 (0x00D8 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation final
{
public:
	TArray<struct FVector>                        TargetsLocation;                                   // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FVector>                        TargetScaleList;                                   // 0x0010(0x0010)(Parm, OutParm)
	TArray<struct FRotator>                       TargetRotationList;                                // 0x0020(0x0010)(Parm, OutParm)
	TArray<struct FRotator>                       local_targetRotationList;                          // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<struct FVector>                        local_targetScaleList;                             // 0x0040(0x0010)(Edit, BlueprintVisible)
	TArray<struct FVector>                        local_targetLocationList;                          // 0x0050(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation) == 0x0000D8, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation, TargetsLocation) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation::TargetsLocation' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation, TargetScaleList) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation::TargetScaleList' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation, TargetRotationList) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation::TargetRotationList' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation, local_targetRotationList) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation::local_targetRotationList' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation, local_targetScaleList) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation::local_targetScaleList' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation, local_targetLocationList) == 0x000050, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation::local_targetLocationList' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation, Temp_int_Array_Index_Variable) == 0x000060, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000080, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000098, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation, CallFunc_Array_Add_ReturnValue) == 0x0000B0, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation, CallFunc_Array_Add_ReturnValue_1) == 0x0000B4, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000B8, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation, CallFunc_Array_Add_ReturnValue_2) == 0x0000D0, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetHeadLocation::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetTargetMiddleLocation
// 0x00D8 (0x00D8 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation final
{
public:
	TArray<struct FVector>                        TargetsLocation;                                   // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FVector>                        TargetScaleList;                                   // 0x0010(0x0010)(Parm, OutParm)
	TArray<struct FRotator>                       TargetRotationList;                                // 0x0020(0x0010)(Parm, OutParm)
	TArray<struct FRotator>                       local_rotations;                                   // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<struct FVector>                        local_scales;                                      // 0x0040(0x0010)(Edit, BlueprintVisible)
	TArray<struct FVector>                        local_locations;                                   // 0x0050(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation) == 0x0000D8, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation, TargetsLocation) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation::TargetsLocation' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation, TargetScaleList) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation::TargetScaleList' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation, TargetRotationList) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation::TargetRotationList' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation, local_rotations) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation::local_rotations' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation, local_scales) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation::local_scales' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation, local_locations) == 0x000050, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation::local_locations' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation, Temp_int_Array_Index_Variable) == 0x000060, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000080, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000098, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation, CallFunc_Array_Add_ReturnValue) == 0x0000B0, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation, CallFunc_Array_Add_ReturnValue_1) == 0x0000B4, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000B8, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation, CallFunc_Array_Add_ReturnValue_2) == 0x0000D0, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetMiddleLocation::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetTargetRootLocation
// 0x00D8 (0x00D8 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation final
{
public:
	TArray<struct FVector>                        TargetsLocation;                                   // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FVector>                        TargetScaleList;                                   // 0x0010(0x0010)(Parm, OutParm)
	TArray<struct FRotator>                       TargetRotationList;                                // 0x0020(0x0010)(Parm, OutParm)
	TArray<struct FRotator>                       local_rotations;                                   // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<struct FVector>                        local_scales;                                      // 0x0040(0x0010)(Edit, BlueprintVisible)
	TArray<struct FVector>                        local_locations;                                   // 0x0050(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetRootLocation_Location;                 // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRootLocation_Scale;                    // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetRootLocation_Rotation;                 // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation) == 0x0000D8, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation, TargetsLocation) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation::TargetsLocation' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation, TargetScaleList) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation::TargetScaleList' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation, TargetRotationList) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation::TargetRotationList' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation, local_rotations) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation::local_rotations' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation, local_scales) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation::local_scales' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation, local_locations) == 0x000050, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation::local_locations' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation, Temp_int_Array_Index_Variable) == 0x000060, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation, CallFunc_GetRootLocation_Location) == 0x000080, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation::CallFunc_GetRootLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation, CallFunc_GetRootLocation_Scale) == 0x000098, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation::CallFunc_GetRootLocation_Scale' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation, CallFunc_GetRootLocation_Rotation) == 0x0000B0, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation::CallFunc_GetRootLocation_Rotation' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation, CallFunc_Array_Add_ReturnValue) == 0x0000C8, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation, CallFunc_Array_Add_ReturnValue_1) == 0x0000CC, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation, CallFunc_Array_Add_ReturnValue_2) == 0x0000D0, "Member 'BP_jRPG_Character_Battle_Base_C_GetTargetRootLocation::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.SpawnFXOnSelectedTargets
// 0x01D8 (0x01D8 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets final
{
public:
	class UNiagaraSystem*                         VFXNiagara;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocationModif;                                     // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RotationModif;                                     // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                ScaleModif;                                        // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_JRPG_VFXSpawnSpots                          WhereToSpawn;                                      // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             VFXSound;                                          // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        OLDCASCADE_ParticleSystem;                         // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UParticleSystemComponent*>       SpawnedParticleSystems;                            // 0x0070(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       local_SpawnedParticles;                            // 0x0080(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<struct FVector>                        local_TargetScales;                                // 0x0090(0x0010)(Edit, BlueprintVisible)
	TArray<struct FVector>                        local_TargetLocations;                             // 0x00A0(0x0010)(Edit, BlueprintVisible)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        CallFunc_GetTargetHeadLocation_TargetsLocation;    // 0x0140(0x0010)(ReferenceParm)
	TArray<struct FVector>                        CallFunc_GetTargetHeadLocation_TargetScaleList;    // 0x0150(0x0010)(ReferenceParm)
	TArray<struct FRotator>                       CallFunc_GetTargetHeadLocation_TargetRotationList; // 0x0160(0x0010)(ReferenceParm)
	TArray<struct FVector>                        CallFunc_GetTargetMiddleLocation_TargetsLocation;  // 0x0170(0x0010)(ReferenceParm)
	TArray<struct FVector>                        CallFunc_GetTargetMiddleLocation_TargetScaleList;  // 0x0180(0x0010)(ReferenceParm)
	TArray<struct FRotator>                       CallFunc_GetTargetMiddleLocation_TargetRotationList; // 0x0190(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        CallFunc_GetTargetRootLocation_TargetsLocation;    // 0x01A8(0x0010)(ReferenceParm)
	TArray<struct FVector>                        CallFunc_GetTargetRootLocation_TargetScaleList;    // 0x01B8(0x0010)(ReferenceParm)
	TArray<struct FRotator>                       CallFunc_GetTargetRootLocation_TargetRotationList; // 0x01C8(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets) == 0x0001D8, "Wrong size on BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, VFXNiagara) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::VFXNiagara' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, LocationModif) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::LocationModif' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, RotationModif) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::RotationModif' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, ScaleModif) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::ScaleModif' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, WhereToSpawn) == 0x000050, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::WhereToSpawn' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, VFXSound) == 0x000058, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::VFXSound' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, OLDCASCADE_ParticleSystem) == 0x000060, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::OLDCASCADE_ParticleSystem' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, ReturnValue) == 0x000068, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, SpawnedParticleSystems) == 0x000070, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::SpawnedParticleSystems' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, local_SpawnedParticles) == 0x000080, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::local_SpawnedParticles' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, local_TargetScales) == 0x000090, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::local_TargetScales' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, local_TargetLocations) == 0x0000A0, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::local_TargetLocations' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, K2Node_SwitchEnum_CmpSuccess) == 0x0000B0, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, Temp_int_Array_Index_Variable) == 0x0000B4, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, Temp_int_Loop_Counter_Variable) == 0x0000B8, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, CallFunc_Add_IntInt_ReturnValue) == 0x0000BC, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F0, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000108, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000128, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, CallFunc_Less_IntInt_ReturnValue) == 0x000130, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000138, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, CallFunc_GetTargetHeadLocation_TargetsLocation) == 0x000140, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::CallFunc_GetTargetHeadLocation_TargetsLocation' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, CallFunc_GetTargetHeadLocation_TargetScaleList) == 0x000150, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::CallFunc_GetTargetHeadLocation_TargetScaleList' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, CallFunc_GetTargetHeadLocation_TargetRotationList) == 0x000160, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::CallFunc_GetTargetHeadLocation_TargetRotationList' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, CallFunc_GetTargetMiddleLocation_TargetsLocation) == 0x000170, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::CallFunc_GetTargetMiddleLocation_TargetsLocation' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, CallFunc_GetTargetMiddleLocation_TargetScaleList) == 0x000180, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::CallFunc_GetTargetMiddleLocation_TargetScaleList' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, CallFunc_GetTargetMiddleLocation_TargetRotationList) == 0x000190, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::CallFunc_GetTargetMiddleLocation_TargetRotationList' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, CallFunc_Array_Add_ReturnValue) == 0x0001A0, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, CallFunc_GetTargetRootLocation_TargetsLocation) == 0x0001A8, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::CallFunc_GetTargetRootLocation_TargetsLocation' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, CallFunc_GetTargetRootLocation_TargetScaleList) == 0x0001B8, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::CallFunc_GetTargetRootLocation_TargetScaleList' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets, CallFunc_GetTargetRootLocation_TargetRotationList) == 0x0001C8, "Member 'BP_jRPG_Character_Battle_Base_C_SpawnFXOnSelectedTargets::CallFunc_GetTargetRootLocation_TargetRotationList' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.AddCharacterParticleSystem
// 0x0270 (0x0270 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem final
{
public:
	E_jRPG_CharacterAttachmentSlot                AttachmentSlot;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        ParticleSystemCascade;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ParticleSystemRotation;                            // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UNiagaraSystem*                         SystemNiagara;                                     // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PositionOffset;                                    // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystemComponent_Cascade;                   // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NiagaraSystem;                                     // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0078(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0088(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00F0(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0100(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0110(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0158(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01A0(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Map_Find_Value;                           // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01C0(0x0010)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x01D0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01E0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0228(0x0010)(ReferenceParm)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0240(0x0010)()
	class USceneComponent*                        CallFunc_Map_Find_Value_1;                         // 0x0250(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0260(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0268(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem) == 0x000270, "Wrong size on BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem, AttachmentSlot) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem::AttachmentSlot' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem, ParticleSystemCascade) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem::ParticleSystemCascade' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem, ParticleSystemRotation) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem::ParticleSystemRotation' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem, SystemNiagara) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem::SystemNiagara' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem, PositionOffset) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem::PositionOffset' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem, ParticleSystemComponent_Cascade) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem::ParticleSystemComponent_Cascade' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem, NiagaraSystem) == 0x000050, "Member 'BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem, CallFunc_GetEnumeratorName_ReturnValue) == 0x000058, "Member 'BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000060, "Member 'BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem, CallFunc_Conv_NameToText_ReturnValue) == 0x000078, "Member 'BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem, K2Node_MakeStruct_FormatArgumentData) == 0x000088, "Member 'BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem, CallFunc_GetDisplayName_ReturnValue) == 0x0000D0, "Member 'BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem, CallFunc_GetDisplayName_ReturnValue_1) == 0x0000E0, "Member 'BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem, CallFunc_Conv_StringToText_ReturnValue) == 0x0000F0, "Member 'BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000100, "Member 'BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem, K2Node_MakeStruct_FormatArgumentData_1) == 0x000110, "Member 'BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem, K2Node_MakeStruct_FormatArgumentData_2) == 0x000158, "Member 'BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem, K2Node_MakeArray_Array) == 0x0001A0, "Member 'BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem, CallFunc_Map_Find_Value) == 0x0001B0, "Member 'BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem, CallFunc_Map_Find_ReturnValue) == 0x0001B8, "Member 'BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem, CallFunc_Format_ReturnValue) == 0x0001C0, "Member 'BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem, CallFunc_Conv_NameToText_ReturnValue_1) == 0x0001D0, "Member 'BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001E0, "Member 'BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem, K2Node_MakeArray_Array_1) == 0x000228, "Member 'BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem, CallFunc_DoesSocketExist_ReturnValue) == 0x000238, "Member 'BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem, CallFunc_Format_ReturnValue_1) == 0x000240, "Member 'BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem, CallFunc_Map_Find_Value_1) == 0x000250, "Member 'BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem, CallFunc_Map_Find_ReturnValue_1) == 0x000258, "Member 'BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000260, "Member 'BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000268, "Member 'BP_jRPG_Character_Battle_Base_C_AddCharacterParticleSystem::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetAllEnemies
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetAllEnemies final
{
public:
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Output;                                          // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetAllEnemies) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetAllEnemies");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetAllEnemies) == 0x000010, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetAllEnemies");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetAllEnemies, Output) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetAllEnemies::Output' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetMiddleEnemy
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetMiddleEnemy final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       Output;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetMiddleEnemy) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetMiddleEnemy");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetMiddleEnemy) == 0x000010, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetMiddleEnemy");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetMiddleEnemy, Output) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetMiddleEnemy::Output' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetMiddleEnemy, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_GetMiddleEnemy::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.CameraShakePlay
// 0x0028 (0x0028 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_CameraShakePlay final
{
public:
	class UClass*                                 CameraShake;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Scale;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraShakeBase*                       CallFunc_StartCameraShake_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_StartCameraShake_Scale_ImplicitCast;      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_CameraShakePlay) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_CameraShakePlay");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_CameraShakePlay) == 0x000028, "Wrong size on BP_jRPG_Character_Battle_Base_C_CameraShakePlay");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CameraShakePlay, CameraShake) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_CameraShakePlay::CameraShake' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CameraShakePlay, Scale) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_CameraShakePlay::Scale' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CameraShakePlay, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_CameraShakePlay::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CameraShakePlay, CallFunc_StartCameraShake_ReturnValue) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_CameraShakePlay::CallFunc_StartCameraShake_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_CameraShakePlay, CallFunc_StartCameraShake_Scale_ImplicitCast) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_CameraShakePlay::CallFunc_StartCameraShake_Scale_ImplicitCast' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ChangeCamera
// 0x0038 (0x0038 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ChangeCamera final
{
public:
	class FName                                   CameraName_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_DynamicCameraManager_C*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ChangeCamera) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ChangeCamera");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ChangeCamera) == 0x000038, "Wrong size on BP_jRPG_Character_Battle_Base_C_ChangeCamera");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ChangeCamera, CameraName_0) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ChangeCamera::CameraName_0' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ChangeCamera, CallFunc_NotEqual_NameName_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_ChangeCamera::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ChangeCamera, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_ChangeCamera::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ChangeCamera, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_ChangeCamera::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ChangeCamera, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_ChangeCamera::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.UserConstructionScript
// 0x01F8 (0x01F8 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_UserConstructionScript final
{
public:
	TArray<E_jRPG_CharacterAttachmentSlot>        CallFunc_Map_Keys_Keys;                            // 0x0000(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_CharacterAttachmentSlot                CallFunc_Array_Get_Item;                           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInPlayMode_ReturnValue;                 // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedBuild_ReturnValue;              // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B[0x5];                                       // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WeaponSkin_C*                       K2Node_DynamicCast_AsBP_Weapon_Skin;               // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Map_Find_Value;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00D0(0x0010)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x00E0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00F0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0138(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0180(0x0010)(ReferenceParm)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0198(0x0010)()
	TMap<E_jRPG_CharacterAttachmentSlot, class USceneComponent*> K2Node_MakeMap_Map;                 // 0x01A8(0x0050)(ContainsInstancedReference)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_UserConstructionScript");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_UserConstructionScript) == 0x0001F8, "Wrong size on BP_jRPG_Character_Battle_Base_C_UserConstructionScript");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UserConstructionScript, CallFunc_Map_Keys_Keys) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_UserConstructionScript::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_jRPG_Character_Battle_Base_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UserConstructionScript, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_UserConstructionScript::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UserConstructionScript, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_UserConstructionScript::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UserConstructionScript, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_UserConstructionScript::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'BP_jRPG_Character_Battle_Base_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'BP_jRPG_Character_Battle_Base_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UserConstructionScript, CallFunc_IsInPlayMode_ReturnValue) == 0x000098, "Member 'BP_jRPG_Character_Battle_Base_C_UserConstructionScript::CallFunc_IsInPlayMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UserConstructionScript, CallFunc_IsPackagedBuild_ReturnValue) == 0x000099, "Member 'BP_jRPG_Character_Battle_Base_C_UserConstructionScript::CallFunc_IsPackagedBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UserConstructionScript, CallFunc_IsValidClass_ReturnValue) == 0x00009A, "Member 'BP_jRPG_Character_Battle_Base_C_UserConstructionScript::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UserConstructionScript, K2Node_DynamicCast_AsBP_Weapon_Skin) == 0x0000A0, "Member 'BP_jRPG_Character_Battle_Base_C_UserConstructionScript::K2Node_DynamicCast_AsBP_Weapon_Skin' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'BP_jRPG_Character_Battle_Base_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UserConstructionScript, CallFunc_GetDisplayName_ReturnValue) == 0x0000B0, "Member 'BP_jRPG_Character_Battle_Base_C_UserConstructionScript::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UserConstructionScript, CallFunc_Map_Find_Value) == 0x0000C0, "Member 'BP_jRPG_Character_Battle_Base_C_UserConstructionScript::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UserConstructionScript, CallFunc_Map_Find_ReturnValue) == 0x0000C8, "Member 'BP_jRPG_Character_Battle_Base_C_UserConstructionScript::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UserConstructionScript, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000D0, "Member 'BP_jRPG_Character_Battle_Base_C_UserConstructionScript::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UserConstructionScript, CallFunc_Conv_NameToText_ReturnValue) == 0x0000E0, "Member 'BP_jRPG_Character_Battle_Base_C_UserConstructionScript::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UserConstructionScript, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000F0, "Member 'BP_jRPG_Character_Battle_Base_C_UserConstructionScript::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UserConstructionScript, K2Node_MakeStruct_FormatArgumentData_2) == 0x000138, "Member 'BP_jRPG_Character_Battle_Base_C_UserConstructionScript::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000180, "Member 'BP_jRPG_Character_Battle_Base_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UserConstructionScript, CallFunc_DoesSocketExist_ReturnValue) == 0x000190, "Member 'BP_jRPG_Character_Battle_Base_C_UserConstructionScript::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UserConstructionScript, CallFunc_Format_ReturnValue) == 0x000198, "Member 'BP_jRPG_Character_Battle_Base_C_UserConstructionScript::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_UserConstructionScript, K2Node_MakeMap_Map) == 0x0001A8, "Member 'BP_jRPG_Character_Battle_Base_C_UserConstructionScript::K2Node_MakeMap_Map' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.InpActEvt_IA_Battle_FreeAim_Shoot_K2Node_EnhancedInputActionEvent_1
// 0x0030 (0x0030 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_InpActEvt_IA_Battle_FreeAim_Shoot_K2Node_EnhancedInputActionEvent_1 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_InpActEvt_IA_Battle_FreeAim_Shoot_K2Node_EnhancedInputActionEvent_1) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_InpActEvt_IA_Battle_FreeAim_Shoot_K2Node_EnhancedInputActionEvent_1");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_InpActEvt_IA_Battle_FreeAim_Shoot_K2Node_EnhancedInputActionEvent_1) == 0x000030, "Wrong size on BP_jRPG_Character_Battle_Base_C_InpActEvt_IA_Battle_FreeAim_Shoot_K2Node_EnhancedInputActionEvent_1");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_InpActEvt_IA_Battle_FreeAim_Shoot_K2Node_EnhancedInputActionEvent_1, ActionValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_InpActEvt_IA_Battle_FreeAim_Shoot_K2Node_EnhancedInputActionEvent_1::ActionValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_InpActEvt_IA_Battle_FreeAim_Shoot_K2Node_EnhancedInputActionEvent_1, ElapsedTime) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_InpActEvt_IA_Battle_FreeAim_Shoot_K2Node_EnhancedInputActionEvent_1::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_InpActEvt_IA_Battle_FreeAim_Shoot_K2Node_EnhancedInputActionEvent_1, TriggeredTime) == 0x000024, "Member 'BP_jRPG_Character_Battle_Base_C_InpActEvt_IA_Battle_FreeAim_Shoot_K2Node_EnhancedInputActionEvent_1::TriggeredTime' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_InpActEvt_IA_Battle_FreeAim_Shoot_K2Node_EnhancedInputActionEvent_1, SourceAction) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_InpActEvt_IA_Battle_FreeAim_Shoot_K2Node_EnhancedInputActionEvent_1::SourceAction' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.InpActEvt_IA_Battle_FreeAim_Cancel_K2Node_EnhancedInputActionEvent_0
// 0x0030 (0x0030 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_InpActEvt_IA_Battle_FreeAim_Cancel_K2Node_EnhancedInputActionEvent_0 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_InpActEvt_IA_Battle_FreeAim_Cancel_K2Node_EnhancedInputActionEvent_0) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_InpActEvt_IA_Battle_FreeAim_Cancel_K2Node_EnhancedInputActionEvent_0");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_InpActEvt_IA_Battle_FreeAim_Cancel_K2Node_EnhancedInputActionEvent_0) == 0x000030, "Wrong size on BP_jRPG_Character_Battle_Base_C_InpActEvt_IA_Battle_FreeAim_Cancel_K2Node_EnhancedInputActionEvent_0");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_InpActEvt_IA_Battle_FreeAim_Cancel_K2Node_EnhancedInputActionEvent_0, ActionValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_InpActEvt_IA_Battle_FreeAim_Cancel_K2Node_EnhancedInputActionEvent_0::ActionValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_InpActEvt_IA_Battle_FreeAim_Cancel_K2Node_EnhancedInputActionEvent_0, ElapsedTime) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_InpActEvt_IA_Battle_FreeAim_Cancel_K2Node_EnhancedInputActionEvent_0::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_InpActEvt_IA_Battle_FreeAim_Cancel_K2Node_EnhancedInputActionEvent_0, TriggeredTime) == 0x000024, "Member 'BP_jRPG_Character_Battle_Base_C_InpActEvt_IA_Battle_FreeAim_Cancel_K2Node_EnhancedInputActionEvent_0::TriggeredTime' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_InpActEvt_IA_Battle_FreeAim_Cancel_K2Node_EnhancedInputActionEvent_0, SourceAction) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_InpActEvt_IA_Battle_FreeAim_Cancel_K2Node_EnhancedInputActionEvent_0::SourceAction' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnLoaded_F2DB9C784493F242341D828551987DA8
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnLoaded_F2DB9C784493F242341D828551987DA8 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnLoaded_F2DB9C784493F242341D828551987DA8) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnLoaded_F2DB9C784493F242341D828551987DA8");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnLoaded_F2DB9C784493F242341D828551987DA8) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnLoaded_F2DB9C784493F242341D828551987DA8");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnLoaded_F2DB9C784493F242341D828551987DA8, Loaded) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnLoaded_F2DB9C784493F242341D828551987DA8::Loaded' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnInitiativeReduced
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnInitiativeReduced final
{
public:
	double                                        ReductionAmount;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnInitiativeReduced) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnInitiativeReduced");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnInitiativeReduced) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnInitiativeReduced");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnInitiativeReduced, ReductionAmount) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnInitiativeReduced::ReductionAmount' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnPowerDebuff
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnPowerDebuff final
{
public:
	double                                        Debuff_Power;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnPowerDebuff) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnPowerDebuff");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnPowerDebuff) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnPowerDebuff");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnPowerDebuff, Debuff_Power) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnPowerDebuff::Debuff_Power' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.StartAttackInterceptionAnim
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_StartAttackInterceptionAnim final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       CharacterToProtect;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_StartAttackInterceptionAnim) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_StartAttackInterceptionAnim");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_StartAttackInterceptionAnim) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_StartAttackInterceptionAnim");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_StartAttackInterceptionAnim, CharacterToProtect) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_StartAttackInterceptionAnim::CharacterToProtect' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ResetInterceptionMovement
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ResetInterceptionMovement final
{
public:
	class USF_BlueprintLatentAction*              LatentAction;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ResetInterceptionMovement) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ResetInterceptionMovement");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ResetInterceptionMovement) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_ResetInterceptionMovement");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ResetInterceptionMovement, LatentAction) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ResetInterceptionMovement::LatentAction' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ReceiveTick");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ReceiveTick) == 0x000004, "Wrong size on BP_jRPG_Character_Battle_Base_C_ReceiveTick");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.Down_K2Node_InputAxisEvent_0
// 0x0004 (0x0004 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_Down_K2Node_InputAxisEvent_0 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_Down_K2Node_InputAxisEvent_0) == 0x000004, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_Down_K2Node_InputAxisEvent_0");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_Down_K2Node_InputAxisEvent_0) == 0x000004, "Wrong size on BP_jRPG_Character_Battle_Base_C_Down_K2Node_InputAxisEvent_0");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Down_K2Node_InputAxisEvent_0, AxisValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_Down_K2Node_InputAxisEvent_0::AxisValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.Right_K2Node_InputAxisEvent_1
// 0x0004 (0x0004 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_Right_K2Node_InputAxisEvent_1 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_Right_K2Node_InputAxisEvent_1) == 0x000004, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_Right_K2Node_InputAxisEvent_1");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_Right_K2Node_InputAxisEvent_1) == 0x000004, "Wrong size on BP_jRPG_Character_Battle_Base_C_Right_K2Node_InputAxisEvent_1");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Right_K2Node_InputAxisEvent_1, AxisValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_Right_K2Node_InputAxisEvent_1::AxisValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnBeginCursorOver_Trace
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnBeginCursorOver_Trace final
{
public:
	class AActor*                                 TouchedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnBeginCursorOver_Trace) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnBeginCursorOver_Trace");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnBeginCursorOver_Trace) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnBeginCursorOver_Trace");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnBeginCursorOver_Trace, TouchedActor) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnBeginCursorOver_Trace::TouchedActor' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnEndCursorOver_Trace
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnEndCursorOver_Trace final
{
public:
	class AActor*                                 TouchedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnEndCursorOver_Trace) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnEndCursorOver_Trace");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnEndCursorOver_Trace) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnEndCursorOver_Trace");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnEndCursorOver_Trace, TouchedActor) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnEndCursorOver_Trace::TouchedActor' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnUINavigationFocus
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnUINavigationFocus final
{
public:
	const class UBP_UINavigationFocusEvent_C*     FocusEventBP;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnUINavigationFocus) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnUINavigationFocus");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnUINavigationFocus) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnUINavigationFocus");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnUINavigationFocus, FocusEventBP) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnUINavigationFocus::FocusEventBP' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ExecuteAction
// 0x000C (0x000C - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ExecuteAction final
{
public:
	E_jRPG_ActionType                             ActionType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SecondaryActionName;                               // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ExecuteAction) == 0x000004, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ExecuteAction");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ExecuteAction) == 0x00000C, "Wrong size on BP_jRPG_Character_Battle_Base_C_ExecuteAction");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteAction, ActionType) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteAction::ActionType' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteAction, SecondaryActionName) == 0x000004, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteAction::SecondaryActionName' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ExecuteItemAction
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ExecuteItemAction final
{
public:
	class FName                                   ItemName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ExecuteItemAction) == 0x000004, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ExecuteItemAction");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ExecuteItemAction) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_ExecuteItemAction");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteItemAction, ItemName) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteItemAction::ItemName' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ExecuteMagicAction
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ExecuteMagicAction final
{
public:
	class FName                                   MagicName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ExecuteMagicAction) == 0x000004, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ExecuteMagicAction");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ExecuteMagicAction) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_ExecuteMagicAction");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteMagicAction, MagicName) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteMagicAction::MagicName' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ExecuteMoveAction
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ExecuteMoveAction final
{
public:
	class FName                                   MoveName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ExecuteMoveAction) == 0x000004, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ExecuteMoveAction");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ExecuteMoveAction) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_ExecuteMoveAction");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteMoveAction, MoveName) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteMoveAction::MoveName' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ExecuteSoloCounterAttack
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ExecuteSoloCounterAttack final
{
public:
	bool                                          IsGradientCounter;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USF_BlueprintLatentAction*              LatentAction;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ExecuteSoloCounterAttack) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ExecuteSoloCounterAttack");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ExecuteSoloCounterAttack) == 0x000010, "Wrong size on BP_jRPG_Character_Battle_Base_C_ExecuteSoloCounterAttack");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSoloCounterAttack, IsGradientCounter) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSoloCounterAttack::IsGradientCounter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteSoloCounterAttack, LatentAction) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteSoloCounterAttack::LatentAction' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ExecuteGradientCounterAttack
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ExecuteGradientCounterAttack final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       CounteredCharacter;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ExecuteGradientCounterAttack) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ExecuteGradientCounterAttack");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ExecuteGradientCounterAttack) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_ExecuteGradientCounterAttack");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteGradientCounterAttack, CounteredCharacter) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteGradientCounterAttack::CounteredCharacter' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.DisableGradientPPFromCounterAttack
// 0x0018 (0x0018 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_DisableGradientPPFromCounterAttack final
{
public:
	struct FVector                                GradientCenterLocation;                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_DisableGradientPPFromCounterAttack) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_DisableGradientPPFromCounterAttack");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_DisableGradientPPFromCounterAttack) == 0x000018, "Wrong size on BP_jRPG_Character_Battle_Base_C_DisableGradientPPFromCounterAttack");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DisableGradientPPFromCounterAttack, GradientCenterLocation) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_DisableGradientPPFromCounterAttack::GradientCenterLocation' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.PlayFreezeFrameInternal
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_PlayFreezeFrameInternal final
{
public:
	class USF_BlueprintLatentAction*              LatentAction;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_PlayFreezeFrameInternal) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_PlayFreezeFrameInternal");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_PlayFreezeFrameInternal) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_PlayFreezeFrameInternal");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PlayFreezeFrameInternal, LatentAction) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_PlayFreezeFrameInternal::LatentAction' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ChangeSize
// 0x0018 (0x0018 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ChangeSize final
{
public:
	double                                        ScaleMultiplier;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Duration;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CurveOverride;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ChangeSize) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ChangeSize");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ChangeSize) == 0x000018, "Wrong size on BP_jRPG_Character_Battle_Base_C_ChangeSize");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ChangeSize, ScaleMultiplier) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ChangeSize::ScaleMultiplier' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ChangeSize, Duration) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_ChangeSize::Duration' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ChangeSize, CurveOverride) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_ChangeSize::CurveOverride' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.LeadGroupCounter
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_LeadGroupCounter final
{
public:
	class USF_BlueprintLatentAction*              LatentAction;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_LeadGroupCounter) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_LeadGroupCounter");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_LeadGroupCounter) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_LeadGroupCounter");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_LeadGroupCounter, LatentAction) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_LeadGroupCounter::LatentAction' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnDeath
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnDeath final
{
public:
	bool                                          DeathByCounter;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnDeath) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnDeath");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnDeath) == 0x000001, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnDeath");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnDeath, DeathByCounter) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnDeath::DeathByCounter' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnHealed
// 0x0020 (0x0020 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnHealed final
{
public:
	double                                        HealAmount;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RestoredMP_;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_CharacterBattleStats_C*        SourceCharacter;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EHealReason                                   Reason;                                            // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnHealed) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnHealed");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnHealed) == 0x000020, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnHealed");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnHealed, HealAmount) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnHealed::HealAmount' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnHealed, RestoredMP_) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_OnHealed::RestoredMP_' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnHealed, SourceCharacter) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_OnHealed::SourceCharacter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnHealed, Reason) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_OnHealed::Reason' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnResurrected
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnResurrected final
{
public:
	double                                        HealAmount;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnResurrected) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnResurrected");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnResurrected) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnResurrected");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnResurrected, HealAmount) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnResurrected::HealAmount' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnDamageReceivedPublic
// 0x0018 (0x0018 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnDamageReceivedPublic final
{
public:
	class UBP_BattleDamages_C*                    BattleDamages;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIBattleDamageSource_C> DamageSourceCharacter;                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnDamageReceivedPublic) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnDamageReceivedPublic");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnDamageReceivedPublic) == 0x000018, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnDamageReceivedPublic");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnDamageReceivedPublic, BattleDamages) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnDamageReceivedPublic::BattleDamages' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnDamageReceivedPublic, DamageSourceCharacter) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_OnDamageReceivedPublic::DamageSourceCharacter' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnAPRecovered
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnAPRecovered final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFromTurnStart;                                   // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnAPRecovered) == 0x000004, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnAPRecovered");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnAPRecovered) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnAPRecovered");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnAPRecovered, Amount) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnAPRecovered::Amount' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnAPRecovered, IsFromTurnStart) == 0x000004, "Member 'BP_jRPG_Character_Battle_Base_C_OnAPRecovered::IsFromTurnStart' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnDamageReceived
// 0x0018 (0x0018 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnDamageReceived final
{
public:
	double                                        Damage;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Critical_;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Weakness_;                                         // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Resistant_;                                        // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttackType                                   Element;                                           // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageReason                                 Reason;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       DamageCharacterSource;                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnDamageReceived) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnDamageReceived");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnDamageReceived) == 0x000018, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnDamageReceived");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnDamageReceived, Damage) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnDamageReceived::Damage' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnDamageReceived, Critical_) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_OnDamageReceived::Critical_' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnDamageReceived, Weakness_) == 0x000009, "Member 'BP_jRPG_Character_Battle_Base_C_OnDamageReceived::Weakness_' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnDamageReceived, Resistant_) == 0x00000A, "Member 'BP_jRPG_Character_Battle_Base_C_OnDamageReceived::Resistant_' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnDamageReceived, Element) == 0x00000B, "Member 'BP_jRPG_Character_Battle_Base_C_OnDamageReceived::Element' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnDamageReceived, Reason) == 0x00000C, "Member 'BP_jRPG_Character_Battle_Base_C_OnDamageReceived::Reason' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnDamageReceived, DamageCharacterSource) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_OnDamageReceived::DamageCharacterSource' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnFreeAimHit
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnFreeAimHit final
{
public:
	EFreeAimBodyPartType                          BodyPart;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_FreeAimProjectile_Base_C*           Projectile;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnFreeAimHit) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnFreeAimHit");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnFreeAimHit) == 0x000010, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnFreeAimHit");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnFreeAimHit, BodyPart) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnFreeAimHit::BodyPart' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnFreeAimHit, Projectile) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_OnFreeAimHit::Projectile' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.BndEvt__BP_jRPG_Character_Battle_Base_BP_FreeAimShooterBattleComponent_K2Node_ComponentBoundEvent_2_OnFreeAimHit_Character_Regular__DelegateSignature
// 0x0110 (0x0110 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_BndEvt__BP_jRPG_Character_Battle_Base_BP_FreeAimShooterBattleComponent_K2Node_ComponentBoundEvent_2_OnFreeAimHit_Character_Regular__DelegateSignature final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EFreeAimBodyPartType                          BodyPart;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             HitResult;                                         // 0x0010(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UBP_FreeAimTargetPart_C*                TargetBodyPartBP;                                  // 0x0108(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_BndEvt__BP_jRPG_Character_Battle_Base_BP_FreeAimShooterBattleComponent_K2Node_ComponentBoundEvent_2_OnFreeAimHit_Character_Regular__DelegateSignature) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_BndEvt__BP_jRPG_Character_Battle_Base_BP_FreeAimShooterBattleComponent_K2Node_ComponentBoundEvent_2_OnFreeAimHit_Character_Regular__DelegateSignature");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_BndEvt__BP_jRPG_Character_Battle_Base_BP_FreeAimShooterBattleComponent_K2Node_ComponentBoundEvent_2_OnFreeAimHit_Character_Regular__DelegateSignature) == 0x000110, "Wrong size on BP_jRPG_Character_Battle_Base_C_BndEvt__BP_jRPG_Character_Battle_Base_BP_FreeAimShooterBattleComponent_K2Node_ComponentBoundEvent_2_OnFreeAimHit_Character_Regular__DelegateSignature");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_BndEvt__BP_jRPG_Character_Battle_Base_BP_FreeAimShooterBattleComponent_K2Node_ComponentBoundEvent_2_OnFreeAimHit_Character_Regular__DelegateSignature, Character) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_BndEvt__BP_jRPG_Character_Battle_Base_BP_FreeAimShooterBattleComponent_K2Node_ComponentBoundEvent_2_OnFreeAimHit_Character_Regular__DelegateSignature::Character' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_BndEvt__BP_jRPG_Character_Battle_Base_BP_FreeAimShooterBattleComponent_K2Node_ComponentBoundEvent_2_OnFreeAimHit_Character_Regular__DelegateSignature, BodyPart) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_BndEvt__BP_jRPG_Character_Battle_Base_BP_FreeAimShooterBattleComponent_K2Node_ComponentBoundEvent_2_OnFreeAimHit_Character_Regular__DelegateSignature::BodyPart' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_BndEvt__BP_jRPG_Character_Battle_Base_BP_FreeAimShooterBattleComponent_K2Node_ComponentBoundEvent_2_OnFreeAimHit_Character_Regular__DelegateSignature, HitResult) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_BndEvt__BP_jRPG_Character_Battle_Base_BP_FreeAimShooterBattleComponent_K2Node_ComponentBoundEvent_2_OnFreeAimHit_Character_Regular__DelegateSignature::HitResult' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_BndEvt__BP_jRPG_Character_Battle_Base_BP_FreeAimShooterBattleComponent_K2Node_ComponentBoundEvent_2_OnFreeAimHit_Character_Regular__DelegateSignature, TargetBodyPartBP) == 0x000108, "Member 'BP_jRPG_Character_Battle_Base_C_BndEvt__BP_jRPG_Character_Battle_Base_BP_FreeAimShooterBattleComponent_K2Node_ComponentBoundEvent_2_OnFreeAimHit_Character_Regular__DelegateSignature::TargetBodyPartBP' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.HitFeedback
// 0x0050 (0x0050 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_HitFeedback final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       OverrideTarget;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          HasHit;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CameraShake;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        ShakeScale;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         VFX1;                                              // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         VFX2;                                              // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class USoundBase*                       Sound;                                             // 0x0030(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                SoundWwise;                                        // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        VolumeMultiplier;                                  // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_FreezeFrame                                 FreezeFrame;                                       // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SpawnIfCharacterIsDead;                            // 0x0049(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_HitFeedback) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_HitFeedback");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_HitFeedback) == 0x000050, "Wrong size on BP_jRPG_Character_Battle_Base_C_HitFeedback");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedback, OverrideTarget) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedback::OverrideTarget' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedback, HasHit) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedback::HasHit' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedback, CameraShake) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedback::CameraShake' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedback, ShakeScale) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedback::ShakeScale' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedback, VFX1) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedback::VFX1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedback, VFX2) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedback::VFX2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedback, Sound) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedback::Sound' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedback, SoundWwise) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedback::SoundWwise' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedback, VolumeMultiplier) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedback::VolumeMultiplier' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedback, FreezeFrame) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedback::FreezeFrame' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedback, SpawnIfCharacterIsDead) == 0x000049, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedback::SpawnIfCharacterIsDead' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.DEBUG_CVarChange_ShowBattleDebug
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_DEBUG_CVarChange_ShowBattleDebug final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_DEBUG_CVarChange_ShowBattleDebug) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_DEBUG_CVarChange_ShowBattleDebug");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_DEBUG_CVarChange_ShowBattleDebug) == 0x000001, "Wrong size on BP_jRPG_Character_Battle_Base_C_DEBUG_CVarChange_ShowBattleDebug");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DEBUG_CVarChange_ShowBattleDebug, NewValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_DEBUG_CVarChange_ShowBattleDebug::NewValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.DEBUG_CVarChange_ShowFreeAimBodyParts
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_DEBUG_CVarChange_ShowFreeAimBodyParts final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_DEBUG_CVarChange_ShowFreeAimBodyParts) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_DEBUG_CVarChange_ShowFreeAimBodyParts");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_DEBUG_CVarChange_ShowFreeAimBodyParts) == 0x000001, "Wrong size on BP_jRPG_Character_Battle_Base_C_DEBUG_CVarChange_ShowFreeAimBodyParts");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DEBUG_CVarChange_ShowFreeAimBodyParts, NewValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_DEBUG_CVarChange_ShowFreeAimBodyParts::NewValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ResetDefensiveLockAfterTime
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ResetDefensiveLockAfterTime final
{
public:
	double                                        Duration;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ResetDefensiveLockAfterTime) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ResetDefensiveLockAfterTime");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ResetDefensiveLockAfterTime) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_ResetDefensiveLockAfterTime");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ResetDefensiveLockAfterTime, Duration) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ResetDefensiveLockAfterTime::Duration' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ReceiveEndPlay");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_jRPG_Character_Battle_Base_C_ReceiveEndPlay");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.MoveToInitialLocation2
// 0x0018 (0x0018 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_MoveToInitialLocation2 final
{
public:
	class USF_BlueprintLatentAction*              CompletedLatentAction;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 DebugReason;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_MoveToInitialLocation2) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_MoveToInitialLocation2");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_MoveToInitialLocation2) == 0x000018, "Wrong size on BP_jRPG_Character_Battle_Base_C_MoveToInitialLocation2");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_MoveToInitialLocation2, CompletedLatentAction) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_MoveToInitialLocation2::CompletedLatentAction' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_MoveToInitialLocation2, DebugReason) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_MoveToInitialLocation2::DebugReason' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.TEMP_TriggerCounterAttack
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_TEMP_TriggerCounterAttack final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        TargetCharacterStats;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_TEMP_TriggerCounterAttack) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_TEMP_TriggerCounterAttack");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_TEMP_TriggerCounterAttack) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_TEMP_TriggerCounterAttack");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_TEMP_TriggerCounterAttack, TargetCharacterStats) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_TEMP_TriggerCounterAttack::TargetCharacterStats' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.FeedbackPermeateChange
// 0x0002 (0x0002 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_FeedbackPermeateChange final
{
public:
	EAttackType                                   NewPermeateElement;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPermeateIntensity                            NewPermeateIntensity;                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_FeedbackPermeateChange) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_FeedbackPermeateChange");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_FeedbackPermeateChange) == 0x000002, "Wrong size on BP_jRPG_Character_Battle_Base_C_FeedbackPermeateChange");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_FeedbackPermeateChange, NewPermeateElement) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_FeedbackPermeateChange::NewPermeateElement' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_FeedbackPermeateChange, NewPermeateIntensity) == 0x000001, "Member 'BP_jRPG_Character_Battle_Base_C_FeedbackPermeateChange::NewPermeateIntensity' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.DashBack
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_DashBack final
{
public:
	class UAnimMontage*                           DashBackAnimMontage;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintLatentAction*              CompletedLatentAction;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_DashBack) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_DashBack");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_DashBack) == 0x000010, "Wrong size on BP_jRPG_Character_Battle_Base_C_DashBack");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DashBack, DashBackAnimMontage) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_DashBack::DashBackAnimMontage' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DashBack, CompletedLatentAction) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_DashBack::CompletedLatentAction' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.BeginJumpCounterAttackWindow
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_BeginJumpCounterAttackWindow final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       Attacker;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_BeginJumpCounterAttackWindow) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_BeginJumpCounterAttackWindow");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_BeginJumpCounterAttackWindow) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_BeginJumpCounterAttackWindow");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_BeginJumpCounterAttackWindow, Attacker) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_BeginJumpCounterAttackWindow::Attacker' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.PerformBattleStartEvent
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_PerformBattleStartEvent final
{
public:
	class UBP_DependencyRefCounter_C*             RefCounter;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_PerformBattleStartEvent) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_PerformBattleStartEvent");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_PerformBattleStartEvent) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_PerformBattleStartEvent");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PerformBattleStartEvent, RefCounter) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_PerformBattleStartEvent::RefCounter' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.EndPPGradientAttackCounter
// 0x0018 (0x0018 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_EndPPGradientAttackCounter final
{
public:
	struct FVector                                GradientCenterLocation;                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_EndPPGradientAttackCounter) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_EndPPGradientAttackCounter");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_EndPPGradientAttackCounter) == 0x000018, "Wrong size on BP_jRPG_Character_Battle_Base_C_EndPPGradientAttackCounter");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_EndPPGradientAttackCounter, GradientCenterLocation) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_EndPPGradientAttackCounter::GradientCenterLocation' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.Init
// 0x0050 (0x0050 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_Init final
{
public:
	struct FS_CharacterCustomization              CharacterCustomization;                            // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_Init) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_Init");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_Init) == 0x000050, "Wrong size on BP_jRPG_Character_Battle_Base_C_Init");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Init, CharacterCustomization) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_Init::CharacterCustomization' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.HitFeedbackOnSelf
// 0x0048 (0x0048 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_HitFeedbackOnSelf final
{
public:
	bool                                          HasHit;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CameraShake;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        ShakeScale;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         VFX1;                                              // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         VFX2;                                              // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class USoundBase*                       Sound;                                             // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                SoundWwise;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        VolumeMultiplier;                                  // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_FreezeFrame                                 FreezeFrame;                                       // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SpawnIfCharacterIsDead;                            // 0x0041(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_HitFeedbackOnSelf) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_HitFeedbackOnSelf");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_HitFeedbackOnSelf) == 0x000048, "Wrong size on BP_jRPG_Character_Battle_Base_C_HitFeedbackOnSelf");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackOnSelf, HasHit) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackOnSelf::HasHit' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackOnSelf, CameraShake) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackOnSelf::CameraShake' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackOnSelf, ShakeScale) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackOnSelf::ShakeScale' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackOnSelf, VFX1) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackOnSelf::VFX1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackOnSelf, VFX2) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackOnSelf::VFX2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackOnSelf, Sound) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackOnSelf::Sound' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackOnSelf, SoundWwise) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackOnSelf::SoundWwise' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackOnSelf, VolumeMultiplier) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackOnSelf::VolumeMultiplier' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackOnSelf, FreezeFrame) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackOnSelf::FreezeFrame' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackOnSelf, SpawnIfCharacterIsDead) == 0x000041, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackOnSelf::SpawnIfCharacterIsDead' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.HitFeedbackOnCurrentTarget
// 0x0050 (0x0050 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_HitFeedbackOnCurrentTarget final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       OverrideTarget;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          HasHit;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CameraShake;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        ShakeScale;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         VFX1;                                              // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         VFX2;                                              // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class USoundBase*                       Sound;                                             // 0x0030(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                SoundWwise;                                        // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        VolumeMultiplier;                                  // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_FreezeFrame                                 FreezeFrame;                                       // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SpawnIfCharacterIsDead;                            // 0x0049(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_HitFeedbackOnCurrentTarget) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_HitFeedbackOnCurrentTarget");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_HitFeedbackOnCurrentTarget) == 0x000050, "Wrong size on BP_jRPG_Character_Battle_Base_C_HitFeedbackOnCurrentTarget");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackOnCurrentTarget, OverrideTarget) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackOnCurrentTarget::OverrideTarget' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackOnCurrentTarget, HasHit) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackOnCurrentTarget::HasHit' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackOnCurrentTarget, CameraShake) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackOnCurrentTarget::CameraShake' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackOnCurrentTarget, ShakeScale) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackOnCurrentTarget::ShakeScale' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackOnCurrentTarget, VFX1) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackOnCurrentTarget::VFX1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackOnCurrentTarget, VFX2) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackOnCurrentTarget::VFX2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackOnCurrentTarget, Sound) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackOnCurrentTarget::Sound' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackOnCurrentTarget, SoundWwise) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackOnCurrentTarget::SoundWwise' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackOnCurrentTarget, VolumeMultiplier) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackOnCurrentTarget::VolumeMultiplier' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackOnCurrentTarget, FreezeFrame) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackOnCurrentTarget::FreezeFrame' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackOnCurrentTarget, SpawnIfCharacterIsDead) == 0x000049, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackOnCurrentTarget::SpawnIfCharacterIsDead' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.HitFeedbackInternal
// 0x0050 (0x0050 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_HitFeedbackInternal final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       OverrideTarget;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          HasHit;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CameraShake;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        ShakeScale;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         VFX1;                                              // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         VFX2;                                              // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class USoundBase*                       Sound;                                             // 0x0030(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                SoundWwise;                                        // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        VolumeMultiplier;                                  // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_FreezeFrame                                 FreezeFrame;                                       // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SpawnIfCharacterIsDead;                            // 0x0049(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_HitFeedbackInternal) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_HitFeedbackInternal");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_HitFeedbackInternal) == 0x000050, "Wrong size on BP_jRPG_Character_Battle_Base_C_HitFeedbackInternal");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackInternal, OverrideTarget) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackInternal::OverrideTarget' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackInternal, HasHit) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackInternal::HasHit' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackInternal, CameraShake) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackInternal::CameraShake' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackInternal, ShakeScale) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackInternal::ShakeScale' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackInternal, VFX1) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackInternal::VFX1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackInternal, VFX2) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackInternal::VFX2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackInternal, Sound) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackInternal::Sound' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackInternal, SoundWwise) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackInternal::SoundWwise' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackInternal, VolumeMultiplier) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackInternal::VolumeMultiplier' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackInternal, FreezeFrame) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackInternal::FreezeFrame' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_HitFeedbackInternal, SpawnIfCharacterIsDead) == 0x000049, "Member 'BP_jRPG_Character_Battle_Base_C_HitFeedbackInternal::SpawnIfCharacterIsDead' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.SetNiagaraUIEnabled
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_SetNiagaraUIEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_SetNiagaraUIEnabled) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_SetNiagaraUIEnabled");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_SetNiagaraUIEnabled) == 0x000001, "Wrong size on BP_jRPG_Character_Battle_Base_C_SetNiagaraUIEnabled");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_SetNiagaraUIEnabled, Enabled) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_SetNiagaraUIEnabled::Enabled' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.DEBUG_OnCvarChanged_HideUI
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_DEBUG_OnCvarChanged_HideUI final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_DEBUG_OnCvarChanged_HideUI) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_DEBUG_OnCvarChanged_HideUI");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_DEBUG_OnCvarChanged_HideUI) == 0x000001, "Wrong size on BP_jRPG_Character_Battle_Base_C_DEBUG_OnCvarChanged_HideUI");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_DEBUG_OnCvarChanged_HideUI, NewValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_DEBUG_OnCvarChanged_HideUI::NewValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnCharacterTurnEnd
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnCharacterTurnEnd final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnCharacterTurnEnd) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnCharacterTurnEnd");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnCharacterTurnEnd) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnCharacterTurnEnd");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnCharacterTurnEnd, Character) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnCharacterTurnEnd::Character' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.PlayFinisherAtTurnEnd
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_PlayFinisherAtTurnEnd final
{
public:
	class UObject*                                CharacterStats;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_PlayFinisherAtTurnEnd) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_PlayFinisherAtTurnEnd");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_PlayFinisherAtTurnEnd) == 0x000008, "Wrong size on BP_jRPG_Character_Battle_Base_C_PlayFinisherAtTurnEnd");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_PlayFinisherAtTurnEnd, CharacterStats) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_PlayFinisherAtTurnEnd::CharacterStats' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.Action Effect_Finisher
// 0x0004 (0x0004 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_Action_Effect_Finisher final
{
public:
	int32                                         ActionEffectIndex;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_Action_Effect_Finisher) == 0x000004, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_Action_Effect_Finisher");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_Action_Effect_Finisher) == 0x000004, "Wrong size on BP_jRPG_Character_Battle_Base_C_Action_Effect_Finisher");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_Action_Effect_Finisher, ActionEffectIndex) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_Action_Effect_Finisher::ActionEffectIndex' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.FreeAimEndTurnInternal
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_FreeAimEndTurnInternal final
{
public:
	EFreeAimType                                  FreeAimType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_FreeAimEndTurnInternal) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_FreeAimEndTurnInternal");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_FreeAimEndTurnInternal) == 0x000001, "Wrong size on BP_jRPG_Character_Battle_Base_C_FreeAimEndTurnInternal");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_FreeAimEndTurnInternal, FreeAimType) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_FreeAimEndTurnInternal::FreeAimType' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.OnFreeAimEnded
// 0x0018 (0x0018 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_OnFreeAimEnded final
{
public:
	TArray<class ABP_jRPG_Character_Battle_Base_C*> AllHitCharacters;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EFreeAimType                                  FreeAimType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_OnFreeAimEnded) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_OnFreeAimEnded");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_OnFreeAimEnded) == 0x000018, "Wrong size on BP_jRPG_Character_Battle_Base_C_OnFreeAimEnded");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnFreeAimEnded, AllHitCharacters) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_OnFreeAimEnded::AllHitCharacters' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_OnFreeAimEnded, FreeAimType) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_OnFreeAimEnded::FreeAimType' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.ExecuteUbergraph_BP_jRPG_Character_Battle_Base
// 0x3270 (0x3270 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USF_BlueprintLatentAction*              CallFunc_StartWaitAsyncAction_NewLatentAction;     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintAsyncAction*               CallFunc_StartWaitAsyncAction_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TArray<class ABP_jRPG_Character_Battle_Base_C*>& AllHitCharacters, EFreeAimType FreeAimType)> K2Node_CreateDelegate_OutputDelegate_2; // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x004C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0060(0x0010)()
	bool                                          CallFunc_MakeLiteralBool_ReturnValue;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0078(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0088(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_DoesRotationMatch_Result;                 // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E8(0x0010)()
	class USoundBase*                             Temp_object_Variable;                              // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_1;                            // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_2;                            // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_3;                            // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x0118(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0128(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue_1;            // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0178(0x0010)(ReferenceParm)
	class USoundBase*                             Temp_object_Variable_4;                            // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0190(0x0010)()
	EFreeAimBodyPartType                          Temp_byte_Variable;                                // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A2[0x6];                                      // 0x01A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USF_BlueprintLatentAction*              CallFunc_StartLatentAction_AsyncAction;            // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesRotationMatch_Result_1;               // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UObject*                          Temp_object_Variable_5;                            // 0x01B8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_6;                            // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence;               // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetMiddleEnemy_Output;                    // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_wildcard_Variable;                            // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 ActionEffectIndex)>      K2Node_CreateDelegate_OutputDelegate_4;            // 0x0238(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_2;          // 0x0248(0x0010)()
	TDelegate<void(class UObject* CharacterStats)> K2Node_CreateDelegate_OutputDelegate_5;           // 0x0258(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0268(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x02B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x02C0(0x0010)()
	bool                                          CallFunc_DoesRotationMatch_Result_2;               // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_1;                         // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                   Temp_wildcard_Variable_1;                          // 0x02F8(0x0010)(ReferenceParm)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool NewValue)>                K2Node_CreateDelegate_OutputDelegate_6;            // 0x0310(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0320(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_BalancingTableFloatEntry            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintLatentAction*              CallFunc_StartWaitAsyncAction_NewLatentAction_1;   // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintAsyncAction*               CallFunc_StartWaitAsyncAction_ReturnValue_1;       // 0x0360(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesLocationMatch_Result;                 // 0x036A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36B[0x1];                                      // 0x036B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x3];                                      // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_BalancingTableFloatEntry            CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BalancingTableFloatEntry            CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x03B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C2[0x2];                                      // 0x03C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintLatentAction*              CallFunc_StartWaitAsyncAction_NewLatentAction_2;   // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintAsyncAction*               CallFunc_StartWaitAsyncAction_ReturnValue_2;       // 0x03F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401[0x3];                                      // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedBuild_ReturnValue;              // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0410(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0420(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0430(0x0048)(HasGetValueTypeHash)
	struct FS_BalancingTableFloatEntry            CallFunc_GetDataTableRowFromName_OutRow_3;         // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0481(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_482[0x6];                                      // 0x0482(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USF_BlueprintLatentAction*              CallFunc_StartLatentAction_AsyncAction_1;          // 0x0488(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x0490(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesRotationMatch_Result_3;               // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1[0x7];                                      // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x04B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x04D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E9[0x7];                                      // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USF_BlueprintLatentAction*              CallFunc_StartLatentAction_AsyncAction_2;          // 0x04F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_wildcard_Variable_2;                          // 0x04F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FA[0x6];                                      // 0x04FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       Temp_wildcard_Variable_3;                          // 0x0500(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0508(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0521(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x0522(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_523[0x1];                                      // 0x0523(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0524(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_4;                       // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_wildcard_Variable_4;                          // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0548(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x054C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_554[0x4];                                      // 0x0554(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_5;                       // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue_1;  // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_561[0x7];                                      // 0x0561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_3;          // 0x0568(0x0010)()
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57C[0x4];                                      // 0x057C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0580(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x05C8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DC[0x4];                                      // 0x05DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x05E0(0x0010)()
	int32                                         Temp_int_Loop_Counter_Variable_7;                  // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x05F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_7;                   // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x05FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FD[0x3];                                      // 0x05FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_8;                  // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0604(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_8;                   // 0x0608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x060C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60D[0x3];                                      // 0x060D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_9;                  // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0614(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_9;                   // 0x0618(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_10;                  // 0x061C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_10;                 // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x0624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_11;                  // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62C[0x4];                                      // 0x062C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_ReductionAmount;                      // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Debuff_Power;                         // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_CustomEvent_CharacterToProtect;             // 0x0640(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x0648(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0660(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0678(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_679[0x7];                                      // 0x0679(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0680(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0698(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x069C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x06A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool NewValue)>                K2Node_CreateDelegate_OutputDelegate_9;            // 0x06A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B4[0x4];                                      // 0x06B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x06C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x06D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x06F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0708(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x0720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_721[0x7];                                      // 0x0721(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0728(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintLatentAction*              K2Node_CustomEvent_LatentAction_3;                 // 0x0740(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_749[0x7];                                      // 0x0749(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0750(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_759[0x3];                                      // 0x0759(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool NewValue)>                K2Node_CreateDelegate_OutputDelegate_10;           // 0x075C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x076C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EFreeAimBodyPartType BodyPart, class ABP_FreeAimProjectile_Base_C* Projectile)> K2Node_CreateDelegate_OutputDelegate_11; // 0x0770(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0780(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_781[0x7];                                      // 0x0781(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0788(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0880(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0890(0x0010)()
	bool                                          CallFunc_IsPlayerTeamCharacter_IsPlayerTeam;       // 0x08A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x08A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsImmunityByDefensiveMoveFinished_IsFinished; // 0x08A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A3[0x5];                                      // 0x08A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x08A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x08B0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x08F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x0908(0x0010)()
	TArray<E_jRPG_CharacterAttachmentSlot>        CallFunc_Map_Keys_Keys;                            // 0x0918(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0928(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x092C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92D[0x3];                                      // 0x092D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0930(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0938(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0948(0x0010)()
	bool                                          CallFunc_DoesRotationMatch_Result_4;               // 0x0958(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_959[0x7];                                      // 0x0959(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0960(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_5;                          // 0x09A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_5;                     // 0x09B8(0x0010)()
	bool                                          Temp_bool_MoveInProgress_Variable;                 // 0x09C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x09C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9CA[0x6];                                      // 0x09CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x09D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_2;             // 0x09D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x09E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0A00(0x0010)()
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0A10(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0A28(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0A40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0A44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0A48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_11;                 // 0x0A4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0A50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0A58(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0A70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A71[0x7];                                      // 0x0A71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0A78(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x0B70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B74[0x4];                                      // 0x0B74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_FreeAimTargetPart_C*                CallFunc_Array_Get_Item_2;                         // 0x0B78(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0B80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0B84(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0B85(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0B86(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B87[0x1];                                      // 0x0B87(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_JRPG_HPHealing_C*                  CallFunc_Create_ReturnValue;                       // 0x0B88(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_MultiGate_FirstRun;                         // 0x0B90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_MultiGate_ScratchBool;                      // 0x0B91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B92[0x2];                                      // 0x0B92(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_MultiGate_ScratchIndex;                     // 0x0B94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x0B98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0BA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0BB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0BC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0BC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0BD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0BD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0BE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegSin_ReturnValue;                       // 0x0BE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegSin_ReturnValue_1;                     // 0x0BF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0BF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0C00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0C08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0C0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0C10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C14[0x4];                                      // 0x0C14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0C18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0C20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0C28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0C30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0C38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0C40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0C48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0C50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x0C58(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0C70(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0C88(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue_1;        // 0x0D80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0D81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D82[0x6];                                      // 0x0D82(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_3;                         // 0x0D88(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0D90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0D94(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0D95(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D96[0x2];                                      // 0x0D96(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_6;        // 0x0D98(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0DB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0DB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DB2[0x6];                                      // 0x0DB2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_Select_Default;                             // 0x0DB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0DC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC1[0x7];                                      // 0x0DC1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_7;        // 0x0DC8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0DE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesRotationMatch_Result_5;               // 0x0DE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE2[0x6];                                      // 0x0DE2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        K2Node_Select_Default_1;                           // 0x0DE8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_1;                 // 0x0DF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DF4[0x4];                                      // 0x0DF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0DF8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x0E10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E11[0x7];                                      // 0x0E11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_1;         // 0x0E18(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x0E30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x0E34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x0E38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E3C[0x4];                                      // 0x0E3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0E40(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_4;                // 0x0E50(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_4;          // 0x0E68(0x0010)()
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0E78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0E90(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0ED8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x0EE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE4[0x4];                                      // 0x0EE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x0EE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_2;      // 0x0EF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EF1[0x7];                                      // 0x0EF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0EF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x0F00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0F08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0F09(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F0A[0x6];                                      // 0x0F0A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_StartSequence_SequenceDuration;           // 0x0F10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_TouchedActor_1;                 // 0x0F18(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_TouchedActor;                   // 0x0F20(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UBP_UINavigationFocusEvent_C*     K2Node_Event_FocusEventBP;                         // 0x0F28(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0F30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0F31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F32[0x6];                                      // 0x0F32(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetTargetingManager_ReturnValue;          // 0x0F38(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_GameDirectorComponent_C*            CallFunc_Get_Game_Director_Component_ReturnValue;  // 0x0F40(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0F48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F49[0x7];                                      // 0x0F49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetTargetingManager_ReturnValue_1;        // 0x0F50(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x0F58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0F59(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0F5A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5B[0x5];                                      // 0x0F5B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_StartSequence_SequenceDuration_1;         // 0x0F60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0F68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F6C[0x4];                                      // 0x0F6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0F70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSpendAP_ReturnValue;                   // 0x0F78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasUnlimitedShots_ReturnValue;            // 0x0F79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x0F7A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F7B[0x5];                                      // 0x0F7B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0F80(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0F88(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0F98(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue_1;                  // 0x1090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_GameDirectorComponent_C*            CallFunc_Get_Game_Director_Component_ReturnValue_1; // 0x1098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x10A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x10A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A2[0x6];                                     // 0x10A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_StartSequence_SequenceDuration_2;         // 0x10A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x10B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_12;     // 0x10B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_AudioBattleCharacterManager_C> K2Node_DynamicCast_AsBPI_Audio_Battle_Character_Manager; // 0x10C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x10D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D1[0x7];                                     // 0x10D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_8;        // 0x10D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimMontage_ReturnValue;              // 0x10F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_wildcard_Variable_5;                          // 0x10F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10F5[0x3];                                     // 0x10F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BalancingTableFloatEntry            CallFunc_GetDataTableRowFromName_OutRow_4;         // 0x10F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_BalancingTableFloatEntry            CallFunc_GetDataTableRowFromName_OutRow_5;         // 0x1100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x1108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x1110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBattleEnd_BattleHasEnded;            // 0x1118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1119[0x7];                                     // 0x1119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x1120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBattleSpotIndexLeftToRight__WhenFacingCharacters__ReturnValue; // 0x1128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112C[0x4];                                     // 0x112C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Battle_CharacterOverheadState_Base_C* CallFunc_GetOverheadStateWidget_WBPOverheadState; // 0x1130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UWBP_Battle_CharacterOverheadState_Base_C* CallFunc_GetOverheadStateWidget_WBPOverheadState_1; // 0x1138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x1140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x1141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1142[0x6];                                     // 0x1142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BalancingTableFloatEntry            CallFunc_GetDataTableRowFromName_OutRow_6;         // 0x1148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Battle_CharacterOverheadState_Base_C* CallFunc_GetOverheadStateWidget_WBPOverheadState_2; // 0x1150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x1158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x1159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_115A[0x6];                                     // 0x115A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Battle_CharacterOverheadState_Base_C* CallFunc_GetOverheadStateWidget_WBPOverheadState_3; // 0x1160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x1168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x1170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1171[0x7];                                     // 0x1171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue_1;           // 0x1178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBattleEnding_ReturnValue;               // 0x1180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1181[0x7];                                     // 0x1181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UConfigurableGameUserSettings*          CallFunc_GetConfigurableGameUserSettings_GameUserSettings; // 0x1188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x1190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInvertCameraPitch_ReturnValue;         // 0x1191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1192[0x6];                                     // 0x1192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UConfigurableGameUserSettings*          CallFunc_GetConfigurableGameUserSettings_GameUserSettings_1; // 0x1198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInvertCameraYaw_ReturnValue;           // 0x11A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x11A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x11A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_ActionType                             K2Node_CustomEvent_ActionType;                     // 0x11A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_SecondaryActionName;            // 0x11A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11AC[0x4];                                     // 0x11AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x11B0(0x0010)()
	struct FS_jRPG_Item_StaticData                CallFunc_GetDataTableRowFromName_OutRow_7;         // 0x11C0(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x12F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12F1[0x7];                                     // 0x12F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x12F8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_6;                          // 0x1340(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_6;                     // 0x1350(0x0010)()
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x1360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1361[0x7];                                     // 0x1361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DataAsset_Item_Consumable_C*        K2Node_DynamicCast_AsBP_Data_Asset_Item_Consumable; // 0x1368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x1370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1371[0x7];                                     // 0x1371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    CallFunc_Conv_SoftClassReferenceToClass_ReturnValue; // 0x1378(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x1380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1381[0x7];                                     // 0x1381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Battle_Skill_Script;  // 0x1388(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x1390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x1391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1392[0x2];                                     // 0x1392(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_ItemName;                       // 0x1394(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139C[0x4];                                     // 0x139C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetItemDisplayName_ItemDisplayName;       // 0x13A0(0x0010)()
	class FName                                   K2Node_CustomEvent_MagicName;                      // 0x13B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_9;            // 0x13B8(0x0048)(HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_MoveName;                       // 0x1400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECounterType                                  Temp_byte_Variable_1;                              // 0x1408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1409[0x7];                                     // 0x1409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EBattleTurnState>                      K2Node_MakeArray_Array_7;                          // 0x1410(0x0010)(ReferenceParm)
	bool                                          K2Node_CustomEvent_IsGradientCounter;              // 0x1420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1421[0x7];                                     // 0x1421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USF_BlueprintLatentAction*              K2Node_CustomEvent_LatentAction_2;                 // 0x1428(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x1430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1431[0x7];                                     // 0x1431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_CustomEvent_CounteredCharacter;             // 0x1438(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> K2Node_MakeArray_Array_8;                        // 0x1440(0x0010)(ReferenceParm)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x1450(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_10;           // 0x14B0(0x0048)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x14F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_9;                          // 0x1500(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_7;                     // 0x1510(0x0010)()
	class ABP_EpicBattleSequenceActor_C*          CallFunc_FinishSpawningActor_ReturnValue;          // 0x1520(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x1528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsInitialized_Variable;                  // 0x1529(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_152A[0x6];                                     // 0x152A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_11;           // 0x1530(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_10;                         // 0x1578(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_8;                     // 0x1588(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_12;           // 0x1598(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_11;                         // 0x15E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_9;                     // 0x15F0(0x0010)()
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x1600(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_2;                           // 0x1660(0x0010)()
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x1670(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_EpicBattleSequenceActor_C*          CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x1678(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         CallFunc_Array_Random_OutItem;                     // 0x1680(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x1688(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_168C[0x4];                                     // 0x168C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BalancingTableFloatEntry            CallFunc_GetDataTableRowFromName_OutRow_8;         // 0x1690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_13;           // 0x1698(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_12;                         // 0x16E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_10;                    // 0x16F0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_14;           // 0x1700(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_13;                         // 0x1748(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_11;                    // 0x1758(0x0010)()
	bool                                          Temp_bool_Has_Been_Initd_Variable_4;               // 0x1768(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_On_Action_Finished_HasMoreActions;        // 0x1769(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_176A[0x6];                                     // 0x176A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         CallFunc_Array_Random_OutItem_1;                   // 0x1770(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex_1;                  // 0x1778(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_177C[0x4];                                     // 0x177C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_4;          // 0x1780(0x0010)()
	struct FTransform                             CallFunc_GetTransform_ReturnValue_2;               // 0x1790(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_15;           // 0x17F0(0x0048)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x1838(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_14;                         // 0x1840(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue_12;                    // 0x1850(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_EpicBattleSequenceActor_C*          CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x1860(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimMontage_ReturnValue_1;            // 0x1868(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x186C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_186D[0x3];                                     // 0x186D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_16;           // 0x1870(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_15;                         // 0x18B8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue_13;                    // 0x18C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_StartSequence_SequenceDuration_3;         // 0x18D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x18E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_DynamicCameraManager_C*        CallFunc_GetComponentByClass_ReturnValue;          // 0x18E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_6;           // 0x18F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x18F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18F9[0x7];                                     // 0x18F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_7;           // 0x1900(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x1908(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x1920(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x1938(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x1940(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x1948(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_PreviousValue_Variable;                  // 0x1950(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1951[0x7];                                     // 0x1951(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x1958(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_4;                     // 0x1970(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_23;                   // 0x1971(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1972[0x6];                                     // 0x1972(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_GradientCenterLocation_1;       // 0x1978(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintLatentAction*              K2Node_CustomEvent_LatentAction_1;                 // 0x1990(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsActive_Variable;                       // 0x1998(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1999[0x7];                                     // 0x1999(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         CallFunc_Array_Random_OutItem_2;                   // 0x19A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex_2;                  // 0x19A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19AC[0x4];                                     // 0x19AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_ScaleMultiplier;                // 0x19B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Duration_1;                     // 0x19B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            K2Node_CustomEvent_CurveOverride;                  // 0x19C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x19C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_3;                           // 0x19D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_Array_Random_OutItem_3;                   // 0x19D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex_3;                  // 0x19E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19E4[0x4];                                     // 0x19E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_5;          // 0x19E8(0x0010)()
	float                                         CallFunc_PlayAnimMontage_ReturnValue_2;            // 0x19F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19FC[0x4];                                     // 0x19FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_17;           // 0x1A00(0x0048)(HasGetValueTypeHash)
	struct FS_BalancingTableFloatEntry            CallFunc_GetDataTableRowFromName_OutRow_9;         // 0x1A48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_16;                         // 0x1A50(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_14;                    // 0x1A60(0x0010)()
	EAttackType                                   CallFunc_GetBaseDamageType_ReturnValue;            // 0x1A70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A71[0x7];                                     // 0x1A71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x1A78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_BalancingTableFloatEntry            CallFunc_GetDataTableRowFromName_OutRow_10;        // 0x1A90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_BalancingTableFloatEntry            CallFunc_GetDataTableRowFromName_OutRow_11;        // 0x1A98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_BalancingTableFloatEntry            CallFunc_GetDataTableRowFromName_OutRow_12;        // 0x1AA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue_2;            // 0x1AA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AA9[0x7];                                     // 0x1AA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_6;                       // 0x1AB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_3;        // 0x1AB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageReason                                 Temp_byte_Variable_2;                              // 0x1AD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AD1[0x7];                                     // 0x1AD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x1AD8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageReason                                 Temp_byte_Variable_3;                              // 0x1AF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageReason                                 Temp_byte_Variable_4;                              // 0x1AF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AF2[0x6];                                     // 0x1AF2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> K2Node_MakeArray_Array_17;                       // 0x1AF8(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x1B08(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x1B20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetRootLocation_Location;                 // 0x1B38(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRootLocation_Scale;                    // 0x1B50(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetRootLocation_Rotation;                 // 0x1B68(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x1B80(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x1B98(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintLatentAction*              K2Node_CustomEvent_LatentAction;                   // 0x1BA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EDamageReason                                 Temp_byte_Variable_5;                              // 0x1BA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECounterType                                  Temp_byte_Variable_6;                              // 0x1BA9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BAA[0x6];                                     // 0x1BAA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> K2Node_MakeArray_Array_18;                       // 0x1BB0(0x0010)(ReferenceParm)
	EDamageReason                                 K2Node_Select_Default_4;                           // 0x1BC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC1[0x7];                                     // 0x1BC1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x1BC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECounterType                                  Temp_byte_Variable_7;                              // 0x1BD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BD1[0x7];                                     // 0x1BD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_5;                           // 0x1BD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCounterDamageLevelMultiplier_ReturnValue; // 0x1BE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCounterDamageLevelMultiplier_ReturnValue_1; // 0x1BE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_13;     // 0x1BF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_14;     // 0x1BF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIBattleDamageSource_C> CallFunc_MakeDamageBuilder_DamageSource_CastInput; // 0x1C00(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleDamageBuilder_C*              CallFunc_MakeDamageBuilder_ReturnValue;            // 0x1C10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIBattleDamageSource_C> CallFunc_MakeDamageBuilder_DamageSource_CastInput_1; // 0x1C18(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleDamageBuilder_C*              CallFunc_MakeDamageBuilder_ReturnValue_1;          // 0x1C28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DealDamages_HasHit;                       // 0x1C30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C31[0x7];                                     // 0x1C31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleDamages_C*                    CallFunc_DealDamages_BattleDamages;                // 0x1C38(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DealDamages_HasHit_1;                     // 0x1C40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C41[0x7];                                     // 0x1C41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleDamages_C*                    CallFunc_DealDamages_BattleDamages_1;              // 0x1C48(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue_2;           // 0x1C50(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C58[0x8];                                     // 0x1C58(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x1C60(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetDummyMiddleCharacter_ReturnValue;      // 0x1CC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3; // 0x1CC8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_3;               // 0x1CD0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Battle_SkillScript_C*               CallFunc_FinishSpawningActor_ReturnValue_3;        // 0x1D30(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4; // 0x1D38(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_EpicBattleSequenceActor_C*          CallFunc_FinishSpawningActor_ReturnValue_4;        // 0x1D40(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         Temp_object_Variable_7;                            // 0x1D48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         Temp_object_Variable_8;                            // 0x1D50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue_2;  // 0x1D58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x1D59(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D5A[0x6];                                     // 0x1D5A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_InventoryManager_C*            CallFunc_GetInventoryManager_ReturnValue;          // 0x1D60(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_12;               // 0x1D68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x1D69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_5;               // 0x1D6A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECounterType                                  Temp_byte_Variable_8;                              // 0x1D6B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_12;           // 0x1D6C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D7C[0x4];                                     // 0x1D7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         K2Node_Select_Default_6;                           // 0x1D80(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_Select_Default_7;                           // 0x1D88(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_24;                   // 0x1D90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_DeathByCounter;                       // 0x1D91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D92[0x6];                                     // 0x1D92(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_HealAmount_1;                         // 0x1D98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_RestoredMP_;                          // 0x1DA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA1[0x7];                                     // 0x1DA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_CharacterBattleStats_C*        K2Node_Event_SourceCharacter;                      // 0x1DA8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EHealReason                                   K2Node_Event_Reason_1;                             // 0x1DB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DB1[0x7];                                     // 0x1DB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetCurrentMontage_ReturnValue;            // 0x1DB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x1DC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC1[0x7];                                     // 0x1DC1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_HealAmount;                           // 0x1DC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleDamages_C*                    K2Node_CustomEvent_BattleDamages;                  // 0x1DD0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIBattleDamageSource_C> K2Node_CustomEvent_DamageSourceCharacter;         // 0x1DD8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttackType                                   CallFunc_GetFinalBaseElement_AttackElement;        // 0x1DE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsResistant_IsResistant;               // 0x1DE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsWeakness_IsWeakness;                 // 0x1DEA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsCriticalHit_IsCritical;              // 0x1DEB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DEC[0x4];                                     // 0x1DEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_HUD_DamageFeedback_C*              CallFunc_SpawnDamagePopupFromDamages_DamageWidget; // 0x1DF0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_GetSourceCharacter_SourceCharacter;       // 0x1DF8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1; // 0x1E00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_1;         // 0x1E08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E09[0x7];                                     // 0x1E09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCommunication_C> K2Node_DynamicCast_AsBPI_Battle_Communication; // 0x1E10(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x1E20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamCharacterBase_IsPlayerTeam;   // 0x1E21(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E22[0x2];                                     // 0x1E22(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Amount;                               // 0x1E24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsFromTurnStart;                      // 0x1E28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E29[0x7];                                     // 0x1E29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x1E30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x1E38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E3C[0x4];                                     // 0x1E3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         K2Node_Select_Default_8;                           // 0x1E40(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_25;                   // 0x1E48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E49[0x7];                                     // 0x1E49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetCurrentMontage_ReturnValue_1;          // 0x1E50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimMontage_ReturnValue_3;            // 0x1E58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x1E5C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsActive_Variable_1;                     // 0x1E5D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_5;                     // 0x1E5E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E5F[0x1];                                     // 0x1E5F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x1E60(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_1;      // 0x1E78(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Battle_CharacterOverheadState_Base_C* CallFunc_GetOverheadStateWidget_WBPOverheadState_4; // 0x1E80(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_26;                   // 0x1E88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E89[0x7];                                     // 0x1E89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x1E90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x1E98(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_15;     // 0x1EA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_27;                   // 0x1EA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA9[0x7];                                     // 0x1EA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAudioParameterControllerInterface> CallFunc_SetFloatParameter_self_CastInput; // 0x1EB0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue_1;         // 0x1EC0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue_2;         // 0x1EC8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_28;                   // 0x1ED0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1ED1[0x7];                                     // 0x1ED1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_9;        // 0x1ED8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x1EF0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_2;      // 0x1F08(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                   K2Node_MakeArray_Array_19;                         // 0x1F10(0x0010)(ReferenceParm)
	bool                                          CallFunc_On_Action_Finished_HasMoreActions_1;      // 0x1F20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F21[0x7];                                     // 0x1F21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_4;                         // 0x1F28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x1F30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x1F34(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualsObjects_ReturnValue;                // 0x1F35(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F36[0x2];                                     // 0x1F36(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_5;                         // 0x1F38(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_13;               // 0x1F40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F41[0x7];                                     // 0x1F41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetMaxHP_MaxHP;                           // 0x1F48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x1F50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x1F54(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F55[0x3];                                     // 0x1F55(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x1F58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_3;             // 0x1F60(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_14;               // 0x1F70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F71[0x7];                                     // 0x1F71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_5;          // 0x1F78(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_18;           // 0x1F88(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_6;          // 0x1FD0(0x0010)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_20;                         // 0x1FE0(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_19;           // 0x1FF0(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_15;                    // 0x2038(0x0010)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_21;                         // 0x2048(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_16;                    // 0x2058(0x0010)()
	bool                                          CallFunc_IsValid_ReturnValue_29;                   // 0x2068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2069[0x7];                                     // 0x2069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Damage;                               // 0x2070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Critical_;                            // 0x2078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Weakness_;                            // 0x2079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Resistant_;                           // 0x207A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttackType                                   K2Node_Event_Element;                              // 0x207B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageReason                                 K2Node_Event_Reason;                               // 0x207C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_207D[0x3];                                     // 0x207D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_Event_DamageCharacterSource;                // 0x2080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_30;                   // 0x2088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x2089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x208A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_208B[0x5];                                     // 0x208B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_2;        // 0x2090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_6;               // 0x20A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue_2;        // 0x20A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFreeAimBodyPartType                          K2Node_CustomEvent_BodyPart;                       // 0x20AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20AB[0x5];                                     // 0x20AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_FreeAimProjectile_Base_C*           K2Node_CustomEvent_Projectile;                     // 0x20B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x20B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttackType                                   CallFunc_GetBaseDamageType_ReturnValue_1;          // 0x20B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20BA[0x6];                                     // 0x20BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_ComponentBoundEvent_Character;              // 0x20C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EFreeAimBodyPartType                          K2Node_ComponentBoundEvent_BodyPart;               // 0x20C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C9[0x7];                                     // 0x20C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_HitResult;              // 0x20D0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UBP_FreeAimTargetPart_C*                K2Node_ComponentBoundEvent_TargetBodyPartBP;       // 0x21C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_31;                   // 0x21D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x21D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21D2[0x6];                                     // 0x21D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default_9;                           // 0x21D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamCharacter_IsPlayerTeam_1;     // 0x21E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21E1[0x7];                                     // 0x21E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIBattleDamageSource_C> CallFunc_MakeDamageBuilder_DamageSource_CastInput_2; // 0x21E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleDamageBuilder_C*              CallFunc_MakeDamageBuilder_ReturnValue_2;          // 0x21F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_15;               // 0x2200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DealDamages_HasHit_2;                     // 0x2201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2202[0x6];                                     // 0x2202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleDamages_C*                    CallFunc_DealDamages_BattleDamages_2;              // 0x2208(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x2210(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_CustomEvent_OverrideTarget_2;               // 0x2308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_HasHit_3;                       // 0x2310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2311[0x7];                                     // 0x2311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_CameraShake_3;                  // 0x2318(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_ShakeScale_3;                   // 0x2320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_CustomEvent_VFX1_3;                         // 0x2328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_CustomEvent_VFX2_3;                         // 0x2330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class USoundBase*                       K2Node_CustomEvent_Sound_3;                        // 0x2338(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_SoundWwise_3;                   // 0x2340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_VolumeMultiplier_3;             // 0x2348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_FreezeFrame                                 K2Node_CustomEvent_FreezeFrame_3;                  // 0x2350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_SpawnIfCharacterIsDead_3;       // 0x2351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2352[0x6];                                     // 0x2352(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_2;                              // 0x2358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_6;                         // 0x2360(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x2368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x236C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsInitialized_Variable_1;                // 0x236D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_PreviousValue_Variable_1;                // 0x236E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_6;                     // 0x236F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewValue_2;                     // 0x2370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewValue_1;                     // 0x2371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_16;               // 0x2372(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2373[0x5];                                     // 0x2373(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Duration;                       // 0x2378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x2380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_6;          // 0x2388(0x0010)()
	struct FFSoundEvent                           K2Node_MakeStruct_FSoundEvent;                     // 0x2398(0x0008)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_20;           // 0x23A0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_22;                         // 0x23E8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_17;                    // 0x23F8(0x0010)()
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x2408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UABP_Battle_Global_C*                   K2Node_DynamicCast_AsABP_Battle_Global;            // 0x2410(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x2418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsDefending_Defending;                 // 0x2419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsActive_Variable_2;                     // 0x241A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241B[0x5];                                     // 0x241B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x2420(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UABP_Battle_Global_C*                   K2Node_DynamicCast_AsABP_Battle_Global_1;          // 0x2428(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x2430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2431[0x7];                                     // 0x2431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AudioBattleCharacterManager_C> K2Node_DynamicCast_AsBPI_Audio_Battle_Character_Manager_1; // 0x2438(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x2448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2449[0x7];                                     // 0x2449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_WeaponSkin_C*>               CallFunc_GetAllActorsOfClass_OutActors;            // 0x2450(0x0010)(ReferenceParm)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x2460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2461[0x7];                                     // 0x2461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WeaponSkin_C*                       CallFunc_Array_Get_Item_7;                         // 0x2468(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x2470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x2474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_32;                   // 0x2475(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2476[0x2];                                     // 0x2476(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_FreeAimTargetPart_C*>        CallFunc_GetFreeAimTargetPartsComponents_ReturnValue; // 0x2478(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_FreeAimTargetPart_C*                CallFunc_Array_Get_Item_8;                         // 0x2488(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x2490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x2494(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2495[0x3];                                     // 0x2495(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USF_BlueprintLatentAction*              K2Node_CustomEvent_CompletedLatentAction_1;        // 0x2498(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_DebugReason;                    // 0x24A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_33;                   // 0x24B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_wildcard_Variable_6;                          // 0x24B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x24B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24B3[0x5];                                     // 0x24B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_CharacterBattleStats_C*        K2Node_CustomEvent_TargetCharacterStats;           // 0x24B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_wildcard_Variable_7;                          // 0x24C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x24C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_wildcard_Variable_8;                          // 0x24C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x24C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C4[0x4];                                     // 0x24C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_10;                          // 0x24C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_16;     // 0x24D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_8;           // 0x24D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_PreviousValue_Variable_2;                // 0x24E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24E1[0x7];                                     // 0x24E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x24E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_1;          // 0x24F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_17;     // 0x24F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_18;     // 0x2500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x2508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_19;     // 0x2510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x2518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttackType                                   K2Node_CustomEvent_NewPermeateElement;             // 0x2520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPermeateIntensity                            K2Node_CustomEvent_NewPermeateIntensity;           // 0x2521(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2522[0x6];                                     // 0x2522(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_DashBackAnimMontage;            // 0x2528(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintLatentAction*              K2Node_CustomEvent_CompletedLatentAction;          // 0x2530(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_34;                   // 0x2538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_wildcard_Variable_9;                          // 0x2539(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x253A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_253B[0x5];                                     // 0x253B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_11;                          // 0x2540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_6;                              // 0x2548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_20;     // 0x2550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_9;           // 0x2558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_7;                              // 0x2560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampAngle_ReturnValue;                   // 0x2568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_4;               // 0x2570(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5; // 0x25D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PostProcessGradient_C*              CallFunc_FinishSpawningActor_ReturnValue_5;        // 0x25D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_35;                   // 0x25E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25E1[0x7];                                     // 0x25E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_CustomEvent_Attacker;                       // 0x25E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue_1;                // 0x25F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25F1[0x3];                                     // 0x25F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PlayAnimMontage_ReturnValue_4;            // 0x25F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_10;       // 0x25F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x2610(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x2628(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x2640(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_8;                              // 0x2658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x2660(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_3;      // 0x2678(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_DependencyRefCounter_C*             K2Node_CustomEvent_RefCounter;                     // 0x2680(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x2688(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_268C[0x4];                                     // 0x268C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_12;                          // 0x2690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x2698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetTargetedAllies_Valid;               // 0x2699(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269A[0x6];                                     // 0x269A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_TryGetTargetedAllies_TargetedHeroes;    // 0x26A0(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_9;                         // 0x26B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x26B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26BC[0x4];                                     // 0x26BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_2;      // 0x26C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x26D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26D9[0x7];                                     // 0x26D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x26E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_11;       // 0x26F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_GradientCenterLocation;         // 0x2710(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x2728(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x2740(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_6;           // 0x2750(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_4;      // 0x2768(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECharacterTeamSelector                        CallFunc_GetTeam_Team;                             // 0x2770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x2771(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_wildcard_Variable_10;                         // 0x2772(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_2;          // 0x2773(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2774[0x4];                                     // 0x2774(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_9;                              // 0x2778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_10;                             // 0x2780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_11;                             // 0x2788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x2790(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x2794(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2795[0x3];                                     // 0x2795(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_13;                          // 0x2798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampAngle_ReturnValue_1;                 // 0x27A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CharacterCustomization              K2Node_CustomEvent_CharacterCustomization;         // 0x27A8(0x0050)(HasGetValueTypeHash)
	bool                                          K2Node_MultiGate_1_FirstRun;                       // 0x27F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27F9[0x3];                                     // 0x27F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_MultiGate_1_Data;                           // 0x27FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasReceivedBattleStart_ReturnValue;       // 0x2800(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_17;               // 0x2801(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2802[0x6];                                     // 0x2802(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_12;                             // 0x2808(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_13;                             // 0x2810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_2;          // 0x2818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_3;          // 0x2820(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_12;       // 0x2828(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_2;         // 0x2840(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_36;                   // 0x2858(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2859[0x7];                                     // 0x2859(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x2860(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x2868(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetWeaponR_VelocityAndSpeed_Velocity;     // 0x2870(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWeaponR_VelocityAndSpeed_Speed;        // 0x2888(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetWeaponL_VelocityAndSpeed_Velocity;     // 0x2890(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWeaponL_VelocityAndSpeed_Speed;        // 0x28A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x28B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x28B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28B2[0x6];                                     // 0x28B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputAction*                           Temp_object_Variable_9;                            // 0x28B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue;       // 0x28C0(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime;       // 0x28E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime;     // 0x28E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction;      // 0x28E8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_13_0;                           // 0x28F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_12_0;                           // 0x28F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue;  // 0x2900(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2901[0x7];                                     // 0x2901(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue_3;           // 0x2908(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EAttackType                                   CallFunc_GetBaseDamageType_ReturnValue_2;          // 0x2910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2911[0x7];                                     // 0x2911(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue_4;           // 0x2918(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_HasHit_2;                       // 0x2920(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2921[0x7];                                     // 0x2921(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_CameraShake_2;                  // 0x2928(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_ShakeScale_2;                   // 0x2930(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_CustomEvent_VFX1_2;                         // 0x2938(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_CustomEvent_VFX2_2;                         // 0x2940(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class USoundBase*                       K2Node_CustomEvent_Sound_2;                        // 0x2948(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_SoundWwise_2;                   // 0x2950(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_VolumeMultiplier_2;             // 0x2958(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_FreezeFrame                                 K2Node_CustomEvent_FreezeFrame_2;                  // 0x2960(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_SpawnIfCharacterIsDead_2;       // 0x2961(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2962[0x6];                                     // 0x2962(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_CustomEvent_OverrideTarget_1;               // 0x2968(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_HasHit_1;                       // 0x2970(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2971[0x7];                                     // 0x2971(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_CameraShake_1;                  // 0x2978(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_ShakeScale_1;                   // 0x2980(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_CustomEvent_VFX1_1;                         // 0x2988(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_CustomEvent_VFX2_1;                         // 0x2990(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class USoundBase*                       K2Node_CustomEvent_Sound_1;                        // 0x2998(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_SoundWwise_1;                   // 0x29A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_VolumeMultiplier_1;             // 0x29A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_FreezeFrame                                 K2Node_CustomEvent_FreezeFrame_1;                  // 0x29B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_SpawnIfCharacterIsDead_1;       // 0x29B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29B2[0x6];                                     // 0x29B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_CustomEvent_OverrideTarget;                 // 0x29B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_HasHit;                         // 0x29C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C1[0x7];                                     // 0x29C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_CameraShake;                    // 0x29C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_ShakeScale;                     // 0x29D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_CustomEvent_VFX1;                           // 0x29D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_CustomEvent_VFX2;                           // 0x29E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class USoundBase*                       K2Node_CustomEvent_Sound;                          // 0x29E8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_SoundWwise;                     // 0x29F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_VolumeMultiplier;               // 0x29F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_FreezeFrame                                 K2Node_CustomEvent_FreezeFrame;                    // 0x2A00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_SpawnIfCharacterIsDead;         // 0x2A01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x2A02(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A03[0x5];                                     // 0x2A03(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USF_BlueprintLatentAction*              CallFunc_StartFreezeFrame_LatentAction;            // 0x2A08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_5;      // 0x2A10(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_37;                   // 0x2A18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A19[0x7];                                     // 0x2A19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_6;      // 0x2A20(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_38;                   // 0x2A28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_39;                   // 0x2A29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_18;               // 0x2A2A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A2B[0x5];                                     // 0x2A2B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_14;                             // 0x2A30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x2A38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A39[0x7];                                     // 0x2A39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_15;                             // 0x2A40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           Temp_object_Variable_10;                           // 0x2A48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_1;     // 0x2A50(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_1;     // 0x2A70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_1;   // 0x2A74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_1;    // 0x2A78(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_15_0;                           // 0x2A80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_14_0;                           // 0x2A88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_1; // 0x2A90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamCharacter_IsPlayerTeam_2;     // 0x2A91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Enabled;                        // 0x2A92(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A93[0x5];                                     // 0x2A93(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x2A98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue_1;          // 0x2AA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamCharacter_IsPlayerTeam_3;     // 0x2AB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AB9[0x7];                                     // 0x2AB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_13;       // 0x2AC0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsInitialized_Variable_2;                // 0x2AD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AD9[0x7];                                     // 0x2AD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_3;         // 0x2AE0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_NewValue;                       // 0x2AF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_19;               // 0x2AF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AFA[0x6];                                     // 0x2AFA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x2B00(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x2B18(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue_1;               // 0x2B30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetBoolCVar_ReturnValue_2;                // 0x2B48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B49[0x3];                                     // 0x2B49(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll_4;                      // 0x2B4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_4;                     // 0x2B50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_4;                       // 0x2B54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_5;                // 0x2B58(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_1;     // 0x2B70(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_Event_Character;                            // 0x2C68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_PreviousValue_Variable_3;                // 0x2C70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C71[0x7];                                     // 0x2C71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x2C78(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_3;          // 0x2C80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C81[0x7];                                     // 0x2C81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAudioParameterControllerInterface> CallFunc_SetTriggerParameter_self_CastInput; // 0x2C88(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x2C98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C99[0x7];                                     // 0x2C99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_4;        // 0x2CA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x2CA8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UConfigurableGameUserSettings*          CallFunc_GetConfigurableGameUserSettings_GameUserSettings_2; // 0x2CB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetBoneTransform_ReturnValue;             // 0x2CC0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class UConfigurableGameUserSettings* UserConfig)> K2Node_CreateDelegate_OutputDelegate_13; // 0x2D20(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x2D30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x2D48(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x2D60(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldToScreen_ScreenPosition;      // 0x2D78(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldToScreen_ReturnValue;         // 0x2D88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D89[0x7];                                     // 0x2D89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x2D90(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x2DA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x2DB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DB9[0x3];                                     // 0x2DB9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x2DBC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHandleValid_ReturnValue;                // 0x2DCC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_20;               // 0x2DCD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddReference_ReturnValue;                 // 0x2DCE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DCF[0x1];                                     // 0x2DCF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_CharacterStats;                 // 0x2DD0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveReference_ReturnValue;              // 0x2DD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DD9[0x3];                                     // 0x2DD9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_ActionEffectIndex;              // 0x2DDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_5;               // 0x2DE0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> K2Node_MakeArray_Array_23;                       // 0x2E40(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6; // 0x2E50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_EpicBattleSequenceActor_C*          CallFunc_FinishSpawningActor_ReturnValue_6;        // 0x2E58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_40;                   // 0x2E60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E61[0x7];                                     // 0x2E61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_StartSequence_SequenceDuration_4;         // 0x2E68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllEnemies_Enemies;                  // 0x2E70(0x0010)(ReferenceParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllHeroes_Target_Heroes;             // 0x2E80(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_10;                        // 0x2E90(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_11;                        // 0x2E98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x2EA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x2EA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x2EA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x2EA9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_21;               // 0x2EAA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EAB[0x5];                                     // 0x2EAB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllAliveEnemies_Target_Heroes;       // 0x2EB0(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_12;                        // 0x2EC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_12;              // 0x2EC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x2ECC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2ECD[0x3];                                     // 0x2ECD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue_5;           // 0x2ED0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsActive_Variable_3;                     // 0x2ED8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_41;                   // 0x2ED9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_IsEmpty_ReturnValue;                  // 0x2EDA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsInitialized_Variable_3;                // 0x2EDB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_42;                   // 0x2EDC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EDD[0x3];                                     // 0x2EDD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetCounterDamageLevelMultiplier_ReturnValue_2; // 0x2EE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_21;     // 0x2EE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIBattleDamageSource_C> CallFunc_MakeDamageBuilder_DamageSource_CastInput_3; // 0x2EF0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleDamageBuilder_C*              CallFunc_MakeDamageBuilder_ReturnValue_3;          // 0x2F00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DealDamages_HasHit_3;                     // 0x2F08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F09[0x7];                                     // 0x2F09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleDamages_C*                    CallFunc_DealDamages_BattleDamages_3;              // 0x2F10(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_7;                       // 0x2F18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x2F20(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x2F30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x2F48(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_43;                   // 0x3040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_44;                   // 0x3041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_22;               // 0x3042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x3043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x3044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3045[0x3];                                     // 0x3045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetTargetingManager_ReturnValue_2;        // 0x3048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_45;                   // 0x3050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasObjectAsDependency_ReturnValue;        // 0x3051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3052[0x6];                                     // 0x3052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_TargetingGroup_C*                   CallFunc_GetTargetingGroupForCharacter_Array_Element; // 0x3058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_46;                   // 0x3060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3061[0x7];                                     // 0x3061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue_6;           // 0x3068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_47;                   // 0x3070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3071[0x7];                                     // 0x3071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_TargetingGroup_C*                   CallFunc_GetTargetingGroupForCharacter_Array_Element_1; // 0x3078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_48;                   // 0x3080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3081[0x7];                                     // 0x3081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_13;                        // 0x3088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_13;              // 0x3090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_11;               // 0x3094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3095[0x3];                                     // 0x3095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x3098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x30A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ReduceHP_NewHPValue;                      // 0x30A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ReduceHP_EffectiveDamage;                 // 0x30B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInTeam_ReturnValue;                     // 0x30B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_2;     // 0x30B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30BA[0x6];                                     // 0x30BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Battle_CharacterOverheadState_Base_C* CallFunc_GetOverheadStateWidget_WBPOverheadState_5; // 0x30C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    CallFunc_GetCharacterByID_CharacterData;           // 0x30C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_49;                   // 0x30D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30D1[0x3];                                     // 0x30D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBattleStartAP_Count_AP_Count;          // 0x30D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Battle_Boss_OverheadState_C*       CallFunc_GetNextAvailableBossUI_BossUI;            // 0x30D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue_7;           // 0x30E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_50;                   // 0x30E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_51;                   // 0x30E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30EA[0x6];                                     // 0x30EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x30F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x30F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetActiveCharacter_CurrentCharacter;      // 0x3108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualsObjects_ReturnValue_1;              // 0x3110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3111[0x3];                                     // 0x3111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x3114(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3124[0x4];                                     // 0x3124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AudioBattleCharacterManager_C> K2Node_DynamicCast_AsBPI_Audio_Battle_Character_Manager_2; // 0x3128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x3138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAFullTeamDead_ReturnValue;              // 0x3139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFreeAimType                                  K2Node_CustomEvent_FreeAimType_1;                  // 0x313A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x313B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x313C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_On_Action_Finished_HasMoreActions_2;      // 0x313D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x313E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_313F[0x1];                                     // 0x313F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_14;                          // 0x3140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> K2Node_CustomEvent_AllHitCharacters;             // 0x3150(0x0010)(ReferenceParm)
	EFreeAimType                                  K2Node_CustomEvent_FreeAimType;                    // 0x3160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x3161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3162[0x6];                                     // 0x3162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x3168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x3170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3174[0x4];                                     // 0x3174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x3178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_1;                // 0x3180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_2;                // 0x3188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_BlendWeight_ImplicitCast;       // 0x3190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x3194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_3;                // 0x3198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_4;                // 0x31A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_BlendWeight_ImplicitCast_1;     // 0x31A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1; // 0x31AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_5;                // 0x31B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast; // 0x31B8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31BC[0x4];                                     // 0x31BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x31C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x31C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31CC[0x4];                                     // 0x31CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x31D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x31D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_2;           // 0x31DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x31E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1;   // 0x31E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x31F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_3;           // 0x31F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x31FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast;     // 0x3200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x3208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_1;   // 0x3210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2;   // 0x3218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_1;        // 0x3220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPlayRate_NewRate_ImplicitCast;         // 0x3228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_322C[0x4];                                     // 0x322C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_6;                // 0x3230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast;   // 0x3238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetGlobalTimeDilation_TimeDilation_ImplicitCast; // 0x323C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x3240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast; // 0x3244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetGlobalTimeDilation_TimeDilation_ImplicitCast_1; // 0x3248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast_1; // 0x324C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast_2; // 0x3250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast_3; // 0x3254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast_4; // 0x3258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_325C[0x4];                                     // 0x325C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_7;                // 0x3260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base) == 0x000010, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base) == 0x003270, "Wrong size on BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, EntryPoint) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_StartWaitAsyncAction_NewLatentAction) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_StartWaitAsyncAction_NewLatentAction' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_StartWaitAsyncAction_ReturnValue) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_StartWaitAsyncAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CreateDelegate_OutputDelegate_2) == 0x00003C, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CreateDelegate_OutputDelegate_3) == 0x00004C, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeLiteralText_ReturnValue) == 0x000060, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeLiteralBool_ReturnValue) == 0x000070, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeLiteralBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000078, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeStruct_FormatArgumentData) == 0x000088, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_DoesRotationMatch_Result) == 0x0000D0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_DoesRotationMatch_Result' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeArray_Array) == 0x0000D8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Format_ReturnValue) == 0x0000E8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_object_Variable) == 0x0000F8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_object_Variable_1) == 0x000100, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_object_Variable_2) == 0x000108, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_object_Variable_3) == 0x000110, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x000118, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeStruct_FormatArgumentData_1) == 0x000128, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeLiteralBool_ReturnValue_1) == 0x000170, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeLiteralBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeArray_Array_1) == 0x000178, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_object_Variable_4) == 0x000188, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Format_ReturnValue_1) == 0x000190, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_byte_Variable) == 0x0001A0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Not_PreBool_ReturnValue) == 0x0001A1, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_StartLatentAction_AsyncAction) == 0x0001A8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_StartLatentAction_AsyncAction' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_DoesRotationMatch_Result_1) == 0x0001B0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_DoesRotationMatch_Result_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_object_Variable_5) == 0x0001B8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_object_Variable_6) == 0x0001C0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_DynamicCast_AsLevel_Sequence) == 0x0001C8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_DynamicCast_AsLevel_Sequence' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_DynamicCast_bSuccess) == 0x0001D0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetMiddleEnemy_Output) == 0x0001D8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetMiddleEnemy_Output' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_1) == 0x0001E0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Get_Item) == 0x0001E8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Length_ReturnValue) == 0x0001F0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Greater_IntInt_ReturnValue) == 0x0001F4, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_int_Variable) == 0x0001F8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_wildcard_Variable) == 0x000200, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000218, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_Loaded) == 0x000230, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CreateDelegate_OutputDelegate_4) == 0x000238, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Conv_ObjectToText_ReturnValue_2) == 0x000248, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Conv_ObjectToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CreateDelegate_OutputDelegate_5) == 0x000258, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeStruct_FormatArgumentData_2) == 0x000268, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeArray_Array_2) == 0x0002B0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Format_ReturnValue_2) == 0x0002C0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_DoesRotationMatch_Result_2) == 0x0002D0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_DoesRotationMatch_Result_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Get_Item_1) == 0x0002D8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0002E0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_wildcard_Variable_1) == 0x0002F8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_wildcard_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Lerp_ReturnValue) == 0x000308, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CreateDelegate_OutputDelegate_6) == 0x000310, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000320, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_int_Loop_Counter_Variable) == 0x000338, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_IntInt_ReturnValue) == 0x00033C, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_int_Array_Index_Variable) == 0x000340, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_int_Loop_Counter_Variable_1) == 0x000344, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_IntInt_ReturnValue_1) == 0x000348, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_int_Array_Index_Variable_1) == 0x00034C, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetDataTableRowFromName_OutRow) == 0x000350, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_StartWaitAsyncAction_NewLatentAction_1) == 0x000358, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_StartWaitAsyncAction_NewLatentAction_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_StartWaitAsyncAction_ReturnValue_1) == 0x000360, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_StartWaitAsyncAction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_2) == 0x000368, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Not_PreBool_ReturnValue_1) == 0x000369, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_DoesLocationMatch_Result) == 0x00036A, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_DoesLocationMatch_Result' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_int_Loop_Counter_Variable_2) == 0x00036C, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BooleanAND_ReturnValue) == 0x000370, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_IntInt_ReturnValue_2) == 0x000374, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_int_Array_Index_Variable_2) == 0x000378, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BreakVector_X) == 0x000380, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BreakVector_Y) == 0x000388, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BreakVector_Z) == 0x000390, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000398, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_int_Array_Index_Variable_3) == 0x0003A0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x0003A8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CreateDelegate_OutputDelegate_7) == 0x0003B0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_Variable) == 0x0003C0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Not_PreBool_ReturnValue_2) == 0x0003C1, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_int_Loop_Counter_Variable_3) == 0x0003C4, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0003C8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_IntInt_ReturnValue_3) == 0x0003E0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x0003E4, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_StartWaitAsyncAction_NewLatentAction_2) == 0x0003E8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_StartWaitAsyncAction_NewLatentAction_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_StartWaitAsyncAction_ReturnValue_2) == 0x0003F0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_StartWaitAsyncAction_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_int_Loop_Counter_Variable_4) == 0x0003F8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_IntInt_ReturnValue_4) == 0x0003FC, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_3) == 0x000400, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_int_Array_Index_Variable_4) == 0x000404, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsPackagedBuild_ReturnValue) == 0x000408, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsPackagedBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetDisplayName_ReturnValue) == 0x000410, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Conv_StringToText_ReturnValue) == 0x000420, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeStruct_FormatArgumentData_3) == 0x000430, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetDataTableRowFromName_OutRow_3) == 0x000478, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetDataTableRowFromName_OutRow_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Not_PreBool_ReturnValue_3) == 0x000480, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_4) == 0x000481, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_StartLatentAction_AsyncAction_1) == 0x000488, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_StartLatentAction_AsyncAction_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CreateDelegate_OutputDelegate_8) == 0x000490, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_DoesRotationMatch_Result_3) == 0x0004A0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_DoesRotationMatch_Result_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Lerp_ReturnValue_1) == 0x0004A8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Lerp_ReturnValue_2) == 0x0004B0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x0004B8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x0004D0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Not_PreBool_ReturnValue_4) == 0x0004E8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_StartLatentAction_AsyncAction_2) == 0x0004F0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_StartLatentAction_AsyncAction_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x0004F8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_wildcard_Variable_2) == 0x0004F9, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_wildcard_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_wildcard_Variable_3) == 0x000500, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_wildcard_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000508, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Not_PreBool_ReturnValue_5) == 0x000520, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_5) == 0x000521, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Not_PreBool_ReturnValue_6) == 0x000522, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_int_Array_Index_Variable_5) == 0x000524, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Lerp_ReturnValue_3) == 0x000528, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Lerp_ReturnValue_4) == 0x000530, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_wildcard_Variable_4) == 0x000538, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_wildcard_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000540, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_int_Loop_Counter_Variable_5) == 0x000548, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_IntInt_ReturnValue_5) == 0x00054C, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_int_Array_Index_Variable_6) == 0x000550, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Lerp_ReturnValue_5) == 0x000558, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsPackagedForDistribution_ReturnValue_1) == 0x000560, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsPackagedForDistribution_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Conv_ObjectToText_ReturnValue_3) == 0x000568, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Conv_ObjectToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_int_Loop_Counter_Variable_6) == 0x000578, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeStruct_FormatArgumentData_4) == 0x000580, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeArray_Array_3) == 0x0005C8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_IntInt_ReturnValue_6) == 0x0005D8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Format_ReturnValue_3) == 0x0005E0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_int_Loop_Counter_Variable_7) == 0x0005F0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_int_Loop_Counter_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_IntInt_ReturnValue_7) == 0x0005F4, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_int_Array_Index_Variable_7) == 0x0005F8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_int_Array_Index_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_Has_Been_Initd_Variable) == 0x0005FC, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_int_Loop_Counter_Variable_8) == 0x000600, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_int_Loop_Counter_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_IntInt_ReturnValue_8) == 0x000604, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_int_Array_Index_Variable_8) == 0x000608, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_int_Array_Index_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_IsClosed_Variable) == 0x00060C, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_int_Loop_Counter_Variable_9) == 0x000610, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_int_Loop_Counter_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_IntInt_ReturnValue_9) == 0x000614, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_int_Array_Index_Variable_9) == 0x000618, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_int_Array_Index_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_int_Array_Index_Variable_10) == 0x00061C, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_int_Array_Index_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_int_Loop_Counter_Variable_10) == 0x000620, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_int_Loop_Counter_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_IntInt_ReturnValue_10) == 0x000624, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_int_Array_Index_Variable_11) == 0x000628, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_int_Array_Index_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Event_ReductionAmount) == 0x000630, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Event_ReductionAmount' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Event_Debuff_Power) == 0x000638, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Event_Debuff_Power' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_CharacterToProtect) == 0x000640, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_CharacterToProtect' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x000648, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000660, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000678, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000680, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BreakRotator_Roll) == 0x000698, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BreakRotator_Pitch) == 0x00069C, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BreakRotator_Yaw) == 0x0006A0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CreateDelegate_OutputDelegate_9) == 0x0006A4, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0006B8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeRotator_ReturnValue) == 0x0006C0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x0006D8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetForwardVector_ReturnValue) == 0x0006F0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000708, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Not_PreBool_ReturnValue_7) == 0x000720, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_VectorVector_ReturnValue) == 0x000728, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_LatentAction_3) == 0x000740, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_LatentAction_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_6) == 0x000748, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000750, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetCharacterBattleBase_IsValid) == 0x000758, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CreateDelegate_OutputDelegate_10) == 0x00075C, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Event_DeltaSeconds) == 0x00076C, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CreateDelegate_OutputDelegate_11) == 0x000770, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000780, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000788, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetDisplayName_ReturnValue_1) == 0x000880, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000890, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsPlayerTeamCharacter_IsPlayerTeam) == 0x0008A0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsPlayerTeamCharacter_IsPlayerTeam' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_7) == 0x0008A1, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsImmunityByDefensiveMoveFinished_IsFinished) == 0x0008A2, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsImmunityByDefensiveMoveFinished_IsFinished' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x0008A8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeStruct_FormatArgumentData_5) == 0x0008B0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeArray_Array_4) == 0x0008F8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Format_ReturnValue_4) == 0x000908, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Map_Keys_Keys) == 0x000918, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Length_ReturnValue_1) == 0x000928, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Not_PreBool_ReturnValue_8) == 0x00092C, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetObjectClass_ReturnValue) == 0x000930, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetClassDisplayName_ReturnValue) == 0x000938, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000948, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_DoesRotationMatch_Result_4) == 0x000958, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_DoesRotationMatch_Result_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeStruct_FormatArgumentData_6) == 0x000960, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeArray_Array_5) == 0x0009A8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Format_ReturnValue_5) == 0x0009B8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Format_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_MoveInProgress_Variable) == 0x0009C8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_MoveInProgress_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Not_PreBool_ReturnValue_9) == 0x0009C9, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0009D0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetDisplayName_ReturnValue_2) == 0x0009D8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetDisplayName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetCameraLocation_ReturnValue) == 0x0009E8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000A00, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000A10, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_FindLookAtRotation_ReturnValue) == 0x000A28, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BreakRotator_Roll_1) == 0x000A40, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BreakRotator_Pitch_1) == 0x000A44, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BreakRotator_Yaw_1) == 0x000A48, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_int_Loop_Counter_Variable_11) == 0x000A4C, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_int_Loop_Counter_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000A50, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeRotator_ReturnValue_1) == 0x000A58, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Less_IntInt_ReturnValue) == 0x000A70, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000A78, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_IntInt_ReturnValue_11) == 0x000B70, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Get_Item_2) == 0x000B78, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Length_ReturnValue_2) == 0x000B80, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Less_IntInt_ReturnValue_1) == 0x000B84, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_Has_Been_Initd_Variable_1) == 0x000B85, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_8) == 0x000B86, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Create_ReturnValue) == 0x000B88, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MultiGate_FirstRun) == 0x000B90, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MultiGate_FirstRun' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MultiGate_ScratchBool) == 0x000B91, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MultiGate_ScratchBool' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MultiGate_ScratchIndex) == 0x000B94, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MultiGate_ScratchIndex' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x000B98, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeRotator_ReturnValue_2) == 0x000BA0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000BB8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000BC0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000BC8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000BD0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000BD8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000BE0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_DegSin_ReturnValue) == 0x000BE8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_DegSin_ReturnValue_1) == 0x000BF0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_DegSin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000BF8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000C00, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BreakRotator_Roll_2) == 0x000C08, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BreakRotator_Pitch_2) == 0x000C0C, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BreakRotator_Yaw_2) == 0x000C10, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000C18, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000C20, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000C28, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000C30, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000C38, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000C40, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000C48, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000C50, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeRotator_ReturnValue_3) == 0x000C58, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_ComposeRotators_ReturnValue) == 0x000C70, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000C88, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_SetActorRotation_ReturnValue_1) == 0x000D80, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_SetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_IsClosed_Variable_1) == 0x000D81, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Get_Item_3) == 0x000D88, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Length_ReturnValue_3) == 0x000D90, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Less_IntInt_ReturnValue_2) == 0x000D94, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BooleanOR_ReturnValue) == 0x000D95, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_GetActorLocation_ReturnValue_6) == 0x000D98, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_GetActorLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_Variable_1) == 0x000DB0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_Variable_2) == 0x000DB1, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Select_Default) == 0x000DB8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_9) == 0x000DC0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_GetActorLocation_ReturnValue_7) == 0x000DC8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_GetActorLocation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_Variable_3) == 0x000DE0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_DoesRotationMatch_Result_5) == 0x000DE1, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_DoesRotationMatch_Result_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Select_Default_1) == 0x000DE8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_InputAxisEvent_AxisValue_1) == 0x000DF0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_InputAxisEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000DF8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x000E10, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_FindLookAtRotation_ReturnValue_1) == 0x000E18, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_FindLookAtRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BreakRotator_Roll_3) == 0x000E30, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BreakRotator_Pitch_3) == 0x000E34, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BreakRotator_Yaw_3) == 0x000E38, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Conv_VectorToString_ReturnValue) == 0x000E40, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeRotator_ReturnValue_4) == 0x000E50, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Conv_StringToText_ReturnValue_4) == 0x000E68, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Conv_StringToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetForwardVector_ReturnValue_1) == 0x000E78, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeStruct_FormatArgumentData_7) == 0x000E90, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000ED8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_InputAxisEvent_AxisValue) == 0x000EE0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x000EE8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_NotEqual_DoubleDouble_ReturnValue_2) == 0x000EF0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_NotEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000EF8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x000F00, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_Variable_4) == 0x000F08, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_10) == 0x000F09, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_StartSequence_SequenceDuration) == 0x000F10, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_StartSequence_SequenceDuration' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_TouchedActor_1) == 0x000F18, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_TouchedActor_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_TouchedActor) == 0x000F20, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_TouchedActor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Event_FocusEventBP) == 0x000F28, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Event_FocusEventBP' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_Has_Been_Initd_Variable_2) == 0x000F30, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_IsClosed_Variable_2) == 0x000F31, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetTargetingManager_ReturnValue) == 0x000F38, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetTargetingManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Get_Game_Director_Component_ReturnValue) == 0x000F40, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Get_Game_Director_Component_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_SwitchEnum_CmpSuccess) == 0x000F48, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetTargetingManager_ReturnValue_1) == 0x000F50, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetTargetingManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Not_PreBool_ReturnValue_10) == 0x000F58, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000F59, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_11) == 0x000F5A, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_StartSequence_SequenceDuration_1) == 0x000F60, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_StartSequence_SequenceDuration_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeLiteralInt_ReturnValue) == 0x000F68, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000F70, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_CanSpendAP_ReturnValue) == 0x000F78, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_CanSpendAP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_HasUnlimitedShots_ReturnValue) == 0x000F79, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_HasUnlimitedShots_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Not_PreBool_ReturnValue_11) == 0x000F7A, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetWidget_ReturnValue) == 0x000F80, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeVector2D_ReturnValue) == 0x000F88, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000F98, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetWidget_ReturnValue_1) == 0x001090, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetWidget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Get_Game_Director_Component_ReturnValue_1) == 0x001098, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Get_Game_Director_Component_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0010A0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_12) == 0x0010A1, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_StartSequence_SequenceDuration_2) == 0x0010A8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_StartSequence_SequenceDuration_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x0010B0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Multiply_DoubleDouble_ReturnValue_12) == 0x0010B8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Multiply_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_DynamicCast_AsBPI_Audio_Battle_Character_Manager) == 0x0010C0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_DynamicCast_AsBPI_Audio_Battle_Character_Manager' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_DynamicCast_bSuccess_1) == 0x0010D0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_GetActorLocation_ReturnValue_8) == 0x0010D8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_GetActorLocation_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_PlayAnimMontage_ReturnValue) == 0x0010F0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_PlayAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_wildcard_Variable_5) == 0x0010F4, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_wildcard_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetDataTableRowFromName_OutRow_4) == 0x0010F8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetDataTableRowFromName_OutRow_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetDataTableRowFromName_OutRow_5) == 0x001100, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetDataTableRowFromName_OutRow_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetBattleManager_ReturnValue) == 0x001108, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x001110, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_CheckBattleEnd_BattleHasEnded) == 0x001118, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_CheckBattleEnd_BattleHasEnded' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetPlayerController_ReturnValue) == 0x001120, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetBattleSpotIndexLeftToRight__WhenFacingCharacters__ReturnValue) == 0x001128, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetBattleSpotIndexLeftToRight__WhenFacingCharacters__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetOverheadStateWidget_WBPOverheadState) == 0x001130, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetOverheadStateWidget_WBPOverheadState' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetOverheadStateWidget_WBPOverheadState_1) == 0x001138, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetOverheadStateWidget_WBPOverheadState_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_13) == 0x001140, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_14) == 0x001141, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetDataTableRowFromName_OutRow_6) == 0x001148, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetDataTableRowFromName_OutRow_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetOverheadStateWidget_WBPOverheadState_2) == 0x001150, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetOverheadStateWidget_WBPOverheadState_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_15) == 0x001158, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_Has_Been_Initd_Variable_3) == 0x001159, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetOverheadStateWidget_WBPOverheadState_3) == 0x001160, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetOverheadStateWidget_WBPOverheadState_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_real_Variable) == 0x001168, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_16) == 0x001170, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetBattleManager_ReturnValue_1) == 0x001178, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetBattleManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsBattleEnding_ReturnValue) == 0x001180, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsBattleEnding_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetConfigurableGameUserSettings_GameUserSettings) == 0x001188, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetConfigurableGameUserSettings_GameUserSettings' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BooleanOR_ReturnValue_1) == 0x001190, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetInvertCameraPitch_ReturnValue) == 0x001191, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetInvertCameraPitch_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetConfigurableGameUserSettings_GameUserSettings_1) == 0x001198, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetConfigurableGameUserSettings_GameUserSettings_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetInvertCameraYaw_ReturnValue) == 0x0011A0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetInvertCameraYaw_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_17) == 0x0011A1, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_18) == 0x0011A2, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_ActionType) == 0x0011A3, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_ActionType' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_SecondaryActionName) == 0x0011A4, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_SecondaryActionName' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Conv_NameToText_ReturnValue) == 0x0011B0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetDataTableRowFromName_OutRow_7) == 0x0011C0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetDataTableRowFromName_OutRow_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0012F0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeStruct_FormatArgumentData_8) == 0x0012F8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeArray_Array_6) == 0x001340, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Format_ReturnValue_6) == 0x001350, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Format_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_19) == 0x001360, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_DynamicCast_AsBP_Data_Asset_Item_Consumable) == 0x001368, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_DynamicCast_AsBP_Data_Asset_Item_Consumable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_DynamicCast_bSuccess_2) == 0x001370, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Conv_SoftClassReferenceToClass_ReturnValue) == 0x001378, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Conv_SoftClassReferenceToClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x001380, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_ClassDynamicCast_AsBP_Battle_Skill_Script) == 0x001388, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_ClassDynamicCast_AsBP_Battle_Skill_Script' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_ClassDynamicCast_bSuccess) == 0x001390, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_SwitchEnum_CmpSuccess_1) == 0x001391, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_ItemName) == 0x001394, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_ItemName' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetItemDisplayName_ItemDisplayName) == 0x0013A0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetItemDisplayName_ItemDisplayName' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_MagicName) == 0x0013B0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_MagicName' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeStruct_FormatArgumentData_9) == 0x0013B8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeStruct_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_MoveName) == 0x001400, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_MoveName' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_byte_Variable_1) == 0x001408, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeArray_Array_7) == 0x001410, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeArray_Array_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_IsGradientCounter) == 0x001420, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_IsGradientCounter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_LatentAction_2) == 0x001428, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_LatentAction_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_IsClosed_Variable_3) == 0x001430, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_CounteredCharacter) == 0x001438, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_CounteredCharacter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeArray_Array_8) == 0x001440, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeArray_Array_8' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetTransform_ReturnValue) == 0x001450, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeStruct_FormatArgumentData_10) == 0x0014B0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeStruct_FormatArgumentData_10' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0014F8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeArray_Array_9) == 0x001500, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeArray_Array_9' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Format_ReturnValue_7) == 0x001510, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Format_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_FinishSpawningActor_ReturnValue) == 0x001520, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_20) == 0x001528, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_IsInitialized_Variable) == 0x001529, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_IsInitialized_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeStruct_FormatArgumentData_11) == 0x001530, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeStruct_FormatArgumentData_11' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeArray_Array_10) == 0x001578, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeArray_Array_10' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Format_ReturnValue_8) == 0x001588, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Format_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeStruct_FormatArgumentData_12) == 0x001598, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeStruct_FormatArgumentData_12' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeArray_Array_11) == 0x0015E0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeArray_Array_11' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Format_ReturnValue_9) == 0x0015F0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Format_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetTransform_ReturnValue_1) == 0x001600, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Select_Default_2) == 0x001660, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x001670, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x001678, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Random_OutItem) == 0x001680, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Random_OutIndex) == 0x001688, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetDataTableRowFromName_OutRow_8) == 0x001690, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetDataTableRowFromName_OutRow_8' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeStruct_FormatArgumentData_13) == 0x001698, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeStruct_FormatArgumentData_13' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeArray_Array_12) == 0x0016E0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeArray_Array_12' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Format_ReturnValue_10) == 0x0016F0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Format_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeStruct_FormatArgumentData_14) == 0x001700, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeStruct_FormatArgumentData_14' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeArray_Array_13) == 0x001748, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeArray_Array_13' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Format_ReturnValue_11) == 0x001758, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Format_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_Has_Been_Initd_Variable_4) == 0x001768, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_Has_Been_Initd_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_On_Action_Finished_HasMoreActions) == 0x001769, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_On_Action_Finished_HasMoreActions' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Random_OutItem_1) == 0x001770, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Random_OutItem_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Random_OutIndex_1) == 0x001778, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Random_OutIndex_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Conv_ObjectToText_ReturnValue_4) == 0x001780, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Conv_ObjectToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetTransform_ReturnValue_2) == 0x001790, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeStruct_FormatArgumentData_15) == 0x0017F0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeStruct_FormatArgumentData_15' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x001838, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeArray_Array_14) == 0x001840, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeArray_Array_14' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Format_ReturnValue_12) == 0x001850, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Format_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x001860, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_PlayAnimMontage_ReturnValue_1) == 0x001868, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_PlayAnimMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_21) == 0x00186C, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeStruct_FormatArgumentData_16) == 0x001870, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeStruct_FormatArgumentData_16' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeArray_Array_15) == 0x0018B8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeArray_Array_15' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Format_ReturnValue_13) == 0x0018C8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Format_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_StartSequence_SequenceDuration_3) == 0x0018D8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_StartSequence_SequenceDuration_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetPlayerController_ReturnValue_1) == 0x0018E0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetComponentByClass_ReturnValue) == 0x0018E8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_DoubleDouble_ReturnValue_6) == 0x0018F0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_22) == 0x0018F8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_DoubleDouble_ReturnValue_7) == 0x001900, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x001908, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_VectorVector_ReturnValue_1) == 0x001920, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BreakVector_X_1) == 0x001938, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BreakVector_Y_1) == 0x001940, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BreakVector_Z_1) == 0x001948, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_PreviousValue_Variable) == 0x001950, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_PreviousValue_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeVector_ReturnValue) == 0x001958, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_IsClosed_Variable_4) == 0x001970, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_IsClosed_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_23) == 0x001971, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_GradientCenterLocation_1) == 0x001978, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_GradientCenterLocation_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_LatentAction_1) == 0x001990, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_LatentAction_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_IsActive_Variable) == 0x001998, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_IsActive_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Random_OutItem_2) == 0x0019A0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Random_OutItem_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Random_OutIndex_2) == 0x0019A8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Random_OutIndex_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_ScaleMultiplier) == 0x0019B0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_ScaleMultiplier' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_Duration_1) == 0x0019B8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_Duration_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_CurveOverride) == 0x0019C0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_CurveOverride' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0019C8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Select_Default_3) == 0x0019D0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Random_OutItem_3) == 0x0019D8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Random_OutItem_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Random_OutIndex_3) == 0x0019E0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Random_OutIndex_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Conv_ObjectToText_ReturnValue_5) == 0x0019E8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Conv_ObjectToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_PlayAnimMontage_ReturnValue_2) == 0x0019F8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_PlayAnimMontage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeStruct_FormatArgumentData_17) == 0x001A00, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeStruct_FormatArgumentData_17' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetDataTableRowFromName_OutRow_9) == 0x001A48, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetDataTableRowFromName_OutRow_9' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeArray_Array_16) == 0x001A50, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeArray_Array_16' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Format_ReturnValue_14) == 0x001A60, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Format_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetBaseDamageType_ReturnValue) == 0x001A70, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetBaseDamageType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetActorScale3D_ReturnValue) == 0x001A78, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetDataTableRowFromName_OutRow_10) == 0x001A90, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetDataTableRowFromName_OutRow_10' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetDataTableRowFromName_OutRow_11) == 0x001A98, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetDataTableRowFromName_OutRow_11' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetDataTableRowFromName_OutRow_12) == 0x001AA0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetDataTableRowFromName_OutRow_12' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeLiteralBool_ReturnValue_2) == 0x001AA8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeLiteralBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Lerp_ReturnValue_6) == 0x001AB0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Lerp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Conv_DoubleToVector_ReturnValue_3) == 0x001AB8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Conv_DoubleToVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_byte_Variable_2) == 0x001AD0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x001AD8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_byte_Variable_3) == 0x001AF0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_byte_Variable_4) == 0x001AF1, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeArray_Array_17) == 0x001AF8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeArray_Array_17' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetActorForwardVector_ReturnValue) == 0x001B08, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeRotFromX_ReturnValue) == 0x001B20, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetRootLocation_Location) == 0x001B38, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetRootLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetRootLocation_Scale) == 0x001B50, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetRootLocation_Scale' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetRootLocation_Rotation) == 0x001B68, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetRootLocation_Rotation' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_VectorVector_ReturnValue_2) == 0x001B80, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x001B98, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_LatentAction) == 0x001BA0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_LatentAction' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_byte_Variable_5) == 0x001BA8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_byte_Variable_6) == 0x001BA9, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeArray_Array_18) == 0x001BB0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeArray_Array_18' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Select_Default_4) == 0x001BC0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_real_Variable_1) == 0x001BC8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_byte_Variable_7) == 0x001BD0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Select_Default_5) == 0x001BD8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetCounterDamageLevelMultiplier_ReturnValue) == 0x001BE0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetCounterDamageLevelMultiplier_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetCounterDamageLevelMultiplier_ReturnValue_1) == 0x001BE8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetCounterDamageLevelMultiplier_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Multiply_DoubleDouble_ReturnValue_13) == 0x001BF0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Multiply_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Multiply_DoubleDouble_ReturnValue_14) == 0x001BF8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Multiply_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeDamageBuilder_DamageSource_CastInput) == 0x001C00, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeDamageBuilder_DamageSource_CastInput' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeDamageBuilder_ReturnValue) == 0x001C10, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeDamageBuilder_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeDamageBuilder_DamageSource_CastInput_1) == 0x001C18, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeDamageBuilder_DamageSource_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeDamageBuilder_ReturnValue_1) == 0x001C28, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeDamageBuilder_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_DealDamages_HasHit) == 0x001C30, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_DealDamages_HasHit' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_DealDamages_BattleDamages) == 0x001C38, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_DealDamages_BattleDamages' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_DealDamages_HasHit_1) == 0x001C40, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_DealDamages_HasHit_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_DealDamages_BattleDamages_1) == 0x001C48, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_DealDamages_BattleDamages_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetBattleManager_ReturnValue_2) == 0x001C50, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetBattleManager_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeTransform_ReturnValue) == 0x001C60, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetDummyMiddleCharacter_ReturnValue) == 0x001CC0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetDummyMiddleCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3) == 0x001CC8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetTransform_ReturnValue_3) == 0x001CD0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_FinishSpawningActor_ReturnValue_3) == 0x001D30, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_FinishSpawningActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4) == 0x001D38, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_FinishSpawningActor_ReturnValue_4) == 0x001D40, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_FinishSpawningActor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_object_Variable_7) == 0x001D48, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_object_Variable_8) == 0x001D50, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsPackagedForDistribution_ReturnValue_2) == 0x001D58, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsPackagedForDistribution_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetBoolCVar_ReturnValue) == 0x001D59, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetInventoryManager_ReturnValue) == 0x001D60, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetInventoryManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Not_PreBool_ReturnValue_12) == 0x001D68, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Not_PreBool_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BooleanOR_ReturnValue_2) == 0x001D69, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_Has_Been_Initd_Variable_5) == 0x001D6A, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_Has_Been_Initd_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_byte_Variable_8) == 0x001D6B, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CreateDelegate_OutputDelegate_12) == 0x001D6C, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Select_Default_6) == 0x001D80, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Select_Default_7) == 0x001D88, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_24) == 0x001D90, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Event_DeathByCounter) == 0x001D91, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Event_DeathByCounter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Event_HealAmount_1) == 0x001D98, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Event_HealAmount_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Event_RestoredMP_) == 0x001DA0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Event_RestoredMP_' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Event_SourceCharacter) == 0x001DA8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Event_SourceCharacter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Event_Reason_1) == 0x001DB0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Event_Reason_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetCurrentMontage_ReturnValue) == 0x001DB8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetCurrentMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x001DC0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Event_HealAmount) == 0x001DC8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Event_HealAmount' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_BattleDamages) == 0x001DD0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_BattleDamages' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_DamageSourceCharacter) == 0x001DD8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_DamageSourceCharacter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetFinalBaseElement_AttackElement) == 0x001DE8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetFinalBaseElement_AttackElement' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetIsResistant_IsResistant) == 0x001DE9, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetIsResistant_IsResistant' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetIsWeakness_IsWeakness) == 0x001DEA, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetIsWeakness_IsWeakness' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetIsCriticalHit_IsCritical) == 0x001DEB, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetIsCriticalHit_IsCritical' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_SpawnDamagePopupFromDamages_DamageWidget) == 0x001DF0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_SpawnDamagePopupFromDamages_DamageWidget' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetSourceCharacter_SourceCharacter) == 0x001DF8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetSourceCharacter_SourceCharacter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1) == 0x001E00, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetCharacterBattleBase_IsValid_1) == 0x001E08, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetCharacterBattleBase_IsValid_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_DynamicCast_AsBPI_Battle_Communication) == 0x001E10, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_DynamicCast_AsBPI_Battle_Communication' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_DynamicCast_bSuccess_3) == 0x001E20, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsPlayerTeamCharacterBase_IsPlayerTeam) == 0x001E21, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsPlayerTeamCharacterBase_IsPlayerTeam' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Event_Amount) == 0x001E24, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Event_Amount' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Event_IsFromTurnStart) == 0x001E28, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Event_IsFromTurnStart' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x001E30, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_int_Variable_1) == 0x001E38, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Select_Default_8) == 0x001E40, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_25) == 0x001E48, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetCurrentMontage_ReturnValue_1) == 0x001E50, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetCurrentMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_PlayAnimMontage_ReturnValue_3) == 0x001E58, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_PlayAnimMontage_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Contains_ReturnValue) == 0x001E5C, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_IsActive_Variable_1) == 0x001E5D, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_IsActive_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_IsClosed_Variable_5) == 0x001E5E, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_IsClosed_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x001E60, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_SpawnSystemAtLocation_ReturnValue_1) == 0x001E78, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_SpawnSystemAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetOverheadStateWidget_WBPOverheadState_4) == 0x001E80, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetOverheadStateWidget_WBPOverheadState_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_26) == 0x001E88, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x001E90, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_SpawnSoundAttached_ReturnValue) == 0x001E98, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Multiply_DoubleDouble_ReturnValue_15) == 0x001EA0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Multiply_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_27) == 0x001EA8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_SetFloatParameter_self_CastInput) == 0x001EB0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_SetFloatParameter_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_SpawnSoundAttached_ReturnValue_1) == 0x001EC0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_SpawnSoundAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_SpawnSoundAttached_ReturnValue_2) == 0x001EC8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_SpawnSoundAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_28) == 0x001ED0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_GetActorLocation_ReturnValue_9) == 0x001ED8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_GetActorLocation_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetSocketLocation_ReturnValue) == 0x001EF0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_SpawnSystemAtLocation_ReturnValue_2) == 0x001F08, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_SpawnSystemAtLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeArray_Array_19) == 0x001F10, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeArray_Array_19' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_On_Action_Finished_HasMoreActions_1) == 0x001F20, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_On_Action_Finished_HasMoreActions_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Get_Item_4) == 0x001F28, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Length_ReturnValue_4) == 0x001F30, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Less_IntInt_ReturnValue_3) == 0x001F34, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_EqualsObjects_ReturnValue) == 0x001F35, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_EqualsObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Get_Item_5) == 0x001F38, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Not_PreBool_ReturnValue_13) == 0x001F40, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Not_PreBool_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetMaxHP_MaxHP) == 0x001F48, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetMaxHP_MaxHP' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Length_ReturnValue_5) == 0x001F50, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Less_IntInt_ReturnValue_4) == 0x001F54, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_FClamp_ReturnValue) == 0x001F58, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetDisplayName_ReturnValue_3) == 0x001F60, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetDisplayName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Not_PreBool_ReturnValue_14) == 0x001F70, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Not_PreBool_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Conv_StringToText_ReturnValue_5) == 0x001F78, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Conv_StringToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeStruct_FormatArgumentData_18) == 0x001F88, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeStruct_FormatArgumentData_18' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Conv_StringToText_ReturnValue_6) == 0x001FD0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Conv_StringToText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeArray_Array_20) == 0x001FE0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeArray_Array_20' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeStruct_FormatArgumentData_19) == 0x001FF0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeStruct_FormatArgumentData_19' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Format_ReturnValue_15) == 0x002038, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Format_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeArray_Array_21) == 0x002048, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeArray_Array_21' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Format_ReturnValue_16) == 0x002058, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Format_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_29) == 0x002068, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Event_Damage) == 0x002070, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Event_Critical_) == 0x002078, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Event_Critical_' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Event_Weakness_) == 0x002079, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Event_Weakness_' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Event_Resistant_) == 0x00207A, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Event_Resistant_' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Event_Element) == 0x00207B, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Event_Element' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Event_Reason) == 0x00207C, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Event_Reason' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Event_DamageCharacterSource) == 0x002080, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Event_DamageCharacterSource' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_30) == 0x002088, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BooleanOR_ReturnValue_3) == 0x002089, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00208A, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_GetActorRotation_ReturnValue_2) == 0x002090, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_GetActorRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_Has_Been_Initd_Variable_6) == 0x0020A8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_Has_Been_Initd_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_SetActorRotation_ReturnValue_2) == 0x0020A9, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_SetActorRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_BodyPart) == 0x0020AA, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_BodyPart' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_Projectile) == 0x0020B0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_Projectile' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_SwitchEnum_CmpSuccess_2) == 0x0020B8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetBaseDamageType_ReturnValue_1) == 0x0020B9, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetBaseDamageType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_ComponentBoundEvent_Character) == 0x0020C0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_ComponentBoundEvent_Character' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_ComponentBoundEvent_BodyPart) == 0x0020C8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_ComponentBoundEvent_BodyPart' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_ComponentBoundEvent_HitResult) == 0x0020D0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_ComponentBoundEvent_HitResult' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_ComponentBoundEvent_TargetBodyPartBP) == 0x0021C8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_ComponentBoundEvent_TargetBodyPartBP' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_31) == 0x0021D0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0021D1, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Select_Default_9) == 0x0021D8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsPlayerTeamCharacter_IsPlayerTeam_1) == 0x0021E0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsPlayerTeamCharacter_IsPlayerTeam_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeDamageBuilder_DamageSource_CastInput_2) == 0x0021E8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeDamageBuilder_DamageSource_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeDamageBuilder_ReturnValue_2) == 0x0021F8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeDamageBuilder_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Not_PreBool_ReturnValue_15) == 0x002200, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Not_PreBool_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_DealDamages_HasHit_2) == 0x002201, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_DealDamages_HasHit_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_DealDamages_BattleDamages_2) == 0x002208, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_DealDamages_BattleDamages_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x002210, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_OverrideTarget_2) == 0x002308, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_OverrideTarget_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_HasHit_3) == 0x002310, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_HasHit_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_CameraShake_3) == 0x002318, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_CameraShake_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_ShakeScale_3) == 0x002320, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_ShakeScale_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_VFX1_3) == 0x002328, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_VFX1_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_VFX2_3) == 0x002330, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_VFX2_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_Sound_3) == 0x002338, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_Sound_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_SoundWwise_3) == 0x002340, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_SoundWwise_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_VolumeMultiplier_3) == 0x002348, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_VolumeMultiplier_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_FreezeFrame_3) == 0x002350, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_FreezeFrame_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_SpawnIfCharacterIsDead_3) == 0x002351, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_SpawnIfCharacterIsDead_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_real_Variable_2) == 0x002358, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Get_Item_6) == 0x002360, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Length_ReturnValue_6) == 0x002368, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00236C, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_IsInitialized_Variable_1) == 0x00236D, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_IsInitialized_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_PreviousValue_Variable_1) == 0x00236E, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_PreviousValue_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_IsClosed_Variable_6) == 0x00236F, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_IsClosed_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_NewValue_2) == 0x002370, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_NewValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_NewValue_1) == 0x002371, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_NewValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Not_PreBool_ReturnValue_16) == 0x002372, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Not_PreBool_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_Duration) == 0x002378, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_Duration' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_real_Variable_3) == 0x002380, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Conv_ObjectToText_ReturnValue_6) == 0x002388, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Conv_ObjectToText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeStruct_FSoundEvent) == 0x002398, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeStruct_FSoundEvent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeStruct_FormatArgumentData_20) == 0x0023A0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeStruct_FormatArgumentData_20' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeArray_Array_22) == 0x0023E8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeArray_Array_22' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Format_ReturnValue_17) == 0x0023F8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Format_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetAnimInstance_ReturnValue) == 0x002408, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_DynamicCast_AsABP_Battle_Global) == 0x002410, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_DynamicCast_AsABP_Battle_Global' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_DynamicCast_bSuccess_4) == 0x002418, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetIsDefending_Defending) == 0x002419, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetIsDefending_Defending' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_IsActive_Variable_2) == 0x00241A, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_IsActive_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetAnimInstance_ReturnValue_1) == 0x002420, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_DynamicCast_AsABP_Battle_Global_1) == 0x002428, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_DynamicCast_AsABP_Battle_Global_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_DynamicCast_bSuccess_5) == 0x002430, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_DynamicCast_AsBPI_Audio_Battle_Character_Manager_1) == 0x002438, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_DynamicCast_AsBPI_Audio_Battle_Character_Manager_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_DynamicCast_bSuccess_6) == 0x002448, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetAllActorsOfClass_OutActors) == 0x002450, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Event_EndPlayReason) == 0x002460, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Get_Item_7) == 0x002468, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Length_ReturnValue_7) == 0x002470, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Less_IntInt_ReturnValue_5) == 0x002474, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_32) == 0x002475, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetFreeAimTargetPartsComponents_ReturnValue) == 0x002478, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetFreeAimTargetPartsComponents_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Get_Item_8) == 0x002488, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Length_ReturnValue_8) == 0x002490, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Less_IntInt_ReturnValue_6) == 0x002494, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_CompletedLatentAction_1) == 0x002498, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_CompletedLatentAction_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_DebugReason) == 0x0024A0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_DebugReason' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_33) == 0x0024B0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_wildcard_Variable_6) == 0x0024B1, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_wildcard_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0024B2, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_TargetCharacterStats) == 0x0024B8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_TargetCharacterStats' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_wildcard_Variable_7) == 0x0024C0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_wildcard_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_Variable_5) == 0x0024C1, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_wildcard_Variable_8) == 0x0024C2, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_wildcard_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x0024C3, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Select_Default_10) == 0x0024C8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Multiply_DoubleDouble_ReturnValue_16) == 0x0024D0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Multiply_DoubleDouble_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_DoubleDouble_ReturnValue_8) == 0x0024D8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_PreviousValue_Variable_2) == 0x0024E0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_PreviousValue_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeLiteralDouble_ReturnValue) == 0x0024E8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeLiteralDouble_ReturnValue_1) == 0x0024F0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeLiteralDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Multiply_DoubleDouble_ReturnValue_17) == 0x0024F8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Multiply_DoubleDouble_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Multiply_DoubleDouble_ReturnValue_18) == 0x002500, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Multiply_DoubleDouble_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_real_Variable_4) == 0x002508, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Multiply_DoubleDouble_ReturnValue_19) == 0x002510, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Multiply_DoubleDouble_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_real_Variable_5) == 0x002518, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_NewPermeateElement) == 0x002520, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_NewPermeateElement' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_NewPermeateIntensity) == 0x002521, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_NewPermeateIntensity' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_DashBackAnimMontage) == 0x002528, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_DashBackAnimMontage' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_CompletedLatentAction) == 0x002530, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_CompletedLatentAction' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_34) == 0x002538, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_wildcard_Variable_9) == 0x002539, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_wildcard_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_Variable_6) == 0x00253A, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Select_Default_11) == 0x002540, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_real_Variable_6) == 0x002548, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Multiply_DoubleDouble_ReturnValue_20) == 0x002550, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Multiply_DoubleDouble_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_DoubleDouble_ReturnValue_9) == 0x002558, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_real_Variable_7) == 0x002560, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_ClampAngle_ReturnValue) == 0x002568, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_ClampAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetTransform_ReturnValue_4) == 0x002570, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5) == 0x0025D0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_FinishSpawningActor_ReturnValue_5) == 0x0025D8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_FinishSpawningActor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_35) == 0x0025E0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_Attacker) == 0x0025E8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_Attacker' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetBoolCVar_ReturnValue_1) == 0x0025F0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetBoolCVar_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_PlayAnimMontage_ReturnValue_4) == 0x0025F4, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_PlayAnimMontage_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_GetActorLocation_ReturnValue_10) == 0x0025F8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_GetActorLocation_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x002610, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_VectorVector_ReturnValue_3) == 0x002628, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x002640, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_real_Variable_8) == 0x002658, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_VectorVector_ReturnValue_4) == 0x002660, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_SpawnSystemAtLocation_ReturnValue_3) == 0x002678, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_SpawnSystemAtLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_RefCounter) == 0x002680, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_RefCounter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_int_Variable_2) == 0x002688, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Select_Default_12) == 0x002690, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Greater_IntInt_ReturnValue_2) == 0x002698, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_TryGetTargetedAllies_Valid) == 0x002699, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_TryGetTargetedAllies_Valid' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_TryGetTargetedAllies_TargetedHeroes) == 0x0026A0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_TryGetTargetedAllies_TargetedHeroes' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Get_Item_9) == 0x0026B0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Length_ReturnValue_9) == 0x0026B8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetActorForwardVector_ReturnValue_2) == 0x0026C0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetActorForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Less_IntInt_ReturnValue_7) == 0x0026D8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x0026E0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_GetActorLocation_ReturnValue_11) == 0x0026F8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_GetActorLocation_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_GradientCenterLocation) == 0x002710, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_GradientCenterLocation' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_VectorVector_ReturnValue_5) == 0x002728, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x002740, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_VectorVector_ReturnValue_6) == 0x002750, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_SpawnSystemAtLocation_ReturnValue_4) == 0x002768, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_SpawnSystemAtLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetTeam_Team) == 0x002770, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetTeam_Team' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x002771, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_wildcard_Variable_10) == 0x002772, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_wildcard_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_NotEqual_BoolBool_ReturnValue_2) == 0x002773, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_NotEqual_BoolBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_real_Variable_9) == 0x002778, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_real_Variable_10) == 0x002780, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_real_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_real_Variable_11) == 0x002788, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_real_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_int_Variable_3) == 0x002790, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_Variable_7) == 0x002794, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Select_Default_13) == 0x002798, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_ClampAngle_ReturnValue_1) == 0x0027A0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_ClampAngle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_CharacterCustomization) == 0x0027A8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_CharacterCustomization' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MultiGate_1_FirstRun) == 0x0027F8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MultiGate_1_FirstRun' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MultiGate_1_Data) == 0x0027FC, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MultiGate_1_Data' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_HasReceivedBattleStart_ReturnValue) == 0x002800, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_HasReceivedBattleStart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Not_PreBool_ReturnValue_17) == 0x002801, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Not_PreBool_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_real_Variable_12) == 0x002808, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_real_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_real_Variable_13) == 0x002810, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_real_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeLiteralDouble_ReturnValue_2) == 0x002818, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeLiteralDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeLiteralDouble_ReturnValue_3) == 0x002820, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeLiteralDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_GetActorLocation_ReturnValue_12) == 0x002828, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_GetActorLocation_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_FindLookAtRotation_ReturnValue_2) == 0x002840, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_FindLookAtRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_36) == 0x002858, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetPlayerController_ReturnValue_2) == 0x002860, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetPlayerController_ReturnValue_3) == 0x002868, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetWeaponR_VelocityAndSpeed_Velocity) == 0x002870, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetWeaponR_VelocityAndSpeed_Velocity' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetWeaponR_VelocityAndSpeed_Speed) == 0x002888, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetWeaponR_VelocityAndSpeed_Speed' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetWeaponL_VelocityAndSpeed_Velocity) == 0x002890, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetWeaponL_VelocityAndSpeed_Velocity' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetWeaponL_VelocityAndSpeed_Speed) == 0x0028A8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetWeaponL_VelocityAndSpeed_Speed' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0028B0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x0028B1, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_object_Variable_9) == 0x0028B8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_EnhancedInputActionEvent_ActionValue) == 0x0028C0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_EnhancedInputActionEvent_ActionValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_EnhancedInputActionEvent_ElapsedTime) == 0x0028E0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_EnhancedInputActionEvent_ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_EnhancedInputActionEvent_TriggeredTime) == 0x0028E4, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_EnhancedInputActionEvent_TriggeredTime' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_EnhancedInputActionEvent_SourceAction) == 0x0028E8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_EnhancedInputActionEvent_SourceAction' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_real_Variable_13_0) == 0x0028F0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_real_Variable_13_0' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_real_Variable_12_0) == 0x0028F8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_real_Variable_12_0' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Conv_InputActionValueToBool_ReturnValue) == 0x002900, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Conv_InputActionValueToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetBattleManager_ReturnValue_3) == 0x002908, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetBattleManager_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetBaseDamageType_ReturnValue_2) == 0x002910, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetBaseDamageType_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetBattleManager_ReturnValue_4) == 0x002918, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetBattleManager_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_HasHit_2) == 0x002920, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_HasHit_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_CameraShake_2) == 0x002928, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_CameraShake_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_ShakeScale_2) == 0x002930, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_ShakeScale_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_VFX1_2) == 0x002938, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_VFX1_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_VFX2_2) == 0x002940, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_VFX2_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_Sound_2) == 0x002948, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_Sound_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_SoundWwise_2) == 0x002950, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_SoundWwise_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_VolumeMultiplier_2) == 0x002958, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_VolumeMultiplier_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_FreezeFrame_2) == 0x002960, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_FreezeFrame_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_SpawnIfCharacterIsDead_2) == 0x002961, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_SpawnIfCharacterIsDead_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_OverrideTarget_1) == 0x002968, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_OverrideTarget_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_HasHit_1) == 0x002970, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_HasHit_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_CameraShake_1) == 0x002978, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_CameraShake_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_ShakeScale_1) == 0x002980, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_ShakeScale_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_VFX1_1) == 0x002988, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_VFX1_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_VFX2_1) == 0x002990, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_VFX2_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_Sound_1) == 0x002998, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_Sound_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_SoundWwise_1) == 0x0029A0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_SoundWwise_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_VolumeMultiplier_1) == 0x0029A8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_VolumeMultiplier_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_FreezeFrame_1) == 0x0029B0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_FreezeFrame_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_SpawnIfCharacterIsDead_1) == 0x0029B1, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_SpawnIfCharacterIsDead_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_OverrideTarget) == 0x0029B8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_OverrideTarget' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_HasHit) == 0x0029C0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_HasHit' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_CameraShake) == 0x0029C8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_CameraShake' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_ShakeScale) == 0x0029D0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_ShakeScale' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_VFX1) == 0x0029D8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_VFX1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_VFX2) == 0x0029E0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_VFX2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_Sound) == 0x0029E8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_Sound' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_SoundWwise) == 0x0029F0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_SoundWwise' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_VolumeMultiplier) == 0x0029F8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_VolumeMultiplier' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_FreezeFrame) == 0x002A00, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_FreezeFrame' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_SpawnIfCharacterIsDead) == 0x002A01, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_SpawnIfCharacterIsDead' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_Variable_8) == 0x002A02, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_StartFreezeFrame_LatentAction) == 0x002A08, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_StartFreezeFrame_LatentAction' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_SpawnSystemAtLocation_ReturnValue_5) == 0x002A10, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_SpawnSystemAtLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_37) == 0x002A18, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_SpawnSystemAtLocation_ReturnValue_6) == 0x002A20, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_SpawnSystemAtLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_38) == 0x002A28, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_39) == 0x002A29, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Not_PreBool_ReturnValue_18) == 0x002A2A, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Not_PreBool_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_real_Variable_14) == 0x002A30, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_real_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BooleanAND_ReturnValue_1) == 0x002A38, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_real_Variable_15) == 0x002A40, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_real_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_object_Variable_10) == 0x002A48, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_EnhancedInputActionEvent_ActionValue_1) == 0x002A50, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_EnhancedInputActionEvent_ActionValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_EnhancedInputActionEvent_ElapsedTime_1) == 0x002A70, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_EnhancedInputActionEvent_ElapsedTime_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_EnhancedInputActionEvent_TriggeredTime_1) == 0x002A74, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_EnhancedInputActionEvent_TriggeredTime_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_EnhancedInputActionEvent_SourceAction_1) == 0x002A78, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_EnhancedInputActionEvent_SourceAction_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_real_Variable_15_0) == 0x002A80, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_real_Variable_15_0' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_real_Variable_14_0) == 0x002A88, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_real_Variable_14_0' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Conv_InputActionValueToBool_ReturnValue_1) == 0x002A90, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Conv_InputActionValueToBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsPlayerTeamCharacter_IsPlayerTeam_2) == 0x002A91, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsPlayerTeamCharacter_IsPlayerTeam_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_Enabled) == 0x002A92, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_Enabled' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x002A98, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetCameraLocation_ReturnValue_1) == 0x002AA0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetCameraLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsPlayerTeamCharacter_IsPlayerTeam_3) == 0x002AB8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsPlayerTeamCharacter_IsPlayerTeam_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_GetActorLocation_ReturnValue_13) == 0x002AC0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_GetActorLocation_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_IsInitialized_Variable_2) == 0x002AD8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_IsInitialized_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_FindLookAtRotation_ReturnValue_3) == 0x002AE0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_FindLookAtRotation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_NewValue) == 0x002AF8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Not_PreBool_ReturnValue_19) == 0x002AF9, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Not_PreBool_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x002B00, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Subtract_VectorVector_ReturnValue) == 0x002B18, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeRotFromX_ReturnValue_1) == 0x002B30, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeRotFromX_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetBoolCVar_ReturnValue_2) == 0x002B48, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetBoolCVar_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BreakRotator_Roll_4) == 0x002B4C, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BreakRotator_Roll_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BreakRotator_Pitch_4) == 0x002B50, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BreakRotator_Pitch_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BreakRotator_Yaw_4) == 0x002B54, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BreakRotator_Yaw_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeRotator_ReturnValue_5) == 0x002B58, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeRotator_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_SetWorldRotation_SweepHitResult_1) == 0x002B70, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_SetWorldRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Event_Character) == 0x002C68, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Event_Character' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_PreviousValue_Variable_3) == 0x002C70, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_PreviousValue_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_SpawnSound2D_ReturnValue) == 0x002C78, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_NotEqual_BoolBool_ReturnValue_3) == 0x002C80, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_NotEqual_BoolBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_SetTriggerParameter_self_CastInput) == 0x002C88, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_SetTriggerParameter_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BooleanAND_ReturnValue_2) == 0x002C98, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetPlayerController_ReturnValue_4) == 0x002CA0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetViewportSize_ReturnValue) == 0x002CA8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetConfigurableGameUserSettings_GameUserSettings_2) == 0x002CB8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetConfigurableGameUserSettings_GameUserSettings_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetBoneTransform_ReturnValue) == 0x002CC0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetBoneTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CreateDelegate_OutputDelegate_13) == 0x002D20, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BreakTransform_Location) == 0x002D30, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BreakTransform_Rotation) == 0x002D48, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BreakTransform_Scale) == 0x002D60, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_ProjectWorldToScreen_ScreenPosition) == 0x002D78, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_ProjectWorldToScreen_ScreenPosition' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_ProjectWorldToScreen_ReturnValue) == 0x002D88, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_ProjectWorldToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x002D90, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x002DA0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x002DB8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x002DBC, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsHandleValid_ReturnValue) == 0x002DCC, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsHandleValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Not_PreBool_ReturnValue_20) == 0x002DCD, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Not_PreBool_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_AddReference_ReturnValue) == 0x002DCE, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_AddReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_CharacterStats) == 0x002DD0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_CharacterStats' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_RemoveReference_ReturnValue) == 0x002DD8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_RemoveReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_ActionEffectIndex) == 0x002DDC, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_ActionEffectIndex' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetTransform_ReturnValue_5) == 0x002DE0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_MakeArray_Array_23) == 0x002E40, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_MakeArray_Array_23' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6) == 0x002E50, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_FinishSpawningActor_ReturnValue_6) == 0x002E58, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_FinishSpawningActor_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_40) == 0x002E60, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_StartSequence_SequenceDuration_4) == 0x002E68, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_StartSequence_SequenceDuration_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetAllEnemies_Enemies) == 0x002E70, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetAllEnemies_Enemies' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetAllHeroes_Target_Heroes) == 0x002E80, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetAllHeroes_Target_Heroes' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Get_Item_10) == 0x002E90, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Get_Item_11) == 0x002E98, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Length_ReturnValue_10) == 0x002EA0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Length_ReturnValue_11) == 0x002EA4, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Less_IntInt_ReturnValue_8) == 0x002EA8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Less_IntInt_ReturnValue_9) == 0x002EA9, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Not_PreBool_ReturnValue_21) == 0x002EAA, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Not_PreBool_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetAllAliveEnemies_Target_Heroes) == 0x002EB0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetAllAliveEnemies_Target_Heroes' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Get_Item_12) == 0x002EC0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Get_Item_12' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Length_ReturnValue_12) == 0x002EC8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Length_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Less_IntInt_ReturnValue_10) == 0x002ECC, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetBattleManager_ReturnValue_5) == 0x002ED0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetBattleManager_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_IsActive_Variable_3) == 0x002ED8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_IsActive_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_41) == 0x002ED9, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Map_IsEmpty_ReturnValue) == 0x002EDA, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Map_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_IsInitialized_Variable_3) == 0x002EDB, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_IsInitialized_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_42) == 0x002EDC, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetCounterDamageLevelMultiplier_ReturnValue_2) == 0x002EE0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetCounterDamageLevelMultiplier_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Multiply_DoubleDouble_ReturnValue_21) == 0x002EE8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Multiply_DoubleDouble_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeDamageBuilder_DamageSource_CastInput_3) == 0x002EF0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeDamageBuilder_DamageSource_CastInput_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeDamageBuilder_ReturnValue_3) == 0x002F00, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeDamageBuilder_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_DealDamages_HasHit_3) == 0x002F08, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_DealDamages_HasHit_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_DealDamages_BattleDamages_3) == 0x002F10, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_DealDamages_BattleDamages_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Lerp_ReturnValue_7) == 0x002F18, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Lerp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeVector2D_ReturnValue_1) == 0x002F20, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_VLerp_ReturnValue) == 0x002F30, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x002F48, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_43) == 0x003040, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_44) == 0x003041, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Not_PreBool_ReturnValue_22) == 0x003042, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Not_PreBool_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Contains_ReturnValue_1) == 0x003043, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BooleanAND_ReturnValue_3) == 0x003044, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetTargetingManager_ReturnValue_2) == 0x003048, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetTargetingManager_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_45) == 0x003050, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_HasObjectAsDependency_ReturnValue) == 0x003051, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_HasObjectAsDependency_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetTargetingGroupForCharacter_Array_Element) == 0x003058, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetTargetingGroupForCharacter_Array_Element' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_46) == 0x003060, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetBattleManager_ReturnValue_6) == 0x003068, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetBattleManager_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_47) == 0x003070, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetTargetingGroupForCharacter_Array_Element_1) == 0x003078, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetTargetingGroupForCharacter_Array_Element_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_48) == 0x003080, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_48' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Get_Item_13) == 0x003088, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Get_Item_13' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Array_Length_ReturnValue_13) == 0x003090, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Array_Length_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Less_IntInt_ReturnValue_11) == 0x003094, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Less_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetCustomGI_ReturnValue) == 0x003098, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_FClamp_ReturnValue_1) == 0x0030A0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_ReduceHP_NewHPValue) == 0x0030A8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_ReduceHP_NewHPValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_ReduceHP_EffectiveDamage) == 0x0030B0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_ReduceHP_EffectiveDamage' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsInTeam_ReturnValue) == 0x0030B8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsInTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_LessEqual_DoubleDouble_ReturnValue_2) == 0x0030B9, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_LessEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetOverheadStateWidget_WBPOverheadState_5) == 0x0030C0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetOverheadStateWidget_WBPOverheadState_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetCharacterByID_CharacterData) == 0x0030C8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetCharacterByID_CharacterData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_49) == 0x0030D0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_49' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetBattleStartAP_Count_AP_Count) == 0x0030D4, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetBattleStartAP_Count_AP_Count' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetNextAvailableBossUI_BossUI) == 0x0030D8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetNextAvailableBossUI_BossUI' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetBattleManager_ReturnValue_7) == 0x0030E0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetBattleManager_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_50) == 0x0030E8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_50' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsValid_ReturnValue_51) == 0x0030E9, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsValid_ReturnValue_51' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetSequencePlayer_ReturnValue) == 0x0030F0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_struct_Variable) == 0x0030F8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_GetActiveCharacter_CurrentCharacter) == 0x003108, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_GetActiveCharacter_CurrentCharacter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_EqualsObjects_ReturnValue_1) == 0x003110, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_EqualsObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_struct_Variable_1) == 0x003114, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_DynamicCast_AsBPI_Audio_Battle_Character_Manager_2) == 0x003128, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_DynamicCast_AsBPI_Audio_Battle_Character_Manager_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_DynamicCast_bSuccess_7) == 0x003138, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_IsAFullTeamDead_ReturnValue) == 0x003139, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_IsAFullTeamDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_FreeAimType_1) == 0x00313A, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_FreeAimType_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x00313B, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_BooleanAND_ReturnValue_4) == 0x00313C, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_On_Action_Finished_HasMoreActions_2) == 0x00313D, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_On_Action_Finished_HasMoreActions_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, Temp_bool_Variable_9) == 0x00313E, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_Select_Default_14) == 0x003140, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_Select_Default_14' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_AllHitCharacters) == 0x003150, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_AllHitCharacters' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_CustomEvent_FreeAimType) == 0x003160, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_CustomEvent_FreeAimType' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x003161, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Lerp_Alpha_ImplicitCast) == 0x003168, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x003170, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x003178, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Lerp_Alpha_ImplicitCast_1) == 0x003180, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Lerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Lerp_Alpha_ImplicitCast_2) == 0x003188, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Lerp_Alpha_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_VariableSet_BlendWeight_ImplicitCast) == 0x003190, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_VariableSet_BlendWeight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x003194, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Lerp_Alpha_ImplicitCast_3) == 0x003198, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Lerp_Alpha_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Lerp_Alpha_ImplicitCast_4) == 0x0031A0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Lerp_Alpha_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, K2Node_VariableSet_BlendWeight_ImplicitCast_1) == 0x0031A8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::K2Node_VariableSet_BlendWeight_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1) == 0x0031AC, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Lerp_Alpha_ImplicitCast_5) == 0x0031B0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Lerp_Alpha_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast) == 0x0031B8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0031C0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0031C8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0031D0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x0031D8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeRotator_Yaw_ImplicitCast_2) == 0x0031DC, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeRotator_Yaw_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0031E0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1) == 0x0031E8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0031F0, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeRotator_Yaw_ImplicitCast_3) == 0x0031F8, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeRotator_Yaw_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x0031FC, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast) == 0x003200, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x003208, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_1) == 0x003210, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2) == 0x003218, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Add_DoubleDouble_B_ImplicitCast_1) == 0x003220, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Add_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_SetPlayRate_NewRate_ImplicitCast) == 0x003228, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_SetPlayRate_NewRate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Lerp_Alpha_ImplicitCast_6) == 0x003230, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Lerp_Alpha_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_SetFloatParameter_InFloat_ImplicitCast) == 0x003238, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_SetFloatParameter_InFloat_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_SetGlobalTimeDilation_TimeDilation_ImplicitCast) == 0x00323C, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_SetGlobalTimeDilation_TimeDilation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Delay_Duration_ImplicitCast) == 0x003240, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_RetriggerableDelay_Duration_ImplicitCast) == 0x003244, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_RetriggerableDelay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_SetGlobalTimeDilation_TimeDilation_ImplicitCast_1) == 0x003248, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_SetGlobalTimeDilation_TimeDilation_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_RetriggerableDelay_Duration_ImplicitCast_1) == 0x00324C, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_RetriggerableDelay_Duration_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_RetriggerableDelay_Duration_ImplicitCast_2) == 0x003250, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_RetriggerableDelay_Duration_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_RetriggerableDelay_Duration_ImplicitCast_3) == 0x003254, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_RetriggerableDelay_Duration_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_RetriggerableDelay_Duration_ImplicitCast_4) == 0x003258, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_RetriggerableDelay_Duration_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base, CallFunc_Lerp_Alpha_ImplicitCast_7) == 0x003260, "Member 'BP_jRPG_Character_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Character_Battle_Base::CallFunc_Lerp_Alpha_ImplicitCast_7' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetCurrentBattlePosture
// 0x0002 (0x0002 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetCurrentBattlePosture final
{
public:
	EBattleTurnState                              CurrentBattlePosture;                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleTurnState                              CallFunc_GetCurrentBattleTurnState_ReturnValue;    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetCurrentBattlePosture) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetCurrentBattlePosture");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetCurrentBattlePosture) == 0x000002, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetCurrentBattlePosture");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetCurrentBattlePosture, CurrentBattlePosture) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetCurrentBattlePosture::CurrentBattlePosture' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetCurrentBattlePosture, CallFunc_GetCurrentBattleTurnState_ReturnValue) == 0x000001, "Member 'BP_jRPG_Character_Battle_Base_C_GetCurrentBattlePosture::CallFunc_GetCurrentBattleTurnState_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetBattlePostureAnimations
// 0x0050 (0x0050 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetBattlePostureAnimations final
{
public:
	TMap<EBattleTurnState, class UAnimSequenceBase*> BattlePostureAnimations;                        // 0x0000(0x0050)(Parm, OutParm)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetBattlePostureAnimations) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetBattlePostureAnimations");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetBattlePostureAnimations) == 0x000050, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetBattlePostureAnimations");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattlePostureAnimations, BattlePostureAnimations) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattlePostureAnimations::BattlePostureAnimations' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetOwnerCharacter
// 0x0018 (0x0018 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetOwnerCharacter final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       Character;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetOwnerCharacter) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetOwnerCharacter");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetOwnerCharacter) == 0x000018, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetOwnerCharacter");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetOwnerCharacter, Character) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetOwnerCharacter::Character' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetOwnerCharacter, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_GetOwnerCharacter::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetOwnerCharacter, CallFunc_GetCharacterBattleBase_IsValid) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_GetOwnerCharacter::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetOwnerCharacter, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_jRPG_Character_Battle_Base_C_GetOwnerCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetBattleSpotIndexLeftToRight_(WhenFacingCharacters)
// 0x0048 (0x0048 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetBattleSpotIndexLeftToRight__WhenFacingCharacters_ final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsPlayerTeamCharacter_IsPlayerTeam;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array_1;                          // 0x0020(0x0010)(ConstParm, ReferenceParm)
	TArray<int32>                                 K2Node_Select_Default;                             // 0x0030(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetBattleSpotIndexLeftToRight__WhenFacingCharacters_) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetBattleSpotIndexLeftToRight__WhenFacingCharacters_");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetBattleSpotIndexLeftToRight__WhenFacingCharacters_) == 0x000048, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetBattleSpotIndexLeftToRight__WhenFacingCharacters_");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleSpotIndexLeftToRight__WhenFacingCharacters_, ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleSpotIndexLeftToRight__WhenFacingCharacters_::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleSpotIndexLeftToRight__WhenFacingCharacters_, Temp_bool_Variable) == 0x000004, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleSpotIndexLeftToRight__WhenFacingCharacters_::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleSpotIndexLeftToRight__WhenFacingCharacters_, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleSpotIndexLeftToRight__WhenFacingCharacters_::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleSpotIndexLeftToRight__WhenFacingCharacters_, CallFunc_IsPlayerTeamCharacter_IsPlayerTeam) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleSpotIndexLeftToRight__WhenFacingCharacters_::CallFunc_IsPlayerTeamCharacter_IsPlayerTeam' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleSpotIndexLeftToRight__WhenFacingCharacters_, K2Node_MakeArray_Array_1) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleSpotIndexLeftToRight__WhenFacingCharacters_::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleSpotIndexLeftToRight__WhenFacingCharacters_, K2Node_Select_Default) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleSpotIndexLeftToRight__WhenFacingCharacters_::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetBattleSpotIndexLeftToRight__WhenFacingCharacters_, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_GetBattleSpotIndexLeftToRight__WhenFacingCharacters_::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetCurrentBattleTurnState
// 0x000C (0x000C - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetCurrentBattleTurnState final
{
public:
	EBattleTurnState                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleTurnState                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleTurnState                              K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetCurrentBattleTurnState) == 0x000004, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetCurrentBattleTurnState");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetCurrentBattleTurnState) == 0x00000C, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetCurrentBattleTurnState");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetCurrentBattleTurnState, ReturnValue) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetCurrentBattleTurnState::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetCurrentBattleTurnState, Temp_bool_Variable) == 0x000001, "Member 'BP_jRPG_Character_Battle_Base_C_GetCurrentBattleTurnState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetCurrentBattleTurnState, Temp_byte_Variable) == 0x000002, "Member 'BP_jRPG_Character_Battle_Base_C_GetCurrentBattleTurnState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetCurrentBattleTurnState, CallFunc_Array_LastIndex_ReturnValue) == 0x000004, "Member 'BP_jRPG_Character_Battle_Base_C_GetCurrentBattleTurnState::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetCurrentBattleTurnState, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_GetCurrentBattleTurnState::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetCurrentBattleTurnState, K2Node_Select_Default) == 0x000009, "Member 'BP_jRPG_Character_Battle_Base_C_GetCurrentBattleTurnState::K2Node_Select_Default' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.IsPlayerTeamCharacter
// 0x0002 (0x0002 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_IsPlayerTeamCharacter final
{
public:
	bool                                          IsPlayerTeam;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_IsPlayerTeamCharacter) == 0x000001, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_IsPlayerTeamCharacter");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_IsPlayerTeamCharacter) == 0x000002, "Wrong size on BP_jRPG_Character_Battle_Base_C_IsPlayerTeamCharacter");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_IsPlayerTeamCharacter, IsPlayerTeam) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_IsPlayerTeamCharacter::IsPlayerTeam' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_IsPlayerTeamCharacter, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_jRPG_Character_Battle_Base_C_IsPlayerTeamCharacter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetLastSkillComboInfo
// 0x0090 (0x0090 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo final
{
public:
	bool                                          OnlySuccess;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnlyFail;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnlyPerfect;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SuccessCount;                                      // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FailCount;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PerfectCount;                                      // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_perfectCount;                                // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_failCount;                                   // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_successCount;                                // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetOwnerCharacter_Character;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item;                           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLastSkillComboInfo_OnlySuccess;        // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLastSkillComboInfo_OnlyFail;           // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLastSkillComboInfo_OnlyPerfect;        // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLastSkillComboInfo_SuccessCount;       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLastSkillComboInfo_FailCount;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLastSkillComboInfo_PerfectCount;       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetOwnerCharacter_Character_1;            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_1;                         // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87[0x1];                                       // 0x0087(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo) == 0x000090, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, OnlySuccess) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::OnlySuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, OnlyFail) == 0x000001, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::OnlyFail' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, OnlyPerfect) == 0x000002, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::OnlyPerfect' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, SuccessCount) == 0x000004, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::SuccessCount' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, FailCount) == 0x000008, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::FailCount' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, PerfectCount) == 0x00000C, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::PerfectCount' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, local_perfectCount) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::local_perfectCount' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, local_failCount) == 0x000014, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::local_failCount' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, local_successCount) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::local_successCount' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, Temp_int_Variable) == 0x000024, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, Temp_int_Loop_Counter_Variable_1) == 0x00002C, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00003C, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, Temp_int_Variable_1) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, CallFunc_Add_IntInt_ReturnValue_2) == 0x000044, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, CallFunc_GetOwnerCharacter_Character) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, CallFunc_GetLastSkillComboInfo_OnlySuccess) == 0x000051, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::CallFunc_GetLastSkillComboInfo_OnlySuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, CallFunc_GetLastSkillComboInfo_OnlyFail) == 0x000052, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::CallFunc_GetLastSkillComboInfo_OnlyFail' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, CallFunc_GetLastSkillComboInfo_OnlyPerfect) == 0x000053, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::CallFunc_GetLastSkillComboInfo_OnlyPerfect' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, CallFunc_GetLastSkillComboInfo_SuccessCount) == 0x000054, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::CallFunc_GetLastSkillComboInfo_SuccessCount' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, CallFunc_GetLastSkillComboInfo_FailCount) == 0x000058, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::CallFunc_GetLastSkillComboInfo_FailCount' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, CallFunc_GetLastSkillComboInfo_PerfectCount) == 0x00005C, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::CallFunc_GetLastSkillComboInfo_PerfectCount' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, Temp_int_Variable_2) == 0x000068, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, CallFunc_GetOwnerCharacter_Character_1) == 0x000070, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::CallFunc_GetOwnerCharacter_Character_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000078, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, CallFunc_Add_IntInt_ReturnValue_3) == 0x00007C, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, CallFunc_Add_IntInt_ReturnValue_4) == 0x000080, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000084, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000085, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, CallFunc_Array_Get_Item_1) == 0x000086, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, CallFunc_Array_Length_ReturnValue_2) == 0x000088, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo, CallFunc_Less_IntInt_ReturnValue_1) == 0x00008C, "Member 'BP_jRPG_Character_Battle_Base_C_GetLastSkillComboInfo::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.GetRootLocation
// 0x0090 (0x0090 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_GetRootLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Scale;                                             // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_GetRootLocation) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_GetRootLocation");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_GetRootLocation) == 0x000090, "Wrong size on BP_jRPG_Character_Battle_Base_C_GetRootLocation");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetRootLocation, Location) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_GetRootLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetRootLocation, Scale) == 0x000018, "Member 'BP_jRPG_Character_Battle_Base_C_GetRootLocation::Scale' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetRootLocation, Rotation) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_GetRootLocation::Rotation' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetRootLocation, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_GetRootLocation::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetRootLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000060, "Member 'BP_jRPG_Character_Battle_Base_C_GetRootLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_GetRootLocation, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000078, "Member 'BP_jRPG_Character_Battle_Base_C_GetRootLocation::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Character_Battle_Base.BP_jRPG_Character_Battle_Base_C.FillTargetsWithOtherHeroes
// 0x0088 (0x0088 - 0x0000)
struct BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes final
{
public:
	TArray<class ABP_jRPG_Character_Battle_Base_C*> OriginalTargets;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> TargetList;                                      // 0x0010(0x0010)(Parm, OutParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> local_newTargets;                                // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         local_startOffset;                                 // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       local_lastCharacter;                               // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes) == 0x000008, "Wrong alignment on BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes");
static_assert(sizeof(BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes) == 0x000088, "Wrong size on BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes, OriginalTargets) == 0x000000, "Member 'BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes::OriginalTargets' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes, TargetList) == 0x000010, "Member 'BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes::TargetList' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes, local_newTargets) == 0x000020, "Member 'BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes::local_newTargets' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes, local_startOffset) == 0x000030, "Member 'BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes::local_startOffset' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes, local_lastCharacter) == 0x000038, "Member 'BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes::local_lastCharacter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes, CallFunc_Array_LastIndex_ReturnValue) == 0x000040, "Member 'BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes, Temp_int_Variable) == 0x000050, "Member 'BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes, CallFunc_Array_LastIndex_ReturnValue_1) == 0x00005C, "Member 'BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes, CallFunc_Array_Find_ReturnValue) == 0x000060, "Member 'BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000064, "Member 'BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes, CallFunc_Percent_IntInt_ReturnValue) == 0x00006C, "Member 'BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes, CallFunc_Array_Contains_ReturnValue) == 0x000078, "Member 'BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes, CallFunc_Array_Add_ReturnValue) == 0x00007C, "Member 'BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes, CallFunc_Not_PreBool_ReturnValue) == 0x000080, "Member 'BP_jRPG_Character_Battle_Base_C_FillTargetsWithOtherHeroes::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

