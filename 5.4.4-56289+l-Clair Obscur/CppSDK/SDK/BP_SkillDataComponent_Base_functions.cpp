#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkillDataComponent_Base

#include "Basic.hpp"

#include "BP_SkillDataComponent_Base_classes.hpp"
#include "BP_SkillDataComponent_Base_parameters.hpp"


namespace SDK
{

// Function BP_SkillDataComponent_Base.BP_SkillDataComponent_Base_C.IsOverchargeActiveFeedbackForced
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*  CharacterStat                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool*                                   Active                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SkillDataComponent_Base_C::IsOverchargeActiveFeedbackForced(class UAC_jRPG_CharacterBattleStats_C* CharacterStat, bool* Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillDataComponent_Base_C", "IsOverchargeActiveFeedbackForced");

	Params::BP_SkillDataComponent_Base_C_IsOverchargeActiveFeedbackForced Parms{};

	Parms.CharacterStat = CharacterStat;

	UObject::ProcessEvent(Func, &Parms);

	if (Active != nullptr)
		*Active = Parms.Active;
}


// Function BP_SkillDataComponent_Base.BP_SkillDataComponent_Base_C.ModifySkillButton
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_HUD_SkillButton_Big_C*       SkillButtonWidget                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_SkillDataComponent_Base_C::ModifySkillButton(class UWBP_HUD_SkillButton_Big_C* SkillButtonWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillDataComponent_Base_C", "ModifySkillButton");

	Params::BP_SkillDataComponent_Base_C_ModifySkillButton Parms{};

	Parms.SkillButtonWidget = SkillButtonWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillDataComponent_Base.BP_SkillDataComponent_Base_C.ModifySkillTooltip
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_SkillTooltip_C*              SkillTooltipWidget                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_SkillDataComponent_Base_C::ModifySkillTooltip(class UWBP_SkillTooltip_C* SkillTooltipWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillDataComponent_Base_C", "ModifySkillTooltip");

	Params::BP_SkillDataComponent_Base_C_ModifySkillTooltip Parms{};

	Parms.SkillTooltipWidget = SkillTooltipWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillDataComponent_Base.BP_SkillDataComponent_Base_C.OnBattleStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*  CharacterStat                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_SkillDataComponent_Base_C::OnBattleStart(class UAC_jRPG_CharacterBattleStats_C* CharacterStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillDataComponent_Base_C", "OnBattleStart");

	Params::BP_SkillDataComponent_Base_C_OnBattleStart Parms{};

	Parms.CharacterStat = CharacterStat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillDataComponent_Base.BP_SkillDataComponent_Base_C.GetAPCostOverride
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*  CharacterStat                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32*                                  Offset                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SkillDataComponent_Base_C::GetAPCostOverride(class UAC_jRPG_CharacterBattleStats_C* CharacterStat, int32* Offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillDataComponent_Base_C", "GetAPCostOverride");

	Params::BP_SkillDataComponent_Base_C_GetAPCostOverride Parms{};

	Parms.CharacterStat = CharacterStat;

	UObject::ProcessEvent(Func, &Parms);

	if (Offset != nullptr)
		*Offset = Parms.Offset;
}


// Function BP_SkillDataComponent_Base.BP_SkillDataComponent_Base_C.GetElementalTypeOverride
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAttackType                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EAttackType UBP_SkillDataComponent_Base_C::GetElementalTypeOverride()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillDataComponent_Base_C", "GetElementalTypeOverride");

	Params::BP_SkillDataComponent_Base_C_GetElementalTypeOverride Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SkillDataComponent_Base.BP_SkillDataComponent_Base_C.GetScriptClass
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass**                          ScriptClass_0                                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SkillDataComponent_Base_C::GetScriptClass(class UClass** ScriptClass_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillDataComponent_Base_C", "GetScriptClass");

	Params::BP_SkillDataComponent_Base_C_GetScriptClass Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ScriptClass_0 != nullptr)
		*ScriptClass_0 = Parms.ScriptClass_0;
}


// Function BP_SkillDataComponent_Base.BP_SkillDataComponent_Base_C.RegisterSkillChecks
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*  CharacterStats                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_SkillDataComponent_Base_C::RegisterSkillChecks(class UAC_jRPG_CharacterBattleStats_C* CharacterStats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillDataComponent_Base_C", "RegisterSkillChecks");

	Params::BP_SkillDataComponent_Base_C_RegisterSkillChecks Parms{};

	Parms.CharacterStats = CharacterStats;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillDataComponent_Base.BP_SkillDataComponent_Base_C.IsOverchargeActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*  CharacterStat                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool*                                   Active                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SkillDataComponent_Base_C::IsOverchargeActive(class UAC_jRPG_CharacterBattleStats_C* CharacterStat, bool* Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillDataComponent_Base_C", "IsOverchargeActive");

	Params::BP_SkillDataComponent_Base_C_IsOverchargeActive Parms{};

	Parms.CharacterStat = CharacterStat;

	UObject::ProcessEvent(Func, &Parms);

	if (Active != nullptr)
		*Active = Parms.Active;
}

}

