#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_BattleLoot_Picto

#include "Basic.hpp"

#include "EWeaponQuality_structs.hpp"
#include "FPassiveEffect_structs.hpp"
#include "S_jRPG_Item_StaticData_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_BattleLoot_Picto.WBP_BattleLoot_Picto_C.ExecuteUbergraph_WBP_BattleLoot_Picto
// 0x0040 (0x0040 - 0x0000)
struct WBP_BattleLoot_Picto_C_ExecuteUbergraph_WBP_BattleLoot_Picto final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0014)()
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UWidgetAnimation*                 K2Node_Event_Animation;                            // 0x0028(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BattleLoot_Picto_C_ExecuteUbergraph_WBP_BattleLoot_Picto) == 0x000008, "Wrong alignment on WBP_BattleLoot_Picto_C_ExecuteUbergraph_WBP_BattleLoot_Picto");
static_assert(sizeof(WBP_BattleLoot_Picto_C_ExecuteUbergraph_WBP_BattleLoot_Picto) == 0x000040, "Wrong size on WBP_BattleLoot_Picto_C_ExecuteUbergraph_WBP_BattleLoot_Picto");
static_assert(offsetof(WBP_BattleLoot_Picto_C_ExecuteUbergraph_WBP_BattleLoot_Picto, EntryPoint) == 0x000000, "Member 'WBP_BattleLoot_Picto_C_ExecuteUbergraph_WBP_BattleLoot_Picto::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Picto_C_ExecuteUbergraph_WBP_BattleLoot_Picto, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_BattleLoot_Picto_C_ExecuteUbergraph_WBP_BattleLoot_Picto::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Picto_C_ExecuteUbergraph_WBP_BattleLoot_Picto, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'WBP_BattleLoot_Picto_C_ExecuteUbergraph_WBP_BattleLoot_Picto::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Picto_C_ExecuteUbergraph_WBP_BattleLoot_Picto, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'WBP_BattleLoot_Picto_C_ExecuteUbergraph_WBP_BattleLoot_Picto::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Picto_C_ExecuteUbergraph_WBP_BattleLoot_Picto, K2Node_Event_Animation) == 0x000028, "Member 'WBP_BattleLoot_Picto_C_ExecuteUbergraph_WBP_BattleLoot_Picto::K2Node_Event_Animation' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Picto_C_ExecuteUbergraph_WBP_BattleLoot_Picto, CallFunc_PlayAnimation_ReturnValue_1) == 0x000030, "Member 'WBP_BattleLoot_Picto_C_ExecuteUbergraph_WBP_BattleLoot_Picto::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Picto_C_ExecuteUbergraph_WBP_BattleLoot_Picto, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000038, "Member 'WBP_BattleLoot_Picto_C_ExecuteUbergraph_WBP_BattleLoot_Picto::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WBP_BattleLoot_Picto.WBP_BattleLoot_Picto_C.LoadPicto
// 0x01A0 (0x01A0 - 0x0000)
struct WBP_BattleLoot_Picto_C_LoadPicto final
{
public:
	class UBP_ItemInstance_Gear_C*                PictoInstance;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetUnlockedPassiveEffectsIDs_PassiveEffectIDs; // 0x0008(0x0010)(ReferenceParm)
	EWeaponQuality                                CallFunc_GetCurrentQuality_Quality;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentLevel_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFPassiveEffect                        CallFunc_GetPassiveEffectDefinition_PassiveEffect; // 0x0020(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetPassiveEffectDefinition_Found;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_StaticData                CallFunc_GetItemStaticData_ItemStaticData;         // 0x0070(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BattleLoot_Picto_C_LoadPicto) == 0x000008, "Wrong alignment on WBP_BattleLoot_Picto_C_LoadPicto");
static_assert(sizeof(WBP_BattleLoot_Picto_C_LoadPicto) == 0x0001A0, "Wrong size on WBP_BattleLoot_Picto_C_LoadPicto");
static_assert(offsetof(WBP_BattleLoot_Picto_C_LoadPicto, PictoInstance) == 0x000000, "Member 'WBP_BattleLoot_Picto_C_LoadPicto::PictoInstance' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Picto_C_LoadPicto, CallFunc_GetUnlockedPassiveEffectsIDs_PassiveEffectIDs) == 0x000008, "Member 'WBP_BattleLoot_Picto_C_LoadPicto::CallFunc_GetUnlockedPassiveEffectsIDs_PassiveEffectIDs' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Picto_C_LoadPicto, CallFunc_GetCurrentQuality_Quality) == 0x000018, "Member 'WBP_BattleLoot_Picto_C_LoadPicto::CallFunc_GetCurrentQuality_Quality' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Picto_C_LoadPicto, CallFunc_GetCurrentLevel_ReturnValue) == 0x00001C, "Member 'WBP_BattleLoot_Picto_C_LoadPicto::CallFunc_GetCurrentLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Picto_C_LoadPicto, CallFunc_GetPassiveEffectDefinition_PassiveEffect) == 0x000020, "Member 'WBP_BattleLoot_Picto_C_LoadPicto::CallFunc_GetPassiveEffectDefinition_PassiveEffect' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Picto_C_LoadPicto, CallFunc_GetPassiveEffectDefinition_Found) == 0x000068, "Member 'WBP_BattleLoot_Picto_C_LoadPicto::CallFunc_GetPassiveEffectDefinition_Found' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Picto_C_LoadPicto, CallFunc_GetItemStaticData_ItemStaticData) == 0x000070, "Member 'WBP_BattleLoot_Picto_C_LoadPicto::CallFunc_GetItemStaticData_ItemStaticData' has a wrong offset!");

// Function WBP_BattleLoot_Picto.WBP_BattleLoot_Picto_C.OnAnimationFinished
// 0x0008 (0x0008 - 0x0000)
struct WBP_BattleLoot_Picto_C_OnAnimationFinished final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BattleLoot_Picto_C_OnAnimationFinished) == 0x000008, "Wrong alignment on WBP_BattleLoot_Picto_C_OnAnimationFinished");
static_assert(sizeof(WBP_BattleLoot_Picto_C_OnAnimationFinished) == 0x000008, "Wrong size on WBP_BattleLoot_Picto_C_OnAnimationFinished");
static_assert(offsetof(WBP_BattleLoot_Picto_C_OnAnimationFinished, Animation) == 0x000000, "Member 'WBP_BattleLoot_Picto_C_OnAnimationFinished::Animation' has a wrong offset!");

// Function WBP_BattleLoot_Picto.WBP_BattleLoot_Picto_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_BattleLoot_Picto_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BattleLoot_Picto_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_BattleLoot_Picto_C_PreConstruct");
static_assert(sizeof(WBP_BattleLoot_Picto_C_PreConstruct) == 0x000001, "Wrong size on WBP_BattleLoot_Picto_C_PreConstruct");
static_assert(offsetof(WBP_BattleLoot_Picto_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_BattleLoot_Picto_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

