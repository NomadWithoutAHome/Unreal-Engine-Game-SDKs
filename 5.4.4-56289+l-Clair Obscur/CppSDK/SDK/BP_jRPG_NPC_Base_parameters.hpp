#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_jRPG_NPC_Base

#include "Basic.hpp"

#include "FPromptParams_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_jRPG_NPC_Base.BP_jRPG_NPC_Base_C.CanInteractWithMount
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_NPC_Base_C_CanInteractWithMount final
{
public:
	bool                                          CanInteract;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Base_C_CanInteractWithMount) == 0x000001, "Wrong alignment on BP_jRPG_NPC_Base_C_CanInteractWithMount");
static_assert(sizeof(BP_jRPG_NPC_Base_C_CanInteractWithMount) == 0x000001, "Wrong size on BP_jRPG_NPC_Base_C_CanInteractWithMount");
static_assert(offsetof(BP_jRPG_NPC_Base_C_CanInteractWithMount, CanInteract) == 0x000000, "Member 'BP_jRPG_NPC_Base_C_CanInteractWithMount::CanInteract' has a wrong offset!");

// Function BP_jRPG_NPC_Base.BP_jRPG_NPC_Base_C.IsInteractionAvailable
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_NPC_Base_C_IsInteractionAvailable final
{
public:
	bool                                          Available;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Base_C_IsInteractionAvailable) == 0x000001, "Wrong alignment on BP_jRPG_NPC_Base_C_IsInteractionAvailable");
static_assert(sizeof(BP_jRPG_NPC_Base_C_IsInteractionAvailable) == 0x000001, "Wrong size on BP_jRPG_NPC_Base_C_IsInteractionAvailable");
static_assert(offsetof(BP_jRPG_NPC_Base_C_IsInteractionAvailable, Available) == 0x000000, "Member 'BP_jRPG_NPC_Base_C_IsInteractionAvailable::Available' has a wrong offset!");

// Function BP_jRPG_NPC_Base.BP_jRPG_NPC_Base_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct BP_jRPG_NPC_Base_C_UserConstructionScript final
{
public:
	struct FGuid                                  CallFunc_NewGuid_ReturnValue;                      // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_Guid_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Base_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_jRPG_NPC_Base_C_UserConstructionScript");
static_assert(sizeof(BP_jRPG_NPC_Base_C_UserConstructionScript) == 0x000018, "Wrong size on BP_jRPG_NPC_Base_C_UserConstructionScript");
static_assert(offsetof(BP_jRPG_NPC_Base_C_UserConstructionScript, CallFunc_NewGuid_ReturnValue) == 0x000000, "Member 'BP_jRPG_NPC_Base_C_UserConstructionScript::CallFunc_NewGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_UserConstructionScript, CallFunc_IsValid_Guid_ReturnValue) == 0x000010, "Member 'BP_jRPG_NPC_Base_C_UserConstructionScript::CallFunc_IsValid_Guid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_jRPG_NPC_Base_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_UserConstructionScript, CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast) == 0x000014, "Member 'BP_jRPG_NPC_Base_C_UserConstructionScript::CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast' has a wrong offset!");

// Function BP_jRPG_NPC_Base.BP_jRPG_NPC_Base_C.OnInteractionRequested
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_NPC_Base_C_OnInteractionRequested final
{
public:
	class ABP_jRPG_Character_World_C*             InteractingWorldCharacter;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Instant;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Base_C_OnInteractionRequested) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Base_C_OnInteractionRequested");
static_assert(sizeof(BP_jRPG_NPC_Base_C_OnInteractionRequested) == 0x000010, "Wrong size on BP_jRPG_NPC_Base_C_OnInteractionRequested");
static_assert(offsetof(BP_jRPG_NPC_Base_C_OnInteractionRequested, InteractingWorldCharacter) == 0x000000, "Member 'BP_jRPG_NPC_Base_C_OnInteractionRequested::InteractingWorldCharacter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_OnInteractionRequested, Instant) == 0x000008, "Member 'BP_jRPG_NPC_Base_C_OnInteractionRequested::Instant' has a wrong offset!");

// Function BP_jRPG_NPC_Base.BP_jRPG_NPC_Base_C.ShouldHideDistantInteraction
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_NPC_Base_C_ShouldHideDistantInteraction final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Base_C_ShouldHideDistantInteraction) == 0x000001, "Wrong alignment on BP_jRPG_NPC_Base_C_ShouldHideDistantInteraction");
static_assert(sizeof(BP_jRPG_NPC_Base_C_ShouldHideDistantInteraction) == 0x000001, "Wrong size on BP_jRPG_NPC_Base_C_ShouldHideDistantInteraction");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ShouldHideDistantInteraction, ReturnValue) == 0x000000, "Member 'BP_jRPG_NPC_Base_C_ShouldHideDistantInteraction::ReturnValue' has a wrong offset!");

// Function BP_jRPG_NPC_Base.BP_jRPG_NPC_Base_C.IsInteractionDone
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_NPC_Base_C_IsInteractionDone final
{
public:
	bool                                          Done;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Base_C_IsInteractionDone) == 0x000001, "Wrong alignment on BP_jRPG_NPC_Base_C_IsInteractionDone");
static_assert(sizeof(BP_jRPG_NPC_Base_C_IsInteractionDone) == 0x000001, "Wrong size on BP_jRPG_NPC_Base_C_IsInteractionDone");
static_assert(offsetof(BP_jRPG_NPC_Base_C_IsInteractionDone, Done) == 0x000000, "Member 'BP_jRPG_NPC_Base_C_IsInteractionDone::Done' has a wrong offset!");

// Function BP_jRPG_NPC_Base.BP_jRPG_NPC_Base_C.GetInteractionPromptParams
// 0x0018 (0x0018 - 0x0000)
struct BP_jRPG_NPC_Base_C_GetInteractionPromptParams final
{
public:
	struct FFPromptParams                         PromptParams;                                      // 0x0000(0x0018)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Base_C_GetInteractionPromptParams) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Base_C_GetInteractionPromptParams");
static_assert(sizeof(BP_jRPG_NPC_Base_C_GetInteractionPromptParams) == 0x000018, "Wrong size on BP_jRPG_NPC_Base_C_GetInteractionPromptParams");
static_assert(offsetof(BP_jRPG_NPC_Base_C_GetInteractionPromptParams, PromptParams) == 0x000000, "Member 'BP_jRPG_NPC_Base_C_GetInteractionPromptParams::PromptParams' has a wrong offset!");

// Function BP_jRPG_NPC_Base.BP_jRPG_NPC_Base_C.GetNPC_ID
// 0x0048 (0x0048 - 0x0000)
struct BP_jRPG_NPC_Base_C_GetNPC_ID final
{
public:
	class FName                                   NPC_ID_0;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_Guid_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_GuidToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Base_C_GetNPC_ID) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Base_C_GetNPC_ID");
static_assert(sizeof(BP_jRPG_NPC_Base_C_GetNPC_ID) == 0x000048, "Wrong size on BP_jRPG_NPC_Base_C_GetNPC_ID");
static_assert(offsetof(BP_jRPG_NPC_Base_C_GetNPC_ID, NPC_ID_0) == 0x000000, "Member 'BP_jRPG_NPC_Base_C_GetNPC_ID::NPC_ID_0' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_GetNPC_ID, CallFunc_Concat_StrStr_ReturnValue) == 0x000008, "Member 'BP_jRPG_NPC_Base_C_GetNPC_ID::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_GetNPC_ID, CallFunc_IsValid_Guid_ReturnValue) == 0x000018, "Member 'BP_jRPG_NPC_Base_C_GetNPC_ID::CallFunc_IsValid_Guid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_GetNPC_ID, CallFunc_Conv_GuidToString_ReturnValue) == 0x000020, "Member 'BP_jRPG_NPC_Base_C_GetNPC_ID::CallFunc_Conv_GuidToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_GetNPC_ID, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000030, "Member 'BP_jRPG_NPC_Base_C_GetNPC_ID::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_GetNPC_ID, CallFunc_Conv_StringToName_ReturnValue) == 0x000040, "Member 'BP_jRPG_NPC_Base_C_GetNPC_ID::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function BP_jRPG_NPC_Base.BP_jRPG_NPC_Base_C.OnEnemyBattleStateLoaded
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_NPC_Base_C_OnEnemyBattleStateLoaded final
{
public:
	bool                                          BattleState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Base_C_OnEnemyBattleStateLoaded) == 0x000001, "Wrong alignment on BP_jRPG_NPC_Base_C_OnEnemyBattleStateLoaded");
static_assert(sizeof(BP_jRPG_NPC_Base_C_OnEnemyBattleStateLoaded) == 0x000001, "Wrong size on BP_jRPG_NPC_Base_C_OnEnemyBattleStateLoaded");
static_assert(offsetof(BP_jRPG_NPC_Base_C_OnEnemyBattleStateLoaded, BattleState) == 0x000000, "Member 'BP_jRPG_NPC_Base_C_OnEnemyBattleStateLoaded::BattleState' has a wrong offset!");

// Function BP_jRPG_NPC_Base.BP_jRPG_NPC_Base_C.BndEvt__InteractionRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_jRPG_NPC_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_jRPG_NPC_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_jRPG_NPC_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on BP_jRPG_NPC_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_jRPG_NPC_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_jRPG_NPC_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_jRPG_NPC_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_jRPG_NPC_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_jRPG_NPC_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_jRPG_NPC_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_jRPG_NPC_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_jRPG_NPC_Base.BP_jRPG_NPC_Base_C.BndEvt__InteractionRange_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_jRPG_NPC_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_jRPG_NPC_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_jRPG_NPC_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_jRPG_NPC_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_jRPG_NPC_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_jRPG_NPC_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_jRPG_NPC_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_jRPG_NPC_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_jRPG_NPC_Base.BP_jRPG_NPC_Base_C.OnObjectInteractionStateLoaded
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_NPC_Base_C_OnObjectInteractionStateLoaded final
{
public:
	bool                                          InteractionState;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Base_C_OnObjectInteractionStateLoaded) == 0x000001, "Wrong alignment on BP_jRPG_NPC_Base_C_OnObjectInteractionStateLoaded");
static_assert(sizeof(BP_jRPG_NPC_Base_C_OnObjectInteractionStateLoaded) == 0x000001, "Wrong size on BP_jRPG_NPC_Base_C_OnObjectInteractionStateLoaded");
static_assert(offsetof(BP_jRPG_NPC_Base_C_OnObjectInteractionStateLoaded, InteractionState) == 0x000000, "Member 'BP_jRPG_NPC_Base_C_OnObjectInteractionStateLoaded::InteractionState' has a wrong offset!");

// Function BP_jRPG_NPC_Base.BP_jRPG_NPC_Base_C.BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_jRPG_NPC_Base_C_BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_jRPG_NPC_Base_C_BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Base_C_BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_jRPG_NPC_Base_C_BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on BP_jRPG_NPC_Base_C_BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_jRPG_NPC_Base_C_BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_jRPG_NPC_Base_C_BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_jRPG_NPC_Base_C_BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_jRPG_NPC_Base_C_BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_jRPG_NPC_Base_C_BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_jRPG_NPC_Base_C_BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_jRPG_NPC_Base_C_BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_jRPG_NPC_Base.BP_jRPG_NPC_Base_C.BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_jRPG_NPC_Base_C_BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Base_C_BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Base_C_BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_jRPG_NPC_Base_C_BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_jRPG_NPC_Base_C_BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_jRPG_NPC_Base_C_BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_jRPG_NPC_Base_C_BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_jRPG_NPC_Base_C_BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_jRPG_NPC_Base_C_BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_jRPG_NPC_Base_C_BndEvt__BP_jRPG_NPC_Base_RoamingStopSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_jRPG_NPC_Base.BP_jRPG_NPC_Base_C.OnActorInteractionRangeOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_NPC_Base_C_OnActorInteractionRangeOverlap final
{
public:
	class UObject*                                Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Base_C_OnActorInteractionRangeOverlap) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Base_C_OnActorInteractionRangeOverlap");
static_assert(sizeof(BP_jRPG_NPC_Base_C_OnActorInteractionRangeOverlap) == 0x000008, "Wrong size on BP_jRPG_NPC_Base_C_OnActorInteractionRangeOverlap");
static_assert(offsetof(BP_jRPG_NPC_Base_C_OnActorInteractionRangeOverlap, Actor) == 0x000000, "Member 'BP_jRPG_NPC_Base_C_OnActorInteractionRangeOverlap::Actor' has a wrong offset!");

// Function BP_jRPG_NPC_Base.BP_jRPG_NPC_Base_C.ExecuteUbergraph_BP_jRPG_NPC_Base
// 0x03D8 (0x03D8 - 0x0000)
struct BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_BattleState;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_3;  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_3;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_3;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_3;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0028(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InteractionState;                     // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_World_C*             K2Node_Event_InteractingWorldCharacter;            // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Instant;                              // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InteractionSystem_C*                CallFunc_GetInteractionSystem_ReturnValue;         // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_InteractionSystem_C*                CallFunc_GetInteractionSystem_ReturnValue_1;       // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Interaction_C>    CallFunc_UnregisterInteractiveObject_InteractiveObject_CastInput; // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Interaction_C>    CallFunc_RegisterInteractiveObject_InteractiveObject_CastInput; // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BD[0x3];                                      // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x01C0(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x02C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_2;              // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_3;              // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EA[0x2];                                      // 0x02EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_wildcard_Variable;                            // 0x0390(0x0010)(ReferenceParm)
	class UObject*                                K2Node_CustomEvent_Actor;                          // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x3];                                      // 0x03B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x03B8(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD[0x3];                                      // 0x03CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeed_ImplicitCast;      // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base");
static_assert(sizeof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base) == 0x0003D8, "Wrong size on BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, EntryPoint) == 0x000000, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, K2Node_Event_BattleState) == 0x000004, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::K2Node_Event_BattleState' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, K2Node_ComponentBoundEvent_OverlappedComponent_3) == 0x000008, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::K2Node_ComponentBoundEvent_OverlappedComponent_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, K2Node_ComponentBoundEvent_OtherActor_3) == 0x000010, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::K2Node_ComponentBoundEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, K2Node_ComponentBoundEvent_OtherComp_3) == 0x000018, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::K2Node_ComponentBoundEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, K2Node_ComponentBoundEvent_OtherBodyIndex_3) == 0x000020, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::K2Node_ComponentBoundEvent_OtherBodyIndex_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x000024, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000028, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x000120, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, K2Node_ComponentBoundEvent_OtherActor_2) == 0x000128, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, K2Node_ComponentBoundEvent_OtherComp_2) == 0x000130, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x000138, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, K2Node_Event_InteractionState) == 0x00013C, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::K2Node_Event_InteractionState' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, K2Node_Event_InteractingWorldCharacter) == 0x000140, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::K2Node_Event_InteractingWorldCharacter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, K2Node_Event_Instant) == 0x000148, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::K2Node_Event_Instant' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, CallFunc_GetInteractionSystem_ReturnValue) == 0x000150, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::CallFunc_GetInteractionSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, CallFunc_GetInteractionSystem_ReturnValue_1) == 0x000158, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::CallFunc_GetInteractionSystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, CallFunc_GetPlayerPawn_ReturnValue) == 0x000160, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000168, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000170, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, CallFunc_UnregisterInteractiveObject_InteractiveObject_CastInput) == 0x000178, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::CallFunc_UnregisterInteractiveObject_InteractiveObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, Temp_int_Array_Index_Variable) == 0x000188, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, CallFunc_RegisterInteractiveObject_InteractiveObject_CastInput) == 0x000190, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::CallFunc_RegisterInteractiveObject_InteractiveObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x0001A0, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, K2Node_ComponentBoundEvent_OtherActor_1) == 0x0001A8, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, K2Node_ComponentBoundEvent_OtherComp_1) == 0x0001B0, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x0001B8, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, K2Node_ComponentBoundEvent_bFromSweep) == 0x0001BC, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, K2Node_ComponentBoundEvent_SweepResult) == 0x0001C0, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0002B8, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, K2Node_ComponentBoundEvent_OtherActor) == 0x0002C0, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, K2Node_ComponentBoundEvent_OtherComp) == 0x0002C8, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0002D0, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, CallFunc_GetPlayerPawn_ReturnValue_2) == 0x0002D8, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::CallFunc_GetPlayerPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, CallFunc_GetPlayerPawn_ReturnValue_3) == 0x0002E0, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::CallFunc_GetPlayerPawn_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0002E8, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x0002E9, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, CallFunc_BreakRotator_Roll) == 0x0002EC, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, CallFunc_BreakRotator_Pitch) == 0x0002F0, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, CallFunc_BreakRotator_Yaw) == 0x0002F4, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0002F8, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000310, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, CallFunc_RLerp_ReturnValue) == 0x000318, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000330, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, CallFunc_BreakRotator_Roll_1) == 0x000348, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, CallFunc_BreakRotator_Pitch_1) == 0x00034C, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, CallFunc_BreakRotator_Yaw_1) == 0x000350, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, CallFunc_FindLookAtRotation_ReturnValue) == 0x000358, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, CallFunc_MakeRotator_ReturnValue) == 0x000370, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000388, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, Temp_wildcard_Variable) == 0x000390, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, K2Node_CustomEvent_Actor) == 0x0003A0, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, CallFunc_Array_Get_Item) == 0x0003A8, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x0003B0, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, CallFunc_Array_Length_ReturnValue) == 0x0003B4, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, CallFunc_GetOverlappingActors_OverlappingActors) == 0x0003B8, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, Temp_int_Loop_Counter_Variable) == 0x0003C8, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, CallFunc_Less_IntInt_ReturnValue) == 0x0003CC, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, CallFunc_Add_IntInt_ReturnValue) == 0x0003D0, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base, K2Node_VariableSet_MaxWalkSpeed_ImplicitCast) == 0x0003D4, "Member 'BP_jRPG_NPC_Base_C_ExecuteUbergraph_BP_jRPG_NPC_Base::K2Node_VariableSet_MaxWalkSpeed_ImplicitCast' has a wrong offset!");

// Function BP_jRPG_NPC_Base.BP_jRPG_NPC_Base_C.GetInteractionFeedbackLocation
// 0x0070 (0x0070 - 0x0000)
struct BP_jRPG_NPC_Base_C_GetInteractionFeedbackLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Base_C_GetInteractionFeedbackLocation) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Base_C_GetInteractionFeedbackLocation");
static_assert(sizeof(BP_jRPG_NPC_Base_C_GetInteractionFeedbackLocation) == 0x000070, "Wrong size on BP_jRPG_NPC_Base_C_GetInteractionFeedbackLocation");
static_assert(offsetof(BP_jRPG_NPC_Base_C_GetInteractionFeedbackLocation, Location) == 0x000000, "Member 'BP_jRPG_NPC_Base_C_GetInteractionFeedbackLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_GetInteractionFeedbackLocation, CallFunc_MakeLiteralName_ReturnValue) == 0x000018, "Member 'BP_jRPG_NPC_Base_C_GetInteractionFeedbackLocation::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_GetInteractionFeedbackLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_jRPG_NPC_Base_C_GetInteractionFeedbackLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_GetInteractionFeedbackLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000038, "Member 'BP_jRPG_NPC_Base_C_GetInteractionFeedbackLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_GetInteractionFeedbackLocation, CallFunc_DoesSocketExist_ReturnValue) == 0x000050, "Member 'BP_jRPG_NPC_Base_C_GetInteractionFeedbackLocation::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_GetInteractionFeedbackLocation, CallFunc_GetSocketLocation_ReturnValue) == 0x000058, "Member 'BP_jRPG_NPC_Base_C_GetInteractionFeedbackLocation::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");

// Function BP_jRPG_NPC_Base.BP_jRPG_NPC_Base_C.GetInteractionLocation
// 0x0030 (0x0030 - 0x0000)
struct BP_jRPG_NPC_Base_C_GetInteractionLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_NPC_Base_C_GetInteractionLocation) == 0x000008, "Wrong alignment on BP_jRPG_NPC_Base_C_GetInteractionLocation");
static_assert(sizeof(BP_jRPG_NPC_Base_C_GetInteractionLocation) == 0x000030, "Wrong size on BP_jRPG_NPC_Base_C_GetInteractionLocation");
static_assert(offsetof(BP_jRPG_NPC_Base_C_GetInteractionLocation, Location) == 0x000000, "Member 'BP_jRPG_NPC_Base_C_GetInteractionLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_jRPG_NPC_Base_C_GetInteractionLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_jRPG_NPC_Base_C_GetInteractionLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

}

