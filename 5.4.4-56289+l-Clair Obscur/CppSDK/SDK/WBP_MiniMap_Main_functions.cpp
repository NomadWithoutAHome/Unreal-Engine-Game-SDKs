#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MiniMap_Main

#include "Basic.hpp"

#include "WBP_MiniMap_Main_classes.hpp"
#include "WBP_MiniMap_Main_parameters.hpp"


namespace SDK
{

// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.BP_OnActivated
// (Event, Protected, BlueprintEvent)

void UWBP_MiniMap_Main_C::BP_OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MiniMap_Main_C", "BP_OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.BP_OnDeactivated
// (Event, Protected, BlueprintEvent)

void UWBP_MiniMap_Main_C::BP_OnDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MiniMap_Main_C", "BP_OnDeactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.BP_OnHandleBackAction
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWBP_MiniMap_Main_C::BP_OnHandleBackAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MiniMap_Main_C", "BP_OnHandleBackAction");

	Params::WBP_MiniMap_Main_C_BP_OnHandleBackAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_MiniMap_Main_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MiniMap_Main_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.ConvertMapLocationToWidgetLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 InMapLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       OutWidgetLocation                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MiniMap_Main_C::ConvertMapLocationToWidgetLocation(const struct FVector2D& InMapLocation, struct FVector2D* OutWidgetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MiniMap_Main_C", "ConvertMapLocationToWidgetLocation");

	Params::WBP_MiniMap_Main_C_ConvertMapLocationToWidgetLocation Parms{};

	Parms.InMapLocation = std::move(InMapLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (OutWidgetLocation != nullptr)
		*OutWidgetLocation = std::move(Parms.OutWidgetLocation);
}


// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_MiniMap_Main_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MiniMap_Main_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.DrawUnlockedSections
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<double>&                         UnlockedSections                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_MiniMap_Main_C::DrawUnlockedSections(TArray<double>& UnlockedSections)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MiniMap_Main_C", "DrawUnlockedSections");

	Params::WBP_MiniMap_Main_C_DrawUnlockedSections Parms{};

	Parms.UnlockedSections = std::move(UnlockedSections);

	UObject::ProcessEvent(Func, &Parms);

	UnlockedSections = std::move(Parms.UnlockedSections);
}


// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.ExecuteUbergraph_WBP_MiniMap_Main
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MiniMap_Main_C::ExecuteUbergraph_WBP_MiniMap_Main(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MiniMap_Main_C", "ExecuteUbergraph_WBP_MiniMap_Main");

	Params::WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.GenerateLevelPOI
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_MinimapLevelIdentifier& InLevelIdentifier                                      (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   InMapLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MiniMap_Main_C::GenerateLevelPOI(const struct FS_MinimapLevelIdentifier& InLevelIdentifier, const struct FVector& InMapLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MiniMap_Main_C", "GenerateLevelPOI");

	Params::WBP_MiniMap_Main_C_GenerateLevelPOI Parms{};

	Parms.InLevelIdentifier = std::move(InLevelIdentifier);
	Parms.InMapLocation = std::move(InMapLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.GenerateLevels
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_MiniMap_Main_C::GenerateLevels()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MiniMap_Main_C", "GenerateLevels");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.GetDisplayedRanged
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector2D*                       min_0                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       max_0                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MiniMap_Main_C::GetDisplayedRanged(struct FVector2D* min_0, struct FVector2D* max_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MiniMap_Main_C", "GetDisplayedRanged");

	Params::WBP_MiniMap_Main_C_GetDisplayedRanged Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (min_0 != nullptr)
		*min_0 = std::move(Parms.min_0);

	if (max_0 != nullptr)
		*max_0 = std::move(Parms.max_0);
}


// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.InpActEvt_IA_UI_MiniMap_CenterOnObjective_K2Node_EnhancedInputActionEvent_1
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_MiniMap_Main_C::InpActEvt_IA_UI_MiniMap_CenterOnObjective_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MiniMap_Main_C", "InpActEvt_IA_UI_MiniMap_CenterOnObjective_K2Node_EnhancedInputActionEvent_1");

	Params::WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_CenterOnObjective_K2Node_EnhancedInputActionEvent_1 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.InpActEvt_IA_UI_MiniMap_CenterOnPlayer_K2Node_EnhancedInputActionEvent_0
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_MiniMap_Main_C::InpActEvt_IA_UI_MiniMap_CenterOnPlayer_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MiniMap_Main_C", "InpActEvt_IA_UI_MiniMap_CenterOnPlayer_K2Node_EnhancedInputActionEvent_0");

	Params::WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_CenterOnPlayer_K2Node_EnhancedInputActionEvent_0 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.InpActEvt_IA_UI_MiniMap_Pan_K2Node_EnhancedInputActionEvent_5
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_MiniMap_Main_C::InpActEvt_IA_UI_MiniMap_Pan_K2Node_EnhancedInputActionEvent_5(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MiniMap_Main_C", "InpActEvt_IA_UI_MiniMap_Pan_K2Node_EnhancedInputActionEvent_5");

	Params::WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Pan_K2Node_EnhancedInputActionEvent_5 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_2
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_MiniMap_Main_C::InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_2(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MiniMap_Main_C", "InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_2");

	Params::WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_2 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_3
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_MiniMap_Main_C::InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_3(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MiniMap_Main_C", "InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_3");

	Params::WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_3 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_4
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_MiniMap_Main_C::InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_4(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MiniMap_Main_C", "InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_4");

	Params::WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_4 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.OnLoaded_2FE305B645036488FFDBA899E61DB293
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_MiniMap_Main_C::OnLoaded_2FE305B645036488FFDBA899E61DB293(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MiniMap_Main_C", "OnLoaded_2FE305B645036488FFDBA899E61DB293");

	Params::WBP_MiniMap_Main_C_OnLoaded_2FE305B645036488FFDBA899E61DB293 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.OnLoaded_D0B648A44D6C7E78FA99529F0E5C2A00
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_MiniMap_Main_C::OnLoaded_D0B648A44D6C7E78FA99529F0E5C2A00(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MiniMap_Main_C", "OnLoaded_D0B648A44D6C7E78FA99529F0E5C2A00");

	Params::WBP_MiniMap_Main_C_OnLoaded_D0B648A44D6C7E78FA99529F0E5C2A00 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.OnPanTrigger
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 InTriggerValue                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MiniMap_Main_C::OnPanTrigger(const struct FVector2D& InTriggerValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MiniMap_Main_C", "OnPanTrigger");

	Params::WBP_MiniMap_Main_C_OnPanTrigger Parms{};

	Parms.InTriggerValue = std::move(InTriggerValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.OnZoomTrigger
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InTriggerValue                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MiniMap_Main_C::OnZoomTrigger(double InTriggerValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MiniMap_Main_C", "OnZoomTrigger");

	Params::WBP_MiniMap_Main_C_OnZoomTrigger Parms{};

	Parms.InTriggerValue = InTriggerValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MiniMap_Main_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MiniMap_Main_C", "PreConstruct");

	Params::WBP_MiniMap_Main_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.RefreshQuestObjectives
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_MiniMap_Main_C::RefreshQuestObjectives()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MiniMap_Main_C", "RefreshQuestObjectives");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.SetPanLerp
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  PanLerp_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MiniMap_Main_C::SetPanLerp(double PanLerp_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MiniMap_Main_C", "SetPanLerp");

	Params::WBP_MiniMap_Main_C_SetPanLerp Parms{};

	Parms.PanLerp_0 = PanLerp_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.SetPanOffset
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 InOffset                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MiniMap_Main_C::SetPanOffset(const struct FVector2D& InOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MiniMap_Main_C", "SetPanOffset");

	Params::WBP_MiniMap_Main_C_SetPanOffset Parms{};

	Parms.InOffset = std::move(InOffset);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.SetZoomScale
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InZoom                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPanLerp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MiniMap_Main_C::SetZoomScale(double InZoom, bool IsPanLerp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MiniMap_Main_C", "SetZoomScale");

	Params::WBP_MiniMap_Main_C_SetZoomScale Parms{};

	Parms.InZoom = InZoom;
	Parms.IsPanLerp = IsPanLerp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.StartPanLerp
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 PanTarget_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MiniMap_Main_C::StartPanLerp(const struct FVector2D& PanTarget_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MiniMap_Main_C", "StartPanLerp");

	Params::WBP_MiniMap_Main_C_StartPanLerp Parms{};

	Parms.PanTarget_0 = std::move(PanTarget_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.UpdatePlayerPosition
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_MiniMap_Main_C::UpdatePlayerPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MiniMap_Main_C", "UpdatePlayerPosition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.UpdatePOIPositions
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_MiniMap_Main_C::UpdatePOIPositions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MiniMap_Main_C", "UpdatePOIPositions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.UpdateWidgetPosition
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 InWidgetPosition                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          InWidget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_MiniMap_Main_C::UpdateWidgetPosition(const struct FVector2D& InWidgetPosition, class UWidget* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MiniMap_Main_C", "UpdateWidgetPosition");

	Params::WBP_MiniMap_Main_C_UpdateWidgetPosition Parms{};

	Parms.InWidgetPosition = std::move(InWidgetPosition);
	Parms.InWidget = InWidget;

	UObject::ProcessEvent(Func, &Parms);
}

}

