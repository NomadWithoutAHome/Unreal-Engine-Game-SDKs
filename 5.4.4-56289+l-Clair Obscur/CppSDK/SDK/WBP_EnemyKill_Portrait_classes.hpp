#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_EnemyKill_Portrait

#include "Basic.hpp"

#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_EnemyKill_Portrait.WBP_EnemyKill_Portrait_C
// 0x0038 (0x0340 - 0x0308)
class UWBP_EnemyKill_Portrait_C final : public UCommonUserWidget
{
public:
	class UCommonLazyImage*                       Background;                                        // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonLazyImage*                       BloodBackground;                                   // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Count;                                             // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonLazyImage*                       Portrait;                                          // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_MaskPortrait;                          // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBoxFade;                                   // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FName                                   EnemyName;                                         // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void GetEnemyName(class FName* EnemyName_0);
	void LoadEnemyFromData(const struct FS_jRPG_Enemy& Enemy);
	void LoadEnemyFromHardcodedName(class FName EnemyHardcodedName);
	void SetCount(int32 InCount);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_EnemyKill_Portrait_C">();
	}
	static class UWBP_EnemyKill_Portrait_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_EnemyKill_Portrait_C>();
	}
};
static_assert(alignof(UWBP_EnemyKill_Portrait_C) == 0x000008, "Wrong alignment on UWBP_EnemyKill_Portrait_C");
static_assert(sizeof(UWBP_EnemyKill_Portrait_C) == 0x000340, "Wrong size on UWBP_EnemyKill_Portrait_C");
static_assert(offsetof(UWBP_EnemyKill_Portrait_C, Background) == 0x000308, "Member 'UWBP_EnemyKill_Portrait_C::Background' has a wrong offset!");
static_assert(offsetof(UWBP_EnemyKill_Portrait_C, BloodBackground) == 0x000310, "Member 'UWBP_EnemyKill_Portrait_C::BloodBackground' has a wrong offset!");
static_assert(offsetof(UWBP_EnemyKill_Portrait_C, Count) == 0x000318, "Member 'UWBP_EnemyKill_Portrait_C::Count' has a wrong offset!");
static_assert(offsetof(UWBP_EnemyKill_Portrait_C, Portrait) == 0x000320, "Member 'UWBP_EnemyKill_Portrait_C::Portrait' has a wrong offset!");
static_assert(offsetof(UWBP_EnemyKill_Portrait_C, RetainerBox_MaskPortrait) == 0x000328, "Member 'UWBP_EnemyKill_Portrait_C::RetainerBox_MaskPortrait' has a wrong offset!");
static_assert(offsetof(UWBP_EnemyKill_Portrait_C, RetainerBoxFade) == 0x000330, "Member 'UWBP_EnemyKill_Portrait_C::RetainerBoxFade' has a wrong offset!");
static_assert(offsetof(UWBP_EnemyKill_Portrait_C, EnemyName) == 0x000338, "Member 'UWBP_EnemyKill_Portrait_C::EnemyName' has a wrong offset!");

}

