#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GrapplePoint

#include "Basic.hpp"

#include "SandFall_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_jRPG_InteractionObject_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GrapplePoint.BP_GrapplePoint_C
// 0x0088 (0x0378 - 0x02F0)
class ABP_GrapplePoint_C final : public ABP_jRPG_InteractionObject_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_GrapplePoint_C;                  // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextRenderComponent*                   TextRender_EditorHelp;                             // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh_EditorHelp;                           // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        FX_Anchor;                                         // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackComponent*                ForceFeedback;                                     // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GPE_InternalActivationComponent_C*  BP_GPE_InternalActivationComponent;                // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Grapple;                                           // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          DeactivationZone;                                  // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        LandingSpot;                                       // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_ExplorationCapacityComponent_GrappleHook_C* GrappleComponentReference;                 // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Activated;                                         // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanBeActivated;                                    // 0x0341(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_342[0x6];                                      // 0x0342(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGPEInterfacesReferences               GPEInterface;                                      // 0x0348(0x0010)(Edit, BlueprintVisible)
	TArray<struct FGameAction_Wrapper>            GameActionsOnMidAir;                               // 0x0358(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class UAudioComponent*                        AC_Hand_R_01;                                      // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         FFBIntensityMultiplier;                            // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInRange;                                         // 0x0374(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Activate();
	void BndEvt__BP_GrapplePoint_DeactivationZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_GrapplePoint_DeactivationZone_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__BP_GrapplePoint_InteractionRange_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_GrapplePoint_InteractionRange_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	bool CheckForErrors(TArray<class FText>& ErrorMessages);
	void Deactivate();
	void DEBUG_ValidateInteractionRadius();
	void ExecuteUbergraph_BP_GrapplePoint(int32 EntryPoint);
	void GetInteractionPromptParams(struct FFPromptParams* PromptParams);
	void OnInteractionDisabled();
	void OnInteractionEnabled();
	void OnInteractionRequested(class ABP_jRPG_Character_World_C* InteractingWorldCharacter, bool Instant);
	void Play_Sound_Gapplin_Available(class UAudioComponent* AC_Hand_R_01_0);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void Stop__Sound_Gapplin_Available(class UAudioComponent* AC_Hand_R_01_0);
	void UpdateForceFeedbackIntensity();

	void GetInteractionLocation(struct FVector* Location) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GrapplePoint_C">();
	}
	static class ABP_GrapplePoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GrapplePoint_C>();
	}
};
static_assert(alignof(ABP_GrapplePoint_C) == 0x000008, "Wrong alignment on ABP_GrapplePoint_C");
static_assert(sizeof(ABP_GrapplePoint_C) == 0x000378, "Wrong size on ABP_GrapplePoint_C");
static_assert(offsetof(ABP_GrapplePoint_C, UberGraphFrame_BP_GrapplePoint_C) == 0x0002F0, "Member 'ABP_GrapplePoint_C::UberGraphFrame_BP_GrapplePoint_C' has a wrong offset!");
static_assert(offsetof(ABP_GrapplePoint_C, TextRender_EditorHelp) == 0x0002F8, "Member 'ABP_GrapplePoint_C::TextRender_EditorHelp' has a wrong offset!");
static_assert(offsetof(ABP_GrapplePoint_C, SkeletalMesh_EditorHelp) == 0x000300, "Member 'ABP_GrapplePoint_C::SkeletalMesh_EditorHelp' has a wrong offset!");
static_assert(offsetof(ABP_GrapplePoint_C, FX_Anchor) == 0x000308, "Member 'ABP_GrapplePoint_C::FX_Anchor' has a wrong offset!");
static_assert(offsetof(ABP_GrapplePoint_C, ForceFeedback) == 0x000310, "Member 'ABP_GrapplePoint_C::ForceFeedback' has a wrong offset!");
static_assert(offsetof(ABP_GrapplePoint_C, BP_GPE_InternalActivationComponent) == 0x000318, "Member 'ABP_GrapplePoint_C::BP_GPE_InternalActivationComponent' has a wrong offset!");
static_assert(offsetof(ABP_GrapplePoint_C, Grapple) == 0x000320, "Member 'ABP_GrapplePoint_C::Grapple' has a wrong offset!");
static_assert(offsetof(ABP_GrapplePoint_C, DeactivationZone) == 0x000328, "Member 'ABP_GrapplePoint_C::DeactivationZone' has a wrong offset!");
static_assert(offsetof(ABP_GrapplePoint_C, LandingSpot) == 0x000330, "Member 'ABP_GrapplePoint_C::LandingSpot' has a wrong offset!");
static_assert(offsetof(ABP_GrapplePoint_C, GrappleComponentReference) == 0x000338, "Member 'ABP_GrapplePoint_C::GrappleComponentReference' has a wrong offset!");
static_assert(offsetof(ABP_GrapplePoint_C, Activated) == 0x000340, "Member 'ABP_GrapplePoint_C::Activated' has a wrong offset!");
static_assert(offsetof(ABP_GrapplePoint_C, CanBeActivated) == 0x000341, "Member 'ABP_GrapplePoint_C::CanBeActivated' has a wrong offset!");
static_assert(offsetof(ABP_GrapplePoint_C, GPEInterface) == 0x000348, "Member 'ABP_GrapplePoint_C::GPEInterface' has a wrong offset!");
static_assert(offsetof(ABP_GrapplePoint_C, GameActionsOnMidAir) == 0x000358, "Member 'ABP_GrapplePoint_C::GameActionsOnMidAir' has a wrong offset!");
static_assert(offsetof(ABP_GrapplePoint_C, AC_Hand_R_01) == 0x000368, "Member 'ABP_GrapplePoint_C::AC_Hand_R_01' has a wrong offset!");
static_assert(offsetof(ABP_GrapplePoint_C, FFBIntensityMultiplier) == 0x000370, "Member 'ABP_GrapplePoint_C::FFBIntensityMultiplier' has a wrong offset!");
static_assert(offsetof(ABP_GrapplePoint_C, IsInRange) == 0x000374, "Member 'ABP_GrapplePoint_C::IsInRange' has a wrong offset!");

}

