#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TextualInputActionBinding

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "S_InputBindingParameters_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_TextualInputActionBinding.WBP_TextualInputActionBinding_C
// 0x0088 (0x0390 - 0x0308)
class UWBP_TextualInputActionBinding_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Feedback_Forbidden;                           // 0x0310(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UScaleBox*                              IconScaleBox;                                      // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_WrappingText_C*                    Text_Prompt_Horizontal;                            // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_WrappingText_C*                    Text_Prompt_Vertical_Above;                        // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_WrappingText_C*                    Text_Prompt_Vertical_Below;                        // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_InputActionBinding_C*              WBP_InputActionBinding;                            // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FS_InputBindingParameters              InputBindingParameters;                            // 0x0340(0x0028)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	class FText                                   ForcedInputText;                                   // 0x0368(0x0010)(Edit, BlueprintVisible)
	bool                                          IsInputTextVisible;                                // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTextAbove;                                       // 0x0379(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHorizontalText;                                  // 0x037A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37B[0x1];                                      // 0x037B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FontSize;                                          // 0x037C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        IconScale;                                         // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        TextMaxDesiredWidth;                               // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void SetRadialProgress(double InProgress);
	void SetInputText(const class FText& Text);
	void RefreshText();
	void RefreshWidget();
	void Feedback_Forbidden();
	void SetAllowed(bool isAllowed);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void ExecuteUbergraph_WBP_TextualInputActionBinding(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_TextualInputActionBinding_C">();
	}
	static class UWBP_TextualInputActionBinding_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_TextualInputActionBinding_C>();
	}
};
static_assert(alignof(UWBP_TextualInputActionBinding_C) == 0x000008, "Wrong alignment on UWBP_TextualInputActionBinding_C");
static_assert(sizeof(UWBP_TextualInputActionBinding_C) == 0x000390, "Wrong size on UWBP_TextualInputActionBinding_C");
static_assert(offsetof(UWBP_TextualInputActionBinding_C, UberGraphFrame) == 0x000308, "Member 'UWBP_TextualInputActionBinding_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_TextualInputActionBinding_C, Anim_Feedback_Forbidden) == 0x000310, "Member 'UWBP_TextualInputActionBinding_C::Anim_Feedback_Forbidden' has a wrong offset!");
static_assert(offsetof(UWBP_TextualInputActionBinding_C, IconScaleBox) == 0x000318, "Member 'UWBP_TextualInputActionBinding_C::IconScaleBox' has a wrong offset!");
static_assert(offsetof(UWBP_TextualInputActionBinding_C, Text_Prompt_Horizontal) == 0x000320, "Member 'UWBP_TextualInputActionBinding_C::Text_Prompt_Horizontal' has a wrong offset!");
static_assert(offsetof(UWBP_TextualInputActionBinding_C, Text_Prompt_Vertical_Above) == 0x000328, "Member 'UWBP_TextualInputActionBinding_C::Text_Prompt_Vertical_Above' has a wrong offset!");
static_assert(offsetof(UWBP_TextualInputActionBinding_C, Text_Prompt_Vertical_Below) == 0x000330, "Member 'UWBP_TextualInputActionBinding_C::Text_Prompt_Vertical_Below' has a wrong offset!");
static_assert(offsetof(UWBP_TextualInputActionBinding_C, WBP_InputActionBinding) == 0x000338, "Member 'UWBP_TextualInputActionBinding_C::WBP_InputActionBinding' has a wrong offset!");
static_assert(offsetof(UWBP_TextualInputActionBinding_C, InputBindingParameters) == 0x000340, "Member 'UWBP_TextualInputActionBinding_C::InputBindingParameters' has a wrong offset!");
static_assert(offsetof(UWBP_TextualInputActionBinding_C, ForcedInputText) == 0x000368, "Member 'UWBP_TextualInputActionBinding_C::ForcedInputText' has a wrong offset!");
static_assert(offsetof(UWBP_TextualInputActionBinding_C, IsInputTextVisible) == 0x000378, "Member 'UWBP_TextualInputActionBinding_C::IsInputTextVisible' has a wrong offset!");
static_assert(offsetof(UWBP_TextualInputActionBinding_C, IsTextAbove) == 0x000379, "Member 'UWBP_TextualInputActionBinding_C::IsTextAbove' has a wrong offset!");
static_assert(offsetof(UWBP_TextualInputActionBinding_C, IsHorizontalText) == 0x00037A, "Member 'UWBP_TextualInputActionBinding_C::IsHorizontalText' has a wrong offset!");
static_assert(offsetof(UWBP_TextualInputActionBinding_C, FontSize) == 0x00037C, "Member 'UWBP_TextualInputActionBinding_C::FontSize' has a wrong offset!");
static_assert(offsetof(UWBP_TextualInputActionBinding_C, IconScale) == 0x000380, "Member 'UWBP_TextualInputActionBinding_C::IconScale' has a wrong offset!");
static_assert(offsetof(UWBP_TextualInputActionBinding_C, TextMaxDesiredWidth) == 0x000388, "Member 'UWBP_TextualInputActionBinding_C::TextMaxDesiredWidth' has a wrong offset!");

}

