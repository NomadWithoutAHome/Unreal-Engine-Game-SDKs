#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AICompanion_CompanionManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "S_jRPG_PartySlot_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AICompanion_CompanionManager.BP_AICompanion_CompanionManager_C
// 0x00E0 (0x0180 - 0x00A0)
class UBP_AICompanion_CompanionManager_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          SpawnCompanionsEnabled;                            // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_Pawn_AICompanion_C*>         SpawnedCompanions;                                 // 0x00B0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class UBP_AICompanion_TargetPointsComponent_C* TargetPointsComponent;                            // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_jRPG_PartySlot>              PreviousParty;                                     // 0x00C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsInCinematicMode;                                 // 0x00D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_LoadClassAssetRequest_C*>    LoadClassAssetRequests;                            // 0x00E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                DefaultQueryExtentOnSpawn;                         // 0x00F0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FallbackQueryExtentOnSpawn;                        // 0x0108(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class ABP_Pawn_AICompanion_C*> Name_To_Companion_Map;                          // 0x0120(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FName>                           Companion_Names_In_Party;                          // 0x0170(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ActivateCompanion(class ABP_Pawn_AICompanion_C* Companion_To_Activate, const struct FVector& Teleport_Position, bool* Success);
	void ApplyAllCharacterCustomizations();
	void CancelAllLoadRequests();
	void CanSpawnCompanions(bool* CanSpawn);
	void DeactivateCompanion(class ABP_Pawn_AICompanion_C* Companion_To_Deactivate);
	void DestroyAllCompanionActors(bool Instant);
	void DestroyCompanionsNoLongerInTheParty();
	void ExecuteUbergraph_BP_AICompanion_CompanionManager(int32 EntryPoint);
	void GetCompanionNamesInParty(TArray<class FName>* Companion_Names_In_Party_0);
	void GetCompanionNamesToActivate(TArray<class FName>* Companion_Names_To_Activate);
	void Hide_All_Companions();
	void OnCompanionDestroyed(class AActor* DestroyedActor);
	void OnLoadRequestCompleted(class UBP_LoadClassAssetRequest_C* LoadRequest);
	void OnMainMenuClosed();
	void OnMainMenuOpened();
	void ProjectLocationOnNavigationForCompanion(const struct FVector& Location, const struct FVector& QueryExtent, struct FVector* ProjectedLocation, bool* Success);
	void ReceiveBeginPlay();
	void ResetCompanionLocations(bool SpawnTeleportationFX);
	void SetCinematicMode(bool IsInCinematic);
	void SetCompanionsEnabled(bool Enabled);
	void Spawn_And_Update_Companions();
	void Spawn_Companion(class UClass* Companion_Class, class ABP_Pawn_AICompanion_C** Spawned_Companion);
	void Spawn_Companion_From_Class(class UClass* Companion_Class, class ABP_Pawn_AICompanion_C** Spawned_Companion);
	void SpawnAllCompanions();
	void TryTeleportToLocation(class ABP_Pawn_AICompanion_C* Companion, const struct FVector& Location, const struct FRotator& Rotation, bool SpawnTeleportationFX, bool* Success);
	void TryTeleportToTargetPoint(class ABP_Pawn_AICompanion_C* Companion, bool SpawnTeleportationFX, bool* Success);
	void UnspawnAllCompanions(bool Instant);
	void UpdateActivatedCompanions();
	void UpdateCompanionsVisualAlterations();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AICompanion_CompanionManager_C">();
	}
	static class UBP_AICompanion_CompanionManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AICompanion_CompanionManager_C>();
	}
};
static_assert(alignof(UBP_AICompanion_CompanionManager_C) == 0x000008, "Wrong alignment on UBP_AICompanion_CompanionManager_C");
static_assert(sizeof(UBP_AICompanion_CompanionManager_C) == 0x000180, "Wrong size on UBP_AICompanion_CompanionManager_C");
static_assert(offsetof(UBP_AICompanion_CompanionManager_C, UberGraphFrame) == 0x0000A0, "Member 'UBP_AICompanion_CompanionManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AICompanion_CompanionManager_C, SpawnCompanionsEnabled) == 0x0000A8, "Member 'UBP_AICompanion_CompanionManager_C::SpawnCompanionsEnabled' has a wrong offset!");
static_assert(offsetof(UBP_AICompanion_CompanionManager_C, SpawnedCompanions) == 0x0000B0, "Member 'UBP_AICompanion_CompanionManager_C::SpawnedCompanions' has a wrong offset!");
static_assert(offsetof(UBP_AICompanion_CompanionManager_C, TargetPointsComponent) == 0x0000C0, "Member 'UBP_AICompanion_CompanionManager_C::TargetPointsComponent' has a wrong offset!");
static_assert(offsetof(UBP_AICompanion_CompanionManager_C, PreviousParty) == 0x0000C8, "Member 'UBP_AICompanion_CompanionManager_C::PreviousParty' has a wrong offset!");
static_assert(offsetof(UBP_AICompanion_CompanionManager_C, IsInCinematicMode) == 0x0000D8, "Member 'UBP_AICompanion_CompanionManager_C::IsInCinematicMode' has a wrong offset!");
static_assert(offsetof(UBP_AICompanion_CompanionManager_C, LoadClassAssetRequests) == 0x0000E0, "Member 'UBP_AICompanion_CompanionManager_C::LoadClassAssetRequests' has a wrong offset!");
static_assert(offsetof(UBP_AICompanion_CompanionManager_C, DefaultQueryExtentOnSpawn) == 0x0000F0, "Member 'UBP_AICompanion_CompanionManager_C::DefaultQueryExtentOnSpawn' has a wrong offset!");
static_assert(offsetof(UBP_AICompanion_CompanionManager_C, FallbackQueryExtentOnSpawn) == 0x000108, "Member 'UBP_AICompanion_CompanionManager_C::FallbackQueryExtentOnSpawn' has a wrong offset!");
static_assert(offsetof(UBP_AICompanion_CompanionManager_C, Name_To_Companion_Map) == 0x000120, "Member 'UBP_AICompanion_CompanionManager_C::Name_To_Companion_Map' has a wrong offset!");
static_assert(offsetof(UBP_AICompanion_CompanionManager_C, Companion_Names_In_Party) == 0x000170, "Member 'UBP_AICompanion_CompanionManager_C::Companion_Names_In_Party' has a wrong offset!");

}

