#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_StanceMechanicComponent

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "E_StanceType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "SandFall_structs.hpp"


namespace SDK::Params
{

// Function WBP_StanceMechanicComponent.WBP_StanceMechanicComponent_C.ExecuteUbergraph_WBP_StanceMechanicComponent
// 0x0048 (0x0048 - 0x0000)
struct WBP_StanceMechanicComponent_C_ExecuteUbergraph_WBP_StanceMechanicComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UWidgetAnimation*                 K2Node_Event_Animation;                            // 0x0010(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  Temp_byte_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundEventDataTableRowHandle          K2Node_Select_Default;                             // 0x0020(0x0010)(NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  Temp_byte_Variable_1;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundEventDataTableRowHandle          K2Node_Select_Default_1;                           // 0x0038(0x0010)(NoDestructor)
};
static_assert(alignof(WBP_StanceMechanicComponent_C_ExecuteUbergraph_WBP_StanceMechanicComponent) == 0x000008, "Wrong alignment on WBP_StanceMechanicComponent_C_ExecuteUbergraph_WBP_StanceMechanicComponent");
static_assert(sizeof(WBP_StanceMechanicComponent_C_ExecuteUbergraph_WBP_StanceMechanicComponent) == 0x000048, "Wrong size on WBP_StanceMechanicComponent_C_ExecuteUbergraph_WBP_StanceMechanicComponent");
static_assert(offsetof(WBP_StanceMechanicComponent_C_ExecuteUbergraph_WBP_StanceMechanicComponent, EntryPoint) == 0x000000, "Member 'WBP_StanceMechanicComponent_C_ExecuteUbergraph_WBP_StanceMechanicComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_ExecuteUbergraph_WBP_StanceMechanicComponent, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WBP_StanceMechanicComponent_C_ExecuteUbergraph_WBP_StanceMechanicComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_ExecuteUbergraph_WBP_StanceMechanicComponent, K2Node_Event_IsDesignTime) == 0x000005, "Member 'WBP_StanceMechanicComponent_C_ExecuteUbergraph_WBP_StanceMechanicComponent::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_ExecuteUbergraph_WBP_StanceMechanicComponent, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'WBP_StanceMechanicComponent_C_ExecuteUbergraph_WBP_StanceMechanicComponent::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_ExecuteUbergraph_WBP_StanceMechanicComponent, K2Node_Event_Animation) == 0x000010, "Member 'WBP_StanceMechanicComponent_C_ExecuteUbergraph_WBP_StanceMechanicComponent::K2Node_Event_Animation' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_ExecuteUbergraph_WBP_StanceMechanicComponent, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'WBP_StanceMechanicComponent_C_ExecuteUbergraph_WBP_StanceMechanicComponent::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_ExecuteUbergraph_WBP_StanceMechanicComponent, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'WBP_StanceMechanicComponent_C_ExecuteUbergraph_WBP_StanceMechanicComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_ExecuteUbergraph_WBP_StanceMechanicComponent, Temp_byte_Variable) == 0x00001A, "Member 'WBP_StanceMechanicComponent_C_ExecuteUbergraph_WBP_StanceMechanicComponent::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_ExecuteUbergraph_WBP_StanceMechanicComponent, K2Node_Select_Default) == 0x000020, "Member 'WBP_StanceMechanicComponent_C_ExecuteUbergraph_WBP_StanceMechanicComponent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_ExecuteUbergraph_WBP_StanceMechanicComponent, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000030, "Member 'WBP_StanceMechanicComponent_C_ExecuteUbergraph_WBP_StanceMechanicComponent::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_ExecuteUbergraph_WBP_StanceMechanicComponent, Temp_byte_Variable_1) == 0x000031, "Member 'WBP_StanceMechanicComponent_C_ExecuteUbergraph_WBP_StanceMechanicComponent::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_ExecuteUbergraph_WBP_StanceMechanicComponent, K2Node_Select_Default_1) == 0x000038, "Member 'WBP_StanceMechanicComponent_C_ExecuteUbergraph_WBP_StanceMechanicComponent::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_StanceMechanicComponent.WBP_StanceMechanicComponent_C.OnAnimationFinished
// 0x0008 (0x0008 - 0x0000)
struct WBP_StanceMechanicComponent_C_OnAnimationFinished final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StanceMechanicComponent_C_OnAnimationFinished) == 0x000008, "Wrong alignment on WBP_StanceMechanicComponent_C_OnAnimationFinished");
static_assert(sizeof(WBP_StanceMechanicComponent_C_OnAnimationFinished) == 0x000008, "Wrong size on WBP_StanceMechanicComponent_C_OnAnimationFinished");
static_assert(offsetof(WBP_StanceMechanicComponent_C_OnAnimationFinished, Animation) == 0x000000, "Member 'WBP_StanceMechanicComponent_C_OnAnimationFinished::Animation' has a wrong offset!");

// Function WBP_StanceMechanicComponent.WBP_StanceMechanicComponent_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_StanceMechanicComponent_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StanceMechanicComponent_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_StanceMechanicComponent_C_PreConstruct");
static_assert(sizeof(WBP_StanceMechanicComponent_C_PreConstruct) == 0x000001, "Wrong size on WBP_StanceMechanicComponent_C_PreConstruct");
static_assert(offsetof(WBP_StanceMechanicComponent_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_StanceMechanicComponent_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_StanceMechanicComponent.WBP_StanceMechanicComponent_C.SetPortraitVisibility
// 0x0018 (0x0018 - 0x0000)
struct WBP_StanceMechanicComponent_C_SetPortraitVisibility final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  Temp_byte_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  Temp_byte_Variable_8;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_12;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  Temp_byte_Variable_13;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_14;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_15;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_16;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_17;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_18;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  Temp_byte_Variable_19;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StanceMechanicComponent_C_SetPortraitVisibility) == 0x000001, "Wrong alignment on WBP_StanceMechanicComponent_C_SetPortraitVisibility");
static_assert(sizeof(WBP_StanceMechanicComponent_C_SetPortraitVisibility) == 0x000018, "Wrong size on WBP_StanceMechanicComponent_C_SetPortraitVisibility");
static_assert(offsetof(WBP_StanceMechanicComponent_C_SetPortraitVisibility, Temp_byte_Variable) == 0x000000, "Member 'WBP_StanceMechanicComponent_C_SetPortraitVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_SetPortraitVisibility, Temp_byte_Variable_1) == 0x000001, "Member 'WBP_StanceMechanicComponent_C_SetPortraitVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_SetPortraitVisibility, Temp_byte_Variable_2) == 0x000002, "Member 'WBP_StanceMechanicComponent_C_SetPortraitVisibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_SetPortraitVisibility, Temp_byte_Variable_3) == 0x000003, "Member 'WBP_StanceMechanicComponent_C_SetPortraitVisibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_SetPortraitVisibility, Temp_byte_Variable_4) == 0x000004, "Member 'WBP_StanceMechanicComponent_C_SetPortraitVisibility::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_SetPortraitVisibility, Temp_byte_Variable_5) == 0x000005, "Member 'WBP_StanceMechanicComponent_C_SetPortraitVisibility::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_SetPortraitVisibility, Temp_byte_Variable_6) == 0x000006, "Member 'WBP_StanceMechanicComponent_C_SetPortraitVisibility::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_SetPortraitVisibility, Temp_byte_Variable_7) == 0x000007, "Member 'WBP_StanceMechanicComponent_C_SetPortraitVisibility::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_SetPortraitVisibility, Temp_byte_Variable_8) == 0x000008, "Member 'WBP_StanceMechanicComponent_C_SetPortraitVisibility::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_SetPortraitVisibility, Temp_byte_Variable_9) == 0x000009, "Member 'WBP_StanceMechanicComponent_C_SetPortraitVisibility::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_SetPortraitVisibility, Temp_byte_Variable_10) == 0x00000A, "Member 'WBP_StanceMechanicComponent_C_SetPortraitVisibility::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_SetPortraitVisibility, Temp_byte_Variable_11) == 0x00000B, "Member 'WBP_StanceMechanicComponent_C_SetPortraitVisibility::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_SetPortraitVisibility, Temp_byte_Variable_12) == 0x00000C, "Member 'WBP_StanceMechanicComponent_C_SetPortraitVisibility::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_SetPortraitVisibility, Temp_byte_Variable_13) == 0x00000D, "Member 'WBP_StanceMechanicComponent_C_SetPortraitVisibility::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_SetPortraitVisibility, Temp_byte_Variable_14) == 0x00000E, "Member 'WBP_StanceMechanicComponent_C_SetPortraitVisibility::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_SetPortraitVisibility, Temp_byte_Variable_15) == 0x00000F, "Member 'WBP_StanceMechanicComponent_C_SetPortraitVisibility::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_SetPortraitVisibility, Temp_byte_Variable_16) == 0x000010, "Member 'WBP_StanceMechanicComponent_C_SetPortraitVisibility::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_SetPortraitVisibility, Temp_byte_Variable_17) == 0x000011, "Member 'WBP_StanceMechanicComponent_C_SetPortraitVisibility::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_SetPortraitVisibility, Temp_byte_Variable_18) == 0x000012, "Member 'WBP_StanceMechanicComponent_C_SetPortraitVisibility::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_SetPortraitVisibility, Temp_byte_Variable_19) == 0x000013, "Member 'WBP_StanceMechanicComponent_C_SetPortraitVisibility::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_SetPortraitVisibility, K2Node_Select_Default) == 0x000014, "Member 'WBP_StanceMechanicComponent_C_SetPortraitVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_SetPortraitVisibility, K2Node_Select_Default_1) == 0x000015, "Member 'WBP_StanceMechanicComponent_C_SetPortraitVisibility::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_SetPortraitVisibility, K2Node_Select_Default_2) == 0x000016, "Member 'WBP_StanceMechanicComponent_C_SetPortraitVisibility::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_SetPortraitVisibility, K2Node_Select_Default_3) == 0x000017, "Member 'WBP_StanceMechanicComponent_C_SetPortraitVisibility::K2Node_Select_Default_3' has a wrong offset!");

// Function WBP_StanceMechanicComponent.WBP_StanceMechanicComponent_C.UpdateStanceUI
// 0x0120 (0x0120 - 0x0000)
struct WBP_StanceMechanicComponent_C_UpdateStanceUI final
{
public:
	E_StanceType                                  Stance;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnTurnStart;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetStanceDisplayName_ReturnValue;         // 0x0008(0x0010)()
	float                                         Temp_real_Variable_1;                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  Temp_byte_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  Temp_byte_Variable_1;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0074(0x0014)()
	class FText                                   Temp_text_Variable;                                // 0x0088(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0098(0x0010)()
	class FText                                   Temp_text_Variable_2;                              // 0x00A8(0x0010)()
	class FText                                   Temp_text_Variable_3;                              // 0x00B8(0x0010)()
	bool                                          Temp_bool_Variable;                                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x00D0(0x0010)()
	float                                         CallFunc_GetRenderOpacity_ReturnValue;             // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_2;                           // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_1; // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StanceMechanicComponent_C_UpdateStanceUI) == 0x000008, "Wrong alignment on WBP_StanceMechanicComponent_C_UpdateStanceUI");
static_assert(sizeof(WBP_StanceMechanicComponent_C_UpdateStanceUI) == 0x000120, "Wrong size on WBP_StanceMechanicComponent_C_UpdateStanceUI");
static_assert(offsetof(WBP_StanceMechanicComponent_C_UpdateStanceUI, Stance) == 0x000000, "Member 'WBP_StanceMechanicComponent_C_UpdateStanceUI::Stance' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_UpdateStanceUI, OnTurnStart) == 0x000001, "Member 'WBP_StanceMechanicComponent_C_UpdateStanceUI::OnTurnStart' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_UpdateStanceUI, Temp_real_Variable) == 0x000004, "Member 'WBP_StanceMechanicComponent_C_UpdateStanceUI::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_UpdateStanceUI, CallFunc_GetStanceDisplayName_ReturnValue) == 0x000008, "Member 'WBP_StanceMechanicComponent_C_UpdateStanceUI::CallFunc_GetStanceDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_UpdateStanceUI, Temp_real_Variable_1) == 0x000018, "Member 'WBP_StanceMechanicComponent_C_UpdateStanceUI::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_UpdateStanceUI, Temp_byte_Variable) == 0x00001C, "Member 'WBP_StanceMechanicComponent_C_UpdateStanceUI::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_UpdateStanceUI, Temp_struct_Variable) == 0x000020, "Member 'WBP_StanceMechanicComponent_C_UpdateStanceUI::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_UpdateStanceUI, Temp_struct_Variable_1) == 0x000030, "Member 'WBP_StanceMechanicComponent_C_UpdateStanceUI::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_UpdateStanceUI, Temp_struct_Variable_2) == 0x000040, "Member 'WBP_StanceMechanicComponent_C_UpdateStanceUI::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_UpdateStanceUI, Temp_struct_Variable_3) == 0x000050, "Member 'WBP_StanceMechanicComponent_C_UpdateStanceUI::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_UpdateStanceUI, Temp_byte_Variable_1) == 0x000060, "Member 'WBP_StanceMechanicComponent_C_UpdateStanceUI::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_UpdateStanceUI, K2Node_Select_Default) == 0x000064, "Member 'WBP_StanceMechanicComponent_C_UpdateStanceUI::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_UpdateStanceUI, K2Node_MakeStruct_SlateColor) == 0x000074, "Member 'WBP_StanceMechanicComponent_C_UpdateStanceUI::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_UpdateStanceUI, Temp_text_Variable) == 0x000088, "Member 'WBP_StanceMechanicComponent_C_UpdateStanceUI::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_UpdateStanceUI, Temp_text_Variable_1) == 0x000098, "Member 'WBP_StanceMechanicComponent_C_UpdateStanceUI::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_UpdateStanceUI, Temp_text_Variable_2) == 0x0000A8, "Member 'WBP_StanceMechanicComponent_C_UpdateStanceUI::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_UpdateStanceUI, Temp_text_Variable_3) == 0x0000B8, "Member 'WBP_StanceMechanicComponent_C_UpdateStanceUI::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_UpdateStanceUI, Temp_bool_Variable) == 0x0000C8, "Member 'WBP_StanceMechanicComponent_C_UpdateStanceUI::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_UpdateStanceUI, K2Node_Select_Default_1) == 0x0000D0, "Member 'WBP_StanceMechanicComponent_C_UpdateStanceUI::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_UpdateStanceUI, CallFunc_GetRenderOpacity_ReturnValue) == 0x0000E0, "Member 'WBP_StanceMechanicComponent_C_UpdateStanceUI::CallFunc_GetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_UpdateStanceUI, CallFunc_PlayAnimationReverse_ReturnValue) == 0x0000E8, "Member 'WBP_StanceMechanicComponent_C_UpdateStanceUI::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_UpdateStanceUI, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x0000F0, "Member 'WBP_StanceMechanicComponent_C_UpdateStanceUI::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_UpdateStanceUI, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x0000F1, "Member 'WBP_StanceMechanicComponent_C_UpdateStanceUI::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_UpdateStanceUI, CallFunc_PlayAnimationForward_ReturnValue) == 0x0000F8, "Member 'WBP_StanceMechanicComponent_C_UpdateStanceUI::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_UpdateStanceUI, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000100, "Member 'WBP_StanceMechanicComponent_C_UpdateStanceUI::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_UpdateStanceUI, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000101, "Member 'WBP_StanceMechanicComponent_C_UpdateStanceUI::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_UpdateStanceUI, K2Node_Select_Default_2) == 0x000104, "Member 'WBP_StanceMechanicComponent_C_UpdateStanceUI::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_UpdateStanceUI, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000108, "Member 'WBP_StanceMechanicComponent_C_UpdateStanceUI::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_UpdateStanceUI, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x000110, "Member 'WBP_StanceMechanicComponent_C_UpdateStanceUI::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_StanceMechanicComponent_C_UpdateStanceUI, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_1) == 0x000118, "Member 'WBP_StanceMechanicComponent_C_UpdateStanceUI::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

}

