#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LighingScenarioMain_DONOTTOUCH

#include "Basic.hpp"

#include "BP_LighingScenarioMain_DONOTTOUCH_classes.hpp"
#include "BP_LighingScenarioMain_DONOTTOUCH_parameters.hpp"


namespace SDK
{

// Function BP_LighingScenarioMain_DONOTTOUCH.BP_LighingScenarioMain_DONOTTOUCH_C.Are Sky Light Settings Valid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_LightingScenarioReference_C*  LightScenario                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LighingScenarioMain_DONOTTOUCH_C::Are_Sky_Light_Settings_Valid(class ABP_LightingScenarioReference_C* LightScenario, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LighingScenarioMain_DONOTTOUCH_C", "Are Sky Light Settings Valid");

	Params::BP_LighingScenarioMain_DONOTTOUCH_C_Are_Sky_Light_Settings_Valid Parms{};

	Parms.LightScenario = LightScenario;

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function BP_LighingScenarioMain_DONOTTOUCH.BP_LighingScenarioMain_DONOTTOUCH_C.BlendAllElements
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_LighingScenarioMain_DONOTTOUCH_C::BlendAllElements()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LighingScenarioMain_DONOTTOUCH_C", "BlendAllElements");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LighingScenarioMain_DONOTTOUCH.BP_LighingScenarioMain_DONOTTOUCH_C.BlendDirectionalLight
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LighingScenarioMain_DONOTTOUCH_C::BlendDirectionalLight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LighingScenarioMain_DONOTTOUCH_C", "BlendDirectionalLight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LighingScenarioMain_DONOTTOUCH.BP_LighingScenarioMain_DONOTTOUCH_C.BlendDirectionalLightMask
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_LighingScenarioMain_DONOTTOUCH_C::BlendDirectionalLightMask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LighingScenarioMain_DONOTTOUCH_C", "BlendDirectionalLightMask");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LighingScenarioMain_DONOTTOUCH.BP_LighingScenarioMain_DONOTTOUCH_C.BlendFog
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LighingScenarioMain_DONOTTOUCH_C::BlendFog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LighingScenarioMain_DONOTTOUCH_C", "BlendFog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LighingScenarioMain_DONOTTOUCH.BP_LighingScenarioMain_DONOTTOUCH_C.BlendSkyAtmosphere
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LighingScenarioMain_DONOTTOUCH_C::BlendSkyAtmosphere()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LighingScenarioMain_DONOTTOUCH_C", "BlendSkyAtmosphere");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LighingScenarioMain_DONOTTOUCH.BP_LighingScenarioMain_DONOTTOUCH_C.BlendSkylight
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_LighingScenarioMain_DONOTTOUCH_C::BlendSkylight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LighingScenarioMain_DONOTTOUCH_C", "BlendSkylight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LighingScenarioMain_DONOTTOUCH.BP_LighingScenarioMain_DONOTTOUCH_C.BreakLightingScenarioInComponents
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_LightingScenarioReference_C*  LightingScenario                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UDirectionalLightComponent**      DirectionalLightComponent                              (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UExponentialHeightFogComponent**  ExponentialFogComponent                                (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class USkyLightComponent**              SkyLightComponent                                      (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class USkyAtmosphereComponent**         SkyAtmosphereComponent                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_LighingScenarioMain_DONOTTOUCH_C::BreakLightingScenarioInComponents(class ABP_LightingScenarioReference_C* LightingScenario, class UDirectionalLightComponent** DirectionalLightComponent, class UExponentialHeightFogComponent** ExponentialFogComponent, class USkyLightComponent** SkyLightComponent, class USkyAtmosphereComponent** SkyAtmosphereComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LighingScenarioMain_DONOTTOUCH_C", "BreakLightingScenarioInComponents");

	Params::BP_LighingScenarioMain_DONOTTOUCH_C_BreakLightingScenarioInComponents Parms{};

	Parms.LightingScenario = LightingScenario;

	UObject::ProcessEvent(Func, &Parms);

	if (DirectionalLightComponent != nullptr)
		*DirectionalLightComponent = Parms.DirectionalLightComponent;

	if (ExponentialFogComponent != nullptr)
		*ExponentialFogComponent = Parms.ExponentialFogComponent;

	if (SkyLightComponent != nullptr)
		*SkyLightComponent = Parms.SkyLightComponent;

	if (SkyAtmosphereComponent != nullptr)
		*SkyAtmosphereComponent = Parms.SkyAtmosphereComponent;
}


// Function BP_LighingScenarioMain_DONOTTOUCH.BP_LighingScenarioMain_DONOTTOUCH_C.CanChangeLigthingScenario
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_LightingScenarioReference_C*  NewLightingScenario                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_LighingScenarioMain_DONOTTOUCH_C::CanChangeLigthingScenario(class ABP_LightingScenarioReference_C* NewLightingScenario)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LighingScenarioMain_DONOTTOUCH_C", "CanChangeLigthingScenario");

	Params::BP_LighingScenarioMain_DONOTTOUCH_C_CanChangeLigthingScenario Parms{};

	Parms.NewLightingScenario = NewLightingScenario;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LighingScenarioMain_DONOTTOUCH.BP_LighingScenarioMain_DONOTTOUCH_C.ChangeLightingToScenario
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_LightingScenarioReference_C*  LightingScenarioReference                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const float                             ChangeSpeedMultiplier                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LighingScenarioMain_DONOTTOUCH_C::ChangeLightingToScenario(class ABP_LightingScenarioReference_C* LightingScenarioReference, const float ChangeSpeedMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LighingScenarioMain_DONOTTOUCH_C", "ChangeLightingToScenario");

	Params::BP_LighingScenarioMain_DONOTTOUCH_C_ChangeLightingToScenario Parms{};

	Parms.LightingScenarioReference = LightingScenarioReference;
	Parms.ChangeSpeedMultiplier = ChangeSpeedMultiplier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LighingScenarioMain_DONOTTOUCH.BP_LighingScenarioMain_DONOTTOUCH_C.CheckForErrors
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>&                    ErrorMessages                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_LighingScenarioMain_DONOTTOUCH_C::CheckForErrors(TArray<class FText>& ErrorMessages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LighingScenarioMain_DONOTTOUCH_C", "CheckForErrors");

	Params::BP_LighingScenarioMain_DONOTTOUCH_C_CheckForErrors Parms{};

	Parms.ErrorMessages = std::move(ErrorMessages);

	UObject::ProcessEvent(Func, &Parms);

	ErrorMessages = std::move(Parms.ErrorMessages);

	return Parms.ReturnValue;
}


// Function BP_LighingScenarioMain_DONOTTOUCH.BP_LighingScenarioMain_DONOTTOUCH_C.DeactivateAllScenariosForCinematics
// (BlueprintCallable, BlueprintEvent)

void ABP_LighingScenarioMain_DONOTTOUCH_C::DeactivateAllScenariosForCinematics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LighingScenarioMain_DONOTTOUCH_C", "DeactivateAllScenariosForCinematics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LighingScenarioMain_DONOTTOUCH.BP_LighingScenarioMain_DONOTTOUCH_C.DEBUG_PrintLightingScenarioChange
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class UObject*                    LightingScenario                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const float                             Speed                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LighingScenarioMain_DONOTTOUCH_C::DEBUG_PrintLightingScenarioChange(const class UObject* LightingScenario, const float Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LighingScenarioMain_DONOTTOUCH_C", "DEBUG_PrintLightingScenarioChange");

	Params::BP_LighingScenarioMain_DONOTTOUCH_C_DEBUG_PrintLightingScenarioChange Parms{};

	Parms.LightingScenario = LightingScenario;
	Parms.Speed = Speed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LighingScenarioMain_DONOTTOUCH.BP_LighingScenarioMain_DONOTTOUCH_C.ExecuteUbergraph_BP_LighingScenarioMain_DONOTTOUCH
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LighingScenarioMain_DONOTTOUCH_C::ExecuteUbergraph_BP_LighingScenarioMain_DONOTTOUCH(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LighingScenarioMain_DONOTTOUCH_C", "ExecuteUbergraph_BP_LighingScenarioMain_DONOTTOUCH");

	Params::BP_LighingScenarioMain_DONOTTOUCH_C_ExecuteUbergraph_BP_LighingScenarioMain_DONOTTOUCH Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LighingScenarioMain_DONOTTOUCH.BP_LighingScenarioMain_DONOTTOUCH_C.HideAllLigthingScenariosAndSequencerActors
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LighingScenarioMain_DONOTTOUCH_C::HideAllLigthingScenariosAndSequencerActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LighingScenarioMain_DONOTTOUCH_C", "HideAllLigthingScenariosAndSequencerActors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LighingScenarioMain_DONOTTOUCH.BP_LighingScenarioMain_DONOTTOUCH_C.HideLightingScenarioReferences
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LighingScenarioMain_DONOTTOUCH_C::HideLightingScenarioReferences()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LighingScenarioMain_DONOTTOUCH_C", "HideLightingScenarioReferences");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LighingScenarioMain_DONOTTOUCH.BP_LighingScenarioMain_DONOTTOUCH_C.HideLightsForCinematics
// (BlueprintCallable, BlueprintEvent)

void ABP_LighingScenarioMain_DONOTTOUCH_C::HideLightsForCinematics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LighingScenarioMain_DONOTTOUCH_C", "HideLightsForCinematics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LighingScenarioMain_DONOTTOUCH.BP_LighingScenarioMain_DONOTTOUCH_C.IncrementTimerAndCompareToRate
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_LighingScenarioMain_DONOTTOUCH_C::IncrementTimerAndCompareToRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LighingScenarioMain_DONOTTOUCH_C", "IncrementTimerAndCompareToRate");

	Params::BP_LighingScenarioMain_DONOTTOUCH_C_IncrementTimerAndCompareToRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LighingScenarioMain_DONOTTOUCH.BP_LighingScenarioMain_DONOTTOUCH_C.MarkDirty
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LighingScenarioMain_DONOTTOUCH_C::MarkDirty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LighingScenarioMain_DONOTTOUCH_C", "MarkDirty");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LighingScenarioMain_DONOTTOUCH.BP_LighingScenarioMain_DONOTTOUCH_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_LighingScenarioMain_DONOTTOUCH_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LighingScenarioMain_DONOTTOUCH_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LighingScenarioMain_DONOTTOUCH.BP_LighingScenarioMain_DONOTTOUCH_C.SetAllElementsVisbility
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visibility                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LighingScenarioMain_DONOTTOUCH_C::SetAllElementsVisbility(bool Visibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LighingScenarioMain_DONOTTOUCH_C", "SetAllElementsVisbility");

	Params::BP_LighingScenarioMain_DONOTTOUCH_C_SetAllElementsVisbility Parms{};

	Parms.Visibility = Visibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LighingScenarioMain_DONOTTOUCH.BP_LighingScenarioMain_DONOTTOUCH_C.SetLightingScenarioDoNotTouchActivated
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LighingScenarioMain_DONOTTOUCH_C::SetLightingScenarioDoNotTouchActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LighingScenarioMain_DONOTTOUCH_C", "SetLightingScenarioDoNotTouchActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LighingScenarioMain_DONOTTOUCH.BP_LighingScenarioMain_DONOTTOUCH_C.SetMainScenarioHidden
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LighingScenarioMain_DONOTTOUCH_C::SetMainScenarioHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LighingScenarioMain_DONOTTOUCH_C", "SetMainScenarioHidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LighingScenarioMain_DONOTTOUCH.BP_LighingScenarioMain_DONOTTOUCH_C.SetMainScenarioVisible
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LighingScenarioMain_DONOTTOUCH_C::SetMainScenarioVisible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LighingScenarioMain_DONOTTOUCH_C", "SetMainScenarioVisible");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LighingScenarioMain_DONOTTOUCH.BP_LighingScenarioMain_DONOTTOUCH_C.SetupLightingScenarioChange
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_LightingScenarioReference_C*  LightingScenario                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_LighingScenarioMain_DONOTTOUCH_C::SetupLightingScenarioChange(class ABP_LightingScenarioReference_C* LightingScenario)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LighingScenarioMain_DONOTTOUCH_C", "SetupLightingScenarioChange");

	Params::BP_LighingScenarioMain_DONOTTOUCH_C_SetupLightingScenarioChange Parms{};

	Parms.LightingScenario = LightingScenario;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LighingScenarioMain_DONOTTOUCH.BP_LighingScenarioMain_DONOTTOUCH_C.Timeline__FinishedFunc
// (BlueprintEvent)

void ABP_LighingScenarioMain_DONOTTOUCH_C::Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LighingScenarioMain_DONOTTOUCH_C", "Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LighingScenarioMain_DONOTTOUCH.BP_LighingScenarioMain_DONOTTOUCH_C.Timeline__UpdateFunc
// (BlueprintEvent)

void ABP_LighingScenarioMain_DONOTTOUCH_C::Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LighingScenarioMain_DONOTTOUCH_C", "Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LighingScenarioMain_DONOTTOUCH.BP_LighingScenarioMain_DONOTTOUCH_C.UpdateTimer
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_LighingScenarioMain_DONOTTOUCH_C::UpdateTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LighingScenarioMain_DONOTTOUCH_C", "UpdateTimer");

	UObject::ProcessEvent(Func, nullptr);
}

}

