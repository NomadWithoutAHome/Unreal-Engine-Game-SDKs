#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VelocityControllerComponent

#include "Basic.hpp"

#include "BP_VelocityControllerComponent_classes.hpp"
#include "BP_VelocityControllerComponent_parameters.hpp"


namespace SDK
{

// Function BP_VelocityControllerComponent.BP_VelocityControllerComponent_C.CheckForErrors
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>&                    ErrorMessages                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_VelocityControllerComponent_C::CheckForErrors(TArray<class FText>& ErrorMessages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VelocityControllerComponent_C", "CheckForErrors");

	Params::BP_VelocityControllerComponent_C_CheckForErrors Parms{};

	Parms.ErrorMessages = std::move(ErrorMessages);

	UObject::ProcessEvent(Func, &Parms);

	ErrorMessages = std::move(Parms.ErrorMessages);

	return Parms.ReturnValue;
}


// Function BP_VelocityControllerComponent.BP_VelocityControllerComponent_C.ExecuteUbergraph_BP_VelocityControllerComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VelocityControllerComponent_C::ExecuteUbergraph_BP_VelocityControllerComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VelocityControllerComponent_C", "ExecuteUbergraph_BP_VelocityControllerComponent");

	Params::BP_VelocityControllerComponent_C_ExecuteUbergraph_BP_VelocityControllerComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VelocityControllerComponent.BP_VelocityControllerComponent_C.GetOwnerAsCharacter
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ACharacter**                      Character                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_VelocityControllerComponent_C::GetOwnerAsCharacter(class ACharacter** Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VelocityControllerComponent_C", "GetOwnerAsCharacter");

	Params::BP_VelocityControllerComponent_C_GetOwnerAsCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Character != nullptr)
		*Character = Parms.Character;
}


// Function BP_VelocityControllerComponent.BP_VelocityControllerComponent_C.LimitVelocityIfNeeded
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_VelocityControllerComponent_C::LimitVelocityIfNeeded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VelocityControllerComponent_C", "LimitVelocityIfNeeded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VelocityControllerComponent.BP_VelocityControllerComponent_C.OnMovementModeChanged
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EMovementMode                           PrevMovementMode                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   PreviousCustomMode                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VelocityControllerComponent_C::OnMovementModeChanged(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VelocityControllerComponent_C", "OnMovementModeChanged");

	Params::BP_VelocityControllerComponent_C_OnMovementModeChanged Parms{};

	Parms.Character = Character;
	Parms.PrevMovementMode = PrevMovementMode;
	Parms.PreviousCustomMode = PreviousCustomMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VelocityControllerComponent.BP_VelocityControllerComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_VelocityControllerComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VelocityControllerComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VelocityControllerComponent.BP_VelocityControllerComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VelocityControllerComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VelocityControllerComponent_C", "ReceiveTick");

	Params::BP_VelocityControllerComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}

}

