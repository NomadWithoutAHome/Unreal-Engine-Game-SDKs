#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattleBuffInstance

#include "Basic.hpp"

#include "BP_BattleBuffInstance_classes.hpp"
#include "BP_BattleBuffInstance_parameters.hpp"


namespace SDK
{

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ActivateBuff
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class UAC_jRPG_CharacterBattleStats_C*&CharacterStats                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::ActivateBuff(const class UAC_jRPG_CharacterBattleStats_C*& CharacterStats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "ActivateBuff");

	Params::BP_BattleBuffInstance_C_ActivateBuff Parms{};

	Parms.CharacterStats = CharacterStats;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.DeactivateBuff
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleBuffInstance_C::DeactivateBuff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "DeactivateBuff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.OnCharacterTurnStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*  CharacterStats                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const class UBP_DependencyRefCounter_C*&TurnStartDependencies                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::OnCharacterTurnStart(class UAC_jRPG_CharacterBattleStats_C* CharacterStats, const class UBP_DependencyRefCounter_C*& TurnStartDependencies)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "OnCharacterTurnStart");

	Params::BP_BattleBuffInstance_C_OnCharacterTurnStart Parms{};

	Parms.CharacterStats = CharacterStats;
	Parms.TurnStartDependencies = TurnStartDependencies;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ProcessReceivedRawDamages
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_BattleDamages_C*&             BattleDamages                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool*                                   Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::ProcessReceivedRawDamages(class UBP_BattleDamages_C*& BattleDamages, bool* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "ProcessReceivedRawDamages");

	Params::BP_BattleBuffInstance_C_ProcessReceivedRawDamages Parms{};

	Parms.BattleDamages = BattleDamages;

	UObject::ProcessEvent(Func, &Parms);

	BattleDamages = Parms.BattleDamages;

	if (Out != nullptr)
		*Out = Parms.Out;
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ExecuteUbergraph_BP_BattleBuffInstance
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::ExecuteUbergraph_BP_BattleBuffInstance(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "ExecuteUbergraph_BP_BattleBuffInstance");

	Params::BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.GetDamageSourceCharacter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C** CharacterStats                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::GetDamageSourceCharacter(class UAC_jRPG_CharacterBattleStats_C** CharacterStats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "GetDamageSourceCharacter");

	Params::BP_BattleBuffInstance_C_GetDamageSourceCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CharacterStats != nullptr)
		*CharacterStats = Parms.CharacterStats;
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.GetDamageSourceType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDamageReason*                          DamageSourceType                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::GetDamageSourceType(EDamageReason* DamageSourceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "GetDamageSourceType");

	Params::BP_BattleBuffInstance_C_GetDamageSourceType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DamageSourceType != nullptr)
		*DamageSourceType = Parms.DamageSourceType;
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.IsTurnStartInProgress
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   InProgress                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::IsTurnStartInProgress(bool* InProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "IsTurnStartInProgress");

	Params::BP_BattleBuffInstance_C_IsTurnStartInProgress Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InProgress != nullptr)
		*InProgress = Parms.InProgress;
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.OnCharacterDealtDamages
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*  CharacterStats                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  Damages                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 ProcessedDamages                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::OnCharacterDealtDamages(class UAC_jRPG_CharacterBattleStats_C* CharacterStats, double Damages, double* ProcessedDamages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "OnCharacterDealtDamages");

	Params::BP_BattleBuffInstance_C_OnCharacterDealtDamages Parms{};

	Parms.CharacterStats = CharacterStats;
	Parms.Damages = Damages;

	UObject::ProcessEvent(Func, &Parms);

	if (ProcessedDamages != nullptr)
		*ProcessedDamages = Parms.ProcessedDamages;
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.GetInstigatorObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UObject* UBP_BattleBuffInstance_C::GetInstigatorObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "GetInstigatorObject");

	Params::BP_BattleBuffInstance_C_GetInstigatorObject Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.SetInstigatorObject
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Instigator                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::SetInstigatorObject(class UObject* Instigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "SetInstigatorObject");

	Params::BP_BattleBuffInstance_C_SetInstigatorObject Parms{};

	Parms.Instigator = Instigator;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ModifyOwnerSkillStates
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TMap<class UBP_DataAsset_Skill_C*, class UBP_SkillState_C*>&SkillStates                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_BattleBuffInstance_C::ModifyOwnerSkillStates(const TMap<class UBP_DataAsset_Skill_C*, class UBP_SkillState_C*>& SkillStates)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "ModifyOwnerSkillStates");

	Params::BP_BattleBuffInstance_C_ModifyOwnerSkillStates Parms{};

	Parms.SkillStates = std::move(SkillStates);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ProcessBattleStartEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_DependencyRefCounter_C*       DepsRefCount                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::ProcessBattleStartEvent(class UBP_DependencyRefCounter_C* DepsRefCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "ProcessBattleStartEvent");

	Params::BP_BattleBuffInstance_C_ProcessBattleStartEvent Parms{};

	Parms.DepsRefCount = DepsRefCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ProcessDealtDamageCriticalHitChance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_BattleDamages_C*              Damages                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool*                                   Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::ProcessDealtDamageCriticalHitChance(class UBP_BattleDamages_C* Damages, bool* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "ProcessDealtDamageCriticalHitChance");

	Params::BP_BattleBuffInstance_C_ProcessDealtDamageCriticalHitChance Parms{};

	Parms.Damages = Damages;

	UObject::ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = Parms.Out;
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.OnVisualEffectDimChange
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDimmed                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::OnVisualEffectDimChange(bool IsDimmed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "OnVisualEffectDimChange");

	Params::BP_BattleBuffInstance_C_OnVisualEffectDimChange Parms{};

	Parms.IsDimmed = IsDimmed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.SetTurnDuration
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TurnDuration_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::SetTurnDuration(int32 TurnDuration_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "SetTurnDuration");

	Params::BP_BattleBuffInstance_C_SetTurnDuration Parms{};

	Parms.TurnDuration_0 = TurnDuration_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.OnBuffStackCountChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::OnBuffStackCountChanged(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "OnBuffStackCountChanged");

	Params::BP_BattleBuffInstance_C_OnBuffStackCountChanged Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ShouldKeepOnDeath
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Keep                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::ShouldKeepOnDeath(bool* Keep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "ShouldKeepOnDeath");

	Params::BP_BattleBuffInstance_C_ShouldKeepOnDeath Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Keep != nullptr)
		*Keep = Parms.Keep;
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.FeedbackBuffTriggeredOnTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FLinearColor&              Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::FeedbackBuffTriggeredOnTarget(const class FText& Text, const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "FeedbackBuffTriggeredOnTarget");

	Params::BP_BattleBuffInstance_C_FeedbackBuffTriggeredOnTarget Parms{};

	Parms.Text = std::move(Text);
	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.IsBuffPermanent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_BattleBuffInstance_C::IsBuffPermanent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "IsBuffPermanent");

	Params::BP_BattleBuffInstance_C_IsBuffPermanent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.SetPermanent
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleBuffInstance_C::SetPermanent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "SetPermanent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.OnGradientGaugeChange
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_GradientGaugeChangeEvent_C*   GradientChangeEvent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::OnGradientGaugeChange(class UBP_GradientGaugeChangeEvent_C* GradientChangeEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "OnGradientGaugeChange");

	Params::BP_BattleBuffInstance_C_OnGradientGaugeChange Parms{};

	Parms.GradientChangeEvent = GradientChangeEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.GetBuffDisplayName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UBP_BattleBuffInstance_C::GetBuffDisplayName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "GetBuffDisplayName");

	Params::BP_BattleBuffInstance_C_GetBuffDisplayName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.OnDeathDamagePrevented
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleBuffInstance_C::OnDeathDamagePrevented()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "OnDeathDamagePrevented");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.GetStackCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  StackCount_0                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::GetStackCount(int32* StackCount_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "GetStackCount");

	Params::BP_BattleBuffInstance_C_GetStackCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StackCount_0 != nullptr)
		*StackCount_0 = Parms.StackCount_0;
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ChangeStackCount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   StackCount_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::ChangeStackCount(int32 StackCount_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "ChangeStackCount");

	Params::BP_BattleBuffInstance_C_ChangeStackCount Parms{};

	Parms.StackCount_0 = StackCount_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.UpdateCustomBuffWidget
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_jRPG_BuffSlot_C*             BuffWidget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool*                                   DummyOut                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::UpdateCustomBuffWidget(class UWBP_jRPG_BuffSlot_C* BuffWidget, bool* DummyOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "UpdateCustomBuffWidget");

	Params::BP_BattleBuffInstance_C_UpdateCustomBuffWidget Parms{};

	Parms.BuffWidget = BuffWidget;

	UObject::ProcessEvent(Func, &Parms);

	if (DummyOut != nullptr)
		*DummyOut = Parms.DummyOut;
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.InitializeCustomBuffWidget
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_jRPG_BuffSlot_C*             BuffWidget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool*                                   DummyOut                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::InitializeCustomBuffWidget(class UWBP_jRPG_BuffSlot_C* BuffWidget, bool* DummyOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "InitializeCustomBuffWidget");

	Params::BP_BattleBuffInstance_C_InitializeCustomBuffWidget Parms{};

	Parms.BuffWidget = BuffWidget;

	UObject::ProcessEvent(Func, &Parms);

	if (DummyOut != nullptr)
		*DummyOut = Parms.DummyOut;
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.RegisterBuffWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class UWBP_jRPG_BuffSlot_C*&      BuffSlotWidget                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::RegisterBuffWidget(const class UWBP_jRPG_BuffSlot_C*& BuffSlotWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "RegisterBuffWidget");

	Params::BP_BattleBuffInstance_C_RegisterBuffWidget Parms{};

	Parms.BuffSlotWidget = BuffSlotWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ProcessPermeateDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_BattleDamages_C*              Damages                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool*                                   Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::ProcessPermeateDamage(class UBP_BattleDamages_C* Damages, bool* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "ProcessPermeateDamage");

	Params::BP_BattleBuffInstance_C_ProcessPermeateDamage Parms{};

	Parms.Damages = Damages;

	UObject::ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = Parms.Out;
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ProcessAttackElement
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_BattleDamages_C*              Damages                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool*                                   Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::ProcessAttackElement(class UBP_BattleDamages_C* Damages, bool* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "ProcessAttackElement");

	Params::BP_BattleBuffInstance_C_ProcessAttackElement Parms{};

	Parms.Damages = Damages;

	UObject::ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = Parms.Out;
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.OnStanceChange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_StanceType                            NewStance                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_StanceType                            previousStance                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_StanceType*                           NewStance1                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_StanceType*                           PreviousStance1                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::OnStanceChange(E_StanceType NewStance, E_StanceType previousStance, E_StanceType* NewStance1, E_StanceType* PreviousStance1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "OnStanceChange");

	Params::BP_BattleBuffInstance_C_OnStanceChange Parms{};

	Parms.NewStance = NewStance;
	Parms.previousStance = previousStance;

	UObject::ProcessEvent(Func, &Parms);

	if (NewStance1 != nullptr)
		*NewStance1 = Parms.NewStance1;

	if (PreviousStance1 != nullptr)
		*PreviousStance1 = Parms.PreviousStance1;
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ProcessHeal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_BattleHeal_C*                 Heal                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   DummyOut                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::ProcessHeal(class UBP_BattleHeal_C* Heal, bool* DummyOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "ProcessHeal");

	Params::BP_BattleBuffInstance_C_ProcessHeal Parms{};

	Parms.Heal = Heal;

	UObject::ProcessEvent(Func, &Parms);

	if (DummyOut != nullptr)
		*DummyOut = Parms.DummyOut;
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ProcessAPChange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewAPAmount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PreviousAPAmount                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EAPChangeReason                         ChangeReason                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   HasChanged                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  ChangedValue                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::ProcessAPChange(int32 NewAPAmount, int32 PreviousAPAmount, EAPChangeReason ChangeReason, bool* HasChanged, int32* ChangedValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "ProcessAPChange");

	Params::BP_BattleBuffInstance_C_ProcessAPChange Parms{};

	Parms.NewAPAmount = NewAPAmount;
	Parms.PreviousAPAmount = PreviousAPAmount;
	Parms.ChangeReason = ChangeReason;

	UObject::ProcessEvent(Func, &Parms);

	if (HasChanged != nullptr)
		*HasChanged = Parms.HasChanged;

	if (ChangedValue != nullptr)
		*ChangedValue = Parms.ChangedValue;
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.OnPerfectionChanged
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewPerfection                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DeltaPerfection                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_PerfectionUpdateType                  PerfectionChangeType                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPerfectionReason                       PerfectionChangeReason                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  FinalPerfection                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::OnPerfectionChanged(int32 NewPerfection, int32 DeltaPerfection, E_PerfectionUpdateType PerfectionChangeType, EPerfectionReason PerfectionChangeReason, int32* FinalPerfection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "OnPerfectionChanged");

	Params::BP_BattleBuffInstance_C_OnPerfectionChanged Parms{};

	Parms.NewPerfection = NewPerfection;
	Parms.DeltaPerfection = DeltaPerfection;
	Parms.PerfectionChangeType = PerfectionChangeType;
	Parms.PerfectionChangeReason = PerfectionChangeReason;

	UObject::ProcessEvent(Func, &Parms);

	if (FinalPerfection != nullptr)
		*FinalPerfection = Parms.FinalPerfection;
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.GetDebugText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText*                            DebugInfo                                              (Parm, OutParm)

void UBP_BattleBuffInstance_C::GetDebugText(class FText* DebugInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "GetDebugText");

	Params::BP_BattleBuffInstance_C_GetDebugText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DebugInfo != nullptr)
		*DebugInfo = std::move(Parms.DebugInfo);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.MarkBuffForRemoval
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_BattleBuffInstance_C::MarkBuffForRemoval()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "MarkBuffForRemoval");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.IsBuffTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*  CharacterStats                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsTarget                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::IsBuffTarget(class UAC_jRPG_CharacterBattleStats_C* CharacterStats, bool* IsTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "IsBuffTarget");

	Params::BP_BattleBuffInstance_C_IsBuffTarget Parms{};

	Parms.CharacterStats = CharacterStats;

	UObject::ProcessEvent(Func, &Parms);

	if (IsTarget != nullptr)
		*IsTarget = Parms.IsTarget;
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ProcessDealtRawDamages
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_BattleDamages_C*&             BattleDamages                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool*                                   Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::ProcessDealtRawDamages(class UBP_BattleDamages_C*& BattleDamages, bool* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "ProcessDealtRawDamages");

	Params::BP_BattleBuffInstance_C_ProcessDealtRawDamages Parms{};

	Parms.BattleDamages = BattleDamages;

	UObject::ProcessEvent(Func, &Parms);

	BattleDamages = Parms.BattleDamages;

	if (Out != nullptr)
		*Out = Parms.Out;
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.HideAllParticleSystems
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleBuffInstance_C::HideAllParticleSystems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "HideAllParticleSystems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ShowAllParticleSystems
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleBuffInstance_C::ShowAllParticleSystems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "ShowAllParticleSystems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.RemoveAllParticleSystems
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleBuffInstance_C::RemoveAllParticleSystems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "RemoveAllParticleSystems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.AddCharacterParticleSystem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*  CharacterStats                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// E_jRPG_CharacterAttachmentSlot          AttachmentSlot                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystem*                  ParticleSystemCascade                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  PartySystemRotation                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UNiagaraSystem*                   SystemNiagara                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   PositionOffset                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystemComponent**        ParticleSystemCompoCascade                             (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UNiagaraComponent**               NiagaraSystem                                          (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::AddCharacterParticleSystem(class UAC_jRPG_CharacterBattleStats_C* CharacterStats, E_jRPG_CharacterAttachmentSlot AttachmentSlot, class UParticleSystem* ParticleSystemCascade, const struct FRotator& PartySystemRotation, class UNiagaraSystem* SystemNiagara, const struct FVector& PositionOffset, class UParticleSystemComponent** ParticleSystemCompoCascade, class UNiagaraComponent** NiagaraSystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "AddCharacterParticleSystem");

	Params::BP_BattleBuffInstance_C_AddCharacterParticleSystem Parms{};

	Parms.CharacterStats = CharacterStats;
	Parms.AttachmentSlot = AttachmentSlot;
	Parms.ParticleSystemCascade = ParticleSystemCascade;
	Parms.PartySystemRotation = std::move(PartySystemRotation);
	Parms.SystemNiagara = SystemNiagara;
	Parms.PositionOffset = std::move(PositionOffset);

	UObject::ProcessEvent(Func, &Parms);

	if (ParticleSystemCompoCascade != nullptr)
		*ParticleSystemCompoCascade = Parms.ParticleSystemCompoCascade;

	if (NiagaraSystem != nullptr)
		*NiagaraSystem = Parms.NiagaraSystem;
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ProcessReceivedFinalDamages
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_BattleDamages_C*&             BattleDamages                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// int32                                   CurrentTurnHitCount                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::ProcessReceivedFinalDamages(class UBP_BattleDamages_C*& BattleDamages, int32 CurrentTurnHitCount, bool* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "ProcessReceivedFinalDamages");

	Params::BP_BattleBuffInstance_C_ProcessReceivedFinalDamages Parms{};

	Parms.BattleDamages = BattleDamages;
	Parms.CurrentTurnHitCount = CurrentTurnHitCount;

	UObject::ProcessEvent(Func, &Parms);

	BattleDamages = Parms.BattleDamages;

	if (Out != nullptr)
		*Out = Parms.Out;
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.OnLoaded_148FF7BA4C95776B122106A0489F695B
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::OnLoaded_148FF7BA4C95776B122106A0489F695B(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "OnLoaded_148FF7BA4C95776B122106A0489F695B");

	Params::BP_BattleBuffInstance_C_OnLoaded_148FF7BA4C95776B122106A0489F695B Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.OnBattleStop
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleBuffInstance_C::OnBattleStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "OnBattleStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.OnCharacterReceivedDamages
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*  TargetCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAC_jRPG_CharacterBattleStats_C*  SourceCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  ReceivedDamages                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_BattleDamages_C*              BattleDamages                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::OnCharacterReceivedDamages(class UAC_jRPG_CharacterBattleStats_C* TargetCharacter, class UAC_jRPG_CharacterBattleStats_C* SourceCharacter, double ReceivedDamages, class UBP_BattleDamages_C* BattleDamages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "OnCharacterReceivedDamages");

	Params::BP_BattleBuffInstance_C_OnCharacterReceivedDamages Parms{};

	Parms.TargetCharacter = TargetCharacter;
	Parms.SourceCharacter = SourceCharacter;
	Parms.ReceivedDamages = ReceivedDamages;
	Parms.BattleDamages = BattleDamages;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.OnCharacterKilled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*  CharacterStats                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::OnCharacterKilled(class UAC_jRPG_CharacterBattleStats_C* CharacterStats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "OnCharacterKilled");

	Params::BP_BattleBuffInstance_C_OnCharacterKilled Parms{};

	Parms.CharacterStats = CharacterStats;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.OnCharacterResurrected
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleBuffInstance_C::OnCharacterResurrected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "OnCharacterResurrected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ProcessAddBuffAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class UAction_AddBuff_C*&         BuffAddAction                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::ProcessAddBuffAction(const class UAction_AddBuff_C*& BuffAddAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "ProcessAddBuffAction");

	Params::BP_BattleBuffInstance_C_ProcessAddBuffAction Parms{};

	Parms.BuffAddAction = BuffAddAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.OnSuccessfulParry
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleBuffInstance_C::OnSuccessfulParry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "OnSuccessfulParry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.OnSuccessfulDodge
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleBuffInstance_C::OnSuccessfulDodge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "OnSuccessfulDodge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.BPI_OnAnyCharacterDamaged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_BattleDamages_C*              BattleDamage                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::BPI_OnAnyCharacterDamaged(class UBP_BattleDamages_C* BattleDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "BPI_OnAnyCharacterDamaged");

	Params::BP_BattleBuffInstance_C_BPI_OnAnyCharacterDamaged Parms{};

	Parms.BattleDamage = BattleDamage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.BPI_OnAnyCharacterAP_Changed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_BattleEvent_APChange_C*       AP_Change                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::BPI_OnAnyCharacterAP_Changed(class UBP_BattleEvent_APChange_C* AP_Change)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "BPI_OnAnyCharacterAP_Changed");

	Params::BP_BattleBuffInstance_C_BPI_OnAnyCharacterAP_Changed Parms{};

	Parms.AP_Change = AP_Change;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.BPI_OnBattleStart
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleBuffInstance_C::BPI_OnBattleStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "BPI_OnBattleStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.BPI_OnReserveTeamSent
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleBuffInstance_C::BPI_OnReserveTeamSent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "BPI_OnReserveTeamSent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ApplyOnTurnEnd
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleBuffInstance_C::ApplyOnTurnEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "ApplyOnTurnEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.Event Play Sound Feedback
// (BlueprintCallable, BlueprintEvent)

void UBP_BattleBuffInstance_C::Event_Play_Sound_Feedback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "Event Play Sound Feedback");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.IsBuffFromFamily
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UBP_BattleBuffInstance_C>TestFamily                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_BattleBuffInstance_C::IsBuffFromFamily(TSubclassOf<class UBP_BattleBuffInstance_C> TestFamily) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "IsBuffFromFamily");

	Params::BP_BattleBuffInstance_C_IsBuffFromFamily Parms{};

	Parms.TestFamily = TestFamily;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.IsSameBuffFamily
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UBP_BattleBuffInstance_C*         BattleBuffInstance                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsSame                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_C::IsSameBuffFamily(class UBP_BattleBuffInstance_C* BattleBuffInstance, bool* IsSame) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_C", "IsSameBuffFamily");

	Params::BP_BattleBuffInstance_C_IsSameBuffFamily Parms{};

	Parms.BattleBuffInstance = BattleBuffInstance;

	UObject::ProcessEvent(Func, &Parms);

	if (IsSame != nullptr)
		*IsSame = Parms.IsSame;
}

}

