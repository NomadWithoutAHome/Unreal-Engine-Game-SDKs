#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GradientChargeGauge

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_GradientChargeGauge.WBP_GradientChargeGauge_C
// 0x0128 (0x0408 - 0x02E0)
class UWBP_GradientChargeGauge_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_ChargeGain;                                   // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_DistortFade;                                  // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_DistortLerp;                                  // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_GaugeLerp;                                    // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_ChargeIncrease;                               // 0x0308(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCommonLazyImage*                       BarFill;                                           // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           BarFillRetainer;                                   // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonLazyImage*                       BarPattern;                                        // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ColorScaleBox;                                     // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_WrappingText_C*                    CurrentValueText;                                  // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNiagaraSystemWidget*                   FX_Smoke;                                          // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 GradientBackgroundColor;                           // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_WrappingText_C*                    GradientChargesText;                               // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               MainSizeBox;                                       // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox;                                       // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Niagara_SlowParticules_C*          WBP_Niagara_SlowParticules_Highlight;              // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        Width;                                             // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PreviewCurrentCharges;                             // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        PreviewProgress;                                   // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Charges;                                   // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Previous_Charges;                                  // 0x0384(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        GaugeLerpAlpha;                                    // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        GlowLerpAlpha;                                     // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        DistortLerpAlpha;                                  // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                CurrentPercentage;                                 // 0x03A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<double>                                PercentageTarget;                                  // 0x03B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FLinearColor                           ColorFirstCharge;                                  // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColorSecondCharge;                                 // 0x03D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColorThirdCharge;                                  // 0x03E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ScaleTarget;                                       // 0x03F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxCharges;                                        // 0x0400(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_GradientChargeGauge(int32 EntryPoint);
	void FeedbackOnTurnStart(class ABP_jRPG_Character_Battle_Base_C* Character);
	void FX_SetParameters(class UFXSystemComponent* System, float Size, const struct FVector& Gravity, const struct FLinearColor& CenterColor, const struct FLinearColor& OuterColor, float Lifetime, float SpawnRate);
	struct FLinearColor GetChargeColor(int32 Charges);
	void Initialize(bool IsPreview);
	void IsGainingCharges(bool* IsGainingCharges_0);
	void OnAnimationFinished(const class UWidgetAnimation* Animation);
	void OnBattleStart();
	void OnGradientGaugeChanged(double PreviousProgress, int32 PreviousCharges);
	void PreConstruct(bool IsDesignTime);
	void SequenceEvent__ENTRYPOINTWBP_GradientChargeGauge();
	void SetCharges(int32 PreviousCharges, int32 CurrentCharges);
	void SetDistortLerpAlpha(double DistortLerpAlpha_0);
	void SetGaugeLerpAlpha(double GaugeLerpAlpha_0);
	void SetGlowLerpAlpha(double GlowLerpAlpha_0);
	void SetProgress(double TargetProgress);
	void Smoke_Event();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_GradientChargeGauge_C">();
	}
	static class UWBP_GradientChargeGauge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_GradientChargeGauge_C>();
	}
};
static_assert(alignof(UWBP_GradientChargeGauge_C) == 0x000008, "Wrong alignment on UWBP_GradientChargeGauge_C");
static_assert(sizeof(UWBP_GradientChargeGauge_C) == 0x000408, "Wrong size on UWBP_GradientChargeGauge_C");
static_assert(offsetof(UWBP_GradientChargeGauge_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_GradientChargeGauge_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, Anim_ChargeGain) == 0x0002E8, "Member 'UWBP_GradientChargeGauge_C::Anim_ChargeGain' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, Anim_DistortFade) == 0x0002F0, "Member 'UWBP_GradientChargeGauge_C::Anim_DistortFade' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, Anim_DistortLerp) == 0x0002F8, "Member 'UWBP_GradientChargeGauge_C::Anim_DistortLerp' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, Anim_GaugeLerp) == 0x000300, "Member 'UWBP_GradientChargeGauge_C::Anim_GaugeLerp' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, Anim_ChargeIncrease) == 0x000308, "Member 'UWBP_GradientChargeGauge_C::Anim_ChargeIncrease' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, BarFill) == 0x000310, "Member 'UWBP_GradientChargeGauge_C::BarFill' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, BarFillRetainer) == 0x000318, "Member 'UWBP_GradientChargeGauge_C::BarFillRetainer' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, BarPattern) == 0x000320, "Member 'UWBP_GradientChargeGauge_C::BarPattern' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, ColorScaleBox) == 0x000328, "Member 'UWBP_GradientChargeGauge_C::ColorScaleBox' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, CurrentValueText) == 0x000330, "Member 'UWBP_GradientChargeGauge_C::CurrentValueText' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, FX_Smoke) == 0x000338, "Member 'UWBP_GradientChargeGauge_C::FX_Smoke' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, GradientBackgroundColor) == 0x000340, "Member 'UWBP_GradientChargeGauge_C::GradientBackgroundColor' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, GradientChargesText) == 0x000348, "Member 'UWBP_GradientChargeGauge_C::GradientChargesText' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, MainSizeBox) == 0x000350, "Member 'UWBP_GradientChargeGauge_C::MainSizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, RetainerBox) == 0x000358, "Member 'UWBP_GradientChargeGauge_C::RetainerBox' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, WBP_Niagara_SlowParticules_Highlight) == 0x000360, "Member 'UWBP_GradientChargeGauge_C::WBP_Niagara_SlowParticules_Highlight' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, Width) == 0x000368, "Member 'UWBP_GradientChargeGauge_C::Width' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, PreviewCurrentCharges) == 0x000370, "Member 'UWBP_GradientChargeGauge_C::PreviewCurrentCharges' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, PreviewProgress) == 0x000378, "Member 'UWBP_GradientChargeGauge_C::PreviewProgress' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, Current_Charges) == 0x000380, "Member 'UWBP_GradientChargeGauge_C::Current_Charges' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, Previous_Charges) == 0x000384, "Member 'UWBP_GradientChargeGauge_C::Previous_Charges' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, GaugeLerpAlpha) == 0x000388, "Member 'UWBP_GradientChargeGauge_C::GaugeLerpAlpha' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, GlowLerpAlpha) == 0x000390, "Member 'UWBP_GradientChargeGauge_C::GlowLerpAlpha' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, DistortLerpAlpha) == 0x000398, "Member 'UWBP_GradientChargeGauge_C::DistortLerpAlpha' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, CurrentPercentage) == 0x0003A0, "Member 'UWBP_GradientChargeGauge_C::CurrentPercentage' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, PercentageTarget) == 0x0003B0, "Member 'UWBP_GradientChargeGauge_C::PercentageTarget' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, ColorFirstCharge) == 0x0003C0, "Member 'UWBP_GradientChargeGauge_C::ColorFirstCharge' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, ColorSecondCharge) == 0x0003D0, "Member 'UWBP_GradientChargeGauge_C::ColorSecondCharge' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, ColorThirdCharge) == 0x0003E0, "Member 'UWBP_GradientChargeGauge_C::ColorThirdCharge' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, ScaleTarget) == 0x0003F0, "Member 'UWBP_GradientChargeGauge_C::ScaleTarget' has a wrong offset!");
static_assert(offsetof(UWBP_GradientChargeGauge_C, MaxCharges) == 0x000400, "Member 'UWBP_GradientChargeGauge_C::MaxCharges' has a wrong offset!");

}

