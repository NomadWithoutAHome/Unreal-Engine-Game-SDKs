#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTService_ComputeDistanceBetweenActors

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTService_ComputeDistanceBetweenActors.BTService_ComputeDistanceBetweenActors_C.ExecuteUbergraph_BTService_ComputeDistanceBetweenActors
// 0x0080 (0x0080 - 0x0000)
struct BTService_ComputeDistanceBetweenActors_C_ExecuteUbergraph_BTService_ComputeDistanceBetweenActors final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorLocationFromKeySelector_ReturnValue; // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetActorLocationFromKeySelector_IsValid;  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorLocationFromKeySelector_ReturnValue_1; // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetActorLocationFromKeySelector_IsValid_1; // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetBlackboardValueAsFloat_Value_ImplicitCast; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTService_ComputeDistanceBetweenActors_C_ExecuteUbergraph_BTService_ComputeDistanceBetweenActors) == 0x000008, "Wrong alignment on BTService_ComputeDistanceBetweenActors_C_ExecuteUbergraph_BTService_ComputeDistanceBetweenActors");
static_assert(sizeof(BTService_ComputeDistanceBetweenActors_C_ExecuteUbergraph_BTService_ComputeDistanceBetweenActors) == 0x000080, "Wrong size on BTService_ComputeDistanceBetweenActors_C_ExecuteUbergraph_BTService_ComputeDistanceBetweenActors");
static_assert(offsetof(BTService_ComputeDistanceBetweenActors_C_ExecuteUbergraph_BTService_ComputeDistanceBetweenActors, EntryPoint) == 0x000000, "Member 'BTService_ComputeDistanceBetweenActors_C_ExecuteUbergraph_BTService_ComputeDistanceBetweenActors::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTService_ComputeDistanceBetweenActors_C_ExecuteUbergraph_BTService_ComputeDistanceBetweenActors, CallFunc_GetActorLocationFromKeySelector_ReturnValue) == 0x000008, "Member 'BTService_ComputeDistanceBetweenActors_C_ExecuteUbergraph_BTService_ComputeDistanceBetweenActors::CallFunc_GetActorLocationFromKeySelector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_ComputeDistanceBetweenActors_C_ExecuteUbergraph_BTService_ComputeDistanceBetweenActors, CallFunc_GetActorLocationFromKeySelector_IsValid) == 0x000020, "Member 'BTService_ComputeDistanceBetweenActors_C_ExecuteUbergraph_BTService_ComputeDistanceBetweenActors::CallFunc_GetActorLocationFromKeySelector_IsValid' has a wrong offset!");
static_assert(offsetof(BTService_ComputeDistanceBetweenActors_C_ExecuteUbergraph_BTService_ComputeDistanceBetweenActors, K2Node_Event_OwnerController) == 0x000028, "Member 'BTService_ComputeDistanceBetweenActors_C_ExecuteUbergraph_BTService_ComputeDistanceBetweenActors::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTService_ComputeDistanceBetweenActors_C_ExecuteUbergraph_BTService_ComputeDistanceBetweenActors, K2Node_Event_ControlledPawn) == 0x000030, "Member 'BTService_ComputeDistanceBetweenActors_C_ExecuteUbergraph_BTService_ComputeDistanceBetweenActors::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTService_ComputeDistanceBetweenActors_C_ExecuteUbergraph_BTService_ComputeDistanceBetweenActors, K2Node_Event_DeltaSeconds) == 0x000038, "Member 'BTService_ComputeDistanceBetweenActors_C_ExecuteUbergraph_BTService_ComputeDistanceBetweenActors::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTService_ComputeDistanceBetweenActors_C_ExecuteUbergraph_BTService_ComputeDistanceBetweenActors, CallFunc_GetActorLocationFromKeySelector_ReturnValue_1) == 0x000040, "Member 'BTService_ComputeDistanceBetweenActors_C_ExecuteUbergraph_BTService_ComputeDistanceBetweenActors::CallFunc_GetActorLocationFromKeySelector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTService_ComputeDistanceBetweenActors_C_ExecuteUbergraph_BTService_ComputeDistanceBetweenActors, CallFunc_GetActorLocationFromKeySelector_IsValid_1) == 0x000058, "Member 'BTService_ComputeDistanceBetweenActors_C_ExecuteUbergraph_BTService_ComputeDistanceBetweenActors::CallFunc_GetActorLocationFromKeySelector_IsValid_1' has a wrong offset!");
static_assert(offsetof(BTService_ComputeDistanceBetweenActors_C_ExecuteUbergraph_BTService_ComputeDistanceBetweenActors, CallFunc_Vector_Distance_ReturnValue) == 0x000060, "Member 'BTService_ComputeDistanceBetweenActors_C_ExecuteUbergraph_BTService_ComputeDistanceBetweenActors::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_ComputeDistanceBetweenActors_C_ExecuteUbergraph_BTService_ComputeDistanceBetweenActors, CallFunc_BooleanAND_ReturnValue) == 0x000068, "Member 'BTService_ComputeDistanceBetweenActors_C_ExecuteUbergraph_BTService_ComputeDistanceBetweenActors::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_ComputeDistanceBetweenActors_C_ExecuteUbergraph_BTService_ComputeDistanceBetweenActors, CallFunc_SelectFloat_ReturnValue) == 0x000070, "Member 'BTService_ComputeDistanceBetweenActors_C_ExecuteUbergraph_BTService_ComputeDistanceBetweenActors::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_ComputeDistanceBetweenActors_C_ExecuteUbergraph_BTService_ComputeDistanceBetweenActors, CallFunc_SetBlackboardValueAsFloat_Value_ImplicitCast) == 0x000078, "Member 'BTService_ComputeDistanceBetweenActors_C_ExecuteUbergraph_BTService_ComputeDistanceBetweenActors::CallFunc_SetBlackboardValueAsFloat_Value_ImplicitCast' has a wrong offset!");

// Function BTService_ComputeDistanceBetweenActors.BTService_ComputeDistanceBetweenActors_C.GetActorLocationFromKeySelector
// 0x0070 (0x0070 - 0x0000)
struct BTService_ComputeDistanceBetweenActors_C_GetActorLocationFromKeySelector final
{
public:
	struct FBlackboardKeySelector                 Key;                                               // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                ReturnValue;                                       // 0x0028(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetBlackboardValueAsActor_ReturnValue;    // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTService_ComputeDistanceBetweenActors_C_GetActorLocationFromKeySelector) == 0x000008, "Wrong alignment on BTService_ComputeDistanceBetweenActors_C_GetActorLocationFromKeySelector");
static_assert(sizeof(BTService_ComputeDistanceBetweenActors_C_GetActorLocationFromKeySelector) == 0x000070, "Wrong size on BTService_ComputeDistanceBetweenActors_C_GetActorLocationFromKeySelector");
static_assert(offsetof(BTService_ComputeDistanceBetweenActors_C_GetActorLocationFromKeySelector, Key) == 0x000000, "Member 'BTService_ComputeDistanceBetweenActors_C_GetActorLocationFromKeySelector::Key' has a wrong offset!");
static_assert(offsetof(BTService_ComputeDistanceBetweenActors_C_GetActorLocationFromKeySelector, ReturnValue) == 0x000028, "Member 'BTService_ComputeDistanceBetweenActors_C_GetActorLocationFromKeySelector::ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_ComputeDistanceBetweenActors_C_GetActorLocationFromKeySelector, IsValid) == 0x000040, "Member 'BTService_ComputeDistanceBetweenActors_C_GetActorLocationFromKeySelector::IsValid' has a wrong offset!");
static_assert(offsetof(BTService_ComputeDistanceBetweenActors_C_GetActorLocationFromKeySelector, CallFunc_GetBlackboardValueAsActor_ReturnValue) == 0x000048, "Member 'BTService_ComputeDistanceBetweenActors_C_GetActorLocationFromKeySelector::CallFunc_GetBlackboardValueAsActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_ComputeDistanceBetweenActors_C_GetActorLocationFromKeySelector, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'BTService_ComputeDistanceBetweenActors_C_GetActorLocationFromKeySelector::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_ComputeDistanceBetweenActors_C_GetActorLocationFromKeySelector, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BTService_ComputeDistanceBetweenActors_C_GetActorLocationFromKeySelector::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BTService_ComputeDistanceBetweenActors.BTService_ComputeDistanceBetweenActors_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTService_ComputeDistanceBetweenActors_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTService_ComputeDistanceBetweenActors_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTService_ComputeDistanceBetweenActors_C_ReceiveTickAI");
static_assert(sizeof(BTService_ComputeDistanceBetweenActors_C_ReceiveTickAI) == 0x000018, "Wrong size on BTService_ComputeDistanceBetweenActors_C_ReceiveTickAI");
static_assert(offsetof(BTService_ComputeDistanceBetweenActors_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTService_ComputeDistanceBetweenActors_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTService_ComputeDistanceBetweenActors_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTService_ComputeDistanceBetweenActors_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTService_ComputeDistanceBetweenActors_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTService_ComputeDistanceBetweenActors_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

}

