#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ConditionChecker_BinaryLogicOperators

#include "Basic.hpp"

#include "E_ConditionChecker_BinaryLogicOperator_structs.hpp"
#include "BP_ConditionChecker_classes.hpp"
#include "SandFall_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ConditionChecker_BinaryLogicOperators.BP_ConditionChecker_BinaryLogicOperators_C
// 0x0018 (0x0078 - 0x0060)
class UBP_ConditionChecker_BinaryLogicOperators_C final : public UBP_ConditionChecker_C
{
public:
	E_ConditionChecker_BinaryLogicOperator        LogicOperator;                                     // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FConditionChecker_Wrapper>      Conditions;                                        // 0x0068(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)

public:
	void BindEventOnGameStateChanged(const TDelegate<void()>& Event);
	void Check_AND(bool* Result);
	void Check_OR(bool* Result);
	void Check_XOR(bool* Result);
	bool CheckInternal();
	void UnbindEventOnGameStateChanged(const TDelegate<void()>& Event);
	void ValidateConditionChecker(TArray<class FText>& ErrorMessages, class FString& PropertyPath);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ConditionChecker_BinaryLogicOperators_C">();
	}
	static class UBP_ConditionChecker_BinaryLogicOperators_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ConditionChecker_BinaryLogicOperators_C>();
	}
};
static_assert(alignof(UBP_ConditionChecker_BinaryLogicOperators_C) == 0x000008, "Wrong alignment on UBP_ConditionChecker_BinaryLogicOperators_C");
static_assert(sizeof(UBP_ConditionChecker_BinaryLogicOperators_C) == 0x000078, "Wrong size on UBP_ConditionChecker_BinaryLogicOperators_C");
static_assert(offsetof(UBP_ConditionChecker_BinaryLogicOperators_C, LogicOperator) == 0x000060, "Member 'UBP_ConditionChecker_BinaryLogicOperators_C::LogicOperator' has a wrong offset!");
static_assert(offsetof(UBP_ConditionChecker_BinaryLogicOperators_C, Conditions) == 0x000068, "Member 'UBP_ConditionChecker_BinaryLogicOperators_C::Conditions' has a wrong offset!");

}

