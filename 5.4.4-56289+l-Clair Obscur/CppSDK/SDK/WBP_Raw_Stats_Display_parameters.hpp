#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Raw_Stats_Display

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "E_jRPG_StatType_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_Raw_Stats_Display.WBP_Raw_Stats_Display_C.ExecuteUbergraph_WBP_Raw_Stats_Display
// 0x00E0 (0x00E0 - 0x0000)
struct WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_StatTypeToTextLong_Text;                  // 0x0030(0x0010)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_StatValue;                      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_FormatValue_Result;                       // 0x0048(0x0010)()
	int32                                         K2Node_CustomEvent_Value;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FormatValue_Result_1;                     // 0x0060(0x0010)()
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0074(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0088(0x0014)()
	bool                                          K2Node_CustomEvent_IsHighlighted;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x00A0(0x0014)()
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x00B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x00C4(0x0014)()
	E_jRPG_StatType                               K2Node_CustomEvent_StatType;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display) == 0x000008, "Wrong alignment on WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display");
static_assert(sizeof(WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display) == 0x0000E0, "Wrong size on WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display");
static_assert(offsetof(WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display, EntryPoint) == 0x000000, "Member 'WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display, Temp_bool_Variable) == 0x000004, "Member 'WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display, Temp_struct_Variable) == 0x000008, "Member 'WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display, Temp_struct_Variable_1) == 0x000018, "Member 'WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display, Temp_bool_Variable_1) == 0x000028, "Member 'WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display, CallFunc_StatTypeToTextLong_Text) == 0x000030, "Member 'WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display::CallFunc_StatTypeToTextLong_Text' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display, K2Node_Event_IsDesignTime) == 0x000040, "Member 'WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display, K2Node_CustomEvent_StatValue) == 0x000044, "Member 'WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display::K2Node_CustomEvent_StatValue' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display, CallFunc_FormatValue_Result) == 0x000048, "Member 'WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display::CallFunc_FormatValue_Result' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display, K2Node_CustomEvent_Value) == 0x000058, "Member 'WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display, CallFunc_FormatValue_Result_1) == 0x000060, "Member 'WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display::CallFunc_FormatValue_Result_1' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000070, "Member 'WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display, CallFunc_Greater_IntInt_ReturnValue) == 0x000071, "Member 'WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display, K2Node_MakeStruct_SlateColor) == 0x000074, "Member 'WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display, K2Node_MakeStruct_SlateColor_1) == 0x000088, "Member 'WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display, K2Node_CustomEvent_IsHighlighted) == 0x00009C, "Member 'WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display::K2Node_CustomEvent_IsHighlighted' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display, K2Node_Select_Default) == 0x0000A0, "Member 'WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display, K2Node_Select_Default_1) == 0x0000B4, "Member 'WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display, K2Node_MakeStruct_SlateColor_2) == 0x0000C4, "Member 'WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display, K2Node_CustomEvent_StatType) == 0x0000D8, "Member 'WBP_Raw_Stats_Display_C_ExecuteUbergraph_WBP_Raw_Stats_Display::K2Node_CustomEvent_StatType' has a wrong offset!");

// Function WBP_Raw_Stats_Display.WBP_Raw_Stats_Display_C.FormatValue
// 0x0110 (0x0110 - 0x0000)
struct WBP_Raw_Stats_Display_C_FormatValue final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Result;                                            // 0x0008(0x0010)(Parm, OutParm)
	class FText                                   Temp_text_Variable;                                // 0x0018(0x0010)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0028(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_1;                              // 0x0080(0x0010)()
	bool                                          Temp_bool_Variable;                                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0098(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0100(0x0010)()
};
static_assert(alignof(WBP_Raw_Stats_Display_C_FormatValue) == 0x000008, "Wrong alignment on WBP_Raw_Stats_Display_C_FormatValue");
static_assert(sizeof(WBP_Raw_Stats_Display_C_FormatValue) == 0x000110, "Wrong size on WBP_Raw_Stats_Display_C_FormatValue");
static_assert(offsetof(WBP_Raw_Stats_Display_C_FormatValue, Value) == 0x000000, "Member 'WBP_Raw_Stats_Display_C_FormatValue::Value' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_FormatValue, Result) == 0x000008, "Member 'WBP_Raw_Stats_Display_C_FormatValue::Result' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_FormatValue, Temp_text_Variable) == 0x000018, "Member 'WBP_Raw_Stats_Display_C_FormatValue::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_FormatValue, CallFunc_Conv_IntToText_ReturnValue) == 0x000028, "Member 'WBP_Raw_Stats_Display_C_FormatValue::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_FormatValue, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'WBP_Raw_Stats_Display_C_FormatValue::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_FormatValue, Temp_text_Variable_1) == 0x000080, "Member 'WBP_Raw_Stats_Display_C_FormatValue::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_FormatValue, Temp_bool_Variable) == 0x000090, "Member 'WBP_Raw_Stats_Display_C_FormatValue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_FormatValue, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000091, "Member 'WBP_Raw_Stats_Display_C_FormatValue::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_FormatValue, K2Node_Select_Default) == 0x000098, "Member 'WBP_Raw_Stats_Display_C_FormatValue::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_FormatValue, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A8, "Member 'WBP_Raw_Stats_Display_C_FormatValue::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_FormatValue, K2Node_MakeArray_Array) == 0x0000F0, "Member 'WBP_Raw_Stats_Display_C_FormatValue::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_FormatValue, CallFunc_Format_ReturnValue) == 0x000100, "Member 'WBP_Raw_Stats_Display_C_FormatValue::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_Raw_Stats_Display.WBP_Raw_Stats_Display_C.GetStatType
// 0x0001 (0x0001 - 0x0000)
struct WBP_Raw_Stats_Display_C_GetStatType final
{
public:
	E_jRPG_StatType                               StatType_0;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Raw_Stats_Display_C_GetStatType) == 0x000001, "Wrong alignment on WBP_Raw_Stats_Display_C_GetStatType");
static_assert(sizeof(WBP_Raw_Stats_Display_C_GetStatType) == 0x000001, "Wrong size on WBP_Raw_Stats_Display_C_GetStatType");
static_assert(offsetof(WBP_Raw_Stats_Display_C_GetStatType, StatType_0) == 0x000000, "Member 'WBP_Raw_Stats_Display_C_GetStatType::StatType_0' has a wrong offset!");

// Function WBP_Raw_Stats_Display.WBP_Raw_Stats_Display_C.IsShowingWeaponValue
// 0x0020 (0x0020 - 0x0000)
struct WBP_Raw_Stats_Display_C_IsShowingWeaponValue final
{
public:
	E_jRPG_StatType                               StatType_0;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_jRPG_StatType>                       K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Raw_Stats_Display_C_IsShowingWeaponValue) == 0x000008, "Wrong alignment on WBP_Raw_Stats_Display_C_IsShowingWeaponValue");
static_assert(sizeof(WBP_Raw_Stats_Display_C_IsShowingWeaponValue) == 0x000020, "Wrong size on WBP_Raw_Stats_Display_C_IsShowingWeaponValue");
static_assert(offsetof(WBP_Raw_Stats_Display_C_IsShowingWeaponValue, StatType_0) == 0x000000, "Member 'WBP_Raw_Stats_Display_C_IsShowingWeaponValue::StatType_0' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_IsShowingWeaponValue, ReturnValue) == 0x000001, "Member 'WBP_Raw_Stats_Display_C_IsShowingWeaponValue::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_IsShowingWeaponValue, K2Node_MakeArray_Array) == 0x000008, "Member 'WBP_Raw_Stats_Display_C_IsShowingWeaponValue::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_IsShowingWeaponValue, CallFunc_Array_Contains_ReturnValue) == 0x000018, "Member 'WBP_Raw_Stats_Display_C_IsShowingWeaponValue::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function WBP_Raw_Stats_Display.WBP_Raw_Stats_Display_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Raw_Stats_Display_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Raw_Stats_Display_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Raw_Stats_Display_C_PreConstruct");
static_assert(sizeof(WBP_Raw_Stats_Display_C_PreConstruct) == 0x000001, "Wrong size on WBP_Raw_Stats_Display_C_PreConstruct");
static_assert(offsetof(WBP_Raw_Stats_Display_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Raw_Stats_Display_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Raw_Stats_Display.WBP_Raw_Stats_Display_C.SetAttributeStatPreviewValue
// 0x0058 (0x0058 - 0x0000)
struct WBP_Raw_Stats_Display_C_SetAttributeStatPreviewValue final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FormatValue_Result;                       // 0x0008(0x0010)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x001C(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0030(0x0014)()
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0044(0x0014)()
};
static_assert(alignof(WBP_Raw_Stats_Display_C_SetAttributeStatPreviewValue) == 0x000008, "Wrong alignment on WBP_Raw_Stats_Display_C_SetAttributeStatPreviewValue");
static_assert(sizeof(WBP_Raw_Stats_Display_C_SetAttributeStatPreviewValue) == 0x000058, "Wrong size on WBP_Raw_Stats_Display_C_SetAttributeStatPreviewValue");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetAttributeStatPreviewValue, Value) == 0x000000, "Member 'WBP_Raw_Stats_Display_C_SetAttributeStatPreviewValue::Value' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetAttributeStatPreviewValue, Temp_bool_Variable) == 0x000004, "Member 'WBP_Raw_Stats_Display_C_SetAttributeStatPreviewValue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetAttributeStatPreviewValue, CallFunc_FormatValue_Result) == 0x000008, "Member 'WBP_Raw_Stats_Display_C_SetAttributeStatPreviewValue::CallFunc_FormatValue_Result' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetAttributeStatPreviewValue, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'WBP_Raw_Stats_Display_C_SetAttributeStatPreviewValue::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetAttributeStatPreviewValue, K2Node_MakeStruct_SlateColor) == 0x00001C, "Member 'WBP_Raw_Stats_Display_C_SetAttributeStatPreviewValue::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetAttributeStatPreviewValue, K2Node_MakeStruct_SlateColor_1) == 0x000030, "Member 'WBP_Raw_Stats_Display_C_SetAttributeStatPreviewValue::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetAttributeStatPreviewValue, K2Node_Select_Default) == 0x000044, "Member 'WBP_Raw_Stats_Display_C_SetAttributeStatPreviewValue::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Raw_Stats_Display.WBP_Raw_Stats_Display_C.SetAttributeStatValue
// 0x0018 (0x0018 - 0x0000)
struct WBP_Raw_Stats_Display_C_SetAttributeStatValue final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FormatValue_Result;                       // 0x0008(0x0010)()
};
static_assert(alignof(WBP_Raw_Stats_Display_C_SetAttributeStatValue) == 0x000008, "Wrong alignment on WBP_Raw_Stats_Display_C_SetAttributeStatValue");
static_assert(sizeof(WBP_Raw_Stats_Display_C_SetAttributeStatValue) == 0x000018, "Wrong size on WBP_Raw_Stats_Display_C_SetAttributeStatValue");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetAttributeStatValue, Value) == 0x000000, "Member 'WBP_Raw_Stats_Display_C_SetAttributeStatValue::Value' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetAttributeStatValue, CallFunc_FormatValue_Result) == 0x000008, "Member 'WBP_Raw_Stats_Display_C_SetAttributeStatValue::CallFunc_FormatValue_Result' has a wrong offset!");

// Function WBP_Raw_Stats_Display.WBP_Raw_Stats_Display_C.SetGearPreviewValue
// 0x0060 (0x0060 - 0x0000)
struct WBP_Raw_Stats_Display_C_SetGearPreviewValue final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FormatValue_Result;                       // 0x0008(0x0010)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0018(0x0014)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0030(0x0014)()
	bool                                          Temp_bool_Variable;                                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0048(0x0014)()
};
static_assert(alignof(WBP_Raw_Stats_Display_C_SetGearPreviewValue) == 0x000008, "Wrong alignment on WBP_Raw_Stats_Display_C_SetGearPreviewValue");
static_assert(sizeof(WBP_Raw_Stats_Display_C_SetGearPreviewValue) == 0x000060, "Wrong size on WBP_Raw_Stats_Display_C_SetGearPreviewValue");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetGearPreviewValue, Value) == 0x000000, "Member 'WBP_Raw_Stats_Display_C_SetGearPreviewValue::Value' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetGearPreviewValue, CallFunc_FormatValue_Result) == 0x000008, "Member 'WBP_Raw_Stats_Display_C_SetGearPreviewValue::CallFunc_FormatValue_Result' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetGearPreviewValue, K2Node_MakeStruct_SlateColor) == 0x000018, "Member 'WBP_Raw_Stats_Display_C_SetGearPreviewValue::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetGearPreviewValue, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00002C, "Member 'WBP_Raw_Stats_Display_C_SetGearPreviewValue::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetGearPreviewValue, K2Node_MakeStruct_SlateColor_1) == 0x000030, "Member 'WBP_Raw_Stats_Display_C_SetGearPreviewValue::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetGearPreviewValue, Temp_bool_Variable) == 0x000044, "Member 'WBP_Raw_Stats_Display_C_SetGearPreviewValue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetGearPreviewValue, K2Node_Select_Default) == 0x000048, "Member 'WBP_Raw_Stats_Display_C_SetGearPreviewValue::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Raw_Stats_Display.WBP_Raw_Stats_Display_C.SetGearValue
// 0x0028 (0x0028 - 0x0000)
struct WBP_Raw_Stats_Display_C_SetGearValue final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FormatValue_Result;                       // 0x0010(0x0010)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShowingWeaponValue_ReturnValue;         // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Raw_Stats_Display_C_SetGearValue) == 0x000008, "Wrong alignment on WBP_Raw_Stats_Display_C_SetGearValue");
static_assert(sizeof(WBP_Raw_Stats_Display_C_SetGearValue) == 0x000028, "Wrong size on WBP_Raw_Stats_Display_C_SetGearValue");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetGearValue, Value) == 0x000000, "Member 'WBP_Raw_Stats_Display_C_SetGearValue::Value' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetGearValue, Temp_byte_Variable) == 0x000004, "Member 'WBP_Raw_Stats_Display_C_SetGearValue::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetGearValue, Temp_byte_Variable_1) == 0x000005, "Member 'WBP_Raw_Stats_Display_C_SetGearValue::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetGearValue, Temp_bool_Variable) == 0x000006, "Member 'WBP_Raw_Stats_Display_C_SetGearValue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetGearValue, Temp_byte_Variable_2) == 0x000007, "Member 'WBP_Raw_Stats_Display_C_SetGearValue::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetGearValue, Temp_byte_Variable_3) == 0x000008, "Member 'WBP_Raw_Stats_Display_C_SetGearValue::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetGearValue, Temp_bool_Variable_1) == 0x000009, "Member 'WBP_Raw_Stats_Display_C_SetGearValue::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetGearValue, Temp_byte_Variable_4) == 0x00000A, "Member 'WBP_Raw_Stats_Display_C_SetGearValue::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetGearValue, Temp_byte_Variable_5) == 0x00000B, "Member 'WBP_Raw_Stats_Display_C_SetGearValue::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetGearValue, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_Raw_Stats_Display_C_SetGearValue::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetGearValue, CallFunc_FormatValue_Result) == 0x000010, "Member 'WBP_Raw_Stats_Display_C_SetGearValue::CallFunc_FormatValue_Result' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetGearValue, K2Node_Select_Default) == 0x000020, "Member 'WBP_Raw_Stats_Display_C_SetGearValue::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetGearValue, Temp_bool_Variable_2) == 0x000021, "Member 'WBP_Raw_Stats_Display_C_SetGearValue::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetGearValue, CallFunc_IsShowingWeaponValue_ReturnValue) == 0x000022, "Member 'WBP_Raw_Stats_Display_C_SetGearValue::CallFunc_IsShowingWeaponValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetGearValue, K2Node_Select_Default_1) == 0x000023, "Member 'WBP_Raw_Stats_Display_C_SetGearValue::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetGearValue, K2Node_Select_Default_2) == 0x000024, "Member 'WBP_Raw_Stats_Display_C_SetGearValue::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_Raw_Stats_Display.WBP_Raw_Stats_Display_C.SetHighlightedForStats
// 0x0001 (0x0001 - 0x0000)
struct WBP_Raw_Stats_Display_C_SetHighlightedForStats final
{
public:
	bool                                          IsHighlighted;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Raw_Stats_Display_C_SetHighlightedForStats) == 0x000001, "Wrong alignment on WBP_Raw_Stats_Display_C_SetHighlightedForStats");
static_assert(sizeof(WBP_Raw_Stats_Display_C_SetHighlightedForStats) == 0x000001, "Wrong size on WBP_Raw_Stats_Display_C_SetHighlightedForStats");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetHighlightedForStats, IsHighlighted) == 0x000000, "Member 'WBP_Raw_Stats_Display_C_SetHighlightedForStats::IsHighlighted' has a wrong offset!");

// Function WBP_Raw_Stats_Display.WBP_Raw_Stats_Display_C.SetPreviewPanelVisibility
// 0x0005 (0x0005 - 0x0000)
struct WBP_Raw_Stats_Display_C_SetPreviewPanelVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Raw_Stats_Display_C_SetPreviewPanelVisibility) == 0x000001, "Wrong alignment on WBP_Raw_Stats_Display_C_SetPreviewPanelVisibility");
static_assert(sizeof(WBP_Raw_Stats_Display_C_SetPreviewPanelVisibility) == 0x000005, "Wrong size on WBP_Raw_Stats_Display_C_SetPreviewPanelVisibility");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetPreviewPanelVisibility, Visible) == 0x000000, "Member 'WBP_Raw_Stats_Display_C_SetPreviewPanelVisibility::Visible' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetPreviewPanelVisibility, Temp_bool_Variable) == 0x000001, "Member 'WBP_Raw_Stats_Display_C_SetPreviewPanelVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetPreviewPanelVisibility, Temp_byte_Variable) == 0x000002, "Member 'WBP_Raw_Stats_Display_C_SetPreviewPanelVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetPreviewPanelVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_Raw_Stats_Display_C_SetPreviewPanelVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetPreviewPanelVisibility, K2Node_Select_Default) == 0x000004, "Member 'WBP_Raw_Stats_Display_C_SetPreviewPanelVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Raw_Stats_Display.WBP_Raw_Stats_Display_C.SetStatPreviewValue
// 0x0004 (0x0004 - 0x0000)
struct WBP_Raw_Stats_Display_C_SetStatPreviewValue final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Raw_Stats_Display_C_SetStatPreviewValue) == 0x000004, "Wrong alignment on WBP_Raw_Stats_Display_C_SetStatPreviewValue");
static_assert(sizeof(WBP_Raw_Stats_Display_C_SetStatPreviewValue) == 0x000004, "Wrong size on WBP_Raw_Stats_Display_C_SetStatPreviewValue");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetStatPreviewValue, Value) == 0x000000, "Member 'WBP_Raw_Stats_Display_C_SetStatPreviewValue::Value' has a wrong offset!");

// Function WBP_Raw_Stats_Display.WBP_Raw_Stats_Display_C.SetStatType
// 0x0001 (0x0001 - 0x0000)
struct WBP_Raw_Stats_Display_C_SetStatType final
{
public:
	E_jRPG_StatType                               StatType_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Raw_Stats_Display_C_SetStatType) == 0x000001, "Wrong alignment on WBP_Raw_Stats_Display_C_SetStatType");
static_assert(sizeof(WBP_Raw_Stats_Display_C_SetStatType) == 0x000001, "Wrong size on WBP_Raw_Stats_Display_C_SetStatType");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetStatType, StatType_0) == 0x000000, "Member 'WBP_Raw_Stats_Display_C_SetStatType::StatType_0' has a wrong offset!");

// Function WBP_Raw_Stats_Display.WBP_Raw_Stats_Display_C.SetStatValue
// 0x0004 (0x0004 - 0x0000)
struct WBP_Raw_Stats_Display_C_SetStatValue final
{
public:
	int32                                         StatValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Raw_Stats_Display_C_SetStatValue) == 0x000004, "Wrong alignment on WBP_Raw_Stats_Display_C_SetStatValue");
static_assert(sizeof(WBP_Raw_Stats_Display_C_SetStatValue) == 0x000004, "Wrong size on WBP_Raw_Stats_Display_C_SetStatValue");
static_assert(offsetof(WBP_Raw_Stats_Display_C_SetStatValue, StatValue) == 0x000000, "Member 'WBP_Raw_Stats_Display_C_SetStatValue::StatValue' has a wrong offset!");

}

