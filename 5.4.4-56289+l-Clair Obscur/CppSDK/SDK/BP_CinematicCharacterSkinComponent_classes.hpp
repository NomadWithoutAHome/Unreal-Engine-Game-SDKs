#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CinematicCharacterSkinComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_CharacterSkinComponent_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CinematicCharacterSkinComponent.BP_CinematicCharacterSkinComponent_C
// 0x0040 (0x0210 - 0x01D0)
class UBP_CinematicCharacterSkinComponent_C final : public UBP_CharacterSkinComponent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_CinematicCharacterSkinComponent_C; // 0x01D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FName                                   CharacterHardcodedName;                            // 0x01D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ApplyCharacterSkin;                                // 0x01E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ApplyCharacterFace;                                // 0x01E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E2[0x6];                                      // 0x01E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USkeletalMesh>           DefaultCharacterSkeletalMesh;                      // 0x01E8(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)

public:
	bool CheckForErrors(TArray<class FText>& ErrorMessages);
	void SwapBody(class USkeletalMeshComponent* Body, class USkeletalMesh* NewSkeletalMesh);
	void ApplyCustomizationFromCharacterData();
	bool ShouldApplyUserCustomization();
	bool ShouldApplyAnyCustomization();
	void ApplyPreviewCustomization();
	void ApplyCustomization();
	void OnLoaded_E073811A4DDB0114C9452A9C8DBC132C(class UObject* Loaded);
	void ReceiveBeginPlay();
	void ApplyDefaultCustomization(class USkeletalMeshComponent* Body);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ExecuteUbergraph_BP_CinematicCharacterSkinComponent(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CinematicCharacterSkinComponent_C">();
	}
	static class UBP_CinematicCharacterSkinComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_CinematicCharacterSkinComponent_C>();
	}
};
static_assert(alignof(UBP_CinematicCharacterSkinComponent_C) == 0x000008, "Wrong alignment on UBP_CinematicCharacterSkinComponent_C");
static_assert(sizeof(UBP_CinematicCharacterSkinComponent_C) == 0x000210, "Wrong size on UBP_CinematicCharacterSkinComponent_C");
static_assert(offsetof(UBP_CinematicCharacterSkinComponent_C, UberGraphFrame_BP_CinematicCharacterSkinComponent_C) == 0x0001D0, "Member 'UBP_CinematicCharacterSkinComponent_C::UberGraphFrame_BP_CinematicCharacterSkinComponent_C' has a wrong offset!");
static_assert(offsetof(UBP_CinematicCharacterSkinComponent_C, CharacterHardcodedName) == 0x0001D8, "Member 'UBP_CinematicCharacterSkinComponent_C::CharacterHardcodedName' has a wrong offset!");
static_assert(offsetof(UBP_CinematicCharacterSkinComponent_C, ApplyCharacterSkin) == 0x0001E0, "Member 'UBP_CinematicCharacterSkinComponent_C::ApplyCharacterSkin' has a wrong offset!");
static_assert(offsetof(UBP_CinematicCharacterSkinComponent_C, ApplyCharacterFace) == 0x0001E1, "Member 'UBP_CinematicCharacterSkinComponent_C::ApplyCharacterFace' has a wrong offset!");
static_assert(offsetof(UBP_CinematicCharacterSkinComponent_C, DefaultCharacterSkeletalMesh) == 0x0001E8, "Member 'UBP_CinematicCharacterSkinComponent_C::DefaultCharacterSkeletalMesh' has a wrong offset!");

}

