#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Face_AnimBP_HumanNPC

#include "Basic.hpp"

#include "SandFall_structs.hpp"
#include "Face_AnimBP_HumanNPC_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "E_Facial_LookAt_structs.hpp"
#include "E_Expressions_Metahuman_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Face_AnimBP_HumanNPC.Face_AnimBP_HumanNPC_C
// 0x23C0 (0x2730 - 0x0370)
class UFace_AnimBP_HumanNPC_C final : public UAnimInstance
{
public:
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct Face_AnimBP_HumanNPC::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;         // 0x0378(0x0020)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0398(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x03A0(0x0008)()
	struct FAnimNode_CopyPoseFromMesh             AnimGraphNode_CopyPoseFromMesh;                    // 0x03A8(0x0158)(ContainsInstancedReference)
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0500(0x00F0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x05F0(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0638(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0660(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x0688(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_41;                   // 0x06A8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_40;                   // 0x06F0(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_8;                     // 0x0738(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_39;                   // 0x0800(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_7;                     // 0x0848(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x0910(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_4;                      // 0x0930(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x09F8(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_6;                     // 0x0A40(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0B08(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0B30(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0B58(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_38;                   // 0x0B78(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0BC0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_3;                      // 0x0BE0(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_37;                   // 0x0CA8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_36;                   // 0x0CF0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_35;                   // 0x0D38(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_34;                   // 0x0D80(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_33;                   // 0x0DC8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_32;                   // 0x0E10(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_31;                   // 0x0E58(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_30;                   // 0x0EA0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_29;                   // 0x0EE8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_28;                   // 0x0F30(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_27;                   // 0x0F78(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_26;                   // 0x0FC0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_25;                   // 0x1008(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_24;                   // 0x1050(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_23;                   // 0x1098(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_22;                   // 0x10E0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x1128(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x1170(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x11B8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x1200(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x1248(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x1290(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x12D8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x1320(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x1368(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x13B0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x13F8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x1440(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x1488(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x14D0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x1518(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x1560(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_1;                   // 0x15A8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x15F0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x1610(0x00C8)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x16D8(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x1720(0x0080)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_7;                 // 0x17A0(0x0040)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_6;                 // 0x17E0(0x0040)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_5;                 // 0x1820(0x0040)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_4;                 // 0x1860(0x0040)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_3;                 // 0x18A0(0x0040)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_2;                 // 0x18E0(0x0040)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x1920(0x0040)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x1960(0x0040)()
	struct FAnimNode_CurveBlend                   AnimGraphNode_CurveBlend_1;                        // 0x19A0(0x0038)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x19D8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x1A20(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_5;                     // 0x1A68(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x1B30(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_4;                     // 0x1B78(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x1C40(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x1CC0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x1CE8(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_3;                     // 0x1D10(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1DD8(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x1E20(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x1EA0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x1EC8(0x0028)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1EF0(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1F10(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x1F90(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0x1FB8(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x2080(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x20A8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x20D0(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x20F8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x2118(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x2160(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x2228(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x2270(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x2298(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x2360(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x2380(0x00C8)()
	struct FAnimNode_CurveBlend                   AnimGraphNode_CurveBlend;                          // 0x2448(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x2480(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x24A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x24D0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x24F8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x2540(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x2560(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x25A8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x25C8(0x00C8)()
	bool                                          IsTalking;                                         // 0x2690(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Facial_LookAt                               EyesLook;                                          // 0x2691(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2692[0x6];                                     // 0x2692(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_FacialAnimationComponent_C*         FacialAnimationComponentReference;                 // 0x2698(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        BlinkTimer;                                        // 0x26A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldBlink;                                       // 0x26A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26A9[0x7];                                     // 0x26A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_NPCAnimationComponent_C*            AnimationComponentReference;                       // 0x26B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         ExpressionsBlendTime;                              // 0x26B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Expressions_Metahuman                       Expression_1;                                      // 0x26BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26BD[0x3];                                     // 0x26BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ExpressionStrength;                                // 0x26C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlinkStrength;                                     // 0x26C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_in_Dialogue;                                    // 0x26C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C9[0x7];                                     // 0x26C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        EnvelopeVolume;                                    // 0x26D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldLookAt;                                      // 0x26D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26D9[0x7];                                     // 0x26D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LookAtLocation;                                    // 0x26E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFace_PostProcess_AnimBP_MainChar_C*    PostProcessABP;                                    // 0x26F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          HasMetahumanPostProcessABP;                        // 0x2700(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2701[0x3];                                     // 0x2701(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Eye_Left_Right;                                    // 0x2704(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Eye_Up_Down;                                       // 0x2708(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_270C[0x4];                                     // 0x270C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TEMP_LookAtLocation;                               // 0x2710(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EnvelopeVolumex3;                                  // 0x2728(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlinkSystem();
	void BlueprintBeginPlay();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_Face_AnimBP_HumanNPC(int32 EntryPoint);
	void RandomStartPosition_0_10(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void RandomStartPosition_0_2(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void SetPostProcessAnimation();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Face_AnimBP_HumanNPC_C">();
	}
	static class UFace_AnimBP_HumanNPC_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFace_AnimBP_HumanNPC_C>();
	}
};
static_assert(alignof(UFace_AnimBP_HumanNPC_C) == 0x000010, "Wrong alignment on UFace_AnimBP_HumanNPC_C");
static_assert(sizeof(UFace_AnimBP_HumanNPC_C) == 0x002730, "Wrong size on UFace_AnimBP_HumanNPC_C");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, UberGraphFrame) == 0x000370, "Member 'UFace_AnimBP_HumanNPC_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, __AnimBlueprintMutables) == 0x000378, "Member 'UFace_AnimBP_HumanNPC_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimBlueprintExtension_PropertyAccess) == 0x000398, "Member 'UFace_AnimBP_HumanNPC_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimBlueprintExtension_Base) == 0x0003A0, "Member 'UFace_AnimBP_HumanNPC_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_CopyPoseFromMesh) == 0x0003A8, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_CopyPoseFromMesh' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_LayeredBoneBlend) == 0x000500, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_Slot_1) == 0x0005F0, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_TransitionResult_7) == 0x000638, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_TransitionResult_6) == 0x000660, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_StateResult_8) == 0x000688, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_41) == 0x0006A8, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_41' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_40) == 0x0006F0, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_40' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_ApplyAdditive_8) == 0x000738, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_ApplyAdditive_8' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_39) == 0x000800, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_39' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_ApplyAdditive_7) == 0x000848, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_ApplyAdditive_7' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_StateResult_7) == 0x000910, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_StateMachine_4) == 0x000930, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_StateMachine_4' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_Slot) == 0x0009F8, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_ApplyAdditive_6) == 0x000A40, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_ApplyAdditive_6' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_TransitionResult_5) == 0x000B08, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_TransitionResult_4) == 0x000B30, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_StateResult_6) == 0x000B58, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_38) == 0x000B78, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_38' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_StateResult_5) == 0x000BC0, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_StateMachine_3) == 0x000BE0, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_StateMachine_3' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_37) == 0x000CA8, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_37' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_36) == 0x000CF0, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_36' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_35) == 0x000D38, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_35' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_34) == 0x000D80, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_34' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_33) == 0x000DC8, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_33' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_32) == 0x000E10, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_32' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_31) == 0x000E58, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_31' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_30) == 0x000EA0, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_30' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_29) == 0x000EE8, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_29' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_28) == 0x000F30, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_28' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_27) == 0x000F78, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_27' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_26) == 0x000FC0, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_26' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_25) == 0x001008, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_25' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_24) == 0x001050, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_24' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_23) == 0x001098, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_23' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_22) == 0x0010E0, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_22' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_21) == 0x001128, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_20) == 0x001170, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_19) == 0x0011B8, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_18) == 0x001200, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_17) == 0x001248, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_16) == 0x001290, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_15) == 0x0012D8, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_14) == 0x001320, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_13) == 0x001368, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_12) == 0x0013B0, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_11) == 0x0013F8, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_10) == 0x001440, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_9) == 0x001488, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_8) == 0x0014D0, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_7) == 0x001518, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_6) == 0x001560, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_BlendListByEnum_1) == 0x0015A8, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_BlendListByEnum_1' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_StateResult_4) == 0x0015F0, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_StateMachine_2) == 0x001610, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_BlendListByEnum) == 0x0016D8, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SaveCachedPose_3) == 0x001720, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequenceEvaluator_7) == 0x0017A0, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequenceEvaluator_7' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequenceEvaluator_6) == 0x0017E0, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequenceEvaluator_6' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequenceEvaluator_5) == 0x001820, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequenceEvaluator_5' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequenceEvaluator_4) == 0x001860, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequenceEvaluator_4' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequenceEvaluator_3) == 0x0018A0, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequenceEvaluator_3' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequenceEvaluator_2) == 0x0018E0, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequenceEvaluator_2' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequenceEvaluator_1) == 0x001920, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequenceEvaluator) == 0x001960, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_CurveBlend_1) == 0x0019A0, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_CurveBlend_1' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_BlendListByBool_1) == 0x0019D8, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_5) == 0x001A20, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_ApplyAdditive_5) == 0x001A68, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_ApplyAdditive_5' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_4) == 0x001B30, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_ApplyAdditive_4) == 0x001B78, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_ApplyAdditive_4' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SaveCachedPose_2) == 0x001C40, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_UseCachedPose_7) == 0x001CC0, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_UseCachedPose_6) == 0x001CE8, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_ApplyAdditive_3) == 0x001D10, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_ApplyAdditive_3' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_BlendListByBool) == 0x001DD8, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SaveCachedPose_1) == 0x001E20, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_UseCachedPose_5) == 0x001EA0, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_UseCachedPose_4) == 0x001EC8, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_Root) == 0x001EF0, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SaveCachedPose) == 0x001F10, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_UseCachedPose_3) == 0x001F90, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_ApplyAdditive_2) == 0x001FB8, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_TransitionResult_3) == 0x002080, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_TransitionResult_2) == 0x0020A8, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_UseCachedPose_2) == 0x0020D0, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_StateResult_3) == 0x0020F8, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_3) == 0x002118, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_ApplyAdditive_1) == 0x002160, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_2) == 0x002228, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_UseCachedPose_1) == 0x002270, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_ApplyAdditive) == 0x002298, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_StateResult_2) == 0x002360, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_StateMachine_1) == 0x002380, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_CurveBlend) == 0x002448, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_CurveBlend' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_UseCachedPose) == 0x002480, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_TransitionResult_1) == 0x0024A8, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_TransitionResult) == 0x0024D0, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer_1) == 0x0024F8, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_StateResult_1) == 0x002540, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_SequencePlayer) == 0x002560, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_StateResult) == 0x0025A8, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimGraphNode_StateMachine) == 0x0025C8, "Member 'UFace_AnimBP_HumanNPC_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, IsTalking) == 0x002690, "Member 'UFace_AnimBP_HumanNPC_C::IsTalking' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, EyesLook) == 0x002691, "Member 'UFace_AnimBP_HumanNPC_C::EyesLook' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, FacialAnimationComponentReference) == 0x002698, "Member 'UFace_AnimBP_HumanNPC_C::FacialAnimationComponentReference' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, BlinkTimer) == 0x0026A0, "Member 'UFace_AnimBP_HumanNPC_C::BlinkTimer' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, ShouldBlink) == 0x0026A8, "Member 'UFace_AnimBP_HumanNPC_C::ShouldBlink' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, AnimationComponentReference) == 0x0026B0, "Member 'UFace_AnimBP_HumanNPC_C::AnimationComponentReference' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, ExpressionsBlendTime) == 0x0026B8, "Member 'UFace_AnimBP_HumanNPC_C::ExpressionsBlendTime' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, Expression_1) == 0x0026BC, "Member 'UFace_AnimBP_HumanNPC_C::Expression_1' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, ExpressionStrength) == 0x0026C0, "Member 'UFace_AnimBP_HumanNPC_C::ExpressionStrength' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, BlinkStrength) == 0x0026C4, "Member 'UFace_AnimBP_HumanNPC_C::BlinkStrength' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, Is_in_Dialogue) == 0x0026C8, "Member 'UFace_AnimBP_HumanNPC_C::Is_in_Dialogue' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, EnvelopeVolume) == 0x0026D0, "Member 'UFace_AnimBP_HumanNPC_C::EnvelopeVolume' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, ShouldLookAt) == 0x0026D8, "Member 'UFace_AnimBP_HumanNPC_C::ShouldLookAt' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, LookAtLocation) == 0x0026E0, "Member 'UFace_AnimBP_HumanNPC_C::LookAtLocation' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, PostProcessABP) == 0x0026F8, "Member 'UFace_AnimBP_HumanNPC_C::PostProcessABP' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, HasMetahumanPostProcessABP) == 0x002700, "Member 'UFace_AnimBP_HumanNPC_C::HasMetahumanPostProcessABP' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, Eye_Left_Right) == 0x002704, "Member 'UFace_AnimBP_HumanNPC_C::Eye_Left_Right' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, Eye_Up_Down) == 0x002708, "Member 'UFace_AnimBP_HumanNPC_C::Eye_Up_Down' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, TEMP_LookAtLocation) == 0x002710, "Member 'UFace_AnimBP_HumanNPC_C::TEMP_LookAtLocation' has a wrong offset!");
static_assert(offsetof(UFace_AnimBP_HumanNPC_C, EnvelopeVolumex3) == 0x002728, "Member 'UFace_AnimBP_HumanNPC_C::EnvelopeVolumex3' has a wrong offset!");

}

