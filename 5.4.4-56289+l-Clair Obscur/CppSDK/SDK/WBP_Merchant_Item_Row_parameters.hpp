#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Merchant_Item_Row

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "EWeaponQuality_structs.hpp"
#include "S_MerchantItemSellData_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_Merchant_Item_Row.WBP_Merchant_Item_Row_C.BndEvt__WBP_Merchant_Item_Row_WBP_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Merchant_Item_Row_C_BndEvt__WBP_Merchant_Item_Row_WBP_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Merchant_Item_Row_C_BndEvt__WBP_Merchant_Item_Row_WBP_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Merchant_Item_Row_C_BndEvt__WBP_Merchant_Item_Row_WBP_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature");
static_assert(sizeof(WBP_Merchant_Item_Row_C_BndEvt__WBP_Merchant_Item_Row_WBP_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature) == 0x000008, "Wrong size on WBP_Merchant_Item_Row_C_BndEvt__WBP_Merchant_Item_Row_WBP_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature");
static_assert(offsetof(WBP_Merchant_Item_Row_C_BndEvt__WBP_Merchant_Item_Row_WBP_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature, Button) == 0x000000, "Member 'WBP_Merchant_Item_Row_C_BndEvt__WBP_Merchant_Item_Row_WBP_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature::Button' has a wrong offset!");

// Function WBP_Merchant_Item_Row.WBP_Merchant_Item_Row_C.BndEvt__WBP_Merchant_Item_Row_WBP_BaseButton_K2Node_ComponentBoundEvent_1_OnButtonBaseUnfocused__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Merchant_Item_Row_C_BndEvt__WBP_Merchant_Item_Row_WBP_BaseButton_K2Node_ComponentBoundEvent_1_OnButtonBaseUnfocused__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Merchant_Item_Row_C_BndEvt__WBP_Merchant_Item_Row_WBP_BaseButton_K2Node_ComponentBoundEvent_1_OnButtonBaseUnfocused__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Merchant_Item_Row_C_BndEvt__WBP_Merchant_Item_Row_WBP_BaseButton_K2Node_ComponentBoundEvent_1_OnButtonBaseUnfocused__DelegateSignature");
static_assert(sizeof(WBP_Merchant_Item_Row_C_BndEvt__WBP_Merchant_Item_Row_WBP_BaseButton_K2Node_ComponentBoundEvent_1_OnButtonBaseUnfocused__DelegateSignature) == 0x000008, "Wrong size on WBP_Merchant_Item_Row_C_BndEvt__WBP_Merchant_Item_Row_WBP_BaseButton_K2Node_ComponentBoundEvent_1_OnButtonBaseUnfocused__DelegateSignature");
static_assert(offsetof(WBP_Merchant_Item_Row_C_BndEvt__WBP_Merchant_Item_Row_WBP_BaseButton_K2Node_ComponentBoundEvent_1_OnButtonBaseUnfocused__DelegateSignature, Button) == 0x000000, "Member 'WBP_Merchant_Item_Row_C_BndEvt__WBP_Merchant_Item_Row_WBP_BaseButton_K2Node_ComponentBoundEvent_1_OnButtonBaseUnfocused__DelegateSignature::Button' has a wrong offset!");

// Function WBP_Merchant_Item_Row.WBP_Merchant_Item_Row_C.CanBuyItem
// 0x0006 (0x0006 - 0x0000)
struct WBP_Merchant_Item_Row_C_CanBuyItem final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMerchantItemBetterThanOwnedItem_Return_Value; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAtLeastGoldAmount_Result;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Merchant_Item_Row_C_CanBuyItem) == 0x000001, "Wrong alignment on WBP_Merchant_Item_Row_C_CanBuyItem");
static_assert(sizeof(WBP_Merchant_Item_Row_C_CanBuyItem) == 0x000006, "Wrong size on WBP_Merchant_Item_Row_C_CanBuyItem");
static_assert(offsetof(WBP_Merchant_Item_Row_C_CanBuyItem, ReturnValue) == 0x000000, "Member 'WBP_Merchant_Item_Row_C_CanBuyItem::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_CanBuyItem, CallFunc_IsMerchantItemBetterThanOwnedItem_Return_Value) == 0x000001, "Member 'WBP_Merchant_Item_Row_C_CanBuyItem::CallFunc_IsMerchantItemBetterThanOwnedItem_Return_Value' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_CanBuyItem, CallFunc_HasAtLeastGoldAmount_Result) == 0x000002, "Member 'WBP_Merchant_Item_Row_C_CanBuyItem::CallFunc_HasAtLeastGoldAmount_Result' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_CanBuyItem, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000003, "Member 'WBP_Merchant_Item_Row_C_CanBuyItem::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_CanBuyItem, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'WBP_Merchant_Item_Row_C_CanBuyItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_CanBuyItem, CallFunc_BooleanAND_ReturnValue_1) == 0x000005, "Member 'WBP_Merchant_Item_Row_C_CanBuyItem::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function WBP_Merchant_Item_Row.WBP_Merchant_Item_Row_C.ExecuteUbergraph_WBP_Merchant_Item_Row
// 0x0018 (0x0018 - 0x0000)
struct WBP_Merchant_Item_Row_C_ExecuteUbergraph_WBP_Merchant_Item_Row final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_1;               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Merchant_Item_Row_C_ExecuteUbergraph_WBP_Merchant_Item_Row) == 0x000008, "Wrong alignment on WBP_Merchant_Item_Row_C_ExecuteUbergraph_WBP_Merchant_Item_Row");
static_assert(sizeof(WBP_Merchant_Item_Row_C_ExecuteUbergraph_WBP_Merchant_Item_Row) == 0x000018, "Wrong size on WBP_Merchant_Item_Row_C_ExecuteUbergraph_WBP_Merchant_Item_Row");
static_assert(offsetof(WBP_Merchant_Item_Row_C_ExecuteUbergraph_WBP_Merchant_Item_Row, EntryPoint) == 0x000000, "Member 'WBP_Merchant_Item_Row_C_ExecuteUbergraph_WBP_Merchant_Item_Row::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_ExecuteUbergraph_WBP_Merchant_Item_Row, K2Node_ComponentBoundEvent_Button_1) == 0x000008, "Member 'WBP_Merchant_Item_Row_C_ExecuteUbergraph_WBP_Merchant_Item_Row::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_ExecuteUbergraph_WBP_Merchant_Item_Row, K2Node_ComponentBoundEvent_Button) == 0x000010, "Member 'WBP_Merchant_Item_Row_C_ExecuteUbergraph_WBP_Merchant_Item_Row::K2Node_ComponentBoundEvent_Button' has a wrong offset!");

// Function WBP_Merchant_Item_Row.WBP_Merchant_Item_Row_C.GetMerchantItem
// 0x0170 (0x0170 - 0x0000)
struct WBP_Merchant_Item_Row_C_GetMerchantItem final
{
public:
	struct FS_MerchantItemSellData                MerchantItem_0;                                    // 0x0000(0x0170)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Merchant_Item_Row_C_GetMerchantItem) == 0x000008, "Wrong alignment on WBP_Merchant_Item_Row_C_GetMerchantItem");
static_assert(sizeof(WBP_Merchant_Item_Row_C_GetMerchantItem) == 0x000170, "Wrong size on WBP_Merchant_Item_Row_C_GetMerchantItem");
static_assert(offsetof(WBP_Merchant_Item_Row_C_GetMerchantItem, MerchantItem_0) == 0x000000, "Member 'WBP_Merchant_Item_Row_C_GetMerchantItem::MerchantItem_0' has a wrong offset!");

// Function WBP_Merchant_Item_Row.WBP_Merchant_Item_Row_C.IsItemVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_Merchant_Item_Row_C_IsItemVisible final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Merchant_Item_Row_C_IsItemVisible) == 0x000001, "Wrong alignment on WBP_Merchant_Item_Row_C_IsItemVisible");
static_assert(sizeof(WBP_Merchant_Item_Row_C_IsItemVisible) == 0x000001, "Wrong size on WBP_Merchant_Item_Row_C_IsItemVisible");
static_assert(offsetof(WBP_Merchant_Item_Row_C_IsItemVisible, ReturnValue) == 0x000000, "Member 'WBP_Merchant_Item_Row_C_IsItemVisible::ReturnValue' has a wrong offset!");

// Function WBP_Merchant_Item_Row.WBP_Merchant_Item_Row_C.IsMerchantItemBetterThanOwnedItem
// 0x0020 (0x0020 - 0x0000)
struct WBP_Merchant_Item_Row_C_IsMerchantItemBetterThanOwnedItem final
{
public:
	bool                                          Return_Value;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentLevel_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_C*                K2Node_DynamicCast_AsBP_Item_Instance_Gear;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentLevel_ReturnValue_1;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Merchant_Item_Row_C_IsMerchantItemBetterThanOwnedItem) == 0x000008, "Wrong alignment on WBP_Merchant_Item_Row_C_IsMerchantItemBetterThanOwnedItem");
static_assert(sizeof(WBP_Merchant_Item_Row_C_IsMerchantItemBetterThanOwnedItem) == 0x000020, "Wrong size on WBP_Merchant_Item_Row_C_IsMerchantItemBetterThanOwnedItem");
static_assert(offsetof(WBP_Merchant_Item_Row_C_IsMerchantItemBetterThanOwnedItem, Return_Value) == 0x000000, "Member 'WBP_Merchant_Item_Row_C_IsMerchantItemBetterThanOwnedItem::Return_Value' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_IsMerchantItemBetterThanOwnedItem, CallFunc_GetCurrentLevel_ReturnValue) == 0x000004, "Member 'WBP_Merchant_Item_Row_C_IsMerchantItemBetterThanOwnedItem::CallFunc_GetCurrentLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_IsMerchantItemBetterThanOwnedItem, K2Node_DynamicCast_AsBP_Item_Instance_Gear) == 0x000008, "Member 'WBP_Merchant_Item_Row_C_IsMerchantItemBetterThanOwnedItem::K2Node_DynamicCast_AsBP_Item_Instance_Gear' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_IsMerchantItemBetterThanOwnedItem, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_Merchant_Item_Row_C_IsMerchantItemBetterThanOwnedItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_IsMerchantItemBetterThanOwnedItem, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'WBP_Merchant_Item_Row_C_IsMerchantItemBetterThanOwnedItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_IsMerchantItemBetterThanOwnedItem, CallFunc_GetCurrentLevel_ReturnValue_1) == 0x000014, "Member 'WBP_Merchant_Item_Row_C_IsMerchantItemBetterThanOwnedItem::CallFunc_GetCurrentLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_IsMerchantItemBetterThanOwnedItem, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'WBP_Merchant_Item_Row_C_IsMerchantItemBetterThanOwnedItem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_IsMerchantItemBetterThanOwnedItem, CallFunc_Greater_IntInt_ReturnValue) == 0x000019, "Member 'WBP_Merchant_Item_Row_C_IsMerchantItemBetterThanOwnedItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_IsMerchantItemBetterThanOwnedItem, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'WBP_Merchant_Item_Row_C_IsMerchantItemBetterThanOwnedItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_Merchant_Item_Row.WBP_Merchant_Item_Row_C.IsPicto
// 0x0180 (0x0180 - 0x0000)
struct WBP_Merchant_Item_Row_C_IsPicto final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_MerchantItemSellData                CallFunc_GetMerchantItem_MerchantItem;             // 0x0008(0x0170)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Merchant_Item_Row_C_IsPicto) == 0x000008, "Wrong alignment on WBP_Merchant_Item_Row_C_IsPicto");
static_assert(sizeof(WBP_Merchant_Item_Row_C_IsPicto) == 0x000180, "Wrong size on WBP_Merchant_Item_Row_C_IsPicto");
static_assert(offsetof(WBP_Merchant_Item_Row_C_IsPicto, ReturnValue) == 0x000000, "Member 'WBP_Merchant_Item_Row_C_IsPicto::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_IsPicto, CallFunc_GetMerchantItem_MerchantItem) == 0x000008, "Member 'WBP_Merchant_Item_Row_C_IsPicto::CallFunc_GetMerchantItem_MerchantItem' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_IsPicto, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000178, "Member 'WBP_Merchant_Item_Row_C_IsPicto::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_Merchant_Item_Row.WBP_Merchant_Item_Row_C.IsWeapon
// 0x0180 (0x0180 - 0x0000)
struct WBP_Merchant_Item_Row_C_IsWeapon final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_MerchantItemSellData                CallFunc_GetMerchantItem_MerchantItem;             // 0x0008(0x0170)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Merchant_Item_Row_C_IsWeapon) == 0x000008, "Wrong alignment on WBP_Merchant_Item_Row_C_IsWeapon");
static_assert(sizeof(WBP_Merchant_Item_Row_C_IsWeapon) == 0x000180, "Wrong size on WBP_Merchant_Item_Row_C_IsWeapon");
static_assert(offsetof(WBP_Merchant_Item_Row_C_IsWeapon, ReturnValue) == 0x000000, "Member 'WBP_Merchant_Item_Row_C_IsWeapon::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_IsWeapon, CallFunc_GetMerchantItem_MerchantItem) == 0x000008, "Member 'WBP_Merchant_Item_Row_C_IsWeapon::CallFunc_GetMerchantItem_MerchantItem' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_IsWeapon, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000178, "Member 'WBP_Merchant_Item_Row_C_IsWeapon::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_Merchant_Item_Row.WBP_Merchant_Item_Row_C.LoadMerchantItem
// 0x0170 (0x0170 - 0x0000)
struct WBP_Merchant_Item_Row_C_LoadMerchantItem final
{
public:
	struct FS_MerchantItemSellData                MerchantSellItem;                                  // 0x0000(0x0170)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Merchant_Item_Row_C_LoadMerchantItem) == 0x000008, "Wrong alignment on WBP_Merchant_Item_Row_C_LoadMerchantItem");
static_assert(sizeof(WBP_Merchant_Item_Row_C_LoadMerchantItem) == 0x000170, "Wrong size on WBP_Merchant_Item_Row_C_LoadMerchantItem");
static_assert(offsetof(WBP_Merchant_Item_Row_C_LoadMerchantItem, MerchantSellItem) == 0x000000, "Member 'WBP_Merchant_Item_Row_C_LoadMerchantItem::MerchantSellItem' has a wrong offset!");

// Function WBP_Merchant_Item_Row.WBP_Merchant_Item_Row_C.Update Owned Widgets
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_Merchant_Item_Row_C_Update_Owned_Widgets final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentLevel_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponQuality                                CallFunc_GetWeaponQualityForUpgradeLevel_Quality;  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAmountOfItemInInventory_ItemAmount;    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAmountOfItemInInventory_ItemAmount_1;  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0010)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0010)()
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Merchant_Item_Row_C_Update_Owned_Widgets) == 0x000008, "Wrong alignment on WBP_Merchant_Item_Row_C_Update_Owned_Widgets");
static_assert(sizeof(WBP_Merchant_Item_Row_C_Update_Owned_Widgets) == 0x0000B0, "Wrong size on WBP_Merchant_Item_Row_C_Update_Owned_Widgets");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Owned_Widgets, Temp_byte_Variable) == 0x000000, "Member 'WBP_Merchant_Item_Row_C_Update_Owned_Widgets::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Owned_Widgets, Temp_byte_Variable_1) == 0x000001, "Member 'WBP_Merchant_Item_Row_C_Update_Owned_Widgets::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Owned_Widgets, Temp_bool_Variable) == 0x000002, "Member 'WBP_Merchant_Item_Row_C_Update_Owned_Widgets::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Owned_Widgets, Temp_byte_Variable_2) == 0x000003, "Member 'WBP_Merchant_Item_Row_C_Update_Owned_Widgets::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Owned_Widgets, Temp_byte_Variable_3) == 0x000004, "Member 'WBP_Merchant_Item_Row_C_Update_Owned_Widgets::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Owned_Widgets, Temp_bool_Variable_1) == 0x000005, "Member 'WBP_Merchant_Item_Row_C_Update_Owned_Widgets::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Owned_Widgets, Temp_byte_Variable_4) == 0x000006, "Member 'WBP_Merchant_Item_Row_C_Update_Owned_Widgets::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Owned_Widgets, Temp_byte_Variable_5) == 0x000007, "Member 'WBP_Merchant_Item_Row_C_Update_Owned_Widgets::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Owned_Widgets, Temp_bool_Variable_2) == 0x000008, "Member 'WBP_Merchant_Item_Row_C_Update_Owned_Widgets::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Owned_Widgets, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'WBP_Merchant_Item_Row_C_Update_Owned_Widgets::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Owned_Widgets, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'WBP_Merchant_Item_Row_C_Update_Owned_Widgets::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Owned_Widgets, CallFunc_GetCurrentLevel_ReturnValue) == 0x00000C, "Member 'WBP_Merchant_Item_Row_C_Update_Owned_Widgets::CallFunc_GetCurrentLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Owned_Widgets, CallFunc_GetWeaponQualityForUpgradeLevel_Quality) == 0x000010, "Member 'WBP_Merchant_Item_Row_C_Update_Owned_Widgets::CallFunc_GetWeaponQualityForUpgradeLevel_Quality' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Owned_Widgets, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'WBP_Merchant_Item_Row_C_Update_Owned_Widgets::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Owned_Widgets, K2Node_Select_Default) == 0x000012, "Member 'WBP_Merchant_Item_Row_C_Update_Owned_Widgets::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Owned_Widgets, CallFunc_Not_PreBool_ReturnValue_1) == 0x000013, "Member 'WBP_Merchant_Item_Row_C_Update_Owned_Widgets::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Owned_Widgets, CallFunc_GetAmountOfItemInInventory_ItemAmount) == 0x000014, "Member 'WBP_Merchant_Item_Row_C_Update_Owned_Widgets::CallFunc_GetAmountOfItemInInventory_ItemAmount' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Owned_Widgets, CallFunc_GetAmountOfItemInInventory_ItemAmount_1) == 0x000018, "Member 'WBP_Merchant_Item_Row_C_Update_Owned_Widgets::CallFunc_GetAmountOfItemInInventory_ItemAmount_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Owned_Widgets, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_Merchant_Item_Row_C_Update_Owned_Widgets::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Owned_Widgets, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'WBP_Merchant_Item_Row_C_Update_Owned_Widgets::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Owned_Widgets, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'WBP_Merchant_Item_Row_C_Update_Owned_Widgets::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Owned_Widgets, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'WBP_Merchant_Item_Row_C_Update_Owned_Widgets::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Owned_Widgets, CallFunc_BooleanOR_ReturnValue) == 0x000080, "Member 'WBP_Merchant_Item_Row_C_Update_Owned_Widgets::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Owned_Widgets, K2Node_MakeArray_Array) == 0x000088, "Member 'WBP_Merchant_Item_Row_C_Update_Owned_Widgets::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Owned_Widgets, CallFunc_Format_ReturnValue) == 0x000098, "Member 'WBP_Merchant_Item_Row_C_Update_Owned_Widgets::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Owned_Widgets, K2Node_Select_Default_1) == 0x0000A8, "Member 'WBP_Merchant_Item_Row_C_Update_Owned_Widgets::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Owned_Widgets, K2Node_Select_Default_2) == 0x0000A9, "Member 'WBP_Merchant_Item_Row_C_Update_Owned_Widgets::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_Merchant_Item_Row.WBP_Merchant_Item_Row_C.Update Price Widget
// 0x0060 (0x0060 - 0x0000)
struct WBP_Merchant_Item_Row_C_Update_Price_Widget final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0008(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0018(0x0010)()
	class FString                                 CallFunc_GetCurrentLanguage_ReturnValue;           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0040(0x0010)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0050(0x0010)()
};
static_assert(alignof(WBP_Merchant_Item_Row_C_Update_Price_Widget) == 0x000008, "Wrong alignment on WBP_Merchant_Item_Row_C_Update_Price_Widget");
static_assert(sizeof(WBP_Merchant_Item_Row_C_Update_Price_Widget) == 0x000060, "Wrong size on WBP_Merchant_Item_Row_C_Update_Price_Widget");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Price_Widget, Temp_bool_Variable) == 0x000000, "Member 'WBP_Merchant_Item_Row_C_Update_Price_Widget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Price_Widget, CallFunc_MakeLiteralText_ReturnValue) == 0x000008, "Member 'WBP_Merchant_Item_Row_C_Update_Price_Widget::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Price_Widget, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000018, "Member 'WBP_Merchant_Item_Row_C_Update_Price_Widget::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Price_Widget, CallFunc_GetCurrentLanguage_ReturnValue) == 0x000028, "Member 'WBP_Merchant_Item_Row_C_Update_Price_Widget::CallFunc_GetCurrentLanguage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Price_Widget, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000038, "Member 'WBP_Merchant_Item_Row_C_Update_Price_Widget::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Price_Widget, K2Node_Select_Default) == 0x000040, "Member 'WBP_Merchant_Item_Row_C_Update_Price_Widget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_Update_Price_Widget, CallFunc_Conv_IntToText_ReturnValue) == 0x000050, "Member 'WBP_Merchant_Item_Row_C_Update_Price_Widget::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_Merchant_Item_Row.WBP_Merchant_Item_Row_C.UpdateItemIcon
// 0x0008 (0x0008 - 0x0000)
struct WBP_Merchant_Item_Row_C_UpdateItemIcon final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Merchant_Item_Row_C_UpdateItemIcon) == 0x000001, "Wrong alignment on WBP_Merchant_Item_Row_C_UpdateItemIcon");
static_assert(sizeof(WBP_Merchant_Item_Row_C_UpdateItemIcon) == 0x000008, "Wrong size on WBP_Merchant_Item_Row_C_UpdateItemIcon");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateItemIcon, Temp_byte_Variable) == 0x000000, "Member 'WBP_Merchant_Item_Row_C_UpdateItemIcon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateItemIcon, Temp_byte_Variable_1) == 0x000001, "Member 'WBP_Merchant_Item_Row_C_UpdateItemIcon::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateItemIcon, Temp_bool_Variable) == 0x000002, "Member 'WBP_Merchant_Item_Row_C_UpdateItemIcon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateItemIcon, Temp_byte_Variable_2) == 0x000003, "Member 'WBP_Merchant_Item_Row_C_UpdateItemIcon::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateItemIcon, Temp_byte_Variable_3) == 0x000004, "Member 'WBP_Merchant_Item_Row_C_UpdateItemIcon::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateItemIcon, Temp_bool_Variable_1) == 0x000005, "Member 'WBP_Merchant_Item_Row_C_UpdateItemIcon::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateItemIcon, K2Node_Select_Default) == 0x000006, "Member 'WBP_Merchant_Item_Row_C_UpdateItemIcon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateItemIcon, K2Node_Select_Default_1) == 0x000007, "Member 'WBP_Merchant_Item_Row_C_UpdateItemIcon::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_Merchant_Item_Row.WBP_Merchant_Item_Row_C.UpdateItemLevel
// 0x0020 (0x0020 - 0x0000)
struct WBP_Merchant_Item_Row_C_UpdateItemLevel final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPicto_ReturnValue;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWeapon_ReturnValue;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Gear_C*                K2Node_DynamicCast_AsBP_Item_Instance_Gear;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentLevel_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponQuality                                CallFunc_GetWeaponQualityForUpgradeLevel_Quality;  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Merchant_Item_Row_C_UpdateItemLevel) == 0x000008, "Wrong alignment on WBP_Merchant_Item_Row_C_UpdateItemLevel");
static_assert(sizeof(WBP_Merchant_Item_Row_C_UpdateItemLevel) == 0x000020, "Wrong size on WBP_Merchant_Item_Row_C_UpdateItemLevel");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateItemLevel, Temp_byte_Variable) == 0x000000, "Member 'WBP_Merchant_Item_Row_C_UpdateItemLevel::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateItemLevel, Temp_byte_Variable_1) == 0x000001, "Member 'WBP_Merchant_Item_Row_C_UpdateItemLevel::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateItemLevel, Temp_bool_Variable) == 0x000002, "Member 'WBP_Merchant_Item_Row_C_UpdateItemLevel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateItemLevel, CallFunc_IsPicto_ReturnValue) == 0x000003, "Member 'WBP_Merchant_Item_Row_C_UpdateItemLevel::CallFunc_IsPicto_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateItemLevel, CallFunc_IsWeapon_ReturnValue) == 0x000004, "Member 'WBP_Merchant_Item_Row_C_UpdateItemLevel::CallFunc_IsWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateItemLevel, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'WBP_Merchant_Item_Row_C_UpdateItemLevel::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateItemLevel, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'WBP_Merchant_Item_Row_C_UpdateItemLevel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateItemLevel, K2Node_DynamicCast_AsBP_Item_Instance_Gear) == 0x000008, "Member 'WBP_Merchant_Item_Row_C_UpdateItemLevel::K2Node_DynamicCast_AsBP_Item_Instance_Gear' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateItemLevel, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_Merchant_Item_Row_C_UpdateItemLevel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateItemLevel, CallFunc_GetCurrentLevel_ReturnValue) == 0x000014, "Member 'WBP_Merchant_Item_Row_C_UpdateItemLevel::CallFunc_GetCurrentLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateItemLevel, K2Node_Select_Default) == 0x000018, "Member 'WBP_Merchant_Item_Row_C_UpdateItemLevel::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateItemLevel, CallFunc_GetWeaponQualityForUpgradeLevel_Quality) == 0x000019, "Member 'WBP_Merchant_Item_Row_C_UpdateItemLevel::CallFunc_GetWeaponQualityForUpgradeLevel_Quality' has a wrong offset!");

// Function WBP_Merchant_Item_Row.WBP_Merchant_Item_Row_C.UpdateItemWidget
// 0x0018 (0x0018 - 0x0000)
struct WBP_Merchant_Item_Row_C_UpdateItemWidget final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0008(0x0010)()
};
static_assert(alignof(WBP_Merchant_Item_Row_C_UpdateItemWidget) == 0x000008, "Wrong alignment on WBP_Merchant_Item_Row_C_UpdateItemWidget");
static_assert(sizeof(WBP_Merchant_Item_Row_C_UpdateItemWidget) == 0x000018, "Wrong size on WBP_Merchant_Item_Row_C_UpdateItemWidget");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateItemWidget, Temp_bool_Variable) == 0x000000, "Member 'WBP_Merchant_Item_Row_C_UpdateItemWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateItemWidget, K2Node_Select_Default) == 0x000008, "Member 'WBP_Merchant_Item_Row_C_UpdateItemWidget::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Merchant_Item_Row.WBP_Merchant_Item_Row_C.UpdateOwnedItemInstanceFromInventory
// 0x0038 (0x0038 - 0x0000)
struct WBP_Merchant_Item_Row_C_UpdateOwnedItemInstanceFromInventory final
{
public:
	class UBP_ItemUpgradeSystem_C*                CallFunc_GetItemUpgradeSystem_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_C*                K2Node_DynamicCast_AsBP_Item_Instance_Gear;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetItemDefinitionID_ReturnValue;          // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Base_C*                CallFunc_FindItemInstanceByID_ItemInstance;        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_C*                K2Node_DynamicCast_AsBP_Item_Instance_Gear_1;      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Merchant_Item_Row_C_UpdateOwnedItemInstanceFromInventory) == 0x000008, "Wrong alignment on WBP_Merchant_Item_Row_C_UpdateOwnedItemInstanceFromInventory");
static_assert(sizeof(WBP_Merchant_Item_Row_C_UpdateOwnedItemInstanceFromInventory) == 0x000038, "Wrong size on WBP_Merchant_Item_Row_C_UpdateOwnedItemInstanceFromInventory");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateOwnedItemInstanceFromInventory, CallFunc_GetItemUpgradeSystem_ReturnValue) == 0x000000, "Member 'WBP_Merchant_Item_Row_C_UpdateOwnedItemInstanceFromInventory::CallFunc_GetItemUpgradeSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateOwnedItemInstanceFromInventory, K2Node_DynamicCast_AsBP_Item_Instance_Gear) == 0x000008, "Member 'WBP_Merchant_Item_Row_C_UpdateOwnedItemInstanceFromInventory::K2Node_DynamicCast_AsBP_Item_Instance_Gear' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateOwnedItemInstanceFromInventory, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_Merchant_Item_Row_C_UpdateOwnedItemInstanceFromInventory::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateOwnedItemInstanceFromInventory, CallFunc_GetItemDefinitionID_ReturnValue) == 0x000014, "Member 'WBP_Merchant_Item_Row_C_UpdateOwnedItemInstanceFromInventory::CallFunc_GetItemDefinitionID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateOwnedItemInstanceFromInventory, CallFunc_FindItemInstanceByID_ItemInstance) == 0x000020, "Member 'WBP_Merchant_Item_Row_C_UpdateOwnedItemInstanceFromInventory::CallFunc_FindItemInstanceByID_ItemInstance' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateOwnedItemInstanceFromInventory, K2Node_DynamicCast_AsBP_Item_Instance_Gear_1) == 0x000028, "Member 'WBP_Merchant_Item_Row_C_UpdateOwnedItemInstanceFromInventory::K2Node_DynamicCast_AsBP_Item_Instance_Gear_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateOwnedItemInstanceFromInventory, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'WBP_Merchant_Item_Row_C_UpdateOwnedItemInstanceFromInventory::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WBP_Merchant_Item_Row.WBP_Merchant_Item_Row_C.UpdateRemainingQuantityWidget
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_Merchant_Item_Row_C_UpdateRemainingQuantityWidget final
{
public:
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0000(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0010(0x0010)()
	class FString                                 CallFunc_GetCurrentLanguage_ReturnValue;           // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0038(0x0010)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0050(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0010)()
};
static_assert(alignof(WBP_Merchant_Item_Row_C_UpdateRemainingQuantityWidget) == 0x000008, "Wrong alignment on WBP_Merchant_Item_Row_C_UpdateRemainingQuantityWidget");
static_assert(sizeof(WBP_Merchant_Item_Row_C_UpdateRemainingQuantityWidget) == 0x0000C8, "Wrong size on WBP_Merchant_Item_Row_C_UpdateRemainingQuantityWidget");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateRemainingQuantityWidget, CallFunc_MakeLiteralText_ReturnValue) == 0x000000, "Member 'WBP_Merchant_Item_Row_C_UpdateRemainingQuantityWidget::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateRemainingQuantityWidget, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000010, "Member 'WBP_Merchant_Item_Row_C_UpdateRemainingQuantityWidget::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateRemainingQuantityWidget, CallFunc_GetCurrentLanguage_ReturnValue) == 0x000020, "Member 'WBP_Merchant_Item_Row_C_UpdateRemainingQuantityWidget::CallFunc_GetCurrentLanguage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateRemainingQuantityWidget, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000030, "Member 'WBP_Merchant_Item_Row_C_UpdateRemainingQuantityWidget::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateRemainingQuantityWidget, Temp_bool_Variable) == 0x000031, "Member 'WBP_Merchant_Item_Row_C_UpdateRemainingQuantityWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateRemainingQuantityWidget, K2Node_Select_Default) == 0x000038, "Member 'WBP_Merchant_Item_Row_C_UpdateRemainingQuantityWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateRemainingQuantityWidget, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'WBP_Merchant_Item_Row_C_UpdateRemainingQuantityWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateRemainingQuantityWidget, CallFunc_Conv_IntToText_ReturnValue) == 0x000050, "Member 'WBP_Merchant_Item_Row_C_UpdateRemainingQuantityWidget::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateRemainingQuantityWidget, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'WBP_Merchant_Item_Row_C_UpdateRemainingQuantityWidget::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateRemainingQuantityWidget, K2Node_MakeArray_Array) == 0x0000A8, "Member 'WBP_Merchant_Item_Row_C_UpdateRemainingQuantityWidget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateRemainingQuantityWidget, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'WBP_Merchant_Item_Row_C_UpdateRemainingQuantityWidget::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_Merchant_Item_Row.WBP_Merchant_Item_Row_C.UpdateWidgetColor
// 0x0038 (0x0038 - 0x0000)
struct WBP_Merchant_Item_Row_C_UpdateWidgetColor final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanBuyItem_ReturnValue;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Merchant_Item_Row_C_UpdateWidgetColor) == 0x000004, "Wrong alignment on WBP_Merchant_Item_Row_C_UpdateWidgetColor");
static_assert(sizeof(WBP_Merchant_Item_Row_C_UpdateWidgetColor) == 0x000038, "Wrong size on WBP_Merchant_Item_Row_C_UpdateWidgetColor");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateWidgetColor, Temp_bool_Variable) == 0x000000, "Member 'WBP_Merchant_Item_Row_C_UpdateWidgetColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateWidgetColor, Temp_struct_Variable) == 0x000004, "Member 'WBP_Merchant_Item_Row_C_UpdateWidgetColor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateWidgetColor, Temp_struct_Variable_1) == 0x000014, "Member 'WBP_Merchant_Item_Row_C_UpdateWidgetColor::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateWidgetColor, CallFunc_CanBuyItem_ReturnValue) == 0x000024, "Member 'WBP_Merchant_Item_Row_C_UpdateWidgetColor::CallFunc_CanBuyItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Item_Row_C_UpdateWidgetColor, K2Node_Select_Default) == 0x000028, "Member 'WBP_Merchant_Item_Row_C_UpdateWidgetColor::K2Node_Select_Default' has a wrong offset!");

}

