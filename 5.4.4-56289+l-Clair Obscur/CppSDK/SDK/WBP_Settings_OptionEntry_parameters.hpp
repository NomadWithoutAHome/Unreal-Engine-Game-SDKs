#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Settings_OptionEntry

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_Settings_OptionEntry.WBP_Settings_OptionEntry_C.UpdateWidgetLockState
// 0x0028 (0x0028 - 0x0000)
struct WBP_Settings_OptionEntry_C_UpdateWidgetLockState final
{
public:
	bool                                          CallFunc_GetIsLocked_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetContent_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SelectorLockable_C> K2Node_DynamicCast_AsBPI_Selector_Lockable;      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_OptionEntry_C_UpdateWidgetLockState) == 0x000008, "Wrong alignment on WBP_Settings_OptionEntry_C_UpdateWidgetLockState");
static_assert(sizeof(WBP_Settings_OptionEntry_C_UpdateWidgetLockState) == 0x000028, "Wrong size on WBP_Settings_OptionEntry_C_UpdateWidgetLockState");
static_assert(offsetof(WBP_Settings_OptionEntry_C_UpdateWidgetLockState, CallFunc_GetIsLocked_ReturnValue) == 0x000000, "Member 'WBP_Settings_OptionEntry_C_UpdateWidgetLockState::CallFunc_GetIsLocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_UpdateWidgetLockState, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'WBP_Settings_OptionEntry_C_UpdateWidgetLockState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_UpdateWidgetLockState, CallFunc_GetContent_ReturnValue) == 0x000008, "Member 'WBP_Settings_OptionEntry_C_UpdateWidgetLockState::CallFunc_GetContent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_UpdateWidgetLockState, K2Node_DynamicCast_AsBPI_Selector_Lockable) == 0x000010, "Member 'WBP_Settings_OptionEntry_C_UpdateWidgetLockState::K2Node_DynamicCast_AsBPI_Selector_Lockable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_UpdateWidgetLockState, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_Settings_OptionEntry_C_UpdateWidgetLockState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_Settings_OptionEntry.WBP_Settings_OptionEntry_C.GetIsLocked
// 0x0002 (0x0002 - 0x0000)
struct WBP_Settings_OptionEntry_C_GetIsLocked final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesAnyTags_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_OptionEntry_C_GetIsLocked) == 0x000001, "Wrong alignment on WBP_Settings_OptionEntry_C_GetIsLocked");
static_assert(sizeof(WBP_Settings_OptionEntry_C_GetIsLocked) == 0x000002, "Wrong size on WBP_Settings_OptionEntry_C_GetIsLocked");
static_assert(offsetof(WBP_Settings_OptionEntry_C_GetIsLocked, ReturnValue) == 0x000000, "Member 'WBP_Settings_OptionEntry_C_GetIsLocked::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_GetIsLocked, CallFunc_MatchesAnyTags_ReturnValue) == 0x000001, "Member 'WBP_Settings_OptionEntry_C_GetIsLocked::CallFunc_MatchesAnyTags_ReturnValue' has a wrong offset!");

// Function WBP_Settings_OptionEntry.WBP_Settings_OptionEntry_C.SetForceLocked
// 0x0001 (0x0001 - 0x0000)
struct WBP_Settings_OptionEntry_C_SetForceLocked final
{
public:
	bool                                          Locked;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_OptionEntry_C_SetForceLocked) == 0x000001, "Wrong alignment on WBP_Settings_OptionEntry_C_SetForceLocked");
static_assert(sizeof(WBP_Settings_OptionEntry_C_SetForceLocked) == 0x000001, "Wrong size on WBP_Settings_OptionEntry_C_SetForceLocked");
static_assert(offsetof(WBP_Settings_OptionEntry_C_SetForceLocked, Locked) == 0x000000, "Member 'WBP_Settings_OptionEntry_C_SetForceLocked::Locked' has a wrong offset!");

// Function WBP_Settings_OptionEntry.WBP_Settings_OptionEntry_C.SetCurrentContext
// 0x0008 (0x0008 - 0x0000)
struct WBP_Settings_OptionEntry_C_SetCurrentContext final
{
public:
	struct FGameplayTag                           CurrentContext_0;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_OptionEntry_C_SetCurrentContext) == 0x000004, "Wrong alignment on WBP_Settings_OptionEntry_C_SetCurrentContext");
static_assert(sizeof(WBP_Settings_OptionEntry_C_SetCurrentContext) == 0x000008, "Wrong size on WBP_Settings_OptionEntry_C_SetCurrentContext");
static_assert(offsetof(WBP_Settings_OptionEntry_C_SetCurrentContext, CurrentContext_0) == 0x000000, "Member 'WBP_Settings_OptionEntry_C_SetCurrentContext::CurrentContext_0' has a wrong offset!");

// Function WBP_Settings_OptionEntry.WBP_Settings_OptionEntry_C.SetOptionName
// 0x0010 (0x0010 - 0x0000)
struct WBP_Settings_OptionEntry_C_SetOptionName final
{
public:
	class FText                                   OptionName_0;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_Settings_OptionEntry_C_SetOptionName) == 0x000008, "Wrong alignment on WBP_Settings_OptionEntry_C_SetOptionName");
static_assert(sizeof(WBP_Settings_OptionEntry_C_SetOptionName) == 0x000010, "Wrong size on WBP_Settings_OptionEntry_C_SetOptionName");
static_assert(offsetof(WBP_Settings_OptionEntry_C_SetOptionName, OptionName_0) == 0x000000, "Member 'WBP_Settings_OptionEntry_C_SetOptionName::OptionName_0' has a wrong offset!");

// Function WBP_Settings_OptionEntry.WBP_Settings_OptionEntry_C.GetOptionDescription
// 0x0028 (0x0028 - 0x0000)
struct WBP_Settings_OptionEntry_C_GetOptionDescription final
{
public:
	class FText                                   DescriptionText;                                   // 0x0000(0x0010)(Parm, OutParm)
	bool                                          CallFunc_GetIsLocked_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_SelectText_ReturnValue;                   // 0x0018(0x0010)()
};
static_assert(alignof(WBP_Settings_OptionEntry_C_GetOptionDescription) == 0x000008, "Wrong alignment on WBP_Settings_OptionEntry_C_GetOptionDescription");
static_assert(sizeof(WBP_Settings_OptionEntry_C_GetOptionDescription) == 0x000028, "Wrong size on WBP_Settings_OptionEntry_C_GetOptionDescription");
static_assert(offsetof(WBP_Settings_OptionEntry_C_GetOptionDescription, DescriptionText) == 0x000000, "Member 'WBP_Settings_OptionEntry_C_GetOptionDescription::DescriptionText' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_GetOptionDescription, CallFunc_GetIsLocked_ReturnValue) == 0x000010, "Member 'WBP_Settings_OptionEntry_C_GetOptionDescription::CallFunc_GetIsLocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_GetOptionDescription, CallFunc_TextIsEmpty_ReturnValue) == 0x000011, "Member 'WBP_Settings_OptionEntry_C_GetOptionDescription::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_GetOptionDescription, CallFunc_SelectText_ReturnValue) == 0x000018, "Member 'WBP_Settings_OptionEntry_C_GetOptionDescription::CallFunc_SelectText_ReturnValue' has a wrong offset!");

// Function WBP_Settings_OptionEntry.WBP_Settings_OptionEntry_C.SetOptionDescription
// 0x0010 (0x0010 - 0x0000)
struct WBP_Settings_OptionEntry_C_SetOptionDescription final
{
public:
	class FText                                   OptionDescription_0;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_Settings_OptionEntry_C_SetOptionDescription) == 0x000008, "Wrong alignment on WBP_Settings_OptionEntry_C_SetOptionDescription");
static_assert(sizeof(WBP_Settings_OptionEntry_C_SetOptionDescription) == 0x000010, "Wrong size on WBP_Settings_OptionEntry_C_SetOptionDescription");
static_assert(offsetof(WBP_Settings_OptionEntry_C_SetOptionDescription, OptionDescription_0) == 0x000000, "Member 'WBP_Settings_OptionEntry_C_SetOptionDescription::OptionDescription_0' has a wrong offset!");

// Function WBP_Settings_OptionEntry.WBP_Settings_OptionEntry_C.OnBaseButtonNav
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_Settings_OptionEntry_C_OnBaseButtonNav final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Temp_object_Variable_3;                            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Temp_object_Variable_4;                            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EUINavigation                                 Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                Temp_object_Variable_5;                            // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Temp_object_Variable_6;                            // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Temp_object_Variable_7;                            // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Temp_object_Variable_8;                            // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Temp_object_Variable_9;                            // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EUINavigation                                 Temp_byte_Variable_1;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetContent_ReturnValue;                   // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_SliderSelector_C*                  K2Node_DynamicCast_AsWBP_Slider_Selector;          // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetContent_ReturnValue_1;                 // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_NamedValueSelector_C*              K2Node_DynamicCast_AsWBP_Named_Value_Selector;     // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_Select_Default_1;                           // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_OptionEntry_C_OnBaseButtonNav) == 0x000008, "Wrong alignment on WBP_Settings_OptionEntry_C_OnBaseButtonNav");
static_assert(sizeof(WBP_Settings_OptionEntry_C_OnBaseButtonNav) == 0x0000B0, "Wrong size on WBP_Settings_OptionEntry_C_OnBaseButtonNav");
static_assert(offsetof(WBP_Settings_OptionEntry_C_OnBaseButtonNav, Navigation_0) == 0x000000, "Member 'WBP_Settings_OptionEntry_C_OnBaseButtonNav::Navigation_0' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_OnBaseButtonNav, ReturnValue) == 0x000008, "Member 'WBP_Settings_OptionEntry_C_OnBaseButtonNav::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_OnBaseButtonNav, Temp_object_Variable) == 0x000010, "Member 'WBP_Settings_OptionEntry_C_OnBaseButtonNav::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_OnBaseButtonNav, Temp_object_Variable_1) == 0x000018, "Member 'WBP_Settings_OptionEntry_C_OnBaseButtonNav::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_OnBaseButtonNav, Temp_object_Variable_2) == 0x000020, "Member 'WBP_Settings_OptionEntry_C_OnBaseButtonNav::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_OnBaseButtonNav, Temp_object_Variable_3) == 0x000028, "Member 'WBP_Settings_OptionEntry_C_OnBaseButtonNav::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_OnBaseButtonNav, Temp_object_Variable_4) == 0x000030, "Member 'WBP_Settings_OptionEntry_C_OnBaseButtonNav::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_OnBaseButtonNav, Temp_byte_Variable) == 0x000038, "Member 'WBP_Settings_OptionEntry_C_OnBaseButtonNav::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_OnBaseButtonNav, Temp_object_Variable_5) == 0x000040, "Member 'WBP_Settings_OptionEntry_C_OnBaseButtonNav::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_OnBaseButtonNav, Temp_object_Variable_6) == 0x000048, "Member 'WBP_Settings_OptionEntry_C_OnBaseButtonNav::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_OnBaseButtonNav, Temp_object_Variable_7) == 0x000050, "Member 'WBP_Settings_OptionEntry_C_OnBaseButtonNav::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_OnBaseButtonNav, Temp_object_Variable_8) == 0x000058, "Member 'WBP_Settings_OptionEntry_C_OnBaseButtonNav::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_OnBaseButtonNav, Temp_object_Variable_9) == 0x000060, "Member 'WBP_Settings_OptionEntry_C_OnBaseButtonNav::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_OnBaseButtonNav, Temp_byte_Variable_1) == 0x000068, "Member 'WBP_Settings_OptionEntry_C_OnBaseButtonNav::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_OnBaseButtonNav, CallFunc_GetContent_ReturnValue) == 0x000070, "Member 'WBP_Settings_OptionEntry_C_OnBaseButtonNav::CallFunc_GetContent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_OnBaseButtonNav, K2Node_DynamicCast_AsWBP_Slider_Selector) == 0x000078, "Member 'WBP_Settings_OptionEntry_C_OnBaseButtonNav::K2Node_DynamicCast_AsWBP_Slider_Selector' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_OnBaseButtonNav, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'WBP_Settings_OptionEntry_C_OnBaseButtonNav::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_OnBaseButtonNav, CallFunc_GetContent_ReturnValue_1) == 0x000088, "Member 'WBP_Settings_OptionEntry_C_OnBaseButtonNav::CallFunc_GetContent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_OnBaseButtonNav, K2Node_DynamicCast_AsWBP_Named_Value_Selector) == 0x000090, "Member 'WBP_Settings_OptionEntry_C_OnBaseButtonNav::K2Node_DynamicCast_AsWBP_Named_Value_Selector' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_OnBaseButtonNav, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'WBP_Settings_OptionEntry_C_OnBaseButtonNav::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_OnBaseButtonNav, K2Node_Select_Default) == 0x0000A0, "Member 'WBP_Settings_OptionEntry_C_OnBaseButtonNav::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_OnBaseButtonNav, K2Node_Select_Default_1) == 0x0000A8, "Member 'WBP_Settings_OptionEntry_C_OnBaseButtonNav::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_Settings_OptionEntry.WBP_Settings_OptionEntry_C.IsAvailableOnCurrentPlatform
// 0x0014 (0x0014 - 0x0000)
struct WBP_Settings_OptionEntry_C_IsAvailableOnCurrentPlatform final
{
public:
	struct FGameplayTag                           CurrentPlatformTag;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAvailable;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRunningOnSteamDeck_ReturnValue;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCurrentConsoleTypeLockheart_ReturnValue; // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue_1;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_OptionEntry_C_IsAvailableOnCurrentPlatform) == 0x000004, "Wrong alignment on WBP_Settings_OptionEntry_C_IsAvailableOnCurrentPlatform");
static_assert(sizeof(WBP_Settings_OptionEntry_C_IsAvailableOnCurrentPlatform) == 0x000014, "Wrong size on WBP_Settings_OptionEntry_C_IsAvailableOnCurrentPlatform");
static_assert(offsetof(WBP_Settings_OptionEntry_C_IsAvailableOnCurrentPlatform, CurrentPlatformTag) == 0x000000, "Member 'WBP_Settings_OptionEntry_C_IsAvailableOnCurrentPlatform::CurrentPlatformTag' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_IsAvailableOnCurrentPlatform, IsAvailable) == 0x000008, "Member 'WBP_Settings_OptionEntry_C_IsAvailableOnCurrentPlatform::IsAvailable' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_IsAvailableOnCurrentPlatform, CallFunc_IsRunningOnSteamDeck_ReturnValue) == 0x000009, "Member 'WBP_Settings_OptionEntry_C_IsAvailableOnCurrentPlatform::CallFunc_IsRunningOnSteamDeck_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_IsAvailableOnCurrentPlatform, CallFunc_BooleanAND_ReturnValue) == 0x00000A, "Member 'WBP_Settings_OptionEntry_C_IsAvailableOnCurrentPlatform::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_IsAvailableOnCurrentPlatform, CallFunc_Not_PreBool_ReturnValue) == 0x00000B, "Member 'WBP_Settings_OptionEntry_C_IsAvailableOnCurrentPlatform::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_IsAvailableOnCurrentPlatform, CallFunc_IsCurrentConsoleTypeLockheart_ReturnValue) == 0x00000C, "Member 'WBP_Settings_OptionEntry_C_IsAvailableOnCurrentPlatform::CallFunc_IsCurrentConsoleTypeLockheart_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_IsAvailableOnCurrentPlatform, CallFunc_BooleanAND_ReturnValue_1) == 0x00000D, "Member 'WBP_Settings_OptionEntry_C_IsAvailableOnCurrentPlatform::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_IsAvailableOnCurrentPlatform, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000E, "Member 'WBP_Settings_OptionEntry_C_IsAvailableOnCurrentPlatform::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_IsAvailableOnCurrentPlatform, CallFunc_HasTag_ReturnValue) == 0x00000F, "Member 'WBP_Settings_OptionEntry_C_IsAvailableOnCurrentPlatform::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_IsAvailableOnCurrentPlatform, CallFunc_HasTag_ReturnValue_1) == 0x000010, "Member 'WBP_Settings_OptionEntry_C_IsAvailableOnCurrentPlatform::CallFunc_HasTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_IsAvailableOnCurrentPlatform, CallFunc_BooleanOR_ReturnValue) == 0x000011, "Member 'WBP_Settings_OptionEntry_C_IsAvailableOnCurrentPlatform::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_Settings_OptionEntry.WBP_Settings_OptionEntry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Settings_OptionEntry_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_OptionEntry_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Settings_OptionEntry_C_PreConstruct");
static_assert(sizeof(WBP_Settings_OptionEntry_C_PreConstruct) == 0x000001, "Wrong size on WBP_Settings_OptionEntry_C_PreConstruct");
static_assert(offsetof(WBP_Settings_OptionEntry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Settings_OptionEntry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Settings_OptionEntry.WBP_Settings_OptionEntry_C.BndEvt__WBP_Settings_OptionEntry_WBP_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Settings_OptionEntry_C_BndEvt__WBP_Settings_OptionEntry_WBP_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_OptionEntry_C_BndEvt__WBP_Settings_OptionEntry_WBP_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Settings_OptionEntry_C_BndEvt__WBP_Settings_OptionEntry_WBP_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature");
static_assert(sizeof(WBP_Settings_OptionEntry_C_BndEvt__WBP_Settings_OptionEntry_WBP_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature) == 0x000008, "Wrong size on WBP_Settings_OptionEntry_C_BndEvt__WBP_Settings_OptionEntry_WBP_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature");
static_assert(offsetof(WBP_Settings_OptionEntry_C_BndEvt__WBP_Settings_OptionEntry_WBP_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature, Button) == 0x000000, "Member 'WBP_Settings_OptionEntry_C_BndEvt__WBP_Settings_OptionEntry_WBP_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature::Button' has a wrong offset!");

// Function WBP_Settings_OptionEntry.WBP_Settings_OptionEntry_C.BndEvt__WBP_Settings_OptionEntry_WBP_BaseButton_K2Node_ComponentBoundEvent_1_OnButtonBaseUnfocused__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Settings_OptionEntry_C_BndEvt__WBP_Settings_OptionEntry_WBP_BaseButton_K2Node_ComponentBoundEvent_1_OnButtonBaseUnfocused__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_OptionEntry_C_BndEvt__WBP_Settings_OptionEntry_WBP_BaseButton_K2Node_ComponentBoundEvent_1_OnButtonBaseUnfocused__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Settings_OptionEntry_C_BndEvt__WBP_Settings_OptionEntry_WBP_BaseButton_K2Node_ComponentBoundEvent_1_OnButtonBaseUnfocused__DelegateSignature");
static_assert(sizeof(WBP_Settings_OptionEntry_C_BndEvt__WBP_Settings_OptionEntry_WBP_BaseButton_K2Node_ComponentBoundEvent_1_OnButtonBaseUnfocused__DelegateSignature) == 0x000008, "Wrong size on WBP_Settings_OptionEntry_C_BndEvt__WBP_Settings_OptionEntry_WBP_BaseButton_K2Node_ComponentBoundEvent_1_OnButtonBaseUnfocused__DelegateSignature");
static_assert(offsetof(WBP_Settings_OptionEntry_C_BndEvt__WBP_Settings_OptionEntry_WBP_BaseButton_K2Node_ComponentBoundEvent_1_OnButtonBaseUnfocused__DelegateSignature, Button) == 0x000000, "Member 'WBP_Settings_OptionEntry_C_BndEvt__WBP_Settings_OptionEntry_WBP_BaseButton_K2Node_ComponentBoundEvent_1_OnButtonBaseUnfocused__DelegateSignature::Button' has a wrong offset!");

// Function WBP_Settings_OptionEntry.WBP_Settings_OptionEntry_C.ExecuteUbergraph_WBP_Settings_OptionEntry
// 0x0058 (0x0058 - 0x0000)
struct WBP_Settings_OptionEntry_C_ExecuteUbergraph_WBP_Settings_OptionEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_1;               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetContent_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_NamedValueSelector_C*              K2Node_DynamicCast_AsWBP_Named_Value_Selector;     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetContent_ReturnValue_1;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_SliderSelector_C*                  K2Node_DynamicCast_AsWBP_Slider_Selector;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_OptionEntry_C_ExecuteUbergraph_WBP_Settings_OptionEntry) == 0x000008, "Wrong alignment on WBP_Settings_OptionEntry_C_ExecuteUbergraph_WBP_Settings_OptionEntry");
static_assert(sizeof(WBP_Settings_OptionEntry_C_ExecuteUbergraph_WBP_Settings_OptionEntry) == 0x000058, "Wrong size on WBP_Settings_OptionEntry_C_ExecuteUbergraph_WBP_Settings_OptionEntry");
static_assert(offsetof(WBP_Settings_OptionEntry_C_ExecuteUbergraph_WBP_Settings_OptionEntry, EntryPoint) == 0x000000, "Member 'WBP_Settings_OptionEntry_C_ExecuteUbergraph_WBP_Settings_OptionEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_ExecuteUbergraph_WBP_Settings_OptionEntry, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_Settings_OptionEntry_C_ExecuteUbergraph_WBP_Settings_OptionEntry::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_ExecuteUbergraph_WBP_Settings_OptionEntry, K2Node_ComponentBoundEvent_Button_1) == 0x000008, "Member 'WBP_Settings_OptionEntry_C_ExecuteUbergraph_WBP_Settings_OptionEntry::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_ExecuteUbergraph_WBP_Settings_OptionEntry, K2Node_ComponentBoundEvent_Button) == 0x000010, "Member 'WBP_Settings_OptionEntry_C_ExecuteUbergraph_WBP_Settings_OptionEntry::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_ExecuteUbergraph_WBP_Settings_OptionEntry, CallFunc_GetContent_ReturnValue) == 0x000018, "Member 'WBP_Settings_OptionEntry_C_ExecuteUbergraph_WBP_Settings_OptionEntry::CallFunc_GetContent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_ExecuteUbergraph_WBP_Settings_OptionEntry, K2Node_DynamicCast_AsWBP_Named_Value_Selector) == 0x000020, "Member 'WBP_Settings_OptionEntry_C_ExecuteUbergraph_WBP_Settings_OptionEntry::K2Node_DynamicCast_AsWBP_Named_Value_Selector' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_ExecuteUbergraph_WBP_Settings_OptionEntry, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_Settings_OptionEntry_C_ExecuteUbergraph_WBP_Settings_OptionEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_ExecuteUbergraph_WBP_Settings_OptionEntry, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'WBP_Settings_OptionEntry_C_ExecuteUbergraph_WBP_Settings_OptionEntry::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_ExecuteUbergraph_WBP_Settings_OptionEntry, CallFunc_GetContent_ReturnValue_1) == 0x000040, "Member 'WBP_Settings_OptionEntry_C_ExecuteUbergraph_WBP_Settings_OptionEntry::CallFunc_GetContent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_ExecuteUbergraph_WBP_Settings_OptionEntry, K2Node_DynamicCast_AsWBP_Slider_Selector) == 0x000048, "Member 'WBP_Settings_OptionEntry_C_ExecuteUbergraph_WBP_Settings_OptionEntry::K2Node_DynamicCast_AsWBP_Slider_Selector' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_ExecuteUbergraph_WBP_Settings_OptionEntry, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'WBP_Settings_OptionEntry_C_ExecuteUbergraph_WBP_Settings_OptionEntry::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WBP_Settings_OptionEntry.WBP_Settings_OptionEntry_C.BP_GetDesiredFocusTarget
// 0x0010 (0x0010 - 0x0000)
struct WBP_Settings_OptionEntry_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetContent_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Settings_OptionEntry_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_Settings_OptionEntry_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_Settings_OptionEntry_C_BP_GetDesiredFocusTarget) == 0x000010, "Wrong size on WBP_Settings_OptionEntry_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_Settings_OptionEntry_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_Settings_OptionEntry_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Settings_OptionEntry_C_BP_GetDesiredFocusTarget, CallFunc_GetContent_ReturnValue) == 0x000008, "Member 'WBP_Settings_OptionEntry_C_BP_GetDesiredFocusTarget::CallFunc_GetContent_ReturnValue' has a wrong offset!");

}

