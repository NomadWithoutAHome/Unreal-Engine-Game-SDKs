#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GM_SkillElementShort

#include "Basic.hpp"

#include "S_InputBindingParameters_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_GM_SkillElementShort.WBP_GM_SkillElementShort_C
// 0x0090 (0x0398 - 0x0308)
class UWBP_GM_SkillElementShort_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_HUD_AP_ICO_C*                      APIcon;                                            // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BaseButton_C*                      BaseButton;                                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_NotificationBullet_C*              NotificationBullet;                                // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonLazyImage*                       SkillIcon;                                         // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_WrappingText_C*                    SkillName;                                         // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_DataAsset_Skill_C*                  SkillData;                                         // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FS_InputBindingParameters              SkillBinding;                                      // 0x0340(0x0028)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             SkillIconsDT;                                      // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UBP_DataAsset_Skill_C* SkillData)> OnSkillElementShortClicked; // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UBP_DataAsset_Skill_C* SkillData, const struct FVector2D& AbsolutePos)> OnSkillElementShortFocused; // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         SlotIndex;                                         // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void BPI_ShouldShowNotification(bool* bShouldShow);
	void UnbindOnSkillMarkedAsRead();
	void LoadNotificationData();
	void GetSlotIndex(int32* SlotIndex_0);
	void GetSkillData(class UBP_DataAsset_Skill_C** SkillData_0);
	void Load_Skill_Data(class UBP_DataAsset_Skill_C* SkillData_0);
	void BP_OnItemExpansionChanged(bool bIsExpanded);
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void OnListItemObjectSet(class UObject* ListItemObject);
	void OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent);
	void BndEvt__WBP_GM_SkillElementShort_BaseButton_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent);
	void BndEvt__WBP_GM_SkillElementShort_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocusedHold__DelegateSignature();
	void BPI_OnMarkNotificationAsRead(class UUserWidget* MarkCaller);
	void OnSkillMarkedAsRead(const struct FGameplayTag& PoolTag, class FName ObjectName, class UUserWidget* Mark_Caller);
	void BP_OnEntryReleased();
	void BndEvt__WBP_GM_SkillElementShort_BaseButton_K2Node_ComponentBoundEvent_1_CommonSelectedStateChangedBase__DelegateSignature(class UCommonButtonBase* Button, bool Selected);
	void ExecuteUbergraph_WBP_GM_SkillElementShort(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_GM_SkillElementShort_C">();
	}
	static class UWBP_GM_SkillElementShort_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_GM_SkillElementShort_C>();
	}
};
static_assert(alignof(UWBP_GM_SkillElementShort_C) == 0x000008, "Wrong alignment on UWBP_GM_SkillElementShort_C");
static_assert(sizeof(UWBP_GM_SkillElementShort_C) == 0x000398, "Wrong size on UWBP_GM_SkillElementShort_C");
static_assert(offsetof(UWBP_GM_SkillElementShort_C, UberGraphFrame) == 0x000308, "Member 'UWBP_GM_SkillElementShort_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillElementShort_C, APIcon) == 0x000310, "Member 'UWBP_GM_SkillElementShort_C::APIcon' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillElementShort_C, BaseButton) == 0x000318, "Member 'UWBP_GM_SkillElementShort_C::BaseButton' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillElementShort_C, NotificationBullet) == 0x000320, "Member 'UWBP_GM_SkillElementShort_C::NotificationBullet' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillElementShort_C, SkillIcon) == 0x000328, "Member 'UWBP_GM_SkillElementShort_C::SkillIcon' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillElementShort_C, SkillName) == 0x000330, "Member 'UWBP_GM_SkillElementShort_C::SkillName' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillElementShort_C, SkillData) == 0x000338, "Member 'UWBP_GM_SkillElementShort_C::SkillData' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillElementShort_C, SkillBinding) == 0x000340, "Member 'UWBP_GM_SkillElementShort_C::SkillBinding' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillElementShort_C, SkillIconsDT) == 0x000368, "Member 'UWBP_GM_SkillElementShort_C::SkillIconsDT' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillElementShort_C, OnSkillElementShortClicked) == 0x000370, "Member 'UWBP_GM_SkillElementShort_C::OnSkillElementShortClicked' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillElementShort_C, OnSkillElementShortFocused) == 0x000380, "Member 'UWBP_GM_SkillElementShort_C::OnSkillElementShortFocused' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillElementShort_C, SlotIndex) == 0x000390, "Member 'UWBP_GM_SkillElementShort_C::SlotIndex' has a wrong offset!");

}

