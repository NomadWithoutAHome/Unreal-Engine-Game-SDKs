#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AnimationVariationComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AnimationVariationComponent.BP_AnimationVariationComponent_C
// 0x00A8 (0x0148 - 0x00A0)
class UBP_AnimationVariationComponent_C final : public UActorComponent
{
public:
	struct FVector                                ScaleRoot;                                         // 0x00A0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ScaleSpine01;                                      // 0x00B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ScaleSpine03;                                      // 0x00D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ScaleArmL;                                         // 0x00E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ScaleArmR;                                         // 0x0100(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ScaleLowerArmL;                                    // 0x0118(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ScaleLowerArmR;                                    // 0x0130(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AnimationVariationComponent_C">();
	}
	static class UBP_AnimationVariationComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AnimationVariationComponent_C>();
	}
};
static_assert(alignof(UBP_AnimationVariationComponent_C) == 0x000008, "Wrong alignment on UBP_AnimationVariationComponent_C");
static_assert(sizeof(UBP_AnimationVariationComponent_C) == 0x000148, "Wrong size on UBP_AnimationVariationComponent_C");
static_assert(offsetof(UBP_AnimationVariationComponent_C, ScaleRoot) == 0x0000A0, "Member 'UBP_AnimationVariationComponent_C::ScaleRoot' has a wrong offset!");
static_assert(offsetof(UBP_AnimationVariationComponent_C, ScaleSpine01) == 0x0000B8, "Member 'UBP_AnimationVariationComponent_C::ScaleSpine01' has a wrong offset!");
static_assert(offsetof(UBP_AnimationVariationComponent_C, ScaleSpine03) == 0x0000D0, "Member 'UBP_AnimationVariationComponent_C::ScaleSpine03' has a wrong offset!");
static_assert(offsetof(UBP_AnimationVariationComponent_C, ScaleArmL) == 0x0000E8, "Member 'UBP_AnimationVariationComponent_C::ScaleArmL' has a wrong offset!");
static_assert(offsetof(UBP_AnimationVariationComponent_C, ScaleArmR) == 0x000100, "Member 'UBP_AnimationVariationComponent_C::ScaleArmR' has a wrong offset!");
static_assert(offsetof(UBP_AnimationVariationComponent_C, ScaleLowerArmL) == 0x000118, "Member 'UBP_AnimationVariationComponent_C::ScaleLowerArmL' has a wrong offset!");
static_assert(offsetof(UBP_AnimationVariationComponent_C, ScaleLowerArmR) == 0x000130, "Member 'UBP_AnimationVariationComponent_C::ScaleLowerArmR' has a wrong offset!");

}

