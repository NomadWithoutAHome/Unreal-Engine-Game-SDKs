#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AutoLinkerPlugin

#include "Basic.hpp"

#include "AutoLinkerPlugin_classes.hpp"
#include "AutoLinkerPlugin_parameters.hpp"


namespace SDK
{

// Function AutoLinkerPlugin.ALT_AutoLinker.GetDirection2D
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   _start                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   _end                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AALT_AutoLinker::GetDirection2D(const struct FVector& _start, const struct FVector& _end)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ALT_AutoLinker", "GetDirection2D");

	Params::ALT_AutoLinker_GetDirection2D Parms{};

	Parms._start = std::move(_start);
	Parms._end = std::move(_end);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AutoLinkerPlugin.ALT_AutoLinker.ClearLink
// (Final, Native, Public, BlueprintCallable)

void AALT_AutoLinker::ClearLink()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALT_AutoLinker", "ClearLink");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AutoLinkerPlugin.ALT_AutoLinker.GenerateLink
// (Final, Native, Public, BlueprintCallable)

void AALT_AutoLinker::GenerateLink()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALT_AutoLinker", "GenerateLink");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AutoLinkerPlugin.ALT_AutoLinker.GenerateLinks
// (Final, Native, Protected)

void AALT_AutoLinker::GenerateLinks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALT_AutoLinker", "GenerateLinks");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AutoLinkerPlugin.ALT_NavLink.BuildNav
// (Final, Native, Public)

void AALT_NavLink::BuildNav()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALT_NavLink", "BuildNav");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AutoLinkerPlugin.ALT_NavLink.CheckCollision
// (Final, Native, Protected)

void AALT_NavLink::CheckCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALT_NavLink", "CheckCollision");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

