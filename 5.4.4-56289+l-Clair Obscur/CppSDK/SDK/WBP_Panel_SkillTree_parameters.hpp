#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Panel_SkillTree

#include "Basic.hpp"

#include "FSkillUnlockData_structs.hpp"
#include "Slate_structs.hpp"
#include "ESkillNodeState_structs.hpp"
#include "S_CommonUI_ActionDataRowHandle_structs.hpp"
#include "S_jRPG_Item_StaticData_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FSkillGraphEdge_structs.hpp"
#include "E_GM_SkillTreeAction_structs.hpp"
#include "Engine_structs.hpp"
#include "FSkillGraphNode_structs.hpp"
#include "E_Characters_structs.hpp"
#include "UMG_structs.hpp"
#include "S_ItemQuantity_structs.hpp"
#include "ELearnSkillBlockedReason_structs.hpp"


namespace SDK::Params
{

// Function WBP_Panel_SkillTree.WBP_Panel_SkillTree_C.Action_AssignSkill
// 0x0008 (0x0008 - 0x0000)
struct WBP_Panel_SkillTree_C_Action_AssignSkill final
{
public:
	class UWBP_GM_PromptGeneric_C*                PromptWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_SkillTree_C_Action_AssignSkill) == 0x000008, "Wrong alignment on WBP_Panel_SkillTree_C_Action_AssignSkill");
static_assert(sizeof(WBP_Panel_SkillTree_C_Action_AssignSkill) == 0x000008, "Wrong size on WBP_Panel_SkillTree_C_Action_AssignSkill");
static_assert(offsetof(WBP_Panel_SkillTree_C_Action_AssignSkill, PromptWidget) == 0x000000, "Member 'WBP_Panel_SkillTree_C_Action_AssignSkill::PromptWidget' has a wrong offset!");

// Function WBP_Panel_SkillTree.WBP_Panel_SkillTree_C.Action_LearnSkill
// 0x0008 (0x0008 - 0x0000)
struct WBP_Panel_SkillTree_C_Action_LearnSkill final
{
public:
	class UWBP_GM_PromptGeneric_C*                PromptWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_SkillTree_C_Action_LearnSkill) == 0x000008, "Wrong alignment on WBP_Panel_SkillTree_C_Action_LearnSkill");
static_assert(sizeof(WBP_Panel_SkillTree_C_Action_LearnSkill) == 0x000008, "Wrong size on WBP_Panel_SkillTree_C_Action_LearnSkill");
static_assert(offsetof(WBP_Panel_SkillTree_C_Action_LearnSkill, PromptWidget) == 0x000000, "Member 'WBP_Panel_SkillTree_C_Action_LearnSkill::PromptWidget' has a wrong offset!");

// Function WBP_Panel_SkillTree.WBP_Panel_SkillTree_C.AddContextualActionCommonUI
// 0x0058 (0x0058 - 0x0000)
struct WBP_Panel_SkillTree_C_AddContextualActionCommonUI final
{
public:
	struct FS_CommonUI_ActionDataRowHandle        TriggeringInputAction;                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Allowed;                                           // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GM_SkillTreeAction                          SkillTreeAction;                                   // 0x0021(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ConstParm, ReferenceParm)
	TArray<class FText>                           K2Node_MakeArray_Array_1;                          // 0x0038(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FDataTableRowHandle>            K2Node_MakeArray_Array_2;                          // 0x0048(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(WBP_Panel_SkillTree_C_AddContextualActionCommonUI) == 0x000008, "Wrong alignment on WBP_Panel_SkillTree_C_AddContextualActionCommonUI");
static_assert(sizeof(WBP_Panel_SkillTree_C_AddContextualActionCommonUI) == 0x000058, "Wrong size on WBP_Panel_SkillTree_C_AddContextualActionCommonUI");
static_assert(offsetof(WBP_Panel_SkillTree_C_AddContextualActionCommonUI, TriggeringInputAction) == 0x000000, "Member 'WBP_Panel_SkillTree_C_AddContextualActionCommonUI::TriggeringInputAction' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_AddContextualActionCommonUI, Text) == 0x000010, "Member 'WBP_Panel_SkillTree_C_AddContextualActionCommonUI::Text' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_AddContextualActionCommonUI, Allowed) == 0x000020, "Member 'WBP_Panel_SkillTree_C_AddContextualActionCommonUI::Allowed' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_AddContextualActionCommonUI, SkillTreeAction) == 0x000021, "Member 'WBP_Panel_SkillTree_C_AddContextualActionCommonUI::SkillTreeAction' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_AddContextualActionCommonUI, K2Node_MakeArray_Array) == 0x000028, "Member 'WBP_Panel_SkillTree_C_AddContextualActionCommonUI::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_AddContextualActionCommonUI, K2Node_MakeArray_Array_1) == 0x000038, "Member 'WBP_Panel_SkillTree_C_AddContextualActionCommonUI::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_AddContextualActionCommonUI, K2Node_MakeArray_Array_2) == 0x000048, "Member 'WBP_Panel_SkillTree_C_AddContextualActionCommonUI::K2Node_MakeArray_Array_2' has a wrong offset!");

// Function WBP_Panel_SkillTree.WBP_Panel_SkillTree_C.BndEvt__WBP_Panel_SkillTree_ResetButton_K2Node_ComponentBoundEvent_0_OnButtonBaseActionProgress__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Panel_SkillTree_C_BndEvt__WBP_Panel_SkillTree_ResetButton_K2Node_ComponentBoundEvent_0_OnButtonBaseActionProgress__DelegateSignature final
{
public:
	double                                        Progress;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_SkillTree_C_BndEvt__WBP_Panel_SkillTree_ResetButton_K2Node_ComponentBoundEvent_0_OnButtonBaseActionProgress__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Panel_SkillTree_C_BndEvt__WBP_Panel_SkillTree_ResetButton_K2Node_ComponentBoundEvent_0_OnButtonBaseActionProgress__DelegateSignature");
static_assert(sizeof(WBP_Panel_SkillTree_C_BndEvt__WBP_Panel_SkillTree_ResetButton_K2Node_ComponentBoundEvent_0_OnButtonBaseActionProgress__DelegateSignature) == 0x000008, "Wrong size on WBP_Panel_SkillTree_C_BndEvt__WBP_Panel_SkillTree_ResetButton_K2Node_ComponentBoundEvent_0_OnButtonBaseActionProgress__DelegateSignature");
static_assert(offsetof(WBP_Panel_SkillTree_C_BndEvt__WBP_Panel_SkillTree_ResetButton_K2Node_ComponentBoundEvent_0_OnButtonBaseActionProgress__DelegateSignature, Progress) == 0x000000, "Member 'WBP_Panel_SkillTree_C_BndEvt__WBP_Panel_SkillTree_ResetButton_K2Node_ComponentBoundEvent_0_OnButtonBaseActionProgress__DelegateSignature::Progress' has a wrong offset!");

// Function WBP_Panel_SkillTree.WBP_Panel_SkillTree_C.BndEvt__WBP_Panel_SkillTree_ResetButton_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Panel_SkillTree_C_BndEvt__WBP_Panel_SkillTree_ResetButton_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_SkillTree_C_BndEvt__WBP_Panel_SkillTree_ResetButton_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Panel_SkillTree_C_BndEvt__WBP_Panel_SkillTree_ResetButton_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_Panel_SkillTree_C_BndEvt__WBP_Panel_SkillTree_ResetButton_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_Panel_SkillTree_C_BndEvt__WBP_Panel_SkillTree_ResetButton_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_Panel_SkillTree_C_BndEvt__WBP_Panel_SkillTree_ResetButton_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_Panel_SkillTree_C_BndEvt__WBP_Panel_SkillTree_ResetButton_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_Panel_SkillTree.WBP_Panel_SkillTree_C.BPI_GetCharacterNotificationState
// 0x0020 (0x0020 - 0x0000)
struct WBP_Panel_SkillTree_C_BPI_GetCharacterNotificationState final
{
public:
	class UBP_CharacterData_C*                    CharacterData;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          HasNotification;                                   // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldObjectBeNotified_IsNotified;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_SkillTree_C_BPI_GetCharacterNotificationState) == 0x000008, "Wrong alignment on WBP_Panel_SkillTree_C_BPI_GetCharacterNotificationState");
static_assert(sizeof(WBP_Panel_SkillTree_C_BPI_GetCharacterNotificationState) == 0x000020, "Wrong size on WBP_Panel_SkillTree_C_BPI_GetCharacterNotificationState");
static_assert(offsetof(WBP_Panel_SkillTree_C_BPI_GetCharacterNotificationState, CharacterData) == 0x000000, "Member 'WBP_Panel_SkillTree_C_BPI_GetCharacterNotificationState::CharacterData' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_BPI_GetCharacterNotificationState, HasNotification) == 0x000008, "Member 'WBP_Panel_SkillTree_C_BPI_GetCharacterNotificationState::HasNotification' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_BPI_GetCharacterNotificationState, CallFunc_GetCustomGI_ReturnValue) == 0x000010, "Member 'WBP_Panel_SkillTree_C_BPI_GetCharacterNotificationState::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_BPI_GetCharacterNotificationState, CallFunc_ShouldObjectBeNotified_IsNotified) == 0x000018, "Member 'WBP_Panel_SkillTree_C_BPI_GetCharacterNotificationState::CallFunc_ShouldObjectBeNotified_IsNotified' has a wrong offset!");

// Function WBP_Panel_SkillTree.WBP_Panel_SkillTree_C.BPI_LoadCharacter
// 0x0008 (0x0008 - 0x0000)
struct WBP_Panel_SkillTree_C_BPI_LoadCharacter final
{
public:
	class UBP_CharacterData_C*                    CharacterData;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_SkillTree_C_BPI_LoadCharacter) == 0x000008, "Wrong alignment on WBP_Panel_SkillTree_C_BPI_LoadCharacter");
static_assert(sizeof(WBP_Panel_SkillTree_C_BPI_LoadCharacter) == 0x000008, "Wrong size on WBP_Panel_SkillTree_C_BPI_LoadCharacter");
static_assert(offsetof(WBP_Panel_SkillTree_C_BPI_LoadCharacter, CharacterData) == 0x000000, "Member 'WBP_Panel_SkillTree_C_BPI_LoadCharacter::CharacterData' has a wrong offset!");

// Function WBP_Panel_SkillTree.WBP_Panel_SkillTree_C.BPI_SetIsReadOnly
// 0x0001 (0x0001 - 0x0000)
struct WBP_Panel_SkillTree_C_BPI_SetIsReadOnly final
{
public:
	bool                                          IsReadOnly_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_SkillTree_C_BPI_SetIsReadOnly) == 0x000001, "Wrong alignment on WBP_Panel_SkillTree_C_BPI_SetIsReadOnly");
static_assert(sizeof(WBP_Panel_SkillTree_C_BPI_SetIsReadOnly) == 0x000001, "Wrong size on WBP_Panel_SkillTree_C_BPI_SetIsReadOnly");
static_assert(offsetof(WBP_Panel_SkillTree_C_BPI_SetIsReadOnly, IsReadOnly_0) == 0x000000, "Member 'WBP_Panel_SkillTree_C_BPI_SetIsReadOnly::IsReadOnly_0' has a wrong offset!");

// Function WBP_Panel_SkillTree.WBP_Panel_SkillTree_C.ExecuteUbergraph_WBP_Panel_SkillTree
// 0x0150 (0x0150 - 0x0000)
struct WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0010)()
	bool                                          CallFunc_IsInGamepadOrKeyboardNavigationMode_ReturnValue; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0010)()
	class FText                                   Temp_text_Variable_2;                              // 0x0030(0x0010)()
	class FText                                   Temp_text_Variable_3;                              // 0x0040(0x0010)()
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_4;                              // 0x0060(0x0010)()
	ELearnSkillBlockedReason                      Temp_byte_Variable_4;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryUnlockSkill_Success;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanLearnSkill_ReturnValue;                // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELearnSkillBlockedReason                      CallFunc_CanLearnSkill_BlockedReason;              // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterData_C*                    K2Node_Event_CharacterData;                        // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_GM_PromptGeneric_C*                K2Node_CustomEvent_PromptWidget_2;                 // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_CustomEvent_InputAction;                    // 0x0090(0x0010)(NoDestructor)
	class UWBP_GM_PromptGeneric_C*                K2Node_CustomEvent_PromptWidget_1;                 // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsReadOnly;                           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GM_SkillTreeAction                          CallFunc_Map_Find_Value;                           // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AE[0x2];                                       // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_DataAsset_Skill_C*                  Temp_wildcard_Variable;                            // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_SkillTreeElement_C*                CallFunc_Map_Find_Value_1;                         // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_GM_PromptGeneric_C*                K2Node_CustomEvent_PromptWidget;                   // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_5;                              // 0x00E0(0x0010)()
	class UAC_jRPG_InventoryManager_C*            CallFunc_GetInventoryManager_ReturnValue;          // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_ItemQuantity>                CallFunc_GetCharacterResetConsumableCost_ReturnValue; // 0x00F8(0x0010)(ReferenceParm)
	class FText                                   K2Node_Select_Default_2;                           // 0x0108(0x0010)()
	struct FS_ItemQuantity                        CallFunc_Array_Get_Item;                           // 0x0118(0x0018)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAffordItemCosts_ReturnValue;           // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_136[0x2];                                      // 0x0136(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_ComponentBoundEvent_Progress;               // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree) == 0x000008, "Wrong alignment on WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree");
static_assert(sizeof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree) == 0x000150, "Wrong size on WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, EntryPoint) == 0x000000, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, Temp_text_Variable) == 0x000008, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, CallFunc_IsInGamepadOrKeyboardNavigationMode_ReturnValue) == 0x000018, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::CallFunc_IsInGamepadOrKeyboardNavigationMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, Temp_text_Variable_1) == 0x000020, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, Temp_text_Variable_2) == 0x000030, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, Temp_text_Variable_3) == 0x000040, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, Temp_bool_Variable) == 0x000050, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, Temp_byte_Variable) == 0x000051, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, Temp_byte_Variable_1) == 0x000052, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, Temp_bool_Variable_1) == 0x000053, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, Temp_byte_Variable_2) == 0x000054, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, Temp_byte_Variable_3) == 0x000055, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, Temp_int_Array_Index_Variable) == 0x000058, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, Temp_text_Variable_4) == 0x000060, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, Temp_byte_Variable_4) == 0x000070, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, CallFunc_TryUnlockSkill_Success) == 0x000071, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::CallFunc_TryUnlockSkill_Success' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, CallFunc_CanLearnSkill_ReturnValue) == 0x000072, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::CallFunc_CanLearnSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, CallFunc_CanLearnSkill_BlockedReason) == 0x000073, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::CallFunc_CanLearnSkill_BlockedReason' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, K2Node_Event_CharacterData) == 0x000078, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::K2Node_Event_CharacterData' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, K2Node_CustomEvent_PromptWidget_2) == 0x000080, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::K2Node_CustomEvent_PromptWidget_2' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, K2Node_CustomEvent_InputAction) == 0x000090, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::K2Node_CustomEvent_InputAction' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, K2Node_CustomEvent_PromptWidget_1) == 0x0000A0, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::K2Node_CustomEvent_PromptWidget_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, K2Node_Event_IsReadOnly) == 0x0000A8, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::K2Node_Event_IsReadOnly' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, K2Node_Select_Default) == 0x0000A9, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, K2Node_Select_Default_1) == 0x0000AA, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, CallFunc_Map_Find_Value) == 0x0000AB, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, CallFunc_Map_Find_ReturnValue) == 0x0000AC, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, K2Node_SwitchEnum_CmpSuccess) == 0x0000AD, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, Temp_int_Loop_Counter_Variable) == 0x0000B0, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, CallFunc_Add_IntInt_ReturnValue) == 0x0000B4, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, Temp_wildcard_Variable) == 0x0000B8, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, CallFunc_Map_Find_Value_1) == 0x0000C0, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, CallFunc_Map_Find_ReturnValue_1) == 0x0000C8, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, K2Node_ComponentBoundEvent_Button) == 0x0000D0, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, K2Node_CustomEvent_PromptWidget) == 0x0000D8, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::K2Node_CustomEvent_PromptWidget' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, Temp_text_Variable_5) == 0x0000E0, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, CallFunc_GetInventoryManager_ReturnValue) == 0x0000F0, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::CallFunc_GetInventoryManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, CallFunc_GetCharacterResetConsumableCost_ReturnValue) == 0x0000F8, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::CallFunc_GetCharacterResetConsumableCost_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, K2Node_Select_Default_2) == 0x000108, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, CallFunc_Array_Get_Item) == 0x000118, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, CallFunc_Array_Length_ReturnValue) == 0x000130, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, CallFunc_Less_IntInt_ReturnValue) == 0x000134, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, CallFunc_CanAffordItemCosts_ReturnValue) == 0x000135, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::CallFunc_CanAffordItemCosts_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, K2Node_ComponentBoundEvent_Progress) == 0x000138, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::K2Node_ComponentBoundEvent_Progress' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, CallFunc_Not_PreBool_ReturnValue) == 0x000140, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree, CallFunc_GetCustomGI_ReturnValue) == 0x000148, "Member 'WBP_Panel_SkillTree_C_ExecuteUbergraph_WBP_Panel_SkillTree::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");

// Function WBP_Panel_SkillTree.WBP_Panel_SkillTree_C.GetCenterReferentialPosition
// 0x0070 (0x0070 - 0x0000)
struct WBP_Panel_SkillTree_C_GetCenterReferentialPosition final
{
public:
	struct FVector2D                              InPosition;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              InMin;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              InMax;                                             // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CenterPosition;                                    // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_SkillTree_C_GetCenterReferentialPosition) == 0x000008, "Wrong alignment on WBP_Panel_SkillTree_C_GetCenterReferentialPosition");
static_assert(sizeof(WBP_Panel_SkillTree_C_GetCenterReferentialPosition) == 0x000070, "Wrong size on WBP_Panel_SkillTree_C_GetCenterReferentialPosition");
static_assert(offsetof(WBP_Panel_SkillTree_C_GetCenterReferentialPosition, InPosition) == 0x000000, "Member 'WBP_Panel_SkillTree_C_GetCenterReferentialPosition::InPosition' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_GetCenterReferentialPosition, InMin) == 0x000010, "Member 'WBP_Panel_SkillTree_C_GetCenterReferentialPosition::InMin' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_GetCenterReferentialPosition, InMax) == 0x000020, "Member 'WBP_Panel_SkillTree_C_GetCenterReferentialPosition::InMax' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_GetCenterReferentialPosition, CenterPosition) == 0x000030, "Member 'WBP_Panel_SkillTree_C_GetCenterReferentialPosition::CenterPosition' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_GetCenterReferentialPosition, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000040, "Member 'WBP_Panel_SkillTree_C_GetCenterReferentialPosition::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_GetCenterReferentialPosition, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x000050, "Member 'WBP_Panel_SkillTree_C_GetCenterReferentialPosition::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_GetCenterReferentialPosition, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000060, "Member 'WBP_Panel_SkillTree_C_GetCenterReferentialPosition::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function WBP_Panel_SkillTree.WBP_Panel_SkillTree_C.IsSkillSecretLocked
// 0x0180 (0x0180 - 0x0000)
struct WBP_Panel_SkillTree_C_IsSkillSecretLocked final
{
public:
	struct FFSkillUnlockData                      UnlockData;                                        // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSecretLocked;                                    // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_InventoryManager_C*            CallFunc_GetInventoryManager_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_StaticData                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0040(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfThereIsItemInInventory_Success_;   // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfThereIsItemInInventory_IsItemFullyStacked_; // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CheckIfThereIsItemInInventory_ItemIndex;  // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_SkillTree_C_IsSkillSecretLocked) == 0x000008, "Wrong alignment on WBP_Panel_SkillTree_C_IsSkillSecretLocked");
static_assert(sizeof(WBP_Panel_SkillTree_C_IsSkillSecretLocked) == 0x000180, "Wrong size on WBP_Panel_SkillTree_C_IsSkillSecretLocked");
static_assert(offsetof(WBP_Panel_SkillTree_C_IsSkillSecretLocked, UnlockData) == 0x000000, "Member 'WBP_Panel_SkillTree_C_IsSkillSecretLocked::UnlockData' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_IsSkillSecretLocked, IsSecretLocked) == 0x000028, "Member 'WBP_Panel_SkillTree_C_IsSkillSecretLocked::IsSecretLocked' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_IsSkillSecretLocked, CallFunc_GetInventoryManager_ReturnValue) == 0x000030, "Member 'WBP_Panel_SkillTree_C_IsSkillSecretLocked::CallFunc_GetInventoryManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_IsSkillSecretLocked, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WBP_Panel_SkillTree_C_IsSkillSecretLocked::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_IsSkillSecretLocked, CallFunc_GetDataTableRowFromName_OutRow) == 0x000040, "Member 'WBP_Panel_SkillTree_C_IsSkillSecretLocked::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_IsSkillSecretLocked, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000170, "Member 'WBP_Panel_SkillTree_C_IsSkillSecretLocked::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_IsSkillSecretLocked, CallFunc_BooleanAND_ReturnValue) == 0x000171, "Member 'WBP_Panel_SkillTree_C_IsSkillSecretLocked::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_IsSkillSecretLocked, CallFunc_CheckIfThereIsItemInInventory_Success_) == 0x000172, "Member 'WBP_Panel_SkillTree_C_IsSkillSecretLocked::CallFunc_CheckIfThereIsItemInInventory_Success_' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_IsSkillSecretLocked, CallFunc_CheckIfThereIsItemInInventory_IsItemFullyStacked_) == 0x000173, "Member 'WBP_Panel_SkillTree_C_IsSkillSecretLocked::CallFunc_CheckIfThereIsItemInInventory_IsItemFullyStacked_' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_IsSkillSecretLocked, CallFunc_CheckIfThereIsItemInInventory_ItemIndex) == 0x000174, "Member 'WBP_Panel_SkillTree_C_IsSkillSecretLocked::CallFunc_CheckIfThereIsItemInInventory_ItemIndex' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_IsSkillSecretLocked, CallFunc_Not_PreBool_ReturnValue) == 0x000178, "Member 'WBP_Panel_SkillTree_C_IsSkillSecretLocked::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_Panel_SkillTree.WBP_Panel_SkillTree_C.LoadCharacter
// 0x05D0 (0x05D0 - 0x0000)
struct WBP_Panel_SkillTree_C_LoadCharacter final
{
public:
	class UBP_CharacterData_C*                    CharacterData;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LocalMax;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LocalMaxY;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LocalMaxX;                                         // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LocalMin;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LocalMinY;                                         // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LocalMinX;                                         // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSkillUnlockData                      local_currentSkillUnlockData;                      // 0x0048(0x0028)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	class UWBP_SkillTreeElement_C*                local_createdSkillTreeElement;                     // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_SkillTreeElement_C*                local_toWidget;                                    // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_SkillTreeElement_C*                local_fromWidget;                                  // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_DataAsset_SkillGraph_C*             local_skillGraph;                                  // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class UBP_DataAsset_Skill_C*, class UWBP_SkillTreeElement_C*> local_nodeWidgetsMap;         // 0x0090(0x0050)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UWBP_SkillTreeElement_C*>        local_nodeWidgets;                                 // 0x00E0(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FFSkillGraphEdge                       Temp_struct_Variable;                              // 0x00F0(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_Characters                                  CallFunc_GetCharacterEnum_FromID_ReturnValue;      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_SkillTreeConnection_C*             CallFunc_SpawnObject_ReturnValue;                  // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_SkillTreeElement_C*                CallFunc_SpawnObject_ReturnValue_1;                // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DataAsset_SkillGraph_C*             CallFunc_GetSkillGraph_SkillGraph;                 // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInGamepadOrKeyboardNavigationMode_ReturnValue; // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14E[0x2];                                      // 0x014E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillSecretLocked_IsSecretLocked;       // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15B[0x1];                                      // 0x015B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTotalSkillPoints_ReturnValue;          // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAvailableSkillPoints_ReturnValue;      // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ItemQuantity>                CallFunc_GetCharacterResetConsumableCost_ReturnValue; // 0x0168(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_InventoryManager_C*            CallFunc_GetInventoryManager_ReturnValue;          // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindItemCountFromInventory_Quantity;      // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ResourceQuantity_C*                CallFunc_BP_CreateEntryOfClass_ReturnValue;        // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemDefinitionFromID_Found;            // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19A[0x6];                                      // 0x019A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_StaticData                CallFunc_GetItemDefinitionFromID_ReturnValue;      // 0x01A0(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x3];                                      // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UWBP_SkillTreeElement_C* SkillNodeWidget)> K2Node_CreateDelegate_OutputDelegate; // 0x02D4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E5[0x3];                                      // 0x02E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFSkillGraphNode>               Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x02E8(0x0010)(ConstParm, ReferenceParm)
	struct FFSkillGraphNode                       CallFunc_Array_Get_Item;                           // 0x02F8(0x0038)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0334(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_335[0x3];                                      // 0x0335(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0338(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34A[0x6];                                      // 0x034A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetCenterReferentialPosition_CenterPosition; // 0x0350(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0368(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSkillGraphNode                       CallFunc_Array_Get_Item_1;                         // 0x0378(0x0038)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x03B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B5[0x3];                                      // 0x03B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x03E8(0x0020)(NoDestructor)
	double                                        CallFunc_FMin_ReturnValue_1;                       // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors_1;                       // 0x0410(0x0020)(NoDestructor)
	float                                         Temp_real_Variable_1;                              // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_2;                              // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0439(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x043A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x043B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x043C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x043D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43E[0x2];                                      // 0x043E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0444(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0445(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0446(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_447[0x1];                                      // 0x0447(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_SkillTreeElement_C*                CallFunc_Map_Find_Value;                           // 0x0448(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0451(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_452[0x6];                                      // 0x0452(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_SkillTreeElement_C*>        CallFunc_Map_Values_Values;                        // 0x0458(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWBP_SkillTreeElement_C*                CallFunc_Array_Get_Item_2;                         // 0x0468(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_SkillTreeElement_C*                K2Node_Select_Default_2;                           // 0x0470(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAvailableSkillPoints_ReturnValue_1;    // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C[0x4];                                      // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0480(0x0010)()
	ESkillNodeState                               CallFunc_GetSkillState_NodeState;                  // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0491(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_492[0x6];                                      // 0x0492(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_DataAsset_Skill_C*>          CallFunc_GetEquippedSkills_EquippedSkills;         // 0x0498(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x04A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AA[0x6];                                      // 0x04AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x04B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x04B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BA[0x2];                                      // 0x04BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_3;                              // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_4;                           // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C4[0x4];                                      // 0x04C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot;            // 0x04C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1[0x7];                                      // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x04D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot_1;          // 0x04E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F1[0x7];                                      // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFSkillGraphNode>               Temp_wildcard_Temp_buffer_array_Variable;          // 0x04F8(0x0010)(ConstParm, ReferenceParm)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue_1;                // 0x0508(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0518(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ToDirectionAndLength2D_OutDir;            // 0x0528(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ToDirectionAndLength2D_OutLength;         // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0540(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAtan2_ReturnValue;                     // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56C[0x4];                                      // 0x056C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSkillGraphEdge                       CallFunc_Array_Get_Item_3;                         // 0x0578(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58C[0x4];                                      // 0x058C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_SkillTreeElement_C*                CallFunc_Map_Find_Value_1;                         // 0x0590(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0599(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59A[0x6];                                      // 0x059A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_SkillTreeElement_C*                CallFunc_Map_Find_Value_2;                         // 0x05A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A9[0x3];                                      // 0x05A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UWBP_SkillTreeElement_C* SkillNodeWidget)> K2Node_CreateDelegate_OutputDelegate_1; // 0x05AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BC[0x4];                                      // 0x05BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue_1;           // 0x05C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast; // 0x05C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_SkillTree_C_LoadCharacter) == 0x000008, "Wrong alignment on WBP_Panel_SkillTree_C_LoadCharacter");
static_assert(sizeof(WBP_Panel_SkillTree_C_LoadCharacter) == 0x0005D0, "Wrong size on WBP_Panel_SkillTree_C_LoadCharacter");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CharacterData) == 0x000000, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CharacterData' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, LocalMax) == 0x000008, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::LocalMax' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, LocalMaxY) == 0x000018, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::LocalMaxY' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, LocalMaxX) == 0x000020, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::LocalMaxX' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, LocalMin) == 0x000028, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::LocalMin' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, LocalMinY) == 0x000038, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::LocalMinY' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, LocalMinX) == 0x000040, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::LocalMinX' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, local_currentSkillUnlockData) == 0x000048, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::local_currentSkillUnlockData' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, local_createdSkillTreeElement) == 0x000070, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::local_createdSkillTreeElement' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, local_toWidget) == 0x000078, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::local_toWidget' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, local_fromWidget) == 0x000080, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::local_fromWidget' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, local_skillGraph) == 0x000088, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::local_skillGraph' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, local_nodeWidgetsMap) == 0x000090, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::local_nodeWidgetsMap' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, local_nodeWidgets) == 0x0000E0, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::local_nodeWidgets' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, Temp_struct_Variable) == 0x0000F0, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_GetCharacterEnum_FromID_ReturnValue) == 0x000100, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_GetCharacterEnum_FromID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000101, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_SpawnObject_ReturnValue) == 0x000108, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_SpawnObject_ReturnValue_1) == 0x000110, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_SpawnObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, Temp_int_Array_Index_Variable) == 0x000118, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_GetSkillGraph_SkillGraph) == 0x000120, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_GetSkillGraph_SkillGraph' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, Temp_int_Loop_Counter_Variable) == 0x000128, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_Add_IntInt_ReturnValue) == 0x00012C, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, Temp_int_Array_Index_Variable_1) == 0x000130, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, Temp_real_Variable) == 0x000134, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, Temp_int_Loop_Counter_Variable_1) == 0x000138, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_Add_IntInt_ReturnValue_1) == 0x00013C, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, Temp_int_Array_Index_Variable_2) == 0x000140, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, Temp_int_Loop_Counter_Variable_2) == 0x000144, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_Add_IntInt_ReturnValue_2) == 0x000148, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, Temp_bool_Variable) == 0x00014C, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_IsInGamepadOrKeyboardNavigationMode_ReturnValue) == 0x00014D, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_IsInGamepadOrKeyboardNavigationMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_GetCustomGI_ReturnValue) == 0x000150, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_Not_PreBool_ReturnValue) == 0x000158, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_Not_PreBool_ReturnValue_1) == 0x000159, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_IsSkillSecretLocked_IsSecretLocked) == 0x00015A, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_IsSkillSecretLocked_IsSecretLocked' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_GetTotalSkillPoints_ReturnValue) == 0x00015C, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_GetTotalSkillPoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_GetAvailableSkillPoints_ReturnValue) == 0x000160, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_GetAvailableSkillPoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_GetCharacterResetConsumableCost_ReturnValue) == 0x000168, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_GetCharacterResetConsumableCost_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_Less_IntInt_ReturnValue) == 0x000178, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_GetInventoryManager_ReturnValue) == 0x000180, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_GetInventoryManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_FindItemCountFromInventory_Quantity) == 0x000188, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_FindItemCountFromInventory_Quantity' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_BP_CreateEntryOfClass_ReturnValue) == 0x000190, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_BP_CreateEntryOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000198, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_GetItemDefinitionFromID_Found) == 0x000199, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_GetItemDefinitionFromID_Found' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_GetItemDefinitionFromID_ReturnValue) == 0x0001A0, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_GetItemDefinitionFromID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_BooleanAND_ReturnValue) == 0x0002D0, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, K2Node_CreateDelegate_OutputDelegate) == 0x0002D4, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, Temp_byte_Variable) == 0x0002E4, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x0002E8, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_Array_Get_Item) == 0x0002F8, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_Array_Length_ReturnValue) == 0x000330, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_Less_IntInt_ReturnValue_1) == 0x000334, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_MakeVector2D_ReturnValue) == 0x000338, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, Temp_byte_Variable_1) == 0x000348, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, Temp_bool_Variable_1) == 0x000349, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_GetCenterReferentialPosition_CenterPosition) == 0x000350, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_GetCenterReferentialPosition_CenterPosition' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, K2Node_Select_Default) == 0x000360, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_MakeVector2D_ReturnValue_1) == 0x000368, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_Array_Get_Item_1) == 0x000378, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_Array_Length_ReturnValue_1) == 0x0003B0, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_Less_IntInt_ReturnValue_2) == 0x0003B4, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_BreakVector2D_X) == 0x0003B8, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_BreakVector2D_Y) == 0x0003C0, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_FMax_ReturnValue) == 0x0003C8, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_FMin_ReturnValue) == 0x0003D0, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0003D8, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_FMax_ReturnValue_1) == 0x0003E0, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, K2Node_MakeStruct_Anchors) == 0x0003E8, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_FMin_ReturnValue_1) == 0x000408, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, K2Node_MakeStruct_Anchors_1) == 0x000410, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::K2Node_MakeStruct_Anchors_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, Temp_real_Variable_1) == 0x000430, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, Temp_real_Variable_2) == 0x000434, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_IsValid_ReturnValue) == 0x000438, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_Not_PreBool_ReturnValue_2) == 0x000439, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_Not_PreBool_ReturnValue_3) == 0x00043A, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, Temp_bool_Variable_2) == 0x00043B, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_BooleanAND_ReturnValue_1) == 0x00043C, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_BooleanAND_ReturnValue_2) == 0x00043D, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, K2Node_Select_Default_1) == 0x000440, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, Temp_byte_Variable_2) == 0x000444, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000445, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, Temp_byte_Variable_3) == 0x000446, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_Map_Find_Value) == 0x000448, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_Map_Find_ReturnValue) == 0x000450, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_IsValid_ReturnValue_1) == 0x000451, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_Map_Values_Values) == 0x000458, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_Array_Get_Item_2) == 0x000468, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, K2Node_Select_Default_2) == 0x000470, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_GetAvailableSkillPoints_ReturnValue_1) == 0x000478, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_GetAvailableSkillPoints_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_Conv_IntToText_ReturnValue) == 0x000480, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_GetSkillState_NodeState) == 0x000490, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_GetSkillState_NodeState' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_IsValid_ReturnValue_2) == 0x000491, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_GetEquippedSkills_EquippedSkills) == 0x000498, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_GetEquippedSkills_EquippedSkills' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_Array_Contains_ReturnValue) == 0x0004A8, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, Temp_bool_Variable_3) == 0x0004A9, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_AddChildToCanvas_ReturnValue) == 0x0004B0, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, K2Node_Select_Default_3) == 0x0004B8, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, Temp_bool_Variable_4) == 0x0004B9, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, Temp_real_Variable_3) == 0x0004BC, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, K2Node_Select_Default_4) == 0x0004C0, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, K2Node_DynamicCast_AsCanvas_Panel_Slot) == 0x0004C8, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::K2Node_DynamicCast_AsCanvas_Panel_Slot' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, K2Node_DynamicCast_bSuccess) == 0x0004D0, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_GetPosition_ReturnValue) == 0x0004D8, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, K2Node_DynamicCast_AsCanvas_Panel_Slot_1) == 0x0004E8, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::K2Node_DynamicCast_AsCanvas_Panel_Slot_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, K2Node_DynamicCast_bSuccess_1) == 0x0004F0, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, Temp_wildcard_Temp_buffer_array_Variable) == 0x0004F8, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_GetPosition_ReturnValue_1) == 0x000508, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_GetPosition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000518, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_ToDirectionAndLength2D_OutDir) == 0x000528, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_ToDirectionAndLength2D_OutDir' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_ToDirectionAndLength2D_OutLength) == 0x000538, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_ToDirectionAndLength2D_OutLength' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_MakeVector2D_ReturnValue_2) == 0x000540, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_BreakVector2D_X_1) == 0x000550, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_BreakVector2D_Y_1) == 0x000558, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_DegAtan2_ReturnValue) == 0x000560, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_Array_Add_ReturnValue) == 0x000568, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000570, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_Array_Get_Item_3) == 0x000578, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_Array_Length_ReturnValue_2) == 0x000588, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_Map_Find_Value_1) == 0x000590, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_Map_Find_ReturnValue_1) == 0x000598, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_Less_IntInt_ReturnValue_3) == 0x000599, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_Map_Find_Value_2) == 0x0005A0, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_Map_Find_ReturnValue_2) == 0x0005A8, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, K2Node_CreateDelegate_OutputDelegate_1) == 0x0005AC, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_AddChildToCanvas_ReturnValue_1) == 0x0005C0, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_AddChildToCanvas_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_LoadCharacter, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast) == 0x0005C8, "Member 'WBP_Panel_SkillTree_C_LoadCharacter::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast' has a wrong offset!");

// Function WBP_Panel_SkillTree.WBP_Panel_SkillTree_C.OnContextualAction_CommonUI
// 0x0018 (0x0018 - 0x0000)
struct WBP_Panel_SkillTree_C_OnContextualAction_CommonUI final
{
public:
	struct FDataTableRowHandle                    InputAction;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UWBP_GM_PromptGeneric_C*                PromptWidget;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_SkillTree_C_OnContextualAction_CommonUI) == 0x000008, "Wrong alignment on WBP_Panel_SkillTree_C_OnContextualAction_CommonUI");
static_assert(sizeof(WBP_Panel_SkillTree_C_OnContextualAction_CommonUI) == 0x000018, "Wrong size on WBP_Panel_SkillTree_C_OnContextualAction_CommonUI");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnContextualAction_CommonUI, InputAction) == 0x000000, "Member 'WBP_Panel_SkillTree_C_OnContextualAction_CommonUI::InputAction' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnContextualAction_CommonUI, PromptWidget) == 0x000010, "Member 'WBP_Panel_SkillTree_C_OnContextualAction_CommonUI::PromptWidget' has a wrong offset!");

// Function WBP_Panel_SkillTree.WBP_Panel_SkillTree_C.OnSkillNodeClicked
// 0x0018 (0x0018 - 0x0000)
struct WBP_Panel_SkillTree_C_OnSkillNodeClicked final
{
public:
	class UWBP_SkillTreeElement_C*                SkillNodeWidget;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESkillNodeState                               CallFunc_GetSkillState_NodeState;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_SkillTree_C_OnSkillNodeClicked) == 0x000008, "Wrong alignment on WBP_Panel_SkillTree_C_OnSkillNodeClicked");
static_assert(sizeof(WBP_Panel_SkillTree_C_OnSkillNodeClicked) == 0x000018, "Wrong size on WBP_Panel_SkillTree_C_OnSkillNodeClicked");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnSkillNodeClicked, SkillNodeWidget) == 0x000000, "Member 'WBP_Panel_SkillTree_C_OnSkillNodeClicked::SkillNodeWidget' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnSkillNodeClicked, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_Panel_SkillTree_C_OnSkillNodeClicked::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnSkillNodeClicked, CallFunc_GetSkillState_NodeState) == 0x000010, "Member 'WBP_Panel_SkillTree_C_OnSkillNodeClicked::CallFunc_GetSkillState_NodeState' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnSkillNodeClicked, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000011, "Member 'WBP_Panel_SkillTree_C_OnSkillNodeClicked::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_Panel_SkillTree.WBP_Panel_SkillTree_C.OnSkillNodeSelected
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_Panel_SkillTree_C_OnSkillNodeSelected final
{
public:
	class UWBP_SkillTreeElement_C*                SkillNodeWidget;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_CommonUI_ActionDataRowHandle        LearnSkillAction;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FS_CommonUI_ActionDataRowHandle        AssignSkillAction;                                 // 0x0018(0x0010)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0030(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0040(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x0050(0x0010)()
	bool                                          CallFunc_IsSkillSecretLocked_IsSecretLocked;       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillSecretLocked_IsSecretLocked_1;     // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESkillNodeState                               CallFunc_GetSkillState_NodeState;                  // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FDataTableRowHandle& InputAction, class UWBP_GM_PromptGeneric_C* Widget)> K2Node_CreateDelegate_OutputDelegate; // 0x006C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ContextualActions_C*               CallFunc_SpawnObject_ReturnValue;                  // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0088(0x0020)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot;            // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_SkillTree_C_OnSkillNodeSelected) == 0x000008, "Wrong alignment on WBP_Panel_SkillTree_C_OnSkillNodeSelected");
static_assert(sizeof(WBP_Panel_SkillTree_C_OnSkillNodeSelected) == 0x0000E8, "Wrong size on WBP_Panel_SkillTree_C_OnSkillNodeSelected");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnSkillNodeSelected, SkillNodeWidget) == 0x000000, "Member 'WBP_Panel_SkillTree_C_OnSkillNodeSelected::SkillNodeWidget' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnSkillNodeSelected, LearnSkillAction) == 0x000008, "Member 'WBP_Panel_SkillTree_C_OnSkillNodeSelected::LearnSkillAction' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnSkillNodeSelected, AssignSkillAction) == 0x000018, "Member 'WBP_Panel_SkillTree_C_OnSkillNodeSelected::AssignSkillAction' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnSkillNodeSelected, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'WBP_Panel_SkillTree_C_OnSkillNodeSelected::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnSkillNodeSelected, CallFunc_MakeLiteralText_ReturnValue) == 0x000030, "Member 'WBP_Panel_SkillTree_C_OnSkillNodeSelected::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnSkillNodeSelected, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000040, "Member 'WBP_Panel_SkillTree_C_OnSkillNodeSelected::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnSkillNodeSelected, CallFunc_MakeLiteralText_ReturnValue_2) == 0x000050, "Member 'WBP_Panel_SkillTree_C_OnSkillNodeSelected::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnSkillNodeSelected, CallFunc_IsSkillSecretLocked_IsSecretLocked) == 0x000060, "Member 'WBP_Panel_SkillTree_C_OnSkillNodeSelected::CallFunc_IsSkillSecretLocked_IsSecretLocked' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnSkillNodeSelected, CallFunc_IsValid_ReturnValue) == 0x000061, "Member 'WBP_Panel_SkillTree_C_OnSkillNodeSelected::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnSkillNodeSelected, CallFunc_Not_PreBool_ReturnValue_1) == 0x000062, "Member 'WBP_Panel_SkillTree_C_OnSkillNodeSelected::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnSkillNodeSelected, CallFunc_IsSkillSecretLocked_IsSecretLocked_1) == 0x000063, "Member 'WBP_Panel_SkillTree_C_OnSkillNodeSelected::CallFunc_IsSkillSecretLocked_IsSecretLocked_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnSkillNodeSelected, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000064, "Member 'WBP_Panel_SkillTree_C_OnSkillNodeSelected::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnSkillNodeSelected, CallFunc_GetSkillState_NodeState) == 0x000065, "Member 'WBP_Panel_SkillTree_C_OnSkillNodeSelected::CallFunc_GetSkillState_NodeState' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnSkillNodeSelected, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000066, "Member 'WBP_Panel_SkillTree_C_OnSkillNodeSelected::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnSkillNodeSelected, K2Node_SwitchEnum_CmpSuccess) == 0x000067, "Member 'WBP_Panel_SkillTree_C_OnSkillNodeSelected::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnSkillNodeSelected, CallFunc_BooleanOR_ReturnValue) == 0x000068, "Member 'WBP_Panel_SkillTree_C_OnSkillNodeSelected::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnSkillNodeSelected, K2Node_CreateDelegate_OutputDelegate) == 0x00006C, "Member 'WBP_Panel_SkillTree_C_OnSkillNodeSelected::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnSkillNodeSelected, CallFunc_BooleanAND_ReturnValue) == 0x00007C, "Member 'WBP_Panel_SkillTree_C_OnSkillNodeSelected::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnSkillNodeSelected, CallFunc_SpawnObject_ReturnValue) == 0x000080, "Member 'WBP_Panel_SkillTree_C_OnSkillNodeSelected::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnSkillNodeSelected, K2Node_MakeStruct_Anchors) == 0x000088, "Member 'WBP_Panel_SkillTree_C_OnSkillNodeSelected::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnSkillNodeSelected, CallFunc_IsValid_ReturnValue_1) == 0x0000A8, "Member 'WBP_Panel_SkillTree_C_OnSkillNodeSelected::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnSkillNodeSelected, CallFunc_AddChildToCanvas_ReturnValue) == 0x0000B0, "Member 'WBP_Panel_SkillTree_C_OnSkillNodeSelected::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnSkillNodeSelected, K2Node_DynamicCast_AsCanvas_Panel_Slot) == 0x0000B8, "Member 'WBP_Panel_SkillTree_C_OnSkillNodeSelected::K2Node_DynamicCast_AsCanvas_Panel_Slot' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnSkillNodeSelected, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'WBP_Panel_SkillTree_C_OnSkillNodeSelected::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnSkillNodeSelected, CallFunc_GetPosition_ReturnValue) == 0x0000C8, "Member 'WBP_Panel_SkillTree_C_OnSkillNodeSelected::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_OnSkillNodeSelected, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0000D8, "Member 'WBP_Panel_SkillTree_C_OnSkillNodeSelected::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function WBP_Panel_SkillTree.WBP_Panel_SkillTree_C.UpdateSkillConnectionStates
// 0x0068 (0x0068 - 0x0000)
struct WBP_Panel_SkillTree_C_UpdateSkillConnectionStates final
{
public:
	class UBP_CharacterData_C*                    Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    local_character;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESkillNodeState                               Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESkillNodeState                               Temp_byte_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DataAsset_SkillGraph_C*             CallFunc_GetSkillGraph_SkillGraph;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSkillGraphEdge                       CallFunc_Array_Get_Item;                           // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_DataAsset_Skill_C*                  Temp_wildcard_Variable;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAffordSkillUnlock_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillUnlocked_ReturnValue;              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillUnlocked_ReturnValue_1;            // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_SkillTreeConnection_C*             CallFunc_Map_Find_Value;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESkillNodeState                               K2Node_Select_Default;                             // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_SkillTree_C_UpdateSkillConnectionStates) == 0x000008, "Wrong alignment on WBP_Panel_SkillTree_C_UpdateSkillConnectionStates");
static_assert(sizeof(WBP_Panel_SkillTree_C_UpdateSkillConnectionStates) == 0x000068, "Wrong size on WBP_Panel_SkillTree_C_UpdateSkillConnectionStates");
static_assert(offsetof(WBP_Panel_SkillTree_C_UpdateSkillConnectionStates, Character) == 0x000000, "Member 'WBP_Panel_SkillTree_C_UpdateSkillConnectionStates::Character' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_UpdateSkillConnectionStates, local_character) == 0x000008, "Member 'WBP_Panel_SkillTree_C_UpdateSkillConnectionStates::local_character' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_UpdateSkillConnectionStates, Temp_byte_Variable) == 0x000010, "Member 'WBP_Panel_SkillTree_C_UpdateSkillConnectionStates::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_UpdateSkillConnectionStates, Temp_byte_Variable_1) == 0x000011, "Member 'WBP_Panel_SkillTree_C_UpdateSkillConnectionStates::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_UpdateSkillConnectionStates, CallFunc_GetSkillGraph_SkillGraph) == 0x000018, "Member 'WBP_Panel_SkillTree_C_UpdateSkillConnectionStates::CallFunc_GetSkillGraph_SkillGraph' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_UpdateSkillConnectionStates, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'WBP_Panel_SkillTree_C_UpdateSkillConnectionStates::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_UpdateSkillConnectionStates, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'WBP_Panel_SkillTree_C_UpdateSkillConnectionStates::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_UpdateSkillConnectionStates, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'WBP_Panel_SkillTree_C_UpdateSkillConnectionStates::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_UpdateSkillConnectionStates, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'WBP_Panel_SkillTree_C_UpdateSkillConnectionStates::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_UpdateSkillConnectionStates, Temp_int_Array_Index_Variable) == 0x000030, "Member 'WBP_Panel_SkillTree_C_UpdateSkillConnectionStates::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_UpdateSkillConnectionStates, CallFunc_Array_Get_Item) == 0x000038, "Member 'WBP_Panel_SkillTree_C_UpdateSkillConnectionStates::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_UpdateSkillConnectionStates, Temp_wildcard_Variable) == 0x000048, "Member 'WBP_Panel_SkillTree_C_UpdateSkillConnectionStates::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_UpdateSkillConnectionStates, CallFunc_CanAffordSkillUnlock_ReturnValue) == 0x000050, "Member 'WBP_Panel_SkillTree_C_UpdateSkillConnectionStates::CallFunc_CanAffordSkillUnlock_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_UpdateSkillConnectionStates, CallFunc_IsSkillUnlocked_ReturnValue) == 0x000051, "Member 'WBP_Panel_SkillTree_C_UpdateSkillConnectionStates::CallFunc_IsSkillUnlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_UpdateSkillConnectionStates, CallFunc_IsSkillUnlocked_ReturnValue_1) == 0x000052, "Member 'WBP_Panel_SkillTree_C_UpdateSkillConnectionStates::CallFunc_IsSkillUnlocked_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_UpdateSkillConnectionStates, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000053, "Member 'WBP_Panel_SkillTree_C_UpdateSkillConnectionStates::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_UpdateSkillConnectionStates, CallFunc_BooleanAND_ReturnValue) == 0x000054, "Member 'WBP_Panel_SkillTree_C_UpdateSkillConnectionStates::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_UpdateSkillConnectionStates, Temp_bool_Variable) == 0x000055, "Member 'WBP_Panel_SkillTree_C_UpdateSkillConnectionStates::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_UpdateSkillConnectionStates, CallFunc_Map_Find_Value) == 0x000058, "Member 'WBP_Panel_SkillTree_C_UpdateSkillConnectionStates::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_UpdateSkillConnectionStates, CallFunc_Map_Find_ReturnValue) == 0x000060, "Member 'WBP_Panel_SkillTree_C_UpdateSkillConnectionStates::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_UpdateSkillConnectionStates, K2Node_Select_Default) == 0x000061, "Member 'WBP_Panel_SkillTree_C_UpdateSkillConnectionStates::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Panel_SkillTree.WBP_Panel_SkillTree_C.BP_GetDesiredFocusTarget
// 0x0020 (0x0020 - 0x0000)
struct WBP_Panel_SkillTree_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_SkillTreeElement_C*                CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_SkillTree_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_Panel_SkillTree_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_Panel_SkillTree_C_BP_GetDesiredFocusTarget) == 0x000020, "Wrong size on WBP_Panel_SkillTree_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_Panel_SkillTree_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_Panel_SkillTree_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_BP_GetDesiredFocusTarget, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_Panel_SkillTree_C_BP_GetDesiredFocusTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_BP_GetDesiredFocusTarget, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'WBP_Panel_SkillTree_C_BP_GetDesiredFocusTarget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_BP_GetDesiredFocusTarget, CallFunc_Map_Find_Value) == 0x000010, "Member 'WBP_Panel_SkillTree_C_BP_GetDesiredFocusTarget::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_Panel_SkillTree_C_BP_GetDesiredFocusTarget, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'WBP_Panel_SkillTree_C_BP_GetDesiredFocusTarget::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

}

