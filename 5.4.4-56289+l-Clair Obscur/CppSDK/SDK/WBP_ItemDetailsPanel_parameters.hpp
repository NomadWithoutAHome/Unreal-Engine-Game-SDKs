#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ItemDetailsPanel

#include "Basic.hpp"

#include "S_jRPG_Item_StaticData_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_ItemDetailsPanel.WBP_ItemDetailsPanel_C.LoadUnlockCondition
// 0x0010 (0x0010 - 0x0000)
struct WBP_ItemDetailsPanel_C_LoadUnlockCondition final
{
public:
	class FText                                   ConditionText;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_ItemDetailsPanel_C_LoadUnlockCondition) == 0x000008, "Wrong alignment on WBP_ItemDetailsPanel_C_LoadUnlockCondition");
static_assert(sizeof(WBP_ItemDetailsPanel_C_LoadUnlockCondition) == 0x000010, "Wrong size on WBP_ItemDetailsPanel_C_LoadUnlockCondition");
static_assert(offsetof(WBP_ItemDetailsPanel_C_LoadUnlockCondition, ConditionText) == 0x000000, "Member 'WBP_ItemDetailsPanel_C_LoadUnlockCondition::ConditionText' has a wrong offset!");

// Function WBP_ItemDetailsPanel.WBP_ItemDetailsPanel_C.LoadDefaultItem
// 0x0008 (0x0008 - 0x0000)
struct WBP_ItemDetailsPanel_C_LoadDefaultItem final
{
public:
	class UBP_ItemInstance_Base_C*                ItemInstance;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemDetailsPanel_C_LoadDefaultItem) == 0x000008, "Wrong alignment on WBP_ItemDetailsPanel_C_LoadDefaultItem");
static_assert(sizeof(WBP_ItemDetailsPanel_C_LoadDefaultItem) == 0x000008, "Wrong size on WBP_ItemDetailsPanel_C_LoadDefaultItem");
static_assert(offsetof(WBP_ItemDetailsPanel_C_LoadDefaultItem, ItemInstance) == 0x000000, "Member 'WBP_ItemDetailsPanel_C_LoadDefaultItem::ItemInstance' has a wrong offset!");

// Function WBP_ItemDetailsPanel.WBP_ItemDetailsPanel_C.LoadWeaponItem
// 0x0158 (0x0158 - 0x0000)
struct WBP_ItemDetailsPanel_C_LoadWeaponItem final
{
public:
	class UBP_ItemInstance_Base_C*                ItemInstance;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_Weapon_C*         K2Node_DynamicCast_AsBP_Item_Instance_Gear_Weapon; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_StaticData                CallFunc_GetItemStaticData_ItemStaticData;         // 0x0018(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    CallFunc_TryGetCharacterDataForItem_CharacterData; // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemDetailsPanel_C_LoadWeaponItem) == 0x000008, "Wrong alignment on WBP_ItemDetailsPanel_C_LoadWeaponItem");
static_assert(sizeof(WBP_ItemDetailsPanel_C_LoadWeaponItem) == 0x000158, "Wrong size on WBP_ItemDetailsPanel_C_LoadWeaponItem");
static_assert(offsetof(WBP_ItemDetailsPanel_C_LoadWeaponItem, ItemInstance) == 0x000000, "Member 'WBP_ItemDetailsPanel_C_LoadWeaponItem::ItemInstance' has a wrong offset!");
static_assert(offsetof(WBP_ItemDetailsPanel_C_LoadWeaponItem, K2Node_DynamicCast_AsBP_Item_Instance_Gear_Weapon) == 0x000008, "Member 'WBP_ItemDetailsPanel_C_LoadWeaponItem::K2Node_DynamicCast_AsBP_Item_Instance_Gear_Weapon' has a wrong offset!");
static_assert(offsetof(WBP_ItemDetailsPanel_C_LoadWeaponItem, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_ItemDetailsPanel_C_LoadWeaponItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ItemDetailsPanel_C_LoadWeaponItem, CallFunc_GetItemStaticData_ItemStaticData) == 0x000018, "Member 'WBP_ItemDetailsPanel_C_LoadWeaponItem::CallFunc_GetItemStaticData_ItemStaticData' has a wrong offset!");
static_assert(offsetof(WBP_ItemDetailsPanel_C_LoadWeaponItem, CallFunc_TryGetCharacterDataForItem_CharacterData) == 0x000148, "Member 'WBP_ItemDetailsPanel_C_LoadWeaponItem::CallFunc_TryGetCharacterDataForItem_CharacterData' has a wrong offset!");
static_assert(offsetof(WBP_ItemDetailsPanel_C_LoadWeaponItem, CallFunc_IsValid_ReturnValue) == 0x000150, "Member 'WBP_ItemDetailsPanel_C_LoadWeaponItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_ItemDetailsPanel.WBP_ItemDetailsPanel_C.LoadPictoItem
// 0x0148 (0x0148 - 0x0000)
struct WBP_ItemDetailsPanel_C_LoadPictoItem final
{
public:
	class UBP_ItemInstance_Base_C*                ItemInstance;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_Pictos_C*         K2Node_DynamicCast_AsBP_Item_Instance_Gear_Pictos; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_StaticData                CallFunc_GetItemStaticData_ItemStaticData;         // 0x0018(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemDetailsPanel_C_LoadPictoItem) == 0x000008, "Wrong alignment on WBP_ItemDetailsPanel_C_LoadPictoItem");
static_assert(sizeof(WBP_ItemDetailsPanel_C_LoadPictoItem) == 0x000148, "Wrong size on WBP_ItemDetailsPanel_C_LoadPictoItem");
static_assert(offsetof(WBP_ItemDetailsPanel_C_LoadPictoItem, ItemInstance) == 0x000000, "Member 'WBP_ItemDetailsPanel_C_LoadPictoItem::ItemInstance' has a wrong offset!");
static_assert(offsetof(WBP_ItemDetailsPanel_C_LoadPictoItem, K2Node_DynamicCast_AsBP_Item_Instance_Gear_Pictos) == 0x000008, "Member 'WBP_ItemDetailsPanel_C_LoadPictoItem::K2Node_DynamicCast_AsBP_Item_Instance_Gear_Pictos' has a wrong offset!");
static_assert(offsetof(WBP_ItemDetailsPanel_C_LoadPictoItem, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_ItemDetailsPanel_C_LoadPictoItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ItemDetailsPanel_C_LoadPictoItem, CallFunc_GetItemStaticData_ItemStaticData) == 0x000018, "Member 'WBP_ItemDetailsPanel_C_LoadPictoItem::CallFunc_GetItemStaticData_ItemStaticData' has a wrong offset!");

// Function WBP_ItemDetailsPanel.WBP_ItemDetailsPanel_C.SetWidgetVisible
// 0x0005 (0x0005 - 0x0000)
struct WBP_ItemDetailsPanel_C_SetWidgetVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemDetailsPanel_C_SetWidgetVisible) == 0x000001, "Wrong alignment on WBP_ItemDetailsPanel_C_SetWidgetVisible");
static_assert(sizeof(WBP_ItemDetailsPanel_C_SetWidgetVisible) == 0x000005, "Wrong size on WBP_ItemDetailsPanel_C_SetWidgetVisible");
static_assert(offsetof(WBP_ItemDetailsPanel_C_SetWidgetVisible, Visible) == 0x000000, "Member 'WBP_ItemDetailsPanel_C_SetWidgetVisible::Visible' has a wrong offset!");
static_assert(offsetof(WBP_ItemDetailsPanel_C_SetWidgetVisible, Temp_bool_Variable) == 0x000001, "Member 'WBP_ItemDetailsPanel_C_SetWidgetVisible::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemDetailsPanel_C_SetWidgetVisible, Temp_byte_Variable) == 0x000002, "Member 'WBP_ItemDetailsPanel_C_SetWidgetVisible::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemDetailsPanel_C_SetWidgetVisible, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_ItemDetailsPanel_C_SetWidgetVisible::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemDetailsPanel_C_SetWidgetVisible, K2Node_Select_Default) == 0x000004, "Member 'WBP_ItemDetailsPanel_C_SetWidgetVisible::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ItemDetailsPanel.WBP_ItemDetailsPanel_C.TryGetCharacterDataForItem
// 0x0178 (0x0178 - 0x0000)
struct WBP_ItemDetailsPanel_C_TryGetCharacterDataForItem final
{
public:
	struct FS_jRPG_Item_StaticData                Item;                                              // 0x0000(0x0130)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    CharacterData;                                     // 0x0130(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_CharacterData_C*>            CallFunc_GetCharacterCollection_Characters;        // 0x0150(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterData_C*                    CallFunc_Array_Get_Item;                           // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanEquipItem_ReturnValue;                 // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemDetailsPanel_C_TryGetCharacterDataForItem) == 0x000008, "Wrong alignment on WBP_ItemDetailsPanel_C_TryGetCharacterDataForItem");
static_assert(sizeof(WBP_ItemDetailsPanel_C_TryGetCharacterDataForItem) == 0x000178, "Wrong size on WBP_ItemDetailsPanel_C_TryGetCharacterDataForItem");
static_assert(offsetof(WBP_ItemDetailsPanel_C_TryGetCharacterDataForItem, Item) == 0x000000, "Member 'WBP_ItemDetailsPanel_C_TryGetCharacterDataForItem::Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemDetailsPanel_C_TryGetCharacterDataForItem, CharacterData) == 0x000130, "Member 'WBP_ItemDetailsPanel_C_TryGetCharacterDataForItem::CharacterData' has a wrong offset!");
static_assert(offsetof(WBP_ItemDetailsPanel_C_TryGetCharacterDataForItem, Temp_int_Array_Index_Variable) == 0x000138, "Member 'WBP_ItemDetailsPanel_C_TryGetCharacterDataForItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemDetailsPanel_C_TryGetCharacterDataForItem, Temp_int_Loop_Counter_Variable) == 0x00013C, "Member 'WBP_ItemDetailsPanel_C_TryGetCharacterDataForItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemDetailsPanel_C_TryGetCharacterDataForItem, CallFunc_Add_IntInt_ReturnValue) == 0x000140, "Member 'WBP_ItemDetailsPanel_C_TryGetCharacterDataForItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemDetailsPanel_C_TryGetCharacterDataForItem, CallFunc_GetCustomGI_ReturnValue) == 0x000148, "Member 'WBP_ItemDetailsPanel_C_TryGetCharacterDataForItem::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemDetailsPanel_C_TryGetCharacterDataForItem, CallFunc_GetCharacterCollection_Characters) == 0x000150, "Member 'WBP_ItemDetailsPanel_C_TryGetCharacterDataForItem::CallFunc_GetCharacterCollection_Characters' has a wrong offset!");
static_assert(offsetof(WBP_ItemDetailsPanel_C_TryGetCharacterDataForItem, CallFunc_Array_Length_ReturnValue) == 0x000160, "Member 'WBP_ItemDetailsPanel_C_TryGetCharacterDataForItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemDetailsPanel_C_TryGetCharacterDataForItem, CallFunc_Array_Get_Item) == 0x000168, "Member 'WBP_ItemDetailsPanel_C_TryGetCharacterDataForItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemDetailsPanel_C_TryGetCharacterDataForItem, CallFunc_Less_IntInt_ReturnValue) == 0x000170, "Member 'WBP_ItemDetailsPanel_C_TryGetCharacterDataForItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemDetailsPanel_C_TryGetCharacterDataForItem, CallFunc_CanEquipItem_ReturnValue) == 0x000171, "Member 'WBP_ItemDetailsPanel_C_TryGetCharacterDataForItem::CallFunc_CanEquipItem_ReturnValue' has a wrong offset!");

// Function WBP_ItemDetailsPanel.WBP_ItemDetailsPanel_C.LoadItemInstance
// 0x0140 (0x0140 - 0x0000)
struct WBP_ItemDetailsPanel_C_LoadItemInstance final
{
public:
	class UBP_ItemInstance_Base_C*                ItemInstance;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_jRPG_Item_StaticData                CallFunc_GetItemStaticData_ItemStaticData;         // 0x0008(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemDetailsPanel_C_LoadItemInstance) == 0x000008, "Wrong alignment on WBP_ItemDetailsPanel_C_LoadItemInstance");
static_assert(sizeof(WBP_ItemDetailsPanel_C_LoadItemInstance) == 0x000140, "Wrong size on WBP_ItemDetailsPanel_C_LoadItemInstance");
static_assert(offsetof(WBP_ItemDetailsPanel_C_LoadItemInstance, ItemInstance) == 0x000000, "Member 'WBP_ItemDetailsPanel_C_LoadItemInstance::ItemInstance' has a wrong offset!");
static_assert(offsetof(WBP_ItemDetailsPanel_C_LoadItemInstance, CallFunc_GetItemStaticData_ItemStaticData) == 0x000008, "Member 'WBP_ItemDetailsPanel_C_LoadItemInstance::CallFunc_GetItemStaticData_ItemStaticData' has a wrong offset!");
static_assert(offsetof(WBP_ItemDetailsPanel_C_LoadItemInstance, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000138, "Member 'WBP_ItemDetailsPanel_C_LoadItemInstance::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemDetailsPanel_C_LoadItemInstance, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000139, "Member 'WBP_ItemDetailsPanel_C_LoadItemInstance::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

}

