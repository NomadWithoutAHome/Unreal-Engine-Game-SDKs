#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DataAsset_Item_Pictos

#include "Basic.hpp"

#include "FPassiveEffectDataTableRow_structs.hpp"


namespace SDK::Params
{

// Function BP_DataAsset_Item_Pictos.BP_DataAsset_Item_Pictos_C.OnRemovedFromInventory
// 0x0018 (0x0018 - 0x0000)
struct BP_DataAsset_Item_Pictos_C_OnRemovedFromInventory final
{
public:
	class UBP_jRPG_GI_Custom_C*                   GameInstance;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_InventoryManager_C*            InventoryManager;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   ItemId;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DataAsset_Item_Pictos_C_OnRemovedFromInventory) == 0x000008, "Wrong alignment on BP_DataAsset_Item_Pictos_C_OnRemovedFromInventory");
static_assert(sizeof(BP_DataAsset_Item_Pictos_C_OnRemovedFromInventory) == 0x000018, "Wrong size on BP_DataAsset_Item_Pictos_C_OnRemovedFromInventory");
static_assert(offsetof(BP_DataAsset_Item_Pictos_C_OnRemovedFromInventory, GameInstance) == 0x000000, "Member 'BP_DataAsset_Item_Pictos_C_OnRemovedFromInventory::GameInstance' has a wrong offset!");
static_assert(offsetof(BP_DataAsset_Item_Pictos_C_OnRemovedFromInventory, InventoryManager) == 0x000008, "Member 'BP_DataAsset_Item_Pictos_C_OnRemovedFromInventory::InventoryManager' has a wrong offset!");
static_assert(offsetof(BP_DataAsset_Item_Pictos_C_OnRemovedFromInventory, ItemId) == 0x000010, "Member 'BP_DataAsset_Item_Pictos_C_OnRemovedFromInventory::ItemId' has a wrong offset!");

// Function BP_DataAsset_Item_Pictos.BP_DataAsset_Item_Pictos_C.GetItemInstanceClass
// 0x0008 (0x0008 - 0x0000)
struct BP_DataAsset_Item_Pictos_C_GetItemInstanceClass final
{
public:
	class UClass*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DataAsset_Item_Pictos_C_GetItemInstanceClass) == 0x000008, "Wrong alignment on BP_DataAsset_Item_Pictos_C_GetItemInstanceClass");
static_assert(sizeof(BP_DataAsset_Item_Pictos_C_GetItemInstanceClass) == 0x000008, "Wrong size on BP_DataAsset_Item_Pictos_C_GetItemInstanceClass");
static_assert(offsetof(BP_DataAsset_Item_Pictos_C_GetItemInstanceClass, ReturnValue) == 0x000000, "Member 'BP_DataAsset_Item_Pictos_C_GetItemInstanceClass::ReturnValue' has a wrong offset!");

// Function BP_DataAsset_Item_Pictos.BP_DataAsset_Item_Pictos_C.InitGear
// 0x0008 (0x0008 - 0x0000)
struct BP_DataAsset_Item_Pictos_C_InitGear final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        CharacterStats;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DataAsset_Item_Pictos_C_InitGear) == 0x000008, "Wrong alignment on BP_DataAsset_Item_Pictos_C_InitGear");
static_assert(sizeof(BP_DataAsset_Item_Pictos_C_InitGear) == 0x000008, "Wrong size on BP_DataAsset_Item_Pictos_C_InitGear");
static_assert(offsetof(BP_DataAsset_Item_Pictos_C_InitGear, CharacterStats) == 0x000000, "Member 'BP_DataAsset_Item_Pictos_C_InitGear::CharacterStats' has a wrong offset!");

// Function BP_DataAsset_Item_Pictos.BP_DataAsset_Item_Pictos_C.GetUnlockedPassiveEffects
// 0x0060 (0x0060 - 0x0000)
struct BP_DataAsset_Item_Pictos_C_GetUnlockedPassiveEffects final
{
public:
	TArray<class FName>                           PassiveEffects_0;                                  // 0x0000(0x0010)(Parm, OutParm)
	TArray<class FName>                           Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0010(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Temp_wildcard_Temp_buffer_array_Variable;          // 0x0030(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPassiveEffectDataTableRow            CallFunc_Array_Get_Item;                           // 0x0048(0x0010)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DataAsset_Item_Pictos_C_GetUnlockedPassiveEffects) == 0x000008, "Wrong alignment on BP_DataAsset_Item_Pictos_C_GetUnlockedPassiveEffects");
static_assert(sizeof(BP_DataAsset_Item_Pictos_C_GetUnlockedPassiveEffects) == 0x000060, "Wrong size on BP_DataAsset_Item_Pictos_C_GetUnlockedPassiveEffects");
static_assert(offsetof(BP_DataAsset_Item_Pictos_C_GetUnlockedPassiveEffects, PassiveEffects_0) == 0x000000, "Member 'BP_DataAsset_Item_Pictos_C_GetUnlockedPassiveEffects::PassiveEffects_0' has a wrong offset!");
static_assert(offsetof(BP_DataAsset_Item_Pictos_C_GetUnlockedPassiveEffects, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000010, "Member 'BP_DataAsset_Item_Pictos_C_GetUnlockedPassiveEffects::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(BP_DataAsset_Item_Pictos_C_GetUnlockedPassiveEffects, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_DataAsset_Item_Pictos_C_GetUnlockedPassiveEffects::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_DataAsset_Item_Pictos_C_GetUnlockedPassiveEffects, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_DataAsset_Item_Pictos_C_GetUnlockedPassiveEffects::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DataAsset_Item_Pictos_C_GetUnlockedPassiveEffects, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_DataAsset_Item_Pictos_C_GetUnlockedPassiveEffects::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_DataAsset_Item_Pictos_C_GetUnlockedPassiveEffects, Temp_wildcard_Temp_buffer_array_Variable) == 0x000030, "Member 'BP_DataAsset_Item_Pictos_C_GetUnlockedPassiveEffects::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(BP_DataAsset_Item_Pictos_C_GetUnlockedPassiveEffects, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_DataAsset_Item_Pictos_C_GetUnlockedPassiveEffects::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DataAsset_Item_Pictos_C_GetUnlockedPassiveEffects, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_DataAsset_Item_Pictos_C_GetUnlockedPassiveEffects::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_DataAsset_Item_Pictos_C_GetUnlockedPassiveEffects, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_DataAsset_Item_Pictos_C_GetUnlockedPassiveEffects::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DataAsset_Item_Pictos_C_GetUnlockedPassiveEffects, CallFunc_Array_Add_ReturnValue) == 0x00005C, "Member 'BP_DataAsset_Item_Pictos_C_GetUnlockedPassiveEffects::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

}

