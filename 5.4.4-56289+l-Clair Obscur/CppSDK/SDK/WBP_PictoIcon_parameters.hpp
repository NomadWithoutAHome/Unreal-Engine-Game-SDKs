#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PictoIcon

#include "Basic.hpp"

#include "E_PassiveEffectCategory_structs.hpp"
#include "S_PictoIconsDataRow_structs.hpp"
#include "FPassiveEffect_structs.hpp"
#include "FPassiveEffectProgression_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_PictoIcon.WBP_PictoIcon_C.GetCurrentStep
// 0x0004 (0x0004 - 0x0000)
struct WBP_PictoIcon_C_GetCurrentStep final
{
public:
	int32                                         CurrentStep_0;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PictoIcon_C_GetCurrentStep) == 0x000004, "Wrong alignment on WBP_PictoIcon_C_GetCurrentStep");
static_assert(sizeof(WBP_PictoIcon_C_GetCurrentStep) == 0x000004, "Wrong size on WBP_PictoIcon_C_GetCurrentStep");
static_assert(offsetof(WBP_PictoIcon_C_GetCurrentStep, CurrentStep_0) == 0x000000, "Member 'WBP_PictoIcon_C_GetCurrentStep::CurrentStep_0' has a wrong offset!");

// Function WBP_PictoIcon.WBP_PictoIcon_C.GetLearntNewLuminaThisBattle
// 0x0001 (0x0001 - 0x0000)
struct WBP_PictoIcon_C_GetLearntNewLuminaThisBattle final
{
public:
	bool                                          LearntNewLuminaThisBattle_0;                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PictoIcon_C_GetLearntNewLuminaThisBattle) == 0x000001, "Wrong alignment on WBP_PictoIcon_C_GetLearntNewLuminaThisBattle");
static_assert(sizeof(WBP_PictoIcon_C_GetLearntNewLuminaThisBattle) == 0x000001, "Wrong size on WBP_PictoIcon_C_GetLearntNewLuminaThisBattle");
static_assert(offsetof(WBP_PictoIcon_C_GetLearntNewLuminaThisBattle, LearntNewLuminaThisBattle_0) == 0x000000, "Member 'WBP_PictoIcon_C_GetLearntNewLuminaThisBattle::LearntNewLuminaThisBattle_0' has a wrong offset!");

// Function WBP_PictoIcon.WBP_PictoIcon_C.TransitionToNextStep
// 0x0050 (0x0050 - 0x0000)
struct WBP_PictoIcon_C_TransitionToNextStep final
{
public:
	double                                        Progression;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetEffectMaterial_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PictoIcon_C_TransitionToNextStep) == 0x000008, "Wrong alignment on WBP_PictoIcon_C_TransitionToNextStep");
static_assert(sizeof(WBP_PictoIcon_C_TransitionToNextStep) == 0x000050, "Wrong size on WBP_PictoIcon_C_TransitionToNextStep");
static_assert(offsetof(WBP_PictoIcon_C_TransitionToNextStep, Progression) == 0x000000, "Member 'WBP_PictoIcon_C_TransitionToNextStep::Progression' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_TransitionToNextStep, Temp_name_Variable) == 0x000008, "Member 'WBP_PictoIcon_C_TransitionToNextStep::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_TransitionToNextStep, Temp_name_Variable_1) == 0x000010, "Member 'WBP_PictoIcon_C_TransitionToNextStep::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_TransitionToNextStep, Temp_name_Variable_2) == 0x000018, "Member 'WBP_PictoIcon_C_TransitionToNextStep::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_TransitionToNextStep, Temp_name_Variable_3) == 0x000020, "Member 'WBP_PictoIcon_C_TransitionToNextStep::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_TransitionToNextStep, Temp_name_Variable_4) == 0x000028, "Member 'WBP_PictoIcon_C_TransitionToNextStep::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_TransitionToNextStep, Temp_int_Variable) == 0x000030, "Member 'WBP_PictoIcon_C_TransitionToNextStep::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_TransitionToNextStep, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000034, "Member 'WBP_PictoIcon_C_TransitionToNextStep::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_TransitionToNextStep, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000035, "Member 'WBP_PictoIcon_C_TransitionToNextStep::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_TransitionToNextStep, CallFunc_BooleanOR_ReturnValue) == 0x000036, "Member 'WBP_PictoIcon_C_TransitionToNextStep::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_TransitionToNextStep, K2Node_Select_Default) == 0x000038, "Member 'WBP_PictoIcon_C_TransitionToNextStep::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_TransitionToNextStep, CallFunc_GetEffectMaterial_ReturnValue) == 0x000040, "Member 'WBP_PictoIcon_C_TransitionToNextStep::CallFunc_GetEffectMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_TransitionToNextStep, CallFunc_NotEqual_NameName_ReturnValue) == 0x000048, "Member 'WBP_PictoIcon_C_TransitionToNextStep::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_TransitionToNextStep, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'WBP_PictoIcon_C_TransitionToNextStep::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_TransitionToNextStep, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x00004C, "Member 'WBP_PictoIcon_C_TransitionToNextStep::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function WBP_PictoIcon.WBP_PictoIcon_C.LoadPictoIconColor
// 0x01B8 (0x01B8 - 0x0000)
struct WBP_PictoIcon_C_LoadPictoIconColor final
{
public:
	struct FS_PictoIconsDataRow                   PictoIconData;                                     // 0x0000(0x0090)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FFPassiveEffect                        PassiveEffectDefinition;                           // 0x0090(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	TMap<E_PassiveEffectCategory, struct FLinearColor> LocalColorMap;                                // 0x00D8(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<E_PassiveEffectCategory, struct FLinearColor> K2Node_MakeVariable_MakeVariableOutput;       // 0x0130(0x0050)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_PassiveEffectCategory>               CallFunc_Map_Keys_Keys;                            // 0x0188(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PassiveEffectCategory                       CallFunc_Array_Get_Item;                           // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19E[0x2];                                      // 0x019E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Map_Find_Value;                           // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PictoIcon_C_LoadPictoIconColor) == 0x000008, "Wrong alignment on WBP_PictoIcon_C_LoadPictoIconColor");
static_assert(sizeof(WBP_PictoIcon_C_LoadPictoIconColor) == 0x0001B8, "Wrong size on WBP_PictoIcon_C_LoadPictoIconColor");
static_assert(offsetof(WBP_PictoIcon_C_LoadPictoIconColor, PictoIconData) == 0x000000, "Member 'WBP_PictoIcon_C_LoadPictoIconColor::PictoIconData' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPictoIconColor, PassiveEffectDefinition) == 0x000090, "Member 'WBP_PictoIcon_C_LoadPictoIconColor::PassiveEffectDefinition' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPictoIconColor, LocalColorMap) == 0x0000D8, "Member 'WBP_PictoIcon_C_LoadPictoIconColor::LocalColorMap' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPictoIconColor, Temp_int_Array_Index_Variable) == 0x000128, "Member 'WBP_PictoIcon_C_LoadPictoIconColor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPictoIconColor, Temp_int_Loop_Counter_Variable) == 0x00012C, "Member 'WBP_PictoIcon_C_LoadPictoIconColor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPictoIconColor, K2Node_MakeVariable_MakeVariableOutput) == 0x000130, "Member 'WBP_PictoIcon_C_LoadPictoIconColor::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPictoIconColor, CallFunc_Add_IntInt_ReturnValue) == 0x000180, "Member 'WBP_PictoIcon_C_LoadPictoIconColor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPictoIconColor, CallFunc_Map_Keys_Keys) == 0x000188, "Member 'WBP_PictoIcon_C_LoadPictoIconColor::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPictoIconColor, CallFunc_Array_Length_ReturnValue) == 0x000198, "Member 'WBP_PictoIcon_C_LoadPictoIconColor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPictoIconColor, CallFunc_Array_Get_Item) == 0x00019C, "Member 'WBP_PictoIcon_C_LoadPictoIconColor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPictoIconColor, CallFunc_Less_IntInt_ReturnValue) == 0x00019D, "Member 'WBP_PictoIcon_C_LoadPictoIconColor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPictoIconColor, CallFunc_Map_Find_Value) == 0x0001A0, "Member 'WBP_PictoIcon_C_LoadPictoIconColor::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPictoIconColor, CallFunc_Map_Find_ReturnValue) == 0x0001B0, "Member 'WBP_PictoIcon_C_LoadPictoIconColor::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPictoIconColor, CallFunc_Array_Contains_ReturnValue) == 0x0001B1, "Member 'WBP_PictoIcon_C_LoadPictoIconColor::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPictoIconColor, CallFunc_BooleanAND_ReturnValue) == 0x0001B2, "Member 'WBP_PictoIcon_C_LoadPictoIconColor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_PictoIcon.WBP_PictoIcon_C.LoadPictoIcon
// 0x0110 (0x0110 - 0x0000)
struct WBP_PictoIcon_C_LoadPictoIcon final
{
public:
	class FName                                   PictoID;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFPassiveEffectProgression             CallFunc_GetOrCreateSharedPassiveEffectProgression_Progression; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPassiveEffect                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0028(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_PictoIconsDataRow                   CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0078(0x0090)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PictoIcon_C_LoadPictoIcon) == 0x000008, "Wrong alignment on WBP_PictoIcon_C_LoadPictoIcon");
static_assert(sizeof(WBP_PictoIcon_C_LoadPictoIcon) == 0x000110, "Wrong size on WBP_PictoIcon_C_LoadPictoIcon");
static_assert(offsetof(WBP_PictoIcon_C_LoadPictoIcon, PictoID) == 0x000000, "Member 'WBP_PictoIcon_C_LoadPictoIcon::PictoID' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPictoIcon, CallFunc_GetCustomGI_ReturnValue) == 0x000008, "Member 'WBP_PictoIcon_C_LoadPictoIcon::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPictoIcon, CallFunc_GetOrCreateSharedPassiveEffectProgression_Progression) == 0x000010, "Member 'WBP_PictoIcon_C_LoadPictoIcon::CallFunc_GetOrCreateSharedPassiveEffectProgression_Progression' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPictoIcon, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_PictoIcon_C_LoadPictoIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPictoIcon, CallFunc_GetDataTableRowFromName_OutRow) == 0x000028, "Member 'WBP_PictoIcon_C_LoadPictoIcon::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPictoIcon, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000070, "Member 'WBP_PictoIcon_C_LoadPictoIcon::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPictoIcon, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000078, "Member 'WBP_PictoIcon_C_LoadPictoIcon::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPictoIcon, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000108, "Member 'WBP_PictoIcon_C_LoadPictoIcon::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");

// Function WBP_PictoIcon.WBP_PictoIcon_C.LoadPassiveEffectLearnState
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_PictoIcon_C_LoadPassiveEffectLearnState final
{
public:
	struct FFPassiveEffectProgression             PassiveEffectProgression;                          // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_2;                              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_3;                              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_4;                              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_5;                              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_6;                              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_7;                              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_8;                              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_9;                              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_10;                             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_11;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_12;                             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_13;                             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_14;                             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_15;                             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_16;                             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_17;                             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_18;                             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_19;                             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_20;                             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_21;                             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_4;                           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_5;                           // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_22;                             // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_23;                             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_6;                           // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetEffectMaterial_ReturnValue;            // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_7;                           // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PictoIcon_C_LoadPassiveEffectLearnState) == 0x000008, "Wrong alignment on WBP_PictoIcon_C_LoadPassiveEffectLearnState");
static_assert(sizeof(WBP_PictoIcon_C_LoadPassiveEffectLearnState) == 0x0000C8, "Wrong size on WBP_PictoIcon_C_LoadPassiveEffectLearnState");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, PassiveEffectProgression) == 0x000000, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::PassiveEffectProgression' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_bool_Variable) == 0x000010, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_real_Variable) == 0x000014, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000019, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_int_Variable) == 0x00001C, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_real_Variable_1) == 0x000020, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_real_Variable_2) == 0x000024, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_real_Variable_3) == 0x000028, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_real_Variable_4) == 0x00002C, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_real_Variable_5) == 0x000030, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_int_Variable_1) == 0x000034, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, K2Node_Select_Default) == 0x000038, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_real_Variable_6) == 0x00003C, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_real_Variable_7) == 0x000040, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_real_Variable_8) == 0x000044, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_real_Variable_9) == 0x000048, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_real_Variable_10) == 0x00004C, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_real_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_int_Variable_2) == 0x000050, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, K2Node_Select_Default_1) == 0x000054, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_real_Variable_11) == 0x000058, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_real_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_real_Variable_12) == 0x00005C, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_real_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_real_Variable_13) == 0x000060, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_real_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_real_Variable_14) == 0x000064, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_real_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_real_Variable_15) == 0x000068, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_real_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_int_Variable_3) == 0x00006C, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, K2Node_Select_Default_2) == 0x000070, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_real_Variable_16) == 0x000074, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_real_Variable_16' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_real_Variable_17) == 0x000078, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_real_Variable_17' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_real_Variable_18) == 0x00007C, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_real_Variable_18' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_real_Variable_19) == 0x000080, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_real_Variable_19' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_real_Variable_20) == 0x000084, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_real_Variable_20' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_real_Variable_21) == 0x000088, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_real_Variable_21' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, K2Node_Select_Default_3) == 0x00008C, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, K2Node_Select_Default_4) == 0x000090, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_bool_Variable_1) == 0x000094, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000098, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, K2Node_Select_Default_5) == 0x0000A0, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_real_Variable_22) == 0x0000A4, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_real_Variable_22' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_bool_Variable_2) == 0x0000A8, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_real_Variable_23) == 0x0000AC, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_real_Variable_23' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, K2Node_Select_Default_6) == 0x0000B0, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, Temp_bool_Variable_3) == 0x0000B4, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, CallFunc_GetEffectMaterial_ReturnValue) == 0x0000B8, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::CallFunc_GetEffectMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, K2Node_Select_Default_7) == 0x0000C0, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(WBP_PictoIcon_C_LoadPassiveEffectLearnState, CallFunc_IsValid_ReturnValue) == 0x0000C4, "Member 'WBP_PictoIcon_C_LoadPassiveEffectLearnState::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

