#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ExplorationProgressionSystem

#include "Basic.hpp"

#include "BP_ExplorationProgressionSystem_classes.hpp"
#include "BP_ExplorationProgressionSystem_parameters.hpp"


namespace SDK
{

// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.DEBUG_LoadCVar_DamageLevel
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_ExplorationProgressionSystem_C::DEBUG_LoadCVar_DamageLevel(const class FString& InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationProgressionSystem_C", "DEBUG_LoadCVar_DamageLevel");

	Params::BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_DamageLevel Parms{};

	Parms.InputPin = std::move(InputPin);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.DEBUG_LoadCVar_UnlockedWorldMapCapacities
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    SourceString                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_ExplorationProgressionSystem_C::DEBUG_LoadCVar_UnlockedWorldMapCapacities(const class FString& SourceString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationProgressionSystem_C", "DEBUG_LoadCVar_UnlockedWorldMapCapacities");

	Params::BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities Parms{};

	Parms.SourceString = std::move(SourceString);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.DEBUG_LoadCVars
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_ExplorationProgressionSystem_C::DEBUG_LoadCVars()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationProgressionSystem_C", "DEBUG_LoadCVars");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.DEBUG_OnCVarChanged_AttackInWorld
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationProgressionSystem_C::DEBUG_OnCVarChanged_AttackInWorld(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationProgressionSystem_C", "DEBUG_OnCVarChanged_AttackInWorld");

	Params::BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_AttackInWorld Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.DEBUG_OnCVarChanged_Camp
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationProgressionSystem_C::DEBUG_OnCVarChanged_Camp(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationProgressionSystem_C", "DEBUG_OnCVarChanged_Camp");

	Params::BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_Camp Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.DEBUG_OnCVarChanged_DamageLevel
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_ExplorationProgressionSystem_C::DEBUG_OnCVarChanged_DamageLevel(const class FString& NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationProgressionSystem_C", "DEBUG_OnCVarChanged_DamageLevel");

	Params::BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_DamageLevel Parms{};

	Parms.NewValue = std::move(NewValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.DEBUG_OnCVarChanged_FreeAim
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationProgressionSystem_C::DEBUG_OnCVarChanged_FreeAim(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationProgressionSystem_C", "DEBUG_OnCVarChanged_FreeAim");

	Params::BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_FreeAim Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.DEBUG_OnCVarChanged_GameMenu
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationProgressionSystem_C::DEBUG_OnCVarChanged_GameMenu(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationProgressionSystem_C", "DEBUG_OnCVarChanged_GameMenu");

	Params::BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_GameMenu Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.DEBUG_OnCVarChanged_Overlay
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationProgressionSystem_C::DEBUG_OnCVarChanged_Overlay(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationProgressionSystem_C", "DEBUG_OnCVarChanged_Overlay");

	Params::BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_Overlay Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.DEBUG_OnCVarChanged_Teleport
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationProgressionSystem_C::DEBUG_OnCVarChanged_Teleport(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationProgressionSystem_C", "DEBUG_OnCVarChanged_Teleport");

	Params::BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_Teleport Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.DEBUG_UnlockExplorationCapacity
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ExplorationCapacity                   Capacity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Unlocked                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationProgressionSystem_C::DEBUG_UnlockExplorationCapacity(E_ExplorationCapacity Capacity, bool Unlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationProgressionSystem_C", "DEBUG_UnlockExplorationCapacity");

	Params::BP_ExplorationProgressionSystem_C_DEBUG_UnlockExplorationCapacity Parms{};

	Parms.Capacity = Capacity;
	Parms.Unlocked = Unlocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.DEBUG_UnlockFreeAimDamageLevel
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DamageLevel                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationProgressionSystem_C::DEBUG_UnlockFreeAimDamageLevel(int32 DamageLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationProgressionSystem_C", "DEBUG_UnlockFreeAimDamageLevel");

	Params::BP_ExplorationProgressionSystem_C_DEBUG_UnlockFreeAimDamageLevel Parms{};

	Parms.DamageLevel = DamageLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.GetFreeAimDamageLevel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  FreeAimDamageLevel_0                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationProgressionSystem_C::GetFreeAimDamageLevel(int32* FreeAimDamageLevel_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationProgressionSystem_C", "GetFreeAimDamageLevel");

	Params::BP_ExplorationProgressionSystem_C_GetFreeAimDamageLevel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FreeAimDamageLevel_0 != nullptr)
		*FreeAimDamageLevel_0 = Parms.FreeAimDamageLevel_0;
}


// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.GetUnlockedExplorationCapacities
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<E_ExplorationCapacity>*          UnlockedExplorationCapacities_0                        (Parm, OutParm)

void UBP_ExplorationProgressionSystem_C::GetUnlockedExplorationCapacities(TArray<E_ExplorationCapacity>* UnlockedExplorationCapacities_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationProgressionSystem_C", "GetUnlockedExplorationCapacities");

	Params::BP_ExplorationProgressionSystem_C_GetUnlockedExplorationCapacities Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UnlockedExplorationCapacities_0 != nullptr)
		*UnlockedExplorationCapacities_0 = std::move(Parms.UnlockedExplorationCapacities_0);
}


// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.GetUnlockedWorldMapCapacities
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<E_WorldMapExplorationCapacity>*  UnlockedWorldMapCapacities_0                           (Parm, OutParm)

void UBP_ExplorationProgressionSystem_C::GetUnlockedWorldMapCapacities(TArray<E_WorldMapExplorationCapacity>* UnlockedWorldMapCapacities_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationProgressionSystem_C", "GetUnlockedWorldMapCapacities");

	Params::BP_ExplorationProgressionSystem_C_GetUnlockedWorldMapCapacities Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UnlockedWorldMapCapacities_0 != nullptr)
		*UnlockedWorldMapCapacities_0 = std::move(Parms.UnlockedWorldMapCapacities_0);
}


// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.Initialize
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ExplorationProgressionSystem_C::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationProgressionSystem_C", "Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.IsExplorationCapacityUnlocked
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_ExplorationCapacity                   Capacity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsUnlocked                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationProgressionSystem_C::IsExplorationCapacityUnlocked(E_ExplorationCapacity Capacity, bool* IsUnlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationProgressionSystem_C", "IsExplorationCapacityUnlocked");

	Params::BP_ExplorationProgressionSystem_C_IsExplorationCapacityUnlocked Parms{};

	Parms.Capacity = Capacity;

	UObject::ProcessEvent(Func, &Parms);

	if (IsUnlocked != nullptr)
		*IsUnlocked = Parms.IsUnlocked;
}


// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.IsFreeAimTeleportUnlocked
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   FreeAimTeleportUnlocked                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationProgressionSystem_C::IsFreeAimTeleportUnlocked(bool* FreeAimTeleportUnlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationProgressionSystem_C", "IsFreeAimTeleportUnlocked");

	Params::BP_ExplorationProgressionSystem_C_IsFreeAimTeleportUnlocked Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FreeAimTeleportUnlocked != nullptr)
		*FreeAimTeleportUnlocked = Parms.FreeAimTeleportUnlocked;
}


// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.IsWorldMapCapacityUnlocked
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_WorldMapExplorationCapacity           Capacity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsUnlocked                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationProgressionSystem_C::IsWorldMapCapacityUnlocked(E_WorldMapExplorationCapacity Capacity, bool* IsUnlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationProgressionSystem_C", "IsWorldMapCapacityUnlocked");

	Params::BP_ExplorationProgressionSystem_C_IsWorldMapCapacityUnlocked Parms{};

	Parms.Capacity = Capacity;

	UObject::ProcessEvent(Func, &Parms);

	if (IsUnlocked != nullptr)
		*IsUnlocked = Parms.IsUnlocked;
}


// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.LoadState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FFExplorationProgression_SaveState&State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_ExplorationProgressionSystem_C::LoadState(const struct FFExplorationProgression_SaveState& State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationProgressionSystem_C", "LoadState");

	Params::BP_ExplorationProgressionSystem_C_LoadState Parms{};

	Parms.State = std::move(State);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.ResetState
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ExplorationProgressionSystem_C::ResetState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationProgressionSystem_C", "ResetState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.SaveState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFExplorationProgression_SaveState&State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UBP_ExplorationProgressionSystem_C::SaveState(struct FFExplorationProgression_SaveState& State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationProgressionSystem_C", "SaveState");

	Params::BP_ExplorationProgressionSystem_C_SaveState Parms{};

	Parms.State = std::move(State);

	UObject::ProcessEvent(Func, &Parms);

	State = std::move(Parms.State);
}


// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.SetExplorationCapacityUnlocked
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ExplorationCapacity                   Capacity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Unlocked                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationProgressionSystem_C::SetExplorationCapacityUnlocked(E_ExplorationCapacity Capacity, bool Unlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationProgressionSystem_C", "SetExplorationCapacityUnlocked");

	Params::BP_ExplorationProgressionSystem_C_SetExplorationCapacityUnlocked Parms{};

	Parms.Capacity = Capacity;
	Parms.Unlocked = Unlocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.UnlockFreeAimDamageLevel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DamageLevel                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExplorationProgressionSystem_C::UnlockFreeAimDamageLevel(int32 DamageLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationProgressionSystem_C", "UnlockFreeAimDamageLevel");

	Params::BP_ExplorationProgressionSystem_C_UnlockFreeAimDamageLevel Parms{};

	Parms.DamageLevel = DamageLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.UnlockFreeAimTeleport
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ExplorationProgressionSystem_C::UnlockFreeAimTeleport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationProgressionSystem_C", "UnlockFreeAimTeleport");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.UnlockWorldMapCapacities
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<E_WorldMapExplorationCapacity>&  Capacities                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_ExplorationProgressionSystem_C::UnlockWorldMapCapacities(TArray<E_WorldMapExplorationCapacity>& Capacities)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExplorationProgressionSystem_C", "UnlockWorldMapCapacities");

	Params::BP_ExplorationProgressionSystem_C_UnlockWorldMapCapacities Parms{};

	Parms.Capacities = std::move(Capacities);

	UObject::ProcessEvent(Func, &Parms);

	Capacities = std::move(Parms.Capacities);
}

}

