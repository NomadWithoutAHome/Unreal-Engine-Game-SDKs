#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Dialogue_ChoiceOption

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_Dialogue_ChoiceOption.WBP_Dialogue_ChoiceOption_C.ExecuteUbergraph_WBP_Dialogue_ChoiceOption
// 0x0018 (0x0018 - 0x0000)
struct WBP_Dialogue_ChoiceOption_C_ExecuteUbergraph_WBP_Dialogue_ChoiceOption final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UBP_UINavigationFocusEvent_C*     K2Node_Event_FocusEventBP;                         // 0x0008(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInGamepadOrKeyboardNavigationMode_ReturnValue; // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Dialogue_ChoiceOption_C_ExecuteUbergraph_WBP_Dialogue_ChoiceOption) == 0x000008, "Wrong alignment on WBP_Dialogue_ChoiceOption_C_ExecuteUbergraph_WBP_Dialogue_ChoiceOption");
static_assert(sizeof(WBP_Dialogue_ChoiceOption_C_ExecuteUbergraph_WBP_Dialogue_ChoiceOption) == 0x000018, "Wrong size on WBP_Dialogue_ChoiceOption_C_ExecuteUbergraph_WBP_Dialogue_ChoiceOption");
static_assert(offsetof(WBP_Dialogue_ChoiceOption_C_ExecuteUbergraph_WBP_Dialogue_ChoiceOption, EntryPoint) == 0x000000, "Member 'WBP_Dialogue_ChoiceOption_C_ExecuteUbergraph_WBP_Dialogue_ChoiceOption::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Dialogue_ChoiceOption_C_ExecuteUbergraph_WBP_Dialogue_ChoiceOption, K2Node_Event_FocusEventBP) == 0x000008, "Member 'WBP_Dialogue_ChoiceOption_C_ExecuteUbergraph_WBP_Dialogue_ChoiceOption::K2Node_Event_FocusEventBP' has a wrong offset!");
static_assert(offsetof(WBP_Dialogue_ChoiceOption_C_ExecuteUbergraph_WBP_Dialogue_ChoiceOption, K2Node_Event_IsDesignTime) == 0x000010, "Member 'WBP_Dialogue_ChoiceOption_C_ExecuteUbergraph_WBP_Dialogue_ChoiceOption::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Dialogue_ChoiceOption_C_ExecuteUbergraph_WBP_Dialogue_ChoiceOption, CallFunc_IsInGamepadOrKeyboardNavigationMode_ReturnValue) == 0x000011, "Member 'WBP_Dialogue_ChoiceOption_C_ExecuteUbergraph_WBP_Dialogue_ChoiceOption::CallFunc_IsInGamepadOrKeyboardNavigationMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Dialogue_ChoiceOption_C_ExecuteUbergraph_WBP_Dialogue_ChoiceOption, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'WBP_Dialogue_ChoiceOption_C_ExecuteUbergraph_WBP_Dialogue_ChoiceOption::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_Dialogue_ChoiceOption.WBP_Dialogue_ChoiceOption_C.GetTiedObject
// 0x0008 (0x0008 - 0x0000)
struct WBP_Dialogue_ChoiceOption_C_GetTiedObject final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Dialogue_ChoiceOption_C_GetTiedObject) == 0x000008, "Wrong alignment on WBP_Dialogue_ChoiceOption_C_GetTiedObject");
static_assert(sizeof(WBP_Dialogue_ChoiceOption_C_GetTiedObject) == 0x000008, "Wrong size on WBP_Dialogue_ChoiceOption_C_GetTiedObject");
static_assert(offsetof(WBP_Dialogue_ChoiceOption_C_GetTiedObject, Object) == 0x000000, "Member 'WBP_Dialogue_ChoiceOption_C_GetTiedObject::Object' has a wrong offset!");

// Function WBP_Dialogue_ChoiceOption.WBP_Dialogue_ChoiceOption_C.OnUINavigationFocus
// 0x0008 (0x0008 - 0x0000)
struct WBP_Dialogue_ChoiceOption_C_OnUINavigationFocus final
{
public:
	const class UBP_UINavigationFocusEvent_C*     FocusEventBP;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Dialogue_ChoiceOption_C_OnUINavigationFocus) == 0x000008, "Wrong alignment on WBP_Dialogue_ChoiceOption_C_OnUINavigationFocus");
static_assert(sizeof(WBP_Dialogue_ChoiceOption_C_OnUINavigationFocus) == 0x000008, "Wrong size on WBP_Dialogue_ChoiceOption_C_OnUINavigationFocus");
static_assert(offsetof(WBP_Dialogue_ChoiceOption_C_OnUINavigationFocus, FocusEventBP) == 0x000000, "Member 'WBP_Dialogue_ChoiceOption_C_OnUINavigationFocus::FocusEventBP' has a wrong offset!");

// Function WBP_Dialogue_ChoiceOption.WBP_Dialogue_ChoiceOption_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Dialogue_ChoiceOption_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Dialogue_ChoiceOption_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Dialogue_ChoiceOption_C_PreConstruct");
static_assert(sizeof(WBP_Dialogue_ChoiceOption_C_PreConstruct) == 0x000001, "Wrong size on WBP_Dialogue_ChoiceOption_C_PreConstruct");
static_assert(offsetof(WBP_Dialogue_ChoiceOption_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Dialogue_ChoiceOption_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Dialogue_ChoiceOption.WBP_Dialogue_ChoiceOption_C.SetOptionTextColor
// 0x0040 (0x0040 - 0x0000)
struct WBP_Dialogue_ChoiceOption_C_SetOptionTextColor final
{
public:
	bool                                          bIsEnabled_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0004(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0018(0x0014)()
	struct FSlateColor                            K2Node_Select_Default;                             // 0x002C(0x0014)()
};
static_assert(alignof(WBP_Dialogue_ChoiceOption_C_SetOptionTextColor) == 0x000004, "Wrong alignment on WBP_Dialogue_ChoiceOption_C_SetOptionTextColor");
static_assert(sizeof(WBP_Dialogue_ChoiceOption_C_SetOptionTextColor) == 0x000040, "Wrong size on WBP_Dialogue_ChoiceOption_C_SetOptionTextColor");
static_assert(offsetof(WBP_Dialogue_ChoiceOption_C_SetOptionTextColor, bIsEnabled_0) == 0x000000, "Member 'WBP_Dialogue_ChoiceOption_C_SetOptionTextColor::bIsEnabled_0' has a wrong offset!");
static_assert(offsetof(WBP_Dialogue_ChoiceOption_C_SetOptionTextColor, Temp_bool_Variable) == 0x000001, "Member 'WBP_Dialogue_ChoiceOption_C_SetOptionTextColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Dialogue_ChoiceOption_C_SetOptionTextColor, K2Node_MakeStruct_SlateColor) == 0x000004, "Member 'WBP_Dialogue_ChoiceOption_C_SetOptionTextColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_Dialogue_ChoiceOption_C_SetOptionTextColor, K2Node_MakeStruct_SlateColor_1) == 0x000018, "Member 'WBP_Dialogue_ChoiceOption_C_SetOptionTextColor::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_Dialogue_ChoiceOption_C_SetOptionTextColor, K2Node_Select_Default) == 0x00002C, "Member 'WBP_Dialogue_ChoiceOption_C_SetOptionTextColor::K2Node_Select_Default' has a wrong offset!");

}

