#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_StanceMechanicComponent

#include "Basic.hpp"

#include "E_StanceType_structs.hpp"
#include "Engine_structs.hpp"
#include "E_EnemyIdleState_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.CreatePortraitWidget
// 0x0020 (0x0020 - 0x0000)
struct BP_StanceMechanicComponent_C_CreatePortraitWidget final
{
public:
	class UUserWidget*                            CreatedUserWidget;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotIndex;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_PortraitUniqueMechanic_Stances_C*  CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StanceMechanicComponent_C_CreatePortraitWidget) == 0x000008, "Wrong alignment on BP_StanceMechanicComponent_C_CreatePortraitWidget");
static_assert(sizeof(BP_StanceMechanicComponent_C_CreatePortraitWidget) == 0x000020, "Wrong size on BP_StanceMechanicComponent_C_CreatePortraitWidget");
static_assert(offsetof(BP_StanceMechanicComponent_C_CreatePortraitWidget, CreatedUserWidget) == 0x000000, "Member 'BP_StanceMechanicComponent_C_CreatePortraitWidget::CreatedUserWidget' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_CreatePortraitWidget, SlotIndex) == 0x000008, "Member 'BP_StanceMechanicComponent_C_CreatePortraitWidget::SlotIndex' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_CreatePortraitWidget, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_StanceMechanicComponent_C_CreatePortraitWidget::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_CreatePortraitWidget, CallFunc_Create_ReturnValue) == 0x000018, "Member 'BP_StanceMechanicComponent_C_CreatePortraitWidget::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.ExecuteUbergraph_BP_StanceMechanicComponent
// 0x00C8 (0x00C8 - 0x0000)
struct BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  CallFunc_SwitchStance_NewStance;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_StanceMechanicComponent_C*         CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool Victory)>                 K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  Temp_byte_Variable_1;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  Temp_byte_Variable_2;                              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  Temp_byte_Variable_3;                              // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  Temp_byte_Variable_4;                              // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  K2Node_CustomEvent_Stance;                         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  CallFunc_SwitchStance_NewStance_1;                 // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Victory;                        // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_BattleManagerReference;  // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_BattleManagerReference_1; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0074(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0084(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base_1; // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base_2; // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  K2Node_Select_Default;                             // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  CallFunc_SwitchStance_NewStance_2;                 // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent) == 0x000008, "Wrong alignment on BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent");
static_assert(sizeof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent) == 0x0000C8, "Wrong size on BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent");
static_assert(offsetof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent, EntryPoint) == 0x000000, "Member 'BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent, CallFunc_SwitchStance_NewStance) == 0x000004, "Member 'BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent::CallFunc_SwitchStance_NewStance' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent, CallFunc_Create_ReturnValue) == 0x000008, "Member 'BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent, Temp_byte_Variable) == 0x000020, "Member 'BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent, Temp_byte_Variable_1) == 0x000034, "Member 'BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent, Temp_byte_Variable_2) == 0x000035, "Member 'BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent, Temp_byte_Variable_3) == 0x000036, "Member 'BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent, Temp_byte_Variable_4) == 0x000037, "Member 'BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent, K2Node_CustomEvent_Stance) == 0x000038, "Member 'BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent::K2Node_CustomEvent_Stance' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent, K2Node_CreateDelegate_OutputDelegate_2) == 0x00003C, "Member 'BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent, CallFunc_SwitchStance_NewStance_1) == 0x00004C, "Member 'BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent::CallFunc_SwitchStance_NewStance_1' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent, K2Node_CustomEvent_Victory) == 0x00004D, "Member 'BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent::K2Node_CustomEvent_Victory' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent, CallFunc_GetBattleManager_BattleManagerReference) == 0x000050, "Member 'BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent::CallFunc_GetBattleManager_BattleManagerReference' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent, CallFunc_GetOwner_ReturnValue) == 0x000058, "Member 'BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent, CallFunc_GetBattleManager_BattleManagerReference_1) == 0x000060, "Member 'BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent::CallFunc_GetBattleManager_BattleManagerReference_1' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent, K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base) == 0x000068, "Member 'BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent::K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent, K2Node_CreateDelegate_OutputDelegate_3) == 0x000074, "Member 'BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent, K2Node_CreateDelegate_OutputDelegate_4) == 0x000084, "Member 'BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent, CallFunc_GetOwner_ReturnValue_1) == 0x000098, "Member 'BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent, K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base_1) == 0x0000A0, "Member 'BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent::K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base_1' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent, K2Node_Event_EndPlayReason) == 0x0000A9, "Member 'BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent, CallFunc_GetOwner_ReturnValue_2) == 0x0000B0, "Member 'BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent, K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base_2) == 0x0000B8, "Member 'BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent::K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base_2' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent, K2Node_DynamicCast_bSuccess_2) == 0x0000C0, "Member 'BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent, K2Node_Select_Default) == 0x0000C1, "Member 'BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent, CallFunc_SwitchStance_NewStance_2) == 0x0000C2, "Member 'BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent::CallFunc_SwitchStance_NewStance_2' has a wrong offset!");

// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.GetBattleManager
// 0x0020 (0x0020 - 0x0000)
struct BP_StanceMechanicComponent_C_GetBattleManager final
{
public:
	class UAC_jRPG_BattleManager_C*               BattleManagerReference;                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StanceMechanicComponent_C_GetBattleManager) == 0x000008, "Wrong alignment on BP_StanceMechanicComponent_C_GetBattleManager");
static_assert(sizeof(BP_StanceMechanicComponent_C_GetBattleManager) == 0x000020, "Wrong size on BP_StanceMechanicComponent_C_GetBattleManager");
static_assert(offsetof(BP_StanceMechanicComponent_C_GetBattleManager, BattleManagerReference) == 0x000000, "Member 'BP_StanceMechanicComponent_C_GetBattleManager::BattleManagerReference' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_GetBattleManager, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_StanceMechanicComponent_C_GetBattleManager::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_GetBattleManager, K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base) == 0x000010, "Member 'BP_StanceMechanicComponent_C_GetBattleManager::K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_GetBattleManager, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_StanceMechanicComponent_C_GetBattleManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.GetNextStance
// 0x0003 (0x0003 - 0x0000)
struct BP_StanceMechanicComponent_C_GetNextStance final
{
public:
	E_StanceType                                  DesiredStance;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  NewStance;                                         // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StanceMechanicComponent_C_GetNextStance) == 0x000001, "Wrong alignment on BP_StanceMechanicComponent_C_GetNextStance");
static_assert(sizeof(BP_StanceMechanicComponent_C_GetNextStance) == 0x000003, "Wrong size on BP_StanceMechanicComponent_C_GetNextStance");
static_assert(offsetof(BP_StanceMechanicComponent_C_GetNextStance, DesiredStance) == 0x000000, "Member 'BP_StanceMechanicComponent_C_GetNextStance::DesiredStance' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_GetNextStance, NewStance) == 0x000001, "Member 'BP_StanceMechanicComponent_C_GetNextStance::NewStance' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_GetNextStance, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_StanceMechanicComponent_C_GetNextStance::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.IsStanceSwitchValid
// 0x0008 (0x0008 - 0x0000)
struct BP_StanceMechanicComponent_C_IsStanceSwitchValid final
{
public:
	E_StanceType                                  ItemToFind;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInSimulateMode_ReturnValue;             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StanceMechanicComponent_C_IsStanceSwitchValid) == 0x000001, "Wrong alignment on BP_StanceMechanicComponent_C_IsStanceSwitchValid");
static_assert(sizeof(BP_StanceMechanicComponent_C_IsStanceSwitchValid) == 0x000008, "Wrong size on BP_StanceMechanicComponent_C_IsStanceSwitchValid");
static_assert(offsetof(BP_StanceMechanicComponent_C_IsStanceSwitchValid, ItemToFind) == 0x000000, "Member 'BP_StanceMechanicComponent_C_IsStanceSwitchValid::ItemToFind' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_IsStanceSwitchValid, Valid) == 0x000001, "Member 'BP_StanceMechanicComponent_C_IsStanceSwitchValid::Valid' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_IsStanceSwitchValid, CallFunc_MakeLiteralByte_ReturnValue) == 0x000002, "Member 'BP_StanceMechanicComponent_C_IsStanceSwitchValid::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_IsStanceSwitchValid, CallFunc_IsInSimulateMode_ReturnValue) == 0x000003, "Member 'BP_StanceMechanicComponent_C_IsStanceSwitchValid::CallFunc_IsInSimulateMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_IsStanceSwitchValid, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'BP_StanceMechanicComponent_C_IsStanceSwitchValid::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_IsStanceSwitchValid, CallFunc_Array_Contains_ReturnValue) == 0x000005, "Member 'BP_StanceMechanicComponent_C_IsStanceSwitchValid::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_IsStanceSwitchValid, CallFunc_BooleanOR_ReturnValue) == 0x000006, "Member 'BP_StanceMechanicComponent_C_IsStanceSwitchValid::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_IsStanceSwitchValid, CallFunc_BooleanOR_ReturnValue_1) == 0x000007, "Member 'BP_StanceMechanicComponent_C_IsStanceSwitchValid::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.OnBattleFinished_Event_0
// 0x0001 (0x0001 - 0x0000)
struct BP_StanceMechanicComponent_C_OnBattleFinished_Event_0 final
{
public:
	bool                                          Victory;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StanceMechanicComponent_C_OnBattleFinished_Event_0) == 0x000001, "Wrong alignment on BP_StanceMechanicComponent_C_OnBattleFinished_Event_0");
static_assert(sizeof(BP_StanceMechanicComponent_C_OnBattleFinished_Event_0) == 0x000001, "Wrong size on BP_StanceMechanicComponent_C_OnBattleFinished_Event_0");
static_assert(offsetof(BP_StanceMechanicComponent_C_OnBattleFinished_Event_0, Victory) == 0x000000, "Member 'BP_StanceMechanicComponent_C_OnBattleFinished_Event_0::Victory' has a wrong offset!");

// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.OnTurnEnd
// 0x0003 (0x0003 - 0x0000)
struct BP_StanceMechanicComponent_C_OnTurnEnd final
{
public:
	E_StanceType                                  CallFunc_SwitchStance_NewStance;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  CallFunc_SwitchStance_NewStance_1;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StanceMechanicComponent_C_OnTurnEnd) == 0x000001, "Wrong alignment on BP_StanceMechanicComponent_C_OnTurnEnd");
static_assert(sizeof(BP_StanceMechanicComponent_C_OnTurnEnd) == 0x000003, "Wrong size on BP_StanceMechanicComponent_C_OnTurnEnd");
static_assert(offsetof(BP_StanceMechanicComponent_C_OnTurnEnd, CallFunc_SwitchStance_NewStance) == 0x000000, "Member 'BP_StanceMechanicComponent_C_OnTurnEnd::CallFunc_SwitchStance_NewStance' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_OnTurnEnd, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_StanceMechanicComponent_C_OnTurnEnd::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_OnTurnEnd, CallFunc_SwitchStance_NewStance_1) == 0x000002, "Member 'BP_StanceMechanicComponent_C_OnTurnEnd::CallFunc_SwitchStance_NewStance_1' has a wrong offset!");

// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.OverrideSwitchStanceOnBaseAttack
// 0x0001 (0x0001 - 0x0000)
struct BP_StanceMechanicComponent_C_OverrideSwitchStanceOnBaseAttack final
{
public:
	E_StanceType                                  AttackTurnEndStanceSwitch_0;                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StanceMechanicComponent_C_OverrideSwitchStanceOnBaseAttack) == 0x000001, "Wrong alignment on BP_StanceMechanicComponent_C_OverrideSwitchStanceOnBaseAttack");
static_assert(sizeof(BP_StanceMechanicComponent_C_OverrideSwitchStanceOnBaseAttack) == 0x000001, "Wrong size on BP_StanceMechanicComponent_C_OverrideSwitchStanceOnBaseAttack");
static_assert(offsetof(BP_StanceMechanicComponent_C_OverrideSwitchStanceOnBaseAttack, AttackTurnEndStanceSwitch_0) == 0x000000, "Member 'BP_StanceMechanicComponent_C_OverrideSwitchStanceOnBaseAttack::AttackTurnEndStanceSwitch_0' has a wrong offset!");

// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_StanceMechanicComponent_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StanceMechanicComponent_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_StanceMechanicComponent_C_ReceiveEndPlay");
static_assert(sizeof(BP_StanceMechanicComponent_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_StanceMechanicComponent_C_ReceiveEndPlay");
static_assert(offsetof(BP_StanceMechanicComponent_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_StanceMechanicComponent_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.Sandfall_SwitchStance
// 0x0001 (0x0001 - 0x0000)
struct BP_StanceMechanicComponent_C_Sandfall_SwitchStance final
{
public:
	E_StanceType                                  Stance;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StanceMechanicComponent_C_Sandfall_SwitchStance) == 0x000001, "Wrong alignment on BP_StanceMechanicComponent_C_Sandfall_SwitchStance");
static_assert(sizeof(BP_StanceMechanicComponent_C_Sandfall_SwitchStance) == 0x000001, "Wrong size on BP_StanceMechanicComponent_C_Sandfall_SwitchStance");
static_assert(offsetof(BP_StanceMechanicComponent_C_Sandfall_SwitchStance, Stance) == 0x000000, "Member 'BP_StanceMechanicComponent_C_Sandfall_SwitchStance::Stance' has a wrong offset!");

// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.SetIsStanceChangeFromSkill
// 0x0001 (0x0001 - 0x0000)
struct BP_StanceMechanicComponent_C_SetIsStanceChangeFromSkill final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StanceMechanicComponent_C_SetIsStanceChangeFromSkill) == 0x000001, "Wrong alignment on BP_StanceMechanicComponent_C_SetIsStanceChangeFromSkill");
static_assert(sizeof(BP_StanceMechanicComponent_C_SetIsStanceChangeFromSkill) == 0x000001, "Wrong size on BP_StanceMechanicComponent_C_SetIsStanceChangeFromSkill");
static_assert(offsetof(BP_StanceMechanicComponent_C_SetIsStanceChangeFromSkill, Value) == 0x000000, "Member 'BP_StanceMechanicComponent_C_SetIsStanceChangeFromSkill::Value' has a wrong offset!");

// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.Stanceless
// 0x0001 (0x0001 - 0x0000)
struct BP_StanceMechanicComponent_C_Stanceless final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StanceMechanicComponent_C_Stanceless) == 0x000001, "Wrong alignment on BP_StanceMechanicComponent_C_Stanceless");
static_assert(sizeof(BP_StanceMechanicComponent_C_Stanceless) == 0x000001, "Wrong size on BP_StanceMechanicComponent_C_Stanceless");
static_assert(offsetof(BP_StanceMechanicComponent_C_Stanceless, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_StanceMechanicComponent_C_Stanceless::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.SwitchStance
// 0x0208 (0x0208 - 0x0000)
struct BP_StanceMechanicComponent_C_SwitchStance final
{
public:
	E_StanceType                                  Stance;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ResetToNoStanceIfSameStance;                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldPlayVFX;                                     // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  NewStance;                                         // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        NewLocalVar_0;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  local_previousState;                               // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStanceSwitchValid_Valid;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0048)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0010)()
	int32                                         Temp_int_Variable_2;                               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  Temp_byte_Variable;                                // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  Temp_byte_Variable_1;                              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    Temp_class_Variable;                               // 0x0100(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    Temp_class_Variable_1;                             // 0x0108(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    Temp_class_Variable_2;                             // 0x0110(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    Temp_class_Variable_3;                             // 0x0118(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base; // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13B[0x5];                                      // 0x013B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base_1; // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  Temp_byte_Variable_2;                              // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18A[0x2];                                      // 0x018A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base_2; // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  CallFunc_On_Stance_Change_NewStance1;              // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  CallFunc_On_Stance_Change_PreviousStance1;         // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x01A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_3;                              // 0x01A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base_3; // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    K2Node_Select_Default_2;                           // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Battle_Buff_Stance_Base; // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_4;                              // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA[0x6];                                      // 0x01DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleBuff_Stance_Base_C*           CallFunc_SpawnObject_ReturnValue;                  // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleBuffInstanceWrapper_C*        CallFunc_ActivateBuff_BuffInstanceWrapper;         // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActivateBuff_Success;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x01F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_5;                              // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x01F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x01F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_6;                              // 0x01F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  Temp_byte_Variable_7;                              // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              K2Node_Select_Default_3;                           // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FA[0x2];                                      // 0x01FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetCurrentIdleState_AnimMontageDuration;  // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StanceMechanicComponent_C_SwitchStance) == 0x000008, "Wrong alignment on BP_StanceMechanicComponent_C_SwitchStance");
static_assert(sizeof(BP_StanceMechanicComponent_C_SwitchStance) == 0x000208, "Wrong size on BP_StanceMechanicComponent_C_SwitchStance");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, Stance) == 0x000000, "Member 'BP_StanceMechanicComponent_C_SwitchStance::Stance' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, ResetToNoStanceIfSameStance) == 0x000001, "Member 'BP_StanceMechanicComponent_C_SwitchStance::ResetToNoStanceIfSameStance' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, ShouldPlayVFX) == 0x000002, "Member 'BP_StanceMechanicComponent_C_SwitchStance::ShouldPlayVFX' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, NewStance) == 0x000003, "Member 'BP_StanceMechanicComponent_C_SwitchStance::NewStance' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, NewLocalVar_0) == 0x000008, "Member 'BP_StanceMechanicComponent_C_SwitchStance::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, local_previousState) == 0x000010, "Member 'BP_StanceMechanicComponent_C_SwitchStance::local_previousState' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, Temp_int_Variable) == 0x000014, "Member 'BP_StanceMechanicComponent_C_SwitchStance::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000018, "Member 'BP_StanceMechanicComponent_C_SwitchStance::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, CallFunc_IsStanceSwitchValid_Valid) == 0x000028, "Member 'BP_StanceMechanicComponent_C_SwitchStance::CallFunc_IsStanceSwitchValid_Valid' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'BP_StanceMechanicComponent_C_SwitchStance::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'BP_StanceMechanicComponent_C_SwitchStance::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, Temp_int_Variable_1) == 0x000088, "Member 'BP_StanceMechanicComponent_C_SwitchStance::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, K2Node_MakeArray_Array) == 0x000090, "Member 'BP_StanceMechanicComponent_C_SwitchStance::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'BP_StanceMechanicComponent_C_SwitchStance::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, Temp_int_Variable_2) == 0x0000B0, "Member 'BP_StanceMechanicComponent_C_SwitchStance::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, Temp_byte_Variable) == 0x0000B4, "Member 'BP_StanceMechanicComponent_C_SwitchStance::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, Temp_struct_Variable) == 0x0000B8, "Member 'BP_StanceMechanicComponent_C_SwitchStance::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, Temp_struct_Variable_1) == 0x0000C8, "Member 'BP_StanceMechanicComponent_C_SwitchStance::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, Temp_struct_Variable_2) == 0x0000D8, "Member 'BP_StanceMechanicComponent_C_SwitchStance::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, Temp_struct_Variable_3) == 0x0000E8, "Member 'BP_StanceMechanicComponent_C_SwitchStance::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, Temp_byte_Variable_1) == 0x0000F8, "Member 'BP_StanceMechanicComponent_C_SwitchStance::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, Temp_class_Variable) == 0x000100, "Member 'BP_StanceMechanicComponent_C_SwitchStance::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, Temp_class_Variable_1) == 0x000108, "Member 'BP_StanceMechanicComponent_C_SwitchStance::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, Temp_class_Variable_2) == 0x000110, "Member 'BP_StanceMechanicComponent_C_SwitchStance::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, Temp_class_Variable_3) == 0x000118, "Member 'BP_StanceMechanicComponent_C_SwitchStance::Temp_class_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, CallFunc_GetOwner_ReturnValue) == 0x000120, "Member 'BP_StanceMechanicComponent_C_SwitchStance::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, Temp_int_Variable_3) == 0x000128, "Member 'BP_StanceMechanicComponent_C_SwitchStance::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base) == 0x000130, "Member 'BP_StanceMechanicComponent_C_SwitchStance::K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, K2Node_DynamicCast_bSuccess) == 0x000138, "Member 'BP_StanceMechanicComponent_C_SwitchStance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000139, "Member 'BP_StanceMechanicComponent_C_SwitchStance::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, K2Node_SwitchEnum_CmpSuccess) == 0x00013A, "Member 'BP_StanceMechanicComponent_C_SwitchStance::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, CallFunc_GetOwner_ReturnValue_1) == 0x000140, "Member 'BP_StanceMechanicComponent_C_SwitchStance::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, K2Node_Select_Default) == 0x000148, "Member 'BP_StanceMechanicComponent_C_SwitchStance::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base_1) == 0x000158, "Member 'BP_StanceMechanicComponent_C_SwitchStance::K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base_1' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, K2Node_DynamicCast_bSuccess_1) == 0x000160, "Member 'BP_StanceMechanicComponent_C_SwitchStance::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, CallFunc_GetSocketLocation_ReturnValue) == 0x000168, "Member 'BP_StanceMechanicComponent_C_SwitchStance::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000180, "Member 'BP_StanceMechanicComponent_C_SwitchStance::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, Temp_byte_Variable_2) == 0x000188, "Member 'BP_StanceMechanicComponent_C_SwitchStance::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, CallFunc_Not_PreBool_ReturnValue) == 0x000189, "Member 'BP_StanceMechanicComponent_C_SwitchStance::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, K2Node_Select_Default_1) == 0x00018C, "Member 'BP_StanceMechanicComponent_C_SwitchStance::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, CallFunc_GetOwner_ReturnValue_2) == 0x000190, "Member 'BP_StanceMechanicComponent_C_SwitchStance::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base_2) == 0x000198, "Member 'BP_StanceMechanicComponent_C_SwitchStance::K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base_2' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, K2Node_DynamicCast_bSuccess_2) == 0x0001A0, "Member 'BP_StanceMechanicComponent_C_SwitchStance::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, CallFunc_BooleanOR_ReturnValue) == 0x0001A1, "Member 'BP_StanceMechanicComponent_C_SwitchStance::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, CallFunc_BooleanOR_ReturnValue_1) == 0x0001A2, "Member 'BP_StanceMechanicComponent_C_SwitchStance::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001A3, "Member 'BP_StanceMechanicComponent_C_SwitchStance::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, CallFunc_On_Stance_Change_NewStance1) == 0x0001A4, "Member 'BP_StanceMechanicComponent_C_SwitchStance::CallFunc_On_Stance_Change_NewStance1' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, CallFunc_On_Stance_Change_PreviousStance1) == 0x0001A5, "Member 'BP_StanceMechanicComponent_C_SwitchStance::CallFunc_On_Stance_Change_PreviousStance1' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, K2Node_SwitchEnum_CmpSuccess_1) == 0x0001A6, "Member 'BP_StanceMechanicComponent_C_SwitchStance::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, Temp_byte_Variable_3) == 0x0001A7, "Member 'BP_StanceMechanicComponent_C_SwitchStance::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0001A8, "Member 'BP_StanceMechanicComponent_C_SwitchStance::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, CallFunc_GetOwner_ReturnValue_3) == 0x0001B0, "Member 'BP_StanceMechanicComponent_C_SwitchStance::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base_3) == 0x0001B8, "Member 'BP_StanceMechanicComponent_C_SwitchStance::K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base_3' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, K2Node_DynamicCast_bSuccess_3) == 0x0001C0, "Member 'BP_StanceMechanicComponent_C_SwitchStance::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, K2Node_Select_Default_2) == 0x0001C8, "Member 'BP_StanceMechanicComponent_C_SwitchStance::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, K2Node_ClassDynamicCast_AsBP_Battle_Buff_Stance_Base) == 0x0001D0, "Member 'BP_StanceMechanicComponent_C_SwitchStance::K2Node_ClassDynamicCast_AsBP_Battle_Buff_Stance_Base' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, K2Node_ClassDynamicCast_bSuccess) == 0x0001D8, "Member 'BP_StanceMechanicComponent_C_SwitchStance::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, Temp_byte_Variable_4) == 0x0001D9, "Member 'BP_StanceMechanicComponent_C_SwitchStance::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, CallFunc_SpawnObject_ReturnValue) == 0x0001E0, "Member 'BP_StanceMechanicComponent_C_SwitchStance::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, CallFunc_ActivateBuff_BuffInstanceWrapper) == 0x0001E8, "Member 'BP_StanceMechanicComponent_C_SwitchStance::CallFunc_ActivateBuff_BuffInstanceWrapper' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, CallFunc_ActivateBuff_Success) == 0x0001F0, "Member 'BP_StanceMechanicComponent_C_SwitchStance::CallFunc_ActivateBuff_Success' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001F1, "Member 'BP_StanceMechanicComponent_C_SwitchStance::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0001F2, "Member 'BP_StanceMechanicComponent_C_SwitchStance::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0001F3, "Member 'BP_StanceMechanicComponent_C_SwitchStance::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, Temp_byte_Variable_5) == 0x0001F4, "Member 'BP_StanceMechanicComponent_C_SwitchStance::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, CallFunc_BooleanOR_ReturnValue_2) == 0x0001F5, "Member 'BP_StanceMechanicComponent_C_SwitchStance::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, CallFunc_BooleanOR_ReturnValue_3) == 0x0001F6, "Member 'BP_StanceMechanicComponent_C_SwitchStance::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, Temp_byte_Variable_6) == 0x0001F7, "Member 'BP_StanceMechanicComponent_C_SwitchStance::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, Temp_byte_Variable_7) == 0x0001F8, "Member 'BP_StanceMechanicComponent_C_SwitchStance::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, K2Node_Select_Default_3) == 0x0001F9, "Member 'BP_StanceMechanicComponent_C_SwitchStance::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, CallFunc_SetCurrentIdleState_AnimMontageDuration) == 0x0001FC, "Member 'BP_StanceMechanicComponent_C_SwitchStance::CallFunc_SetCurrentIdleState_AnimMontageDuration' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000200, "Member 'BP_StanceMechanicComponent_C_SwitchStance::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_StanceMechanicComponent_C_SwitchStance, CallFunc_IsValid_ReturnValue) == 0x000201, "Member 'BP_StanceMechanicComponent_C_SwitchStance::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.TryRemoveMechanicPanel
// 0x0001 (0x0001 - 0x0000)
struct BP_StanceMechanicComponent_C_TryRemoveMechanicPanel final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StanceMechanicComponent_C_TryRemoveMechanicPanel) == 0x000001, "Wrong alignment on BP_StanceMechanicComponent_C_TryRemoveMechanicPanel");
static_assert(sizeof(BP_StanceMechanicComponent_C_TryRemoveMechanicPanel) == 0x000001, "Wrong size on BP_StanceMechanicComponent_C_TryRemoveMechanicPanel");
static_assert(offsetof(BP_StanceMechanicComponent_C_TryRemoveMechanicPanel, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_StanceMechanicComponent_C_TryRemoveMechanicPanel::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

