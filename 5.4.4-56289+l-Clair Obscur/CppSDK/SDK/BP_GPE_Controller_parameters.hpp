#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GPE_Controller

#include "Basic.hpp"

#include "SandFall_structs.hpp"


namespace SDK::Params
{

// Function BP_GPE_Controller.BP_GPE_Controller_C.GPETrigger_GetGameplayElementsToActivate
// 0x0010 (0x0010 - 0x0000)
struct BP_GPE_Controller_C_GPETrigger_GetGameplayElementsToActivate final
{
public:
	struct FGPEInterfacesReferences               GameplayElementsToActivate;                        // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_GPE_Controller_C_GPETrigger_GetGameplayElementsToActivate) == 0x000008, "Wrong alignment on BP_GPE_Controller_C_GPETrigger_GetGameplayElementsToActivate");
static_assert(sizeof(BP_GPE_Controller_C_GPETrigger_GetGameplayElementsToActivate) == 0x000010, "Wrong size on BP_GPE_Controller_C_GPETrigger_GetGameplayElementsToActivate");
static_assert(offsetof(BP_GPE_Controller_C_GPETrigger_GetGameplayElementsToActivate, GameplayElementsToActivate) == 0x000000, "Member 'BP_GPE_Controller_C_GPETrigger_GetGameplayElementsToActivate::GameplayElementsToActivate' has a wrong offset!");

// Function BP_GPE_Controller.BP_GPE_Controller_C.GPE_GetActivationComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_GPE_Controller_C_GPE_GetActivationComponent final
{
public:
	class UBP_GPE_InternalActivationComponent_C*  ActivationComponent;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Controller_C_GPE_GetActivationComponent) == 0x000008, "Wrong alignment on BP_GPE_Controller_C_GPE_GetActivationComponent");
static_assert(sizeof(BP_GPE_Controller_C_GPE_GetActivationComponent) == 0x000008, "Wrong size on BP_GPE_Controller_C_GPE_GetActivationComponent");
static_assert(offsetof(BP_GPE_Controller_C_GPE_GetActivationComponent, ActivationComponent) == 0x000000, "Member 'BP_GPE_Controller_C_GPE_GetActivationComponent::ActivationComponent' has a wrong offset!");

}

