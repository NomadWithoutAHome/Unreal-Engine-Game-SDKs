#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattleBuffInstanceWrapper

#include "Basic.hpp"

#include "BP_BattleBuffInstanceWrapper_classes.hpp"
#include "BP_BattleBuffInstanceWrapper_parameters.hpp"


namespace SDK
{

// Function BP_BattleBuffInstanceWrapper.BP_BattleBuffInstanceWrapper_C.ActivateBuff
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*& TargetCharacterStats                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstanceWrapper_C::ActivateBuff(class UAC_jRPG_CharacterBattleStats_C*& TargetCharacterStats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstanceWrapper_C", "ActivateBuff");

	Params::BP_BattleBuffInstanceWrapper_C_ActivateBuff Parms{};

	Parms.TargetCharacterStats = TargetCharacterStats;

	UObject::ProcessEvent(Func, &Parms);

	TargetCharacterStats = Parms.TargetCharacterStats;
}


// Function BP_BattleBuffInstanceWrapper.BP_BattleBuffInstanceWrapper_C.ApplyBuffOnTurnEnd
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_BattleBuffInstanceWrapper_C::ApplyBuffOnTurnEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstanceWrapper_C", "ApplyBuffOnTurnEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleBuffInstanceWrapper.BP_BattleBuffInstanceWrapper_C.DeactivateBuff
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_BattleBuffInstanceWrapper_C::DeactivateBuff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstanceWrapper_C", "DeactivateBuff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleBuffInstanceWrapper.BP_BattleBuffInstanceWrapper_C.HasExpired
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   HasExpired_0                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstanceWrapper_C::HasExpired(bool* HasExpired_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstanceWrapper_C", "HasExpired");

	Params::BP_BattleBuffInstanceWrapper_C_HasExpired Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HasExpired_0 != nullptr)
		*HasExpired_0 = Parms.HasExpired_0;
}


// Function BP_BattleBuffInstanceWrapper.BP_BattleBuffInstanceWrapper_C.IsActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsActive_0                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstanceWrapper_C::IsActive(bool* IsActive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstanceWrapper_C", "IsActive");

	Params::BP_BattleBuffInstanceWrapper_C_IsActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsActive_0 != nullptr)
		*IsActive_0 = Parms.IsActive_0;
}


// Function BP_BattleBuffInstanceWrapper.BP_BattleBuffInstanceWrapper_C.OnCharacterTurnStart
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleBuffInstanceWrapper_C::OnCharacterTurnStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstanceWrapper_C", "OnCharacterTurnStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleBuffInstanceWrapper.BP_BattleBuffInstanceWrapper_C.ProcessDealtRawDamages
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_BattleDamages_C*&             BattleDamages                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstanceWrapper_C::ProcessDealtRawDamages(class UBP_BattleDamages_C*& BattleDamages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstanceWrapper_C", "ProcessDealtRawDamages");

	Params::BP_BattleBuffInstanceWrapper_C_ProcessDealtRawDamages Parms{};

	Parms.BattleDamages = BattleDamages;

	UObject::ProcessEvent(Func, &Parms);

	BattleDamages = Parms.BattleDamages;
}


// Function BP_BattleBuffInstanceWrapper.BP_BattleBuffInstanceWrapper_C.ProcessReceivedFinalDamages
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_BattleDamages_C*&             BattleDamages                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstanceWrapper_C::ProcessReceivedFinalDamages(class UBP_BattleDamages_C*& BattleDamages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstanceWrapper_C", "ProcessReceivedFinalDamages");

	Params::BP_BattleBuffInstanceWrapper_C_ProcessReceivedFinalDamages Parms{};

	Parms.BattleDamages = BattleDamages;

	UObject::ProcessEvent(Func, &Parms);

	BattleDamages = Parms.BattleDamages;
}


// Function BP_BattleBuffInstanceWrapper.BP_BattleBuffInstanceWrapper_C.ProcessReceivedRawDamages
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_BattleDamages_C*&             BattleDamages                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstanceWrapper_C::ProcessReceivedRawDamages(class UBP_BattleDamages_C*& BattleDamages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstanceWrapper_C", "ProcessReceivedRawDamages");

	Params::BP_BattleBuffInstanceWrapper_C_ProcessReceivedRawDamages Parms{};

	Parms.BattleDamages = BattleDamages;

	UObject::ProcessEvent(Func, &Parms);

	BattleDamages = Parms.BattleDamages;
}

}

