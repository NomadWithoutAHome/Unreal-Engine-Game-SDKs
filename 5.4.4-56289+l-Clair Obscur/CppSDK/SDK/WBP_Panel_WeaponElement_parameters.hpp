#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Panel_WeaponElement

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "S_jRPG_Item_DynamicData_structs.hpp"
#include "EWeaponQuality_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FEquipmentSlot_structs.hpp"


namespace SDK::Params
{

// Function WBP_Panel_WeaponElement.WBP_Panel_WeaponElement_C.BndEvt__WBP_Panel_PictosElement_BaseButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Panel_WeaponElement_C_BndEvt__WBP_Panel_PictosElement_BaseButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_WeaponElement_C_BndEvt__WBP_Panel_PictosElement_BaseButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Panel_WeaponElement_C_BndEvt__WBP_Panel_PictosElement_BaseButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_Panel_WeaponElement_C_BndEvt__WBP_Panel_PictosElement_BaseButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_Panel_WeaponElement_C_BndEvt__WBP_Panel_PictosElement_BaseButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_Panel_WeaponElement_C_BndEvt__WBP_Panel_PictosElement_BaseButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_Panel_WeaponElement_C_BndEvt__WBP_Panel_PictosElement_BaseButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_Panel_WeaponElement.WBP_Panel_WeaponElement_C.BndEvt__WBP_Panel_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_1_OnButtonBaseFocused__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Panel_WeaponElement_C_BndEvt__WBP_Panel_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_1_OnButtonBaseFocused__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_WeaponElement_C_BndEvt__WBP_Panel_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_1_OnButtonBaseFocused__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Panel_WeaponElement_C_BndEvt__WBP_Panel_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_1_OnButtonBaseFocused__DelegateSignature");
static_assert(sizeof(WBP_Panel_WeaponElement_C_BndEvt__WBP_Panel_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_1_OnButtonBaseFocused__DelegateSignature) == 0x000008, "Wrong size on WBP_Panel_WeaponElement_C_BndEvt__WBP_Panel_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_1_OnButtonBaseFocused__DelegateSignature");
static_assert(offsetof(WBP_Panel_WeaponElement_C_BndEvt__WBP_Panel_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_1_OnButtonBaseFocused__DelegateSignature, Button) == 0x000000, "Member 'WBP_Panel_WeaponElement_C_BndEvt__WBP_Panel_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_1_OnButtonBaseFocused__DelegateSignature::Button' has a wrong offset!");

// Function WBP_Panel_WeaponElement.WBP_Panel_WeaponElement_C.BndEvt__WBP_Panel_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_2_OnButtonBaseUnfocused__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Panel_WeaponElement_C_BndEvt__WBP_Panel_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_2_OnButtonBaseUnfocused__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_WeaponElement_C_BndEvt__WBP_Panel_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_2_OnButtonBaseUnfocused__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Panel_WeaponElement_C_BndEvt__WBP_Panel_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_2_OnButtonBaseUnfocused__DelegateSignature");
static_assert(sizeof(WBP_Panel_WeaponElement_C_BndEvt__WBP_Panel_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_2_OnButtonBaseUnfocused__DelegateSignature) == 0x000008, "Wrong size on WBP_Panel_WeaponElement_C_BndEvt__WBP_Panel_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_2_OnButtonBaseUnfocused__DelegateSignature");
static_assert(offsetof(WBP_Panel_WeaponElement_C_BndEvt__WBP_Panel_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_2_OnButtonBaseUnfocused__DelegateSignature, Button) == 0x000000, "Member 'WBP_Panel_WeaponElement_C_BndEvt__WBP_Panel_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_2_OnButtonBaseUnfocused__DelegateSignature::Button' has a wrong offset!");

// Function WBP_Panel_WeaponElement.WBP_Panel_WeaponElement_C.BndEvt__WBP_Panel_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_4_CommonSelectedStateChangedBase__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_Panel_WeaponElement_C_BndEvt__WBP_Panel_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_4_CommonSelectedStateChangedBase__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Selected;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_WeaponElement_C_BndEvt__WBP_Panel_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_4_CommonSelectedStateChangedBase__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Panel_WeaponElement_C_BndEvt__WBP_Panel_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_4_CommonSelectedStateChangedBase__DelegateSignature");
static_assert(sizeof(WBP_Panel_WeaponElement_C_BndEvt__WBP_Panel_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_4_CommonSelectedStateChangedBase__DelegateSignature) == 0x000010, "Wrong size on WBP_Panel_WeaponElement_C_BndEvt__WBP_Panel_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_4_CommonSelectedStateChangedBase__DelegateSignature");
static_assert(offsetof(WBP_Panel_WeaponElement_C_BndEvt__WBP_Panel_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_4_CommonSelectedStateChangedBase__DelegateSignature, Button) == 0x000000, "Member 'WBP_Panel_WeaponElement_C_BndEvt__WBP_Panel_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_4_CommonSelectedStateChangedBase__DelegateSignature::Button' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_BndEvt__WBP_Panel_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_4_CommonSelectedStateChangedBase__DelegateSignature, Selected) == 0x000008, "Member 'WBP_Panel_WeaponElement_C_BndEvt__WBP_Panel_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_4_CommonSelectedStateChangedBase__DelegateSignature::Selected' has a wrong offset!");

// Function WBP_Panel_WeaponElement.WBP_Panel_WeaponElement_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_Panel_WeaponElement_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_WeaponElement_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on WBP_Panel_WeaponElement_C_BP_OnItemExpansionChanged");
static_assert(sizeof(WBP_Panel_WeaponElement_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on WBP_Panel_WeaponElement_C_BP_OnItemExpansionChanged");
static_assert(offsetof(WBP_Panel_WeaponElement_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'WBP_Panel_WeaponElement_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function WBP_Panel_WeaponElement.WBP_Panel_WeaponElement_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_Panel_WeaponElement_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_WeaponElement_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on WBP_Panel_WeaponElement_C_BP_OnItemSelectionChanged");
static_assert(sizeof(WBP_Panel_WeaponElement_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on WBP_Panel_WeaponElement_C_BP_OnItemSelectionChanged");
static_assert(offsetof(WBP_Panel_WeaponElement_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'WBP_Panel_WeaponElement_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function WBP_Panel_WeaponElement.WBP_Panel_WeaponElement_C.ExecuteUbergraph_WBP_Panel_WeaponElement
// 0x0258 (0x0258 - 0x0000)
struct WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCommonTextStyle>           Temp_class_Variable;                               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UCommonTextStyle>           Temp_class_Variable_1;                             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_3;               // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_WeaponViewItem_C*                   K2Node_DynamicCast_AsBP_Weapon_View_Item;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool IsBeingUpgraded)>         K2Node_CreateDelegate_OutputDelegate;              // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Gear_Weapon_C*         CallFunc_GetGearWeaponInstance_Gear_Weapon_Instance_; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    CallFunc_GetOwnerData_OwnerData;                   // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentLevel_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponQuality                                CallFunc_GetCurrentQuality_Quality;                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_DynamicData               CallFunc_GetItemDynamicData_ItemDynamicData;       // 0x0068(0x0138)(ContainsInstancedReference, HasGetValueTypeHash)
	TDelegate<void(bool IsEquipped)>              K2Node_CreateDelegate_OutputDelegate_1;            // 0x01A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsEquipped;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasItemEquipped_IsEquipped;               // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B2[0x2];                                      // 0x01B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEquipmentSlot                        CallFunc_HasItemEquipped_Slot;                     // 0x01B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetTickSpaceGeometry_ReturnValue;         // 0x01BC(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_LocalToAbsolute_ReturnValue;              // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_2;               // 0x0208(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSelected_ReturnValue;                  // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_1;               // 0x0218(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_UINotifiedObject_C> CallFunc_LoadNotificationData_NotifiedObject_CastInput; // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBeingUpgraded_ReturnValue;              // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsBeingUpgraded;                // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23A[0x6];                                      // 0x023A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0240(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Selected;               // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCommonTextStyle>           K2Node_Select_Default;                             // 0x0250(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement) == 0x000008, "Wrong alignment on WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement");
static_assert(sizeof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement) == 0x000258, "Wrong size on WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, EntryPoint) == 0x000000, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, Temp_bool_Variable) == 0x000004, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, Temp_class_Variable) == 0x000008, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, Temp_class_Variable_1) == 0x000010, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, K2Node_Event_bIsExpanded) == 0x000018, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, K2Node_Event_bIsSelected) == 0x000019, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, K2Node_ComponentBoundEvent_Button_3) == 0x000020, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::K2Node_ComponentBoundEvent_Button_3' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, K2Node_Event_ListItemObject) == 0x000028, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, K2Node_DynamicCast_AsBP_Weapon_View_Item) == 0x000030, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::K2Node_DynamicCast_AsBP_Weapon_View_Item' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, K2Node_CreateDelegate_OutputDelegate) == 0x00003C, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, CallFunc_GetGearWeaponInstance_Gear_Weapon_Instance_) == 0x000050, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::CallFunc_GetGearWeaponInstance_Gear_Weapon_Instance_' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, CallFunc_GetOwnerData_OwnerData) == 0x000058, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::CallFunc_GetOwnerData_OwnerData' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, CallFunc_GetCurrentLevel_ReturnValue) == 0x000060, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::CallFunc_GetCurrentLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, CallFunc_GetCurrentQuality_Quality) == 0x000064, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::CallFunc_GetCurrentQuality_Quality' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, CallFunc_GetItemDynamicData_ItemDynamicData) == 0x000068, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::CallFunc_GetItemDynamicData_ItemDynamicData' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001A0, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, K2Node_CustomEvent_IsEquipped) == 0x0001B0, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::K2Node_CustomEvent_IsEquipped' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, CallFunc_HasItemEquipped_IsEquipped) == 0x0001B1, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::CallFunc_HasItemEquipped_IsEquipped' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, CallFunc_HasItemEquipped_Slot) == 0x0001B4, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::CallFunc_HasItemEquipped_Slot' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, CallFunc_GetTickSpaceGeometry_ReturnValue) == 0x0001BC, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::CallFunc_GetTickSpaceGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, CallFunc_LocalToAbsolute_ReturnValue) == 0x0001F8, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::CallFunc_LocalToAbsolute_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, K2Node_ComponentBoundEvent_Button_2) == 0x000208, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, CallFunc_GetSelected_ReturnValue) == 0x000210, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::CallFunc_GetSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, K2Node_ComponentBoundEvent_Button_1) == 0x000218, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, CallFunc_Not_PreBool_ReturnValue) == 0x000220, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, CallFunc_LoadNotificationData_NotifiedObject_CastInput) == 0x000228, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::CallFunc_LoadNotificationData_NotifiedObject_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, CallFunc_IsBeingUpgraded_ReturnValue) == 0x000238, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::CallFunc_IsBeingUpgraded_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, K2Node_CustomEvent_IsBeingUpgraded) == 0x000239, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::K2Node_CustomEvent_IsBeingUpgraded' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, K2Node_ComponentBoundEvent_Button) == 0x000240, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, K2Node_ComponentBoundEvent_Selected) == 0x000248, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::K2Node_ComponentBoundEvent_Selected' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement, K2Node_Select_Default) == 0x000250, "Member 'WBP_Panel_WeaponElement_C_ExecuteUbergraph_WBP_Panel_WeaponElement::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Panel_WeaponElement.WBP_Panel_WeaponElement_C.OnIsBeingUpgradedChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_Panel_WeaponElement_C_OnIsBeingUpgradedChanged final
{
public:
	bool                                          IsBeingUpgraded;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_WeaponElement_C_OnIsBeingUpgradedChanged) == 0x000001, "Wrong alignment on WBP_Panel_WeaponElement_C_OnIsBeingUpgradedChanged");
static_assert(sizeof(WBP_Panel_WeaponElement_C_OnIsBeingUpgradedChanged) == 0x000001, "Wrong size on WBP_Panel_WeaponElement_C_OnIsBeingUpgradedChanged");
static_assert(offsetof(WBP_Panel_WeaponElement_C_OnIsBeingUpgradedChanged, IsBeingUpgraded) == 0x000000, "Member 'WBP_Panel_WeaponElement_C_OnIsBeingUpgradedChanged::IsBeingUpgraded' has a wrong offset!");

// Function WBP_Panel_WeaponElement.WBP_Panel_WeaponElement_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct WBP_Panel_WeaponElement_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_WeaponElement_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on WBP_Panel_WeaponElement_C_OnListItemObjectSet");
static_assert(sizeof(WBP_Panel_WeaponElement_C_OnListItemObjectSet) == 0x000008, "Wrong size on WBP_Panel_WeaponElement_C_OnListItemObjectSet");
static_assert(offsetof(WBP_Panel_WeaponElement_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'WBP_Panel_WeaponElement_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function WBP_Panel_WeaponElement.WBP_Panel_WeaponElement_C.OnWeaponEquippedChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_Panel_WeaponElement_C_OnWeaponEquippedChanged final
{
public:
	bool                                          IsEquipped;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_WeaponElement_C_OnWeaponEquippedChanged) == 0x000001, "Wrong alignment on WBP_Panel_WeaponElement_C_OnWeaponEquippedChanged");
static_assert(sizeof(WBP_Panel_WeaponElement_C_OnWeaponEquippedChanged) == 0x000001, "Wrong size on WBP_Panel_WeaponElement_C_OnWeaponEquippedChanged");
static_assert(offsetof(WBP_Panel_WeaponElement_C_OnWeaponEquippedChanged, IsEquipped) == 0x000000, "Member 'WBP_Panel_WeaponElement_C_OnWeaponEquippedChanged::IsEquipped' has a wrong offset!");

// Function WBP_Panel_WeaponElement.WBP_Panel_WeaponElement_C.Set Button as Empty
// 0x0010 (0x0010 - 0x0000)
struct WBP_Panel_WeaponElement_C_Set_Button_as_Empty final
{
public:
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0000(0x0010)()
};
static_assert(alignof(WBP_Panel_WeaponElement_C_Set_Button_as_Empty) == 0x000008, "Wrong alignment on WBP_Panel_WeaponElement_C_Set_Button_as_Empty");
static_assert(sizeof(WBP_Panel_WeaponElement_C_Set_Button_as_Empty) == 0x000010, "Wrong size on WBP_Panel_WeaponElement_C_Set_Button_as_Empty");
static_assert(offsetof(WBP_Panel_WeaponElement_C_Set_Button_as_Empty, CallFunc_MakeLiteralText_ReturnValue) == 0x000000, "Member 'WBP_Panel_WeaponElement_C_Set_Button_as_Empty::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");

// Function WBP_Panel_WeaponElement.WBP_Panel_WeaponElement_C.SetIsBeingUpgraded
// 0x003C (0x003C - 0x0000)
struct WBP_Panel_WeaponElement_C_SetIsBeingUpgraded final
{
public:
	bool                                          IsBeingUpgraded;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_WeaponElement_C_SetIsBeingUpgraded) == 0x000004, "Wrong alignment on WBP_Panel_WeaponElement_C_SetIsBeingUpgraded");
static_assert(sizeof(WBP_Panel_WeaponElement_C_SetIsBeingUpgraded) == 0x00003C, "Wrong size on WBP_Panel_WeaponElement_C_SetIsBeingUpgraded");
static_assert(offsetof(WBP_Panel_WeaponElement_C_SetIsBeingUpgraded, IsBeingUpgraded) == 0x000000, "Member 'WBP_Panel_WeaponElement_C_SetIsBeingUpgraded::IsBeingUpgraded' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_SetIsBeingUpgraded, Temp_struct_Variable) == 0x000004, "Member 'WBP_Panel_WeaponElement_C_SetIsBeingUpgraded::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_SetIsBeingUpgraded, Temp_struct_Variable_1) == 0x000014, "Member 'WBP_Panel_WeaponElement_C_SetIsBeingUpgraded::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_SetIsBeingUpgraded, Temp_bool_Variable) == 0x000024, "Member 'WBP_Panel_WeaponElement_C_SetIsBeingUpgraded::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_SetIsBeingUpgraded, Temp_byte_Variable) == 0x000025, "Member 'WBP_Panel_WeaponElement_C_SetIsBeingUpgraded::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_SetIsBeingUpgraded, Temp_byte_Variable_1) == 0x000026, "Member 'WBP_Panel_WeaponElement_C_SetIsBeingUpgraded::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_SetIsBeingUpgraded, Temp_bool_Variable_1) == 0x000027, "Member 'WBP_Panel_WeaponElement_C_SetIsBeingUpgraded::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_SetIsBeingUpgraded, K2Node_Select_Default) == 0x000028, "Member 'WBP_Panel_WeaponElement_C_SetIsBeingUpgraded::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Panel_WeaponElement_C_SetIsBeingUpgraded, K2Node_Select_Default_1) == 0x00002C, "Member 'WBP_Panel_WeaponElement_C_SetIsBeingUpgraded::K2Node_Select_Default_1' has a wrong offset!");

}

