#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattleDamages

#include "Basic.hpp"

#include "EMissReason_structs.hpp"
#include "EDamageReason_structs.hpp"
#include "Engine_structs.hpp"
#include "EDamageValueState_structs.hpp"
#include "EElementalAffinity_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EAttackType_structs.hpp"
#include "FDamageModifier_structs.hpp"
#include "E_jRPG_StatType_structs.hpp"
#include "ECharacterTeamSelector_structs.hpp"


namespace SDK::Params
{

// Function BP_BattleDamages.BP_BattleDamages_C.AddAttackPowerModifier
// 0x00A8 (0x00A8 - 0x0000)
struct BP_BattleDamages_C_AddAttackPowerModifier final
{
public:
	struct FFDamageModifier                       Modifier;                                          // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0010)()
	class FText                                   CallFunc_AppendStack__Content__Result;             // 0x0098(0x0010)()
};
static_assert(alignof(BP_BattleDamages_C_AddAttackPowerModifier) == 0x000008, "Wrong alignment on BP_BattleDamages_C_AddAttackPowerModifier");
static_assert(sizeof(BP_BattleDamages_C_AddAttackPowerModifier) == 0x0000A8, "Wrong size on BP_BattleDamages_C_AddAttackPowerModifier");
static_assert(offsetof(BP_BattleDamages_C_AddAttackPowerModifier, Modifier) == 0x000000, "Member 'BP_BattleDamages_C_AddAttackPowerModifier::Modifier' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_AddAttackPowerModifier, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BP_BattleDamages_C_AddAttackPowerModifier::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_AddAttackPowerModifier, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_BattleDamages_C_AddAttackPowerModifier::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_AddAttackPowerModifier, K2Node_MakeArray_Array) == 0x000078, "Member 'BP_BattleDamages_C_AddAttackPowerModifier::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_AddAttackPowerModifier, CallFunc_Format_ReturnValue) == 0x000088, "Member 'BP_BattleDamages_C_AddAttackPowerModifier::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_AddAttackPowerModifier, CallFunc_AppendStack__Content__Result) == 0x000098, "Member 'BP_BattleDamages_C_AddAttackPowerModifier::CallFunc_AppendStack__Content__Result' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.AddBreakBarDamageMultiplier
// 0x0178 (0x0178 - 0x0000)
struct BP_BattleDamages_C_AddBreakBarDamageMultiplier final
{
public:
	double                                        Multiplier;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Reason;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0010)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0088(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00D0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0128(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue_1;                     // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0158(0x0010)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_AddBreakBarDamageMultiplier) == 0x000008, "Wrong alignment on BP_BattleDamages_C_AddBreakBarDamageMultiplier");
static_assert(sizeof(BP_BattleDamages_C_AddBreakBarDamageMultiplier) == 0x000178, "Wrong size on BP_BattleDamages_C_AddBreakBarDamageMultiplier");
static_assert(offsetof(BP_BattleDamages_C_AddBreakBarDamageMultiplier, Multiplier) == 0x000000, "Member 'BP_BattleDamages_C_AddBreakBarDamageMultiplier::Multiplier' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_AddBreakBarDamageMultiplier, Reason) == 0x000008, "Member 'BP_BattleDamages_C_AddBreakBarDamageMultiplier::Reason' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_AddBreakBarDamageMultiplier, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000018, "Member 'BP_BattleDamages_C_AddBreakBarDamageMultiplier::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_AddBreakBarDamageMultiplier, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'BP_BattleDamages_C_AddBreakBarDamageMultiplier::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_AddBreakBarDamageMultiplier, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'BP_BattleDamages_C_AddBreakBarDamageMultiplier::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_AddBreakBarDamageMultiplier, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'BP_BattleDamages_C_AddBreakBarDamageMultiplier::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_AddBreakBarDamageMultiplier, CallFunc_IsEmpty_ReturnValue) == 0x000080, "Member 'BP_BattleDamages_C_AddBreakBarDamageMultiplier::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_AddBreakBarDamageMultiplier, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000081, "Member 'BP_BattleDamages_C_AddBreakBarDamageMultiplier::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_AddBreakBarDamageMultiplier, K2Node_MakeStruct_FormatArgumentData_1) == 0x000088, "Member 'BP_BattleDamages_C_AddBreakBarDamageMultiplier::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_AddBreakBarDamageMultiplier, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000D0, "Member 'BP_BattleDamages_C_AddBreakBarDamageMultiplier::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_AddBreakBarDamageMultiplier, K2Node_MakeArray_Array) == 0x000118, "Member 'BP_BattleDamages_C_AddBreakBarDamageMultiplier::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_AddBreakBarDamageMultiplier, K2Node_MakeArray_Array_1) == 0x000128, "Member 'BP_BattleDamages_C_AddBreakBarDamageMultiplier::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_AddBreakBarDamageMultiplier, CallFunc_Format_ReturnValue) == 0x000138, "Member 'BP_BattleDamages_C_AddBreakBarDamageMultiplier::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_AddBreakBarDamageMultiplier, CallFunc_Format_ReturnValue_1) == 0x000148, "Member 'BP_BattleDamages_C_AddBreakBarDamageMultiplier::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_AddBreakBarDamageMultiplier, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000158, "Member 'BP_BattleDamages_C_AddBreakBarDamageMultiplier::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_AddBreakBarDamageMultiplier, CallFunc_IsValid_ReturnValue) == 0x000168, "Member 'BP_BattleDamages_C_AddBreakBarDamageMultiplier::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_AddBreakBarDamageMultiplier, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000170, "Member 'BP_BattleDamages_C_AddBreakBarDamageMultiplier::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.AddCriticalHitExtraChance
// 0x0038 (0x0038 - 0x0000)
struct BP_BattleDamages_C_AddCriticalHitExtraChance final
{
public:
	double                                        Chance__0_0_1_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 DebugReason;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0010)()
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEditableValue_Modify_Allowed;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_AddCriticalHitExtraChance) == 0x000008, "Wrong alignment on BP_BattleDamages_C_AddCriticalHitExtraChance");
static_assert(sizeof(BP_BattleDamages_C_AddCriticalHitExtraChance) == 0x000038, "Wrong size on BP_BattleDamages_C_AddCriticalHitExtraChance");
static_assert(offsetof(BP_BattleDamages_C_AddCriticalHitExtraChance, Chance__0_0_1_0) == 0x000000, "Member 'BP_BattleDamages_C_AddCriticalHitExtraChance::Chance__0_0_1_0' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_AddCriticalHitExtraChance, DebugReason) == 0x000008, "Member 'BP_BattleDamages_C_AddCriticalHitExtraChance::DebugReason' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_AddCriticalHitExtraChance, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'BP_BattleDamages_C_AddCriticalHitExtraChance::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_AddCriticalHitExtraChance, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_BattleDamages_C_AddCriticalHitExtraChance::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_AddCriticalHitExtraChance, CallFunc_CheckEditableValue_Modify_Allowed) == 0x000030, "Member 'BP_BattleDamages_C_AddCriticalHitExtraChance::CallFunc_CheckEditableValue_Modify_Allowed' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.AddDamageModifier
// 0x0028 (0x0028 - 0x0000)
struct BP_BattleDamages_C_AddDamageModifier final
{
public:
	struct FFDamageModifier                       Modifier;                                          // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_AddDamageModifier) == 0x000008, "Wrong alignment on BP_BattleDamages_C_AddDamageModifier");
static_assert(sizeof(BP_BattleDamages_C_AddDamageModifier) == 0x000028, "Wrong size on BP_BattleDamages_C_AddDamageModifier");
static_assert(offsetof(BP_BattleDamages_C_AddDamageModifier, Modifier) == 0x000000, "Member 'BP_BattleDamages_C_AddDamageModifier::Modifier' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.AddModifierInternal
// 0x0030 (0x0030 - 0x0000)
struct BP_BattleDamages_C_AddModifierInternal final
{
public:
	struct FFDamageModifier                       Modifier;                                          // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_AddModifierInternal) == 0x000008, "Wrong alignment on BP_BattleDamages_C_AddModifierInternal");
static_assert(sizeof(BP_BattleDamages_C_AddModifierInternal) == 0x000030, "Wrong size on BP_BattleDamages_C_AddModifierInternal");
static_assert(offsetof(BP_BattleDamages_C_AddModifierInternal, Modifier) == 0x000000, "Member 'BP_BattleDamages_C_AddModifierInternal::Modifier' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_AddModifierInternal, CallFunc_Array_Add_ReturnValue) == 0x000028, "Member 'BP_BattleDamages_C_AddModifierInternal::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.ApplyActiveModifiers
// 0x00B0 (0x00B0 - 0x0000)
struct BP_BattleDamages_C_ApplyActiveModifiers final
{
public:
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0000(0x0048)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0060(0x0010)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ComputeDamageModifiers_Base;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           CallFunc_ComputeDamageModifiers_DamageLogs;        // 0x0088(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0098(0x0010)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_ApplyActiveModifiers) == 0x000008, "Wrong alignment on BP_BattleDamages_C_ApplyActiveModifiers");
static_assert(sizeof(BP_BattleDamages_C_ApplyActiveModifiers) == 0x0000B0, "Wrong size on BP_BattleDamages_C_ApplyActiveModifiers");
static_assert(offsetof(BP_BattleDamages_C_ApplyActiveModifiers, K2Node_MakeStruct_FormatArgumentData) == 0x000000, "Member 'BP_BattleDamages_C_ApplyActiveModifiers::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyActiveModifiers, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_BattleDamages_C_ApplyActiveModifiers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyActiveModifiers, K2Node_MakeArray_Array) == 0x000050, "Member 'BP_BattleDamages_C_ApplyActiveModifiers::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyActiveModifiers, CallFunc_Format_ReturnValue) == 0x000060, "Member 'BP_BattleDamages_C_ApplyActiveModifiers::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyActiveModifiers, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'BP_BattleDamages_C_ApplyActiveModifiers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyActiveModifiers, CallFunc_IsValid_ReturnValue) == 0x000074, "Member 'BP_BattleDamages_C_ApplyActiveModifiers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyActiveModifiers, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'BP_BattleDamages_C_ApplyActiveModifiers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyActiveModifiers, CallFunc_ComputeDamageModifiers_Base) == 0x000080, "Member 'BP_BattleDamages_C_ApplyActiveModifiers::CallFunc_ComputeDamageModifiers_Base' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyActiveModifiers, CallFunc_ComputeDamageModifiers_DamageLogs) == 0x000088, "Member 'BP_BattleDamages_C_ApplyActiveModifiers::CallFunc_ComputeDamageModifiers_DamageLogs' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyActiveModifiers, CallFunc_Array_Get_Item) == 0x000098, "Member 'BP_BattleDamages_C_ApplyActiveModifiers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyActiveModifiers, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'BP_BattleDamages_C_ApplyActiveModifiers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyActiveModifiers, CallFunc_Less_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_BattleDamages_C_ApplyActiveModifiers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.ApplyAffinitiesModifiers
// 0x0188 (0x0188 - 0x0000)
struct BP_BattleDamages_C_ApplyAffinitiesModifiers final
{
public:
	EElementalAffinity                            Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EElementalAffinity                            Temp_byte_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_6;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_7;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_8;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_9;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_10;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_11;                             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0048)(HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D8(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0120(0x0010)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0130(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0150(0x0010)()
	struct FFDamageModifier                       K2Node_MakeStruct_FDamageModifier;                 // 0x0160(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_ApplyAffinitiesModifiers) == 0x000008, "Wrong alignment on BP_BattleDamages_C_ApplyAffinitiesModifiers");
static_assert(sizeof(BP_BattleDamages_C_ApplyAffinitiesModifiers) == 0x000188, "Wrong size on BP_BattleDamages_C_ApplyAffinitiesModifiers");
static_assert(offsetof(BP_BattleDamages_C_ApplyAffinitiesModifiers, Temp_byte_Variable) == 0x000000, "Member 'BP_BattleDamages_C_ApplyAffinitiesModifiers::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyAffinitiesModifiers, Temp_real_Variable) == 0x000008, "Member 'BP_BattleDamages_C_ApplyAffinitiesModifiers::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyAffinitiesModifiers, Temp_real_Variable_1) == 0x000010, "Member 'BP_BattleDamages_C_ApplyAffinitiesModifiers::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyAffinitiesModifiers, Temp_real_Variable_2) == 0x000018, "Member 'BP_BattleDamages_C_ApplyAffinitiesModifiers::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyAffinitiesModifiers, Temp_real_Variable_3) == 0x000020, "Member 'BP_BattleDamages_C_ApplyAffinitiesModifiers::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyAffinitiesModifiers, Temp_real_Variable_4) == 0x000028, "Member 'BP_BattleDamages_C_ApplyAffinitiesModifiers::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyAffinitiesModifiers, Temp_real_Variable_5) == 0x000030, "Member 'BP_BattleDamages_C_ApplyAffinitiesModifiers::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyAffinitiesModifiers, Temp_byte_Variable_1) == 0x000038, "Member 'BP_BattleDamages_C_ApplyAffinitiesModifiers::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyAffinitiesModifiers, Temp_real_Variable_6) == 0x000040, "Member 'BP_BattleDamages_C_ApplyAffinitiesModifiers::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyAffinitiesModifiers, Temp_real_Variable_7) == 0x000048, "Member 'BP_BattleDamages_C_ApplyAffinitiesModifiers::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyAffinitiesModifiers, Temp_real_Variable_8) == 0x000050, "Member 'BP_BattleDamages_C_ApplyAffinitiesModifiers::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyAffinitiesModifiers, Temp_real_Variable_9) == 0x000058, "Member 'BP_BattleDamages_C_ApplyAffinitiesModifiers::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyAffinitiesModifiers, Temp_real_Variable_10) == 0x000060, "Member 'BP_BattleDamages_C_ApplyAffinitiesModifiers::Temp_real_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyAffinitiesModifiers, Temp_real_Variable_11) == 0x000068, "Member 'BP_BattleDamages_C_ApplyAffinitiesModifiers::Temp_real_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyAffinitiesModifiers, K2Node_Select_Default) == 0x000070, "Member 'BP_BattleDamages_C_ApplyAffinitiesModifiers::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyAffinitiesModifiers, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'BP_BattleDamages_C_ApplyAffinitiesModifiers::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyAffinitiesModifiers, K2Node_Select_Default_1) == 0x0000C0, "Member 'BP_BattleDamages_C_ApplyAffinitiesModifiers::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyAffinitiesModifiers, K2Node_MakeArray_Array) == 0x0000C8, "Member 'BP_BattleDamages_C_ApplyAffinitiesModifiers::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyAffinitiesModifiers, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D8, "Member 'BP_BattleDamages_C_ApplyAffinitiesModifiers::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyAffinitiesModifiers, CallFunc_Format_ReturnValue) == 0x000120, "Member 'BP_BattleDamages_C_ApplyAffinitiesModifiers::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyAffinitiesModifiers, K2Node_MakeArray_Array_1) == 0x000130, "Member 'BP_BattleDamages_C_ApplyAffinitiesModifiers::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyAffinitiesModifiers, CallFunc_Conv_TextToString_ReturnValue) == 0x000140, "Member 'BP_BattleDamages_C_ApplyAffinitiesModifiers::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyAffinitiesModifiers, CallFunc_Format_ReturnValue_1) == 0x000150, "Member 'BP_BattleDamages_C_ApplyAffinitiesModifiers::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyAffinitiesModifiers, K2Node_MakeStruct_FDamageModifier) == 0x000160, "Member 'BP_BattleDamages_C_ApplyAffinitiesModifiers::K2Node_MakeStruct_FDamageModifier' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.ApplyClamp
// 0x0018 (0x0018 - 0x0000)
struct BP_BattleDamages_C_ApplyClamp final
{
public:
	ECharacterTeamSelector                        CallFunc_GetTeam_Team;                             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetReferenceCounterState_ReturnValue;     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_ApplyClamp) == 0x000008, "Wrong alignment on BP_BattleDamages_C_ApplyClamp");
static_assert(sizeof(BP_BattleDamages_C_ApplyClamp) == 0x000018, "Wrong size on BP_BattleDamages_C_ApplyClamp");
static_assert(offsetof(BP_BattleDamages_C_ApplyClamp, CallFunc_GetTeam_Team) == 0x000000, "Member 'BP_BattleDamages_C_ApplyClamp::CallFunc_GetTeam_Team' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyClamp, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'BP_BattleDamages_C_ApplyClamp::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyClamp, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BP_BattleDamages_C_ApplyClamp::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyClamp, CallFunc_GetReferenceCounterState_ReturnValue) == 0x000011, "Member 'BP_BattleDamages_C_ApplyClamp::CallFunc_GetReferenceCounterState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyClamp, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'BP_BattleDamages_C_ApplyClamp::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.ApplyCommonDamageMultipliers
// 0x0160 (0x0160 - 0x0000)
struct BP_BattleDamages_C_ApplyCommonDamageMultipliers final
{
public:
	class FString                                 Temp_string_Variable;                              // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_wildcard_Variable;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	TArray<EDamageReason>                         K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00B0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0108(0x0010)(ReferenceParm)
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_GetTargetCharacter_NewParam;              // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0120(0x0010)()
	double                                        K2Node_Select_Default_1;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFDamageModifier                       K2Node_MakeStruct_FDamageModifier;                 // 0x0138(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_ApplyCommonDamageMultipliers) == 0x000008, "Wrong alignment on BP_BattleDamages_C_ApplyCommonDamageMultipliers");
static_assert(sizeof(BP_BattleDamages_C_ApplyCommonDamageMultipliers) == 0x000160, "Wrong size on BP_BattleDamages_C_ApplyCommonDamageMultipliers");
static_assert(offsetof(BP_BattleDamages_C_ApplyCommonDamageMultipliers, Temp_string_Variable) == 0x000000, "Member 'BP_BattleDamages_C_ApplyCommonDamageMultipliers::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCommonDamageMultipliers, Temp_string_Variable_1) == 0x000010, "Member 'BP_BattleDamages_C_ApplyCommonDamageMultipliers::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCommonDamageMultipliers, Temp_bool_Variable) == 0x000020, "Member 'BP_BattleDamages_C_ApplyCommonDamageMultipliers::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCommonDamageMultipliers, Temp_wildcard_Variable) == 0x000028, "Member 'BP_BattleDamages_C_ApplyCommonDamageMultipliers::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCommonDamageMultipliers, Temp_bool_Variable_1) == 0x000030, "Member 'BP_BattleDamages_C_ApplyCommonDamageMultipliers::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCommonDamageMultipliers, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'BP_BattleDamages_C_ApplyCommonDamageMultipliers::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCommonDamageMultipliers, K2Node_MakeArray_Array) == 0x000080, "Member 'BP_BattleDamages_C_ApplyCommonDamageMultipliers::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCommonDamageMultipliers, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000090, "Member 'BP_BattleDamages_C_ApplyCommonDamageMultipliers::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCommonDamageMultipliers, CallFunc_Array_Contains_ReturnValue) == 0x000091, "Member 'BP_BattleDamages_C_ApplyCommonDamageMultipliers::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCommonDamageMultipliers, K2Node_Select_Default) == 0x000098, "Member 'BP_BattleDamages_C_ApplyCommonDamageMultipliers::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCommonDamageMultipliers, CallFunc_Not_PreBool_ReturnValue) == 0x0000A8, "Member 'BP_BattleDamages_C_ApplyCommonDamageMultipliers::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCommonDamageMultipliers, CallFunc_Conv_StringToText_ReturnValue) == 0x0000B0, "Member 'BP_BattleDamages_C_ApplyCommonDamageMultipliers::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCommonDamageMultipliers, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C0, "Member 'BP_BattleDamages_C_ApplyCommonDamageMultipliers::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCommonDamageMultipliers, K2Node_MakeArray_Array_1) == 0x000108, "Member 'BP_BattleDamages_C_ApplyCommonDamageMultipliers::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCommonDamageMultipliers, CallFunc_GetTargetCharacter_NewParam) == 0x000118, "Member 'BP_BattleDamages_C_ApplyCommonDamageMultipliers::CallFunc_GetTargetCharacter_NewParam' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCommonDamageMultipliers, CallFunc_Format_ReturnValue) == 0x000120, "Member 'BP_BattleDamages_C_ApplyCommonDamageMultipliers::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCommonDamageMultipliers, K2Node_Select_Default_1) == 0x000130, "Member 'BP_BattleDamages_C_ApplyCommonDamageMultipliers::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCommonDamageMultipliers, K2Node_MakeStruct_FDamageModifier) == 0x000138, "Member 'BP_BattleDamages_C_ApplyCommonDamageMultipliers::K2Node_MakeStruct_FDamageModifier' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.ApplyCriticalHitModifiers
// 0x0288 (0x0288 - 0x0000)
struct BP_BattleDamages_C_ApplyCriticalHitModifiers final
{
public:
	bool                                          IsCriticalHit_0;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_forceCritical;                               // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0018(0x0010)()
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetCriticalRollToBeat_Value;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0088(0x0048)(HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x00D0(0x0010)()
	double                                        CallFunc_GetCriticalRollToBeat_Value_1;            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00E8(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0130(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0188(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01E0(0x0010)()
	struct FFDamageModifier                       K2Node_MakeStruct_FDamageModifier;                 // 0x01F0(0x0028)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0218(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0260(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0270(0x0010)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_ApplyCriticalHitModifiers) == 0x000008, "Wrong alignment on BP_BattleDamages_C_ApplyCriticalHitModifiers");
static_assert(sizeof(BP_BattleDamages_C_ApplyCriticalHitModifiers) == 0x000288, "Wrong size on BP_BattleDamages_C_ApplyCriticalHitModifiers");
static_assert(offsetof(BP_BattleDamages_C_ApplyCriticalHitModifiers, IsCriticalHit_0) == 0x000000, "Member 'BP_BattleDamages_C_ApplyCriticalHitModifiers::IsCriticalHit_0' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCriticalHitModifiers, local_forceCritical) == 0x000001, "Member 'BP_BattleDamages_C_ApplyCriticalHitModifiers::local_forceCritical' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCriticalHitModifiers, Temp_text_Variable) == 0x000008, "Member 'BP_BattleDamages_C_ApplyCriticalHitModifiers::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCriticalHitModifiers, Temp_text_Variable_1) == 0x000018, "Member 'BP_BattleDamages_C_ApplyCriticalHitModifiers::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCriticalHitModifiers, Temp_bool_Variable) == 0x000028, "Member 'BP_BattleDamages_C_ApplyCriticalHitModifiers::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCriticalHitModifiers, CallFunc_GetCriticalRollToBeat_Value) == 0x000030, "Member 'BP_BattleDamages_C_ApplyCriticalHitModifiers::CallFunc_GetCriticalRollToBeat_Value' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCriticalHitModifiers, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_BattleDamages_C_ApplyCriticalHitModifiers::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCriticalHitModifiers, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'BP_BattleDamages_C_ApplyCriticalHitModifiers::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCriticalHitModifiers, K2Node_MakeStruct_FormatArgumentData_1) == 0x000088, "Member 'BP_BattleDamages_C_ApplyCriticalHitModifiers::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCriticalHitModifiers, K2Node_Select_Default) == 0x0000D0, "Member 'BP_BattleDamages_C_ApplyCriticalHitModifiers::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCriticalHitModifiers, CallFunc_GetCriticalRollToBeat_Value_1) == 0x0000E0, "Member 'BP_BattleDamages_C_ApplyCriticalHitModifiers::CallFunc_GetCriticalRollToBeat_Value_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCriticalHitModifiers, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000E8, "Member 'BP_BattleDamages_C_ApplyCriticalHitModifiers::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCriticalHitModifiers, K2Node_MakeStruct_FormatArgumentData_3) == 0x000130, "Member 'BP_BattleDamages_C_ApplyCriticalHitModifiers::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCriticalHitModifiers, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000178, "Member 'BP_BattleDamages_C_ApplyCriticalHitModifiers::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCriticalHitModifiers, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000180, "Member 'BP_BattleDamages_C_ApplyCriticalHitModifiers::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCriticalHitModifiers, K2Node_MakeStruct_FormatArgumentData_4) == 0x000188, "Member 'BP_BattleDamages_C_ApplyCriticalHitModifiers::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCriticalHitModifiers, K2Node_MakeArray_Array) == 0x0001D0, "Member 'BP_BattleDamages_C_ApplyCriticalHitModifiers::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCriticalHitModifiers, CallFunc_Format_ReturnValue) == 0x0001E0, "Member 'BP_BattleDamages_C_ApplyCriticalHitModifiers::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCriticalHitModifiers, K2Node_MakeStruct_FDamageModifier) == 0x0001F0, "Member 'BP_BattleDamages_C_ApplyCriticalHitModifiers::K2Node_MakeStruct_FDamageModifier' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCriticalHitModifiers, K2Node_MakeStruct_FormatArgumentData_5) == 0x000218, "Member 'BP_BattleDamages_C_ApplyCriticalHitModifiers::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCriticalHitModifiers, K2Node_MakeArray_Array_1) == 0x000260, "Member 'BP_BattleDamages_C_ApplyCriticalHitModifiers::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCriticalHitModifiers, CallFunc_Format_ReturnValue_1) == 0x000270, "Member 'BP_BattleDamages_C_ApplyCriticalHitModifiers::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCriticalHitModifiers, CallFunc_IsValid_ReturnValue) == 0x000280, "Member 'BP_BattleDamages_C_ApplyCriticalHitModifiers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyCriticalHitModifiers, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000281, "Member 'BP_BattleDamages_C_ApplyCriticalHitModifiers::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.ApplyDeathtouch
// 0x0070 (0x0070 - 0x0000)
struct BP_BattleDamages_C_ApplyDeathtouch final
{
public:
	bool                                          CallFunc_IsDeathTouch_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0060(0x0010)()
};
static_assert(alignof(BP_BattleDamages_C_ApplyDeathtouch) == 0x000008, "Wrong alignment on BP_BattleDamages_C_ApplyDeathtouch");
static_assert(sizeof(BP_BattleDamages_C_ApplyDeathtouch) == 0x000070, "Wrong size on BP_BattleDamages_C_ApplyDeathtouch");
static_assert(offsetof(BP_BattleDamages_C_ApplyDeathtouch, CallFunc_IsDeathTouch_ReturnValue) == 0x000000, "Member 'BP_BattleDamages_C_ApplyDeathtouch::CallFunc_IsDeathTouch_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyDeathtouch, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'BP_BattleDamages_C_ApplyDeathtouch::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyDeathtouch, K2Node_MakeArray_Array) == 0x000050, "Member 'BP_BattleDamages_C_ApplyDeathtouch::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyDeathtouch, CallFunc_Format_ReturnValue) == 0x000060, "Member 'BP_BattleDamages_C_ApplyDeathtouch::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.ApplyDebugOverrides
// 0x0040 (0x0040 - 0x0000)
struct BP_BattleDamages_C_ApplyDebugOverrides final
{
public:
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterTeamSelector                        CallFunc_GetTeam_Team;                             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMin_ReturnValue_1;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamCharacter_IsPlayerTeam;       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_1;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue_1; // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamCharacter_IsPlayerTeam_1;     // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue_2; // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue_3; // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_ApplyDebugOverrides) == 0x000008, "Wrong alignment on BP_BattleDamages_C_ApplyDebugOverrides");
static_assert(sizeof(BP_BattleDamages_C_ApplyDebugOverrides) == 0x000040, "Wrong size on BP_BattleDamages_C_ApplyDebugOverrides");
static_assert(offsetof(BP_BattleDamages_C_ApplyDebugOverrides, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000000, "Member 'BP_BattleDamages_C_ApplyDebugOverrides::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyDebugOverrides, CallFunc_GetTeam_Team) == 0x000001, "Member 'BP_BattleDamages_C_ApplyDebugOverrides::CallFunc_GetTeam_Team' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyDebugOverrides, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_BattleDamages_C_ApplyDebugOverrides::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyDebugOverrides, CallFunc_FMin_ReturnValue) == 0x000008, "Member 'BP_BattleDamages_C_ApplyDebugOverrides::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyDebugOverrides, CallFunc_BooleanAND_ReturnValue) == 0x000010, "Member 'BP_BattleDamages_C_ApplyDebugOverrides::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyDebugOverrides, CallFunc_FMin_ReturnValue_1) == 0x000018, "Member 'BP_BattleDamages_C_ApplyDebugOverrides::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyDebugOverrides, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000020, "Member 'BP_BattleDamages_C_ApplyDebugOverrides::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyDebugOverrides, CallFunc_GetCharacterBattleBase_IsValid) == 0x000028, "Member 'BP_BattleDamages_C_ApplyDebugOverrides::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyDebugOverrides, CallFunc_IsPlayerTeamCharacter_IsPlayerTeam) == 0x000029, "Member 'BP_BattleDamages_C_ApplyDebugOverrides::CallFunc_IsPlayerTeamCharacter_IsPlayerTeam' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyDebugOverrides, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1) == 0x000030, "Member 'BP_BattleDamages_C_ApplyDebugOverrides::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyDebugOverrides, CallFunc_GetCharacterBattleBase_IsValid_1) == 0x000038, "Member 'BP_BattleDamages_C_ApplyDebugOverrides::CallFunc_GetCharacterBattleBase_IsValid_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyDebugOverrides, CallFunc_GetConsoleVariableBoolValue_ReturnValue_1) == 0x000039, "Member 'BP_BattleDamages_C_ApplyDebugOverrides::CallFunc_GetConsoleVariableBoolValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyDebugOverrides, CallFunc_IsPlayerTeamCharacter_IsPlayerTeam_1) == 0x00003A, "Member 'BP_BattleDamages_C_ApplyDebugOverrides::CallFunc_IsPlayerTeamCharacter_IsPlayerTeam_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyDebugOverrides, CallFunc_BooleanAND_ReturnValue_1) == 0x00003B, "Member 'BP_BattleDamages_C_ApplyDebugOverrides::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyDebugOverrides, CallFunc_Not_PreBool_ReturnValue) == 0x00003C, "Member 'BP_BattleDamages_C_ApplyDebugOverrides::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyDebugOverrides, CallFunc_GetConsoleVariableBoolValue_ReturnValue_2) == 0x00003D, "Member 'BP_BattleDamages_C_ApplyDebugOverrides::CallFunc_GetConsoleVariableBoolValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyDebugOverrides, CallFunc_GetConsoleVariableBoolValue_ReturnValue_3) == 0x00003E, "Member 'BP_BattleDamages_C_ApplyDebugOverrides::CallFunc_GetConsoleVariableBoolValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyDebugOverrides, CallFunc_BooleanAND_ReturnValue_2) == 0x00003F, "Member 'BP_BattleDamages_C_ApplyDebugOverrides::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.ApplyDefense
// 0x00D8 (0x00D8 - 0x0000)
struct BP_BattleDamages_C_ApplyDefense final
{
public:
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0048)(HasGetValueTypeHash)
	EAttackType                                   CallFunc_GetFinalBaseElement_AttackElement;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDefenseAgainstElement_Defense;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0068(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
	double                                        CallFunc_CalculateDefense_ReturnValue;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C8(0x0010)()
};
static_assert(alignof(BP_BattleDamages_C_ApplyDefense) == 0x000008, "Wrong alignment on BP_BattleDamages_C_ApplyDefense");
static_assert(sizeof(BP_BattleDamages_C_ApplyDefense) == 0x0000D8, "Wrong size on BP_BattleDamages_C_ApplyDefense");
static_assert(offsetof(BP_BattleDamages_C_ApplyDefense, CallFunc_FMax_ReturnValue) == 0x000000, "Member 'BP_BattleDamages_C_ApplyDefense::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyDefense, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'BP_BattleDamages_C_ApplyDefense::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyDefense, CallFunc_GetFinalBaseElement_AttackElement) == 0x000050, "Member 'BP_BattleDamages_C_ApplyDefense::CallFunc_GetFinalBaseElement_AttackElement' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyDefense, CallFunc_GetDefenseAgainstElement_Defense) == 0x000058, "Member 'BP_BattleDamages_C_ApplyDefense::CallFunc_GetDefenseAgainstElement_Defense' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyDefense, CallFunc_Not_PreBool_ReturnValue) == 0x000060, "Member 'BP_BattleDamages_C_ApplyDefense::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyDefense, K2Node_MakeStruct_FormatArgumentData_1) == 0x000068, "Member 'BP_BattleDamages_C_ApplyDefense::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyDefense, K2Node_MakeArray_Array) == 0x0000B0, "Member 'BP_BattleDamages_C_ApplyDefense::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyDefense, CallFunc_CalculateDefense_ReturnValue) == 0x0000C0, "Member 'BP_BattleDamages_C_ApplyDefense::CallFunc_CalculateDefense_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyDefense, CallFunc_Format_ReturnValue) == 0x0000C8, "Member 'BP_BattleDamages_C_ApplyDefense::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.ApplyStraightDamages
// 0x0088 (0x0088 - 0x0000)
struct BP_BattleDamages_C_ApplyStraightDamages final
{
public:
	double                                        StraightDamage;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0008(0x0010)()
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0078(0x0010)()
};
static_assert(alignof(BP_BattleDamages_C_ApplyStraightDamages) == 0x000008, "Wrong alignment on BP_BattleDamages_C_ApplyStraightDamages");
static_assert(sizeof(BP_BattleDamages_C_ApplyStraightDamages) == 0x000088, "Wrong size on BP_BattleDamages_C_ApplyStraightDamages");
static_assert(offsetof(BP_BattleDamages_C_ApplyStraightDamages, StraightDamage) == 0x000000, "Member 'BP_BattleDamages_C_ApplyStraightDamages::StraightDamage' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyStraightDamages, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000008, "Member 'BP_BattleDamages_C_ApplyStraightDamages::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyStraightDamages, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_BattleDamages_C_ApplyStraightDamages::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyStraightDamages, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'BP_BattleDamages_C_ApplyStraightDamages::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyStraightDamages, K2Node_MakeArray_Array) == 0x000068, "Member 'BP_BattleDamages_C_ApplyStraightDamages::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyStraightDamages, CallFunc_Format_ReturnValue) == 0x000078, "Member 'BP_BattleDamages_C_ApplyStraightDamages::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.ApplyTargetClampAndRounding
// 0x0098 (0x0098 - 0x0000)
struct BP_BattleDamages_C_ApplyTargetClampAndRounding final
{
public:
	double                                        local_previousTotalDamage;                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0060(0x0010)()
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Round64_ReturnValue;                      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Round64_ReturnValue_1;                    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_Int64ToDouble_ReturnValue;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_Int64ToDouble_ReturnValue_1;         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_ApplyTargetClampAndRounding) == 0x000008, "Wrong alignment on BP_BattleDamages_C_ApplyTargetClampAndRounding");
static_assert(sizeof(BP_BattleDamages_C_ApplyTargetClampAndRounding) == 0x000098, "Wrong size on BP_BattleDamages_C_ApplyTargetClampAndRounding");
static_assert(offsetof(BP_BattleDamages_C_ApplyTargetClampAndRounding, local_previousTotalDamage) == 0x000000, "Member 'BP_BattleDamages_C_ApplyTargetClampAndRounding::local_previousTotalDamage' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyTargetClampAndRounding, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'BP_BattleDamages_C_ApplyTargetClampAndRounding::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyTargetClampAndRounding, K2Node_MakeArray_Array) == 0x000050, "Member 'BP_BattleDamages_C_ApplyTargetClampAndRounding::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyTargetClampAndRounding, CallFunc_Format_ReturnValue) == 0x000060, "Member 'BP_BattleDamages_C_ApplyTargetClampAndRounding::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyTargetClampAndRounding, CallFunc_FMin_ReturnValue) == 0x000070, "Member 'BP_BattleDamages_C_ApplyTargetClampAndRounding::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyTargetClampAndRounding, CallFunc_Round64_ReturnValue) == 0x000078, "Member 'BP_BattleDamages_C_ApplyTargetClampAndRounding::CallFunc_Round64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyTargetClampAndRounding, CallFunc_Round64_ReturnValue_1) == 0x000080, "Member 'BP_BattleDamages_C_ApplyTargetClampAndRounding::CallFunc_Round64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyTargetClampAndRounding, CallFunc_Conv_Int64ToDouble_ReturnValue) == 0x000088, "Member 'BP_BattleDamages_C_ApplyTargetClampAndRounding::CallFunc_Conv_Int64ToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ApplyTargetClampAndRounding, CallFunc_Conv_Int64ToDouble_ReturnValue_1) == 0x000090, "Member 'BP_BattleDamages_C_ApplyTargetClampAndRounding::CallFunc_Conv_Int64ToDouble_ReturnValue_1' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.CalculateDefense
// 0x0050 (0x0050 - 0x0000)
struct BP_BattleDamages_C_CalculateDefense final
{
public:
	double                                        AttackPower;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Defense;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Local_DamageCoefficient;                           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue_1;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_CalculateDefense) == 0x000008, "Wrong alignment on BP_BattleDamages_C_CalculateDefense");
static_assert(sizeof(BP_BattleDamages_C_CalculateDefense) == 0x000050, "Wrong size on BP_BattleDamages_C_CalculateDefense");
static_assert(offsetof(BP_BattleDamages_C_CalculateDefense, AttackPower) == 0x000000, "Member 'BP_BattleDamages_C_CalculateDefense::AttackPower' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CalculateDefense, Defense) == 0x000008, "Member 'BP_BattleDamages_C_CalculateDefense::Defense' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CalculateDefense, ReturnValue) == 0x000010, "Member 'BP_BattleDamages_C_CalculateDefense::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CalculateDefense, Local_DamageCoefficient) == 0x000018, "Member 'BP_BattleDamages_C_CalculateDefense::Local_DamageCoefficient' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CalculateDefense, CallFunc_SafeDivide_ReturnValue) == 0x000020, "Member 'BP_BattleDamages_C_CalculateDefense::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CalculateDefense, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_BattleDamages_C_CalculateDefense::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CalculateDefense, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_BattleDamages_C_CalculateDefense::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CalculateDefense, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'BP_BattleDamages_C_CalculateDefense::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CalculateDefense, CallFunc_SafeDivide_ReturnValue_1) == 0x000040, "Member 'BP_BattleDamages_C_CalculateDefense::CallFunc_SafeDivide_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CalculateDefense, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_BattleDamages_C_CalculateDefense::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.Cancel
// 0x0050 (0x0050 - 0x0000)
struct BP_BattleDamages_C_Cancel final
{
public:
	EMissReason                                   MissReason_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DebugReason;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0010)()
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_Cancel) == 0x000008, "Wrong alignment on BP_BattleDamages_C_Cancel");
static_assert(sizeof(BP_BattleDamages_C_Cancel) == 0x000050, "Wrong size on BP_BattleDamages_C_Cancel");
static_assert(offsetof(BP_BattleDamages_C_Cancel, MissReason_0) == 0x000000, "Member 'BP_BattleDamages_C_Cancel::MissReason_0' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_Cancel, DebugReason) == 0x000008, "Member 'BP_BattleDamages_C_Cancel::DebugReason' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_Cancel, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'BP_BattleDamages_C_Cancel::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_Cancel, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000028, "Member 'BP_BattleDamages_C_Cancel::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_Cancel, CallFunc_GetCharacterBattleBase_IsValid) == 0x000030, "Member 'BP_BattleDamages_C_Cancel::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_Cancel, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_BattleDamages_C_Cancel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_Cancel, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'BP_BattleDamages_C_Cancel::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.CheckEditableValue:Modify
// 0x0170 (0x0170 - 0x0000)
struct BP_BattleDamages_C_CheckEditableValue_Modify final
{
public:
	EDamageValueState                             Selection;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ValueName;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ChangeReason;                                      // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Allowed;                                           // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0040(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x00F8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0108(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0150(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_CheckEditableValue_Modify) == 0x000008, "Wrong alignment on BP_BattleDamages_C_CheckEditableValue_Modify");
static_assert(sizeof(BP_BattleDamages_C_CheckEditableValue_Modify) == 0x000170, "Wrong size on BP_BattleDamages_C_CheckEditableValue_Modify");
static_assert(offsetof(BP_BattleDamages_C_CheckEditableValue_Modify, Selection) == 0x000000, "Member 'BP_BattleDamages_C_CheckEditableValue_Modify::Selection' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CheckEditableValue_Modify, ValueName) == 0x000008, "Member 'BP_BattleDamages_C_CheckEditableValue_Modify::ValueName' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CheckEditableValue_Modify, ChangeReason) == 0x000018, "Member 'BP_BattleDamages_C_CheckEditableValue_Modify::ChangeReason' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CheckEditableValue_Modify, Allowed) == 0x000028, "Member 'BP_BattleDamages_C_CheckEditableValue_Modify::Allowed' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CheckEditableValue_Modify, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'BP_BattleDamages_C_CheckEditableValue_Modify::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CheckEditableValue_Modify, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000040, "Member 'BP_BattleDamages_C_CheckEditableValue_Modify::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CheckEditableValue_Modify, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'BP_BattleDamages_C_CheckEditableValue_Modify::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CheckEditableValue_Modify, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'BP_BattleDamages_C_CheckEditableValue_Modify::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CheckEditableValue_Modify, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000E0, "Member 'BP_BattleDamages_C_CheckEditableValue_Modify::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CheckEditableValue_Modify, K2Node_SwitchEnum_CmpSuccess) == 0x0000F0, "Member 'BP_BattleDamages_C_CheckEditableValue_Modify::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CheckEditableValue_Modify, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0000F8, "Member 'BP_BattleDamages_C_CheckEditableValue_Modify::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CheckEditableValue_Modify, K2Node_MakeStruct_FormatArgumentData_2) == 0x000108, "Member 'BP_BattleDamages_C_CheckEditableValue_Modify::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CheckEditableValue_Modify, K2Node_MakeArray_Array) == 0x000150, "Member 'BP_BattleDamages_C_CheckEditableValue_Modify::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CheckEditableValue_Modify, CallFunc_Format_ReturnValue) == 0x000160, "Member 'BP_BattleDamages_C_CheckEditableValue_Modify::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.CheckEditableValue_GetFinalValue
// 0x0098 (0x0098 - 0x0000)
struct BP_BattleDamages_C_CheckEditableValue_GetFinalValue final
{
public:
	EDamageValueState                             Selection;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Allowed;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_CheckEditableValue_GetFinalValue) == 0x000008, "Wrong alignment on BP_BattleDamages_C_CheckEditableValue_GetFinalValue");
static_assert(sizeof(BP_BattleDamages_C_CheckEditableValue_GetFinalValue) == 0x000098, "Wrong size on BP_BattleDamages_C_CheckEditableValue_GetFinalValue");
static_assert(offsetof(BP_BattleDamages_C_CheckEditableValue_GetFinalValue, Selection) == 0x000000, "Member 'BP_BattleDamages_C_CheckEditableValue_GetFinalValue::Selection' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CheckEditableValue_GetFinalValue, Allowed) == 0x000001, "Member 'BP_BattleDamages_C_CheckEditableValue_GetFinalValue::Allowed' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CheckEditableValue_GetFinalValue, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BP_BattleDamages_C_CheckEditableValue_GetFinalValue::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CheckEditableValue_GetFinalValue, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'BP_BattleDamages_C_CheckEditableValue_GetFinalValue::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CheckEditableValue_GetFinalValue, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'BP_BattleDamages_C_CheckEditableValue_GetFinalValue::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CheckEditableValue_GetFinalValue, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_BattleDamages_C_CheckEditableValue_GetFinalValue::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CheckEditableValue_GetFinalValue, K2Node_MakeArray_Array) == 0x000078, "Member 'BP_BattleDamages_C_CheckEditableValue_GetFinalValue::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CheckEditableValue_GetFinalValue, CallFunc_Format_ReturnValue) == 0x000088, "Member 'BP_BattleDamages_C_CheckEditableValue_GetFinalValue::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.CheckValidReason
// 0x0108 (0x0108 - 0x0000)
struct BP_BattleDamages_C_CheckValidReason final
{
public:
	class FText                                   Reason;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FString                                 Context;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ConstParm, ReferenceParm)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0010)()
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0090(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E8(0x0010)()
	class FText                                   CallFunc_AppendStack__Content__Result;             // 0x00F8(0x0010)()
};
static_assert(alignof(BP_BattleDamages_C_CheckValidReason) == 0x000008, "Wrong alignment on BP_BattleDamages_C_CheckValidReason");
static_assert(sizeof(BP_BattleDamages_C_CheckValidReason) == 0x000108, "Wrong size on BP_BattleDamages_C_CheckValidReason");
static_assert(offsetof(BP_BattleDamages_C_CheckValidReason, Reason) == 0x000000, "Member 'BP_BattleDamages_C_CheckValidReason::Reason' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CheckValidReason, Context) == 0x000010, "Member 'BP_BattleDamages_C_CheckValidReason::Context' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CheckValidReason, K2Node_MakeArray_Array) == 0x000020, "Member 'BP_BattleDamages_C_CheckValidReason::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CheckValidReason, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'BP_BattleDamages_C_CheckValidReason::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CheckValidReason, CallFunc_Array_Contains_ReturnValue) == 0x000040, "Member 'BP_BattleDamages_C_CheckValidReason::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CheckValidReason, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'BP_BattleDamages_C_CheckValidReason::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CheckValidReason, K2Node_MakeStruct_FormatArgumentData_1) == 0x000090, "Member 'BP_BattleDamages_C_CheckValidReason::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CheckValidReason, K2Node_MakeArray_Array_1) == 0x0000D8, "Member 'BP_BattleDamages_C_CheckValidReason::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CheckValidReason, CallFunc_Format_ReturnValue) == 0x0000E8, "Member 'BP_BattleDamages_C_CheckValidReason::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_CheckValidReason, CallFunc_AppendStack__Content__Result) == 0x0000F8, "Member 'BP_BattleDamages_C_CheckValidReason::CallFunc_AppendStack__Content__Result' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.ComputeDamageModifiers
// 0x0598 (0x0598 - 0x0000)
struct BP_BattleDamages_C_ComputeDamageModifiers final
{
public:
	TArray<struct FFDamageModifier>               Modifiers;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	double                                        InputBase;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        base;                                              // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           DamageLogs;                                        // 0x0020(0x0010)(Parm, OutParm)
	double                                        local_flatValuesSum;                               // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_basePrev;                                    // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           local_logs;                                        // 0x0040(0x0010)(Edit, BlueprintVisible)
	double                                        local_currentModifierValue;                        // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           local_currentLineInfo;                             // 0x0058(0x0010)(Edit, BlueprintVisible)
	double                                        local_base;                                        // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0078(0x0010)(ConstParm, ReferenceParm)
	TArray<class FString>                         Temp_wildcard_Temp_buffer_array_Variable;          // 0x0088(0x0010)(ConstParm, ReferenceParm)
	class FString                                 CallFunc_JoinStringArray_ReturnValue;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00A8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00B8(0x0048)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue_1;  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFDamageModifier                       CallFunc_Array_Get_Item;                           // 0x0128(0x0028)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0150(0x0048)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x01A0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01B0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01F8(0x0010)(ReferenceParm)
	TArray<class FText>                           K2Node_MakeArray_Array_1;                          // 0x0208(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0218(0x0010)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x3];                                      // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldBypassModifiers_ReturnValue;        // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0233(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0248(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0290(0x0010)(ReferenceParm)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x02A8(0x0010)()
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFDamageModifier>               Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable_1; // 0x02C8(0x0010)(ConstParm, ReferenceParm)
	struct FFDamageModifier                       CallFunc_Array_Get_Item_1;                         // 0x02D8(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_305[0x3];                                      // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0308(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0350(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0360(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x03A8(0x0010)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x03B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x03C8(0x0010)()
	class FText                                   CallFunc_AppendStack__Content__Result;             // 0x03D8(0x0010)()
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Array_Get_Item_2;                         // 0x03F0(0x0010)()
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_404[0x4];                                      // 0x0404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0408(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41C[0x4];                                      // 0x041C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0420(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0438(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x044C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x044D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44E[0x2];                                      // 0x044E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFDamageModifier>               Temp_wildcard_Temp_buffer_array_Variable_1;        // 0x0450(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_464[0x4];                                      // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0468(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_5;                          // 0x04B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x04C8(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x04D8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x04E8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_6;                          // 0x0530(0x0010)(ReferenceParm)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_5;                     // 0x0548(0x0010)()
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_561[0x7];                                      // 0x0561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0568(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57C[0x4];                                      // 0x057C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue_2;  // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_ComputeDamageModifiers) == 0x000008, "Wrong alignment on BP_BattleDamages_C_ComputeDamageModifiers");
static_assert(sizeof(BP_BattleDamages_C_ComputeDamageModifiers) == 0x000598, "Wrong size on BP_BattleDamages_C_ComputeDamageModifiers");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, Modifiers) == 0x000000, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::Modifiers' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, InputBase) == 0x000010, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::InputBase' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, base) == 0x000018, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::base' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, DamageLogs) == 0x000020, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::DamageLogs' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, local_flatValuesSum) == 0x000030, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::local_flatValuesSum' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, local_basePrev) == 0x000038, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::local_basePrev' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, local_logs) == 0x000040, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::local_logs' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, local_currentModifierValue) == 0x000050, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::local_currentModifierValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, local_currentLineInfo) == 0x000058, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::local_currentLineInfo' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, local_base) == 0x000068, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::local_base' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000078, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, Temp_wildcard_Temp_buffer_array_Variable) == 0x000088, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_JoinStringArray_ReturnValue) == 0x000098, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_JoinStringArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Conv_StringToText_ReturnValue) == 0x0000A8, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, K2Node_MakeStruct_FormatArgumentData) == 0x0000B8, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, Temp_int_Loop_Counter_Variable) == 0x000100, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Add_IntInt_ReturnValue) == 0x000104, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, Temp_int_Array_Index_Variable) == 0x000108, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x00010C, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, Temp_int_Loop_Counter_Variable_1) == 0x000110, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Less_IntInt_ReturnValue) == 0x000114, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Add_IntInt_ReturnValue_1) == 0x000118, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, Temp_int_Array_Index_Variable_1) == 0x00011C, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_IsPackagedForDistribution_ReturnValue_1) == 0x000120, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_IsPackagedForDistribution_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Array_Get_Item) == 0x000128, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, K2Node_MakeStruct_FormatArgumentData_1) == 0x000150, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, K2Node_SwitchEnum_CmpSuccess) == 0x000198, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Conv_DoubleToText_ReturnValue) == 0x0001A0, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001B0, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, K2Node_MakeArray_Array) == 0x0001F8, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, K2Node_MakeArray_Array_1) == 0x000208, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Format_ReturnValue) == 0x000218, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_IsValid_ReturnValue) == 0x000228, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Array_Add_ReturnValue) == 0x00022C, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Not_PreBool_ReturnValue) == 0x000230, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_ShouldBypassModifiers_ReturnValue) == 0x000231, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_ShouldBypassModifiers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Not_PreBool_ReturnValue_1) == 0x000232, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_BooleanOR_ReturnValue) == 0x000233, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000238, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000240, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, K2Node_MakeStruct_FormatArgumentData_3) == 0x000248, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, K2Node_MakeArray_Array_2) == 0x000290, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0002A0, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Format_ReturnValue_1) == 0x0002A8, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, Temp_int_Loop_Counter_Variable_2) == 0x0002B8, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, Temp_int_Array_Index_Variable_2) == 0x0002BC, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Add_IntInt_ReturnValue_2) == 0x0002C0, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable_1) == 0x0002C8, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Array_Get_Item_1) == 0x0002D8, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Array_Length_ReturnValue_1) == 0x000300, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Less_IntInt_ReturnValue_1) == 0x000304, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, K2Node_MakeStruct_FormatArgumentData_4) == 0x000308, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, K2Node_MakeArray_Array_3) == 0x000350, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, K2Node_MakeStruct_FormatArgumentData_5) == 0x000360, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Format_ReturnValue_2) == 0x0003A8, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, K2Node_MakeArray_Array_4) == 0x0003B8, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Format_ReturnValue_3) == 0x0003C8, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_AppendStack__Content__Result) == 0x0003D8, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_AppendStack__Content__Result' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, K2Node_SwitchEnum_CmpSuccess_1) == 0x0003E8, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Array_Get_Item_2) == 0x0003F0, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Array_Add_ReturnValue_1) == 0x000400, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Conv_TextToString_ReturnValue) == 0x000408, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Array_Length_ReturnValue_2) == 0x000418, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Concat_StrStr_ReturnValue) == 0x000420, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Less_IntInt_ReturnValue_2) == 0x000430, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000438, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Array_Length_ReturnValue_3) == 0x000448, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x00044C, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00044D, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, Temp_wildcard_Temp_buffer_array_Variable_1) == 0x000450, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::Temp_wildcard_Temp_buffer_array_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Array_Add_ReturnValue_2) == 0x000460, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, K2Node_MakeStruct_FormatArgumentData_6) == 0x000468, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0004B0, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, K2Node_MakeArray_Array_5) == 0x0004B8, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x0004C8, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Format_ReturnValue_4) == 0x0004D8, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, K2Node_MakeStruct_FormatArgumentData_7) == 0x0004E8, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, K2Node_MakeArray_Array_6) == 0x000530, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000540, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Format_ReturnValue_5) == 0x000548, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Format_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000558, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, Temp_bool_Variable) == 0x000560, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, K2Node_Select_Default) == 0x000568, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Array_Add_ReturnValue_3) == 0x000578, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000580, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000588, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ComputeDamageModifiers, CallFunc_IsPackagedForDistribution_ReturnValue_2) == 0x000590, "Member 'BP_BattleDamages_C_ComputeDamageModifiers::CallFunc_IsPackagedForDistribution_ReturnValue_2' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.Finish
// 0x0001 (0x0001 - 0x0000)
struct BP_BattleDamages_C_Finish final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_Finish) == 0x000001, "Wrong alignment on BP_BattleDamages_C_Finish");
static_assert(sizeof(BP_BattleDamages_C_Finish) == 0x000001, "Wrong size on BP_BattleDamages_C_Finish");
static_assert(offsetof(BP_BattleDamages_C_Finish, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_BattleDamages_C_Finish::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.GetAffinityType
// 0x0001 (0x0001 - 0x0000)
struct BP_BattleDamages_C_GetAffinityType final
{
public:
	EElementalAffinity                            BaseTypeAffinity_0;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_GetAffinityType) == 0x000001, "Wrong alignment on BP_BattleDamages_C_GetAffinityType");
static_assert(sizeof(BP_BattleDamages_C_GetAffinityType) == 0x000001, "Wrong size on BP_BattleDamages_C_GetAffinityType");
static_assert(offsetof(BP_BattleDamages_C_GetAffinityType, BaseTypeAffinity_0) == 0x000000, "Member 'BP_BattleDamages_C_GetAffinityType::BaseTypeAffinity_0' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.GetBreakBarDamageMultiplier
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleDamages_C_GetBreakBarDamageMultiplier final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_GetBreakBarDamageMultiplier) == 0x000008, "Wrong alignment on BP_BattleDamages_C_GetBreakBarDamageMultiplier");
static_assert(sizeof(BP_BattleDamages_C_GetBreakBarDamageMultiplier) == 0x000008, "Wrong size on BP_BattleDamages_C_GetBreakBarDamageMultiplier");
static_assert(offsetof(BP_BattleDamages_C_GetBreakBarDamageMultiplier, ReturnValue) == 0x000000, "Member 'BP_BattleDamages_C_GetBreakBarDamageMultiplier::ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.GetCriticalRollToBeat
// 0x0030 (0x0030 - 0x0000)
struct BP_BattleDamages_C_GetCriticalRollToBeat final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_StatType                               Temp_byte_Variable;                                // 0x0008(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_GetCriticalRollToBeat) == 0x000008, "Wrong alignment on BP_BattleDamages_C_GetCriticalRollToBeat");
static_assert(sizeof(BP_BattleDamages_C_GetCriticalRollToBeat) == 0x000030, "Wrong size on BP_BattleDamages_C_GetCriticalRollToBeat");
static_assert(offsetof(BP_BattleDamages_C_GetCriticalRollToBeat, Value) == 0x000000, "Member 'BP_BattleDamages_C_GetCriticalRollToBeat::Value' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_GetCriticalRollToBeat, Temp_byte_Variable) == 0x000008, "Member 'BP_BattleDamages_C_GetCriticalRollToBeat::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_GetCriticalRollToBeat, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_BattleDamages_C_GetCriticalRollToBeat::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_GetCriticalRollToBeat, CallFunc_Map_Find_Value) == 0x000018, "Member 'BP_BattleDamages_C_GetCriticalRollToBeat::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_GetCriticalRollToBeat, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'BP_BattleDamages_C_GetCriticalRollToBeat::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_GetCriticalRollToBeat, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_BattleDamages_C_GetCriticalRollToBeat::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.GetFeedbackReason
// 0x0050 (0x0050 - 0x0000)
struct BP_BattleDamages_C_GetFeedbackReason final
{
public:
	bool                                          HasFeedback;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   FeedbackReasonText;                                // 0x0008(0x0010)(Parm, OutParm)
	struct FLinearColor                           FeedbackReasonColor;                               // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasFeedbackReason_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetFeedbackReason_FeedbackReasonText;     // 0x0030(0x0010)()
	struct FLinearColor                           CallFunc_GetFeedbackReason_FeedbackReasonColor;    // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_GetFeedbackReason) == 0x000008, "Wrong alignment on BP_BattleDamages_C_GetFeedbackReason");
static_assert(sizeof(BP_BattleDamages_C_GetFeedbackReason) == 0x000050, "Wrong size on BP_BattleDamages_C_GetFeedbackReason");
static_assert(offsetof(BP_BattleDamages_C_GetFeedbackReason, HasFeedback) == 0x000000, "Member 'BP_BattleDamages_C_GetFeedbackReason::HasFeedback' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_GetFeedbackReason, FeedbackReasonText) == 0x000008, "Member 'BP_BattleDamages_C_GetFeedbackReason::FeedbackReasonText' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_GetFeedbackReason, FeedbackReasonColor) == 0x000018, "Member 'BP_BattleDamages_C_GetFeedbackReason::FeedbackReasonColor' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_GetFeedbackReason, CallFunc_HasFeedbackReason_ReturnValue) == 0x000028, "Member 'BP_BattleDamages_C_GetFeedbackReason::CallFunc_HasFeedbackReason_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_GetFeedbackReason, CallFunc_GetFeedbackReason_FeedbackReasonText) == 0x000030, "Member 'BP_BattleDamages_C_GetFeedbackReason::CallFunc_GetFeedbackReason_FeedbackReasonText' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_GetFeedbackReason, CallFunc_GetFeedbackReason_FeedbackReasonColor) == 0x000040, "Member 'BP_BattleDamages_C_GetFeedbackReason::CallFunc_GetFeedbackReason_FeedbackReasonColor' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.GetFinalBaseElement
// 0x0020 (0x0020 - 0x0000)
struct BP_BattleDamages_C_GetFinalBaseElement final
{
public:
	EAttackType                                   AttackElement;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_AppendStack__Content__Result;             // 0x0008(0x0010)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_GetFinalBaseElement) == 0x000008, "Wrong alignment on BP_BattleDamages_C_GetFinalBaseElement");
static_assert(sizeof(BP_BattleDamages_C_GetFinalBaseElement) == 0x000020, "Wrong size on BP_BattleDamages_C_GetFinalBaseElement");
static_assert(offsetof(BP_BattleDamages_C_GetFinalBaseElement, AttackElement) == 0x000000, "Member 'BP_BattleDamages_C_GetFinalBaseElement::AttackElement' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_GetFinalBaseElement, CallFunc_AppendStack__Content__Result) == 0x000008, "Member 'BP_BattleDamages_C_GetFinalBaseElement::CallFunc_AppendStack__Content__Result' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_GetFinalBaseElement, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'BP_BattleDamages_C_GetFinalBaseElement::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.GetFinalBreakBarDamageAmount
// 0x0028 (0x0028 - 0x0000)
struct BP_BattleDamages_C_GetFinalBreakBarDamageAmount final
{
public:
	int64                                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetBreakBarDamageMultiplier_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetFinalDamages_FinalDamages;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Round64_ReturnValue;                      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_GetFinalBreakBarDamageAmount) == 0x000008, "Wrong alignment on BP_BattleDamages_C_GetFinalBreakBarDamageAmount");
static_assert(sizeof(BP_BattleDamages_C_GetFinalBreakBarDamageAmount) == 0x000028, "Wrong size on BP_BattleDamages_C_GetFinalBreakBarDamageAmount");
static_assert(offsetof(BP_BattleDamages_C_GetFinalBreakBarDamageAmount, ReturnValue) == 0x000000, "Member 'BP_BattleDamages_C_GetFinalBreakBarDamageAmount::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_GetFinalBreakBarDamageAmount, CallFunc_GetBreakBarDamageMultiplier_ReturnValue) == 0x000008, "Member 'BP_BattleDamages_C_GetFinalBreakBarDamageAmount::CallFunc_GetBreakBarDamageMultiplier_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_GetFinalBreakBarDamageAmount, CallFunc_GetFinalDamages_FinalDamages) == 0x000010, "Member 'BP_BattleDamages_C_GetFinalBreakBarDamageAmount::CallFunc_GetFinalDamages_FinalDamages' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_GetFinalBreakBarDamageAmount, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_BattleDamages_C_GetFinalBreakBarDamageAmount::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_GetFinalBreakBarDamageAmount, CallFunc_Round64_ReturnValue) == 0x000020, "Member 'BP_BattleDamages_C_GetFinalBreakBarDamageAmount::CallFunc_Round64_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.GetHitSoundOverride
// 0x0010 (0x0010 - 0x0000)
struct BP_BattleDamages_C_GetHitSoundOverride final
{
public:
	class USoundBase*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetHitSoundOverride_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_GetHitSoundOverride) == 0x000008, "Wrong alignment on BP_BattleDamages_C_GetHitSoundOverride");
static_assert(sizeof(BP_BattleDamages_C_GetHitSoundOverride) == 0x000010, "Wrong size on BP_BattleDamages_C_GetHitSoundOverride");
static_assert(offsetof(BP_BattleDamages_C_GetHitSoundOverride, ReturnValue) == 0x000000, "Member 'BP_BattleDamages_C_GetHitSoundOverride::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_GetHitSoundOverride, CallFunc_GetHitSoundOverride_ReturnValue) == 0x000008, "Member 'BP_BattleDamages_C_GetHitSoundOverride::CallFunc_GetHitSoundOverride_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.GetIgnoreMarkedRemoval
// 0x0002 (0x0002 - 0x0000)
struct BP_BattleDamages_C_GetIgnoreMarkedRemoval final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIgnoreMarkedRemoval_ReturnValue;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_GetIgnoreMarkedRemoval) == 0x000001, "Wrong alignment on BP_BattleDamages_C_GetIgnoreMarkedRemoval");
static_assert(sizeof(BP_BattleDamages_C_GetIgnoreMarkedRemoval) == 0x000002, "Wrong size on BP_BattleDamages_C_GetIgnoreMarkedRemoval");
static_assert(offsetof(BP_BattleDamages_C_GetIgnoreMarkedRemoval, ReturnValue) == 0x000000, "Member 'BP_BattleDamages_C_GetIgnoreMarkedRemoval::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_GetIgnoreMarkedRemoval, CallFunc_GetIgnoreMarkedRemoval_ReturnValue) == 0x000001, "Member 'BP_BattleDamages_C_GetIgnoreMarkedRemoval::CallFunc_GetIgnoreMarkedRemoval_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.GetInputBaseElement
// 0x0001 (0x0001 - 0x0000)
struct BP_BattleDamages_C_GetInputBaseElement final
{
public:
	EAttackType                                   InputAttackType;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_GetInputBaseElement) == 0x000001, "Wrong alignment on BP_BattleDamages_C_GetInputBaseElement");
static_assert(sizeof(BP_BattleDamages_C_GetInputBaseElement) == 0x000001, "Wrong size on BP_BattleDamages_C_GetInputBaseElement");
static_assert(offsetof(BP_BattleDamages_C_GetInputBaseElement, InputAttackType) == 0x000000, "Member 'BP_BattleDamages_C_GetInputBaseElement::InputAttackType' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.GetInputDamageMultiplier
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleDamages_C_GetInputDamageMultiplier final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_GetInputDamageMultiplier) == 0x000008, "Wrong alignment on BP_BattleDamages_C_GetInputDamageMultiplier");
static_assert(sizeof(BP_BattleDamages_C_GetInputDamageMultiplier) == 0x000008, "Wrong size on BP_BattleDamages_C_GetInputDamageMultiplier");
static_assert(offsetof(BP_BattleDamages_C_GetInputDamageMultiplier, ReturnValue) == 0x000000, "Member 'BP_BattleDamages_C_GetInputDamageMultiplier::ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.GetIsCriticalHit
// 0x0018 (0x0018 - 0x0000)
struct BP_BattleDamages_C_GetIsCriticalHit final
{
public:
	bool                                          IsCritical;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_AppendStack__Content__Result;             // 0x0008(0x0010)()
};
static_assert(alignof(BP_BattleDamages_C_GetIsCriticalHit) == 0x000008, "Wrong alignment on BP_BattleDamages_C_GetIsCriticalHit");
static_assert(sizeof(BP_BattleDamages_C_GetIsCriticalHit) == 0x000018, "Wrong size on BP_BattleDamages_C_GetIsCriticalHit");
static_assert(offsetof(BP_BattleDamages_C_GetIsCriticalHit, IsCritical) == 0x000000, "Member 'BP_BattleDamages_C_GetIsCriticalHit::IsCritical' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_GetIsCriticalHit, CallFunc_AppendStack__Content__Result) == 0x000008, "Member 'BP_BattleDamages_C_GetIsCriticalHit::CallFunc_AppendStack__Content__Result' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.GetIsResistant
// 0x0002 (0x0002 - 0x0000)
struct BP_BattleDamages_C_GetIsResistant final
{
public:
	bool                                          IsResistant;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_GetIsResistant) == 0x000001, "Wrong alignment on BP_BattleDamages_C_GetIsResistant");
static_assert(sizeof(BP_BattleDamages_C_GetIsResistant) == 0x000002, "Wrong size on BP_BattleDamages_C_GetIsResistant");
static_assert(offsetof(BP_BattleDamages_C_GetIsResistant, IsResistant) == 0x000000, "Member 'BP_BattleDamages_C_GetIsResistant::IsResistant' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_GetIsResistant, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_BattleDamages_C_GetIsResistant::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.GetIsWeakness
// 0x0002 (0x0002 - 0x0000)
struct BP_BattleDamages_C_GetIsWeakness final
{
public:
	bool                                          IsWeakness;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_GetIsWeakness) == 0x000001, "Wrong alignment on BP_BattleDamages_C_GetIsWeakness");
static_assert(sizeof(BP_BattleDamages_C_GetIsWeakness) == 0x000002, "Wrong size on BP_BattleDamages_C_GetIsWeakness");
static_assert(offsetof(BP_BattleDamages_C_GetIsWeakness, IsWeakness) == 0x000000, "Member 'BP_BattleDamages_C_GetIsWeakness::IsWeakness' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_GetIsWeakness, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_BattleDamages_C_GetIsWeakness::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.GetMissReason
// 0x0001 (0x0001 - 0x0000)
struct BP_BattleDamages_C_GetMissReason final
{
public:
	EMissReason                                   ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_GetMissReason) == 0x000001, "Wrong alignment on BP_BattleDamages_C_GetMissReason");
static_assert(sizeof(BP_BattleDamages_C_GetMissReason) == 0x000001, "Wrong size on BP_BattleDamages_C_GetMissReason");
static_assert(offsetof(BP_BattleDamages_C_GetMissReason, ReturnValue) == 0x000000, "Member 'BP_BattleDamages_C_GetMissReason::ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.GetTargetCharacter
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleDamages_C_GetTargetCharacter final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        NewParam;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_GetTargetCharacter) == 0x000008, "Wrong alignment on BP_BattleDamages_C_GetTargetCharacter");
static_assert(sizeof(BP_BattleDamages_C_GetTargetCharacter) == 0x000008, "Wrong size on BP_BattleDamages_C_GetTargetCharacter");
static_assert(offsetof(BP_BattleDamages_C_GetTargetCharacter, NewParam) == 0x000000, "Member 'BP_BattleDamages_C_GetTargetCharacter::NewParam' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.Init
// 0x0100 (0x0100 - 0x0000)
struct BP_BattleDamages_C_Init final
{
public:
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Debug_BattleDamageDetails_C*       CallFunc_SpawnObject_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0048)(HasGetValueTypeHash)
	TScriptInterface<class IBPI_Debug_BattleListener_C> K2Node_DynamicCast_AsBPI_Debug_Battle_Listener; // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetAttackPowerForType_Power;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0090(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0010)()
};
static_assert(alignof(BP_BattleDamages_C_Init) == 0x000008, "Wrong alignment on BP_BattleDamages_C_Init");
static_assert(sizeof(BP_BattleDamages_C_Init) == 0x000100, "Wrong size on BP_BattleDamages_C_Init");
static_assert(offsetof(BP_BattleDamages_C_Init, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000000, "Member 'BP_BattleDamages_C_Init::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_Init, CallFunc_SpawnObject_ReturnValue) == 0x000008, "Member 'BP_BattleDamages_C_Init::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_Init, CallFunc_GetBattleManager_ReturnValue) == 0x000010, "Member 'BP_BattleDamages_C_Init::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_Init, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'BP_BattleDamages_C_Init::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_Init, K2Node_DynamicCast_AsBPI_Debug_Battle_Listener) == 0x000060, "Member 'BP_BattleDamages_C_Init::K2Node_DynamicCast_AsBPI_Debug_Battle_Listener' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_Init, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_BattleDamages_C_Init::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_Init, CallFunc_GetAttackPowerForType_Power) == 0x000078, "Member 'BP_BattleDamages_C_Init::CallFunc_GetAttackPowerForType_Power' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_Init, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000080, "Member 'BP_BattleDamages_C_Init::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_Init, CallFunc_FCeil_ReturnValue) == 0x000084, "Member 'BP_BattleDamages_C_Init::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_Init, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000088, "Member 'BP_BattleDamages_C_Init::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_Init, K2Node_MakeStruct_FormatArgumentData_1) == 0x000090, "Member 'BP_BattleDamages_C_Init::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_Init, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'BP_BattleDamages_C_Init::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_Init, K2Node_MakeArray_Array) == 0x0000E0, "Member 'BP_BattleDamages_C_Init::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_Init, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'BP_BattleDamages_C_Init::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.InitAffinities
// 0x0002 (0x0002 - 0x0000)
struct BP_BattleDamages_C_InitAffinities final
{
public:
	EAttackType                                   CallFunc_GetFinalBaseElement_AttackElement;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EElementalAffinity                            CallFunc_GetElementalAffinity_Affinity;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_InitAffinities) == 0x000001, "Wrong alignment on BP_BattleDamages_C_InitAffinities");
static_assert(sizeof(BP_BattleDamages_C_InitAffinities) == 0x000002, "Wrong size on BP_BattleDamages_C_InitAffinities");
static_assert(offsetof(BP_BattleDamages_C_InitAffinities, CallFunc_GetFinalBaseElement_AttackElement) == 0x000000, "Member 'BP_BattleDamages_C_InitAffinities::CallFunc_GetFinalBaseElement_AttackElement' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_InitAffinities, CallFunc_GetElementalAffinity_Affinity) == 0x000001, "Member 'BP_BattleDamages_C_InitAffinities::CallFunc_GetElementalAffinity_Affinity' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.InitFinalDamages
// 0x0078 (0x0078 - 0x0000)
struct BP_BattleDamages_C_InitFinalDamages final
{
public:
	double                                        CallFunc_GetInputDamages_Base_RawDamages;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0060(0x0010)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_InitFinalDamages) == 0x000008, "Wrong alignment on BP_BattleDamages_C_InitFinalDamages");
static_assert(sizeof(BP_BattleDamages_C_InitFinalDamages) == 0x000078, "Wrong size on BP_BattleDamages_C_InitFinalDamages");
static_assert(offsetof(BP_BattleDamages_C_InitFinalDamages, CallFunc_GetInputDamages_Base_RawDamages) == 0x000000, "Member 'BP_BattleDamages_C_InitFinalDamages::CallFunc_GetInputDamages_Base_RawDamages' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_InitFinalDamages, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'BP_BattleDamages_C_InitFinalDamages::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_InitFinalDamages, K2Node_MakeArray_Array) == 0x000050, "Member 'BP_BattleDamages_C_InitFinalDamages::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_InitFinalDamages, CallFunc_Format_ReturnValue) == 0x000060, "Member 'BP_BattleDamages_C_InitFinalDamages::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_InitFinalDamages, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_BattleDamages_C_InitFinalDamages::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.IsDeathtouch
// 0x0003 (0x0003 - 0x0000)
struct BP_BattleDamages_C_IsDeathtouch final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDeathTouch_ReturnValue;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_IsDeathtouch) == 0x000001, "Wrong alignment on BP_BattleDamages_C_IsDeathtouch");
static_assert(sizeof(BP_BattleDamages_C_IsDeathtouch) == 0x000003, "Wrong size on BP_BattleDamages_C_IsDeathtouch");
static_assert(offsetof(BP_BattleDamages_C_IsDeathtouch, ReturnValue) == 0x000000, "Member 'BP_BattleDamages_C_IsDeathtouch::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_IsDeathtouch, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_BattleDamages_C_IsDeathtouch::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_IsDeathtouch, CallFunc_IsDeathTouch_ReturnValue) == 0x000002, "Member 'BP_BattleDamages_C_IsDeathtouch::CallFunc_IsDeathTouch_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.LoadFromBuilder
// 0x00D0 (0x00D0 - 0x0000)
struct BP_BattleDamages_C_LoadFromBuilder final
{
public:
	class UBP_BattleDamageBuilder_C*              Builder;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetBreakBarMultiplier_INPUT_BreakBarMultiplier; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCriticalHitDamageMultiplier_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCriticalHitChanceModifier_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDefenseAgainstElement_Defense;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0010)()
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0010)()
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_LoadFromBuilder) == 0x000008, "Wrong alignment on BP_BattleDamages_C_LoadFromBuilder");
static_assert(sizeof(BP_BattleDamages_C_LoadFromBuilder) == 0x0000D0, "Wrong size on BP_BattleDamages_C_LoadFromBuilder");
static_assert(offsetof(BP_BattleDamages_C_LoadFromBuilder, Builder) == 0x000000, "Member 'BP_BattleDamages_C_LoadFromBuilder::Builder' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_LoadFromBuilder, CallFunc_GetBreakBarMultiplier_INPUT_BreakBarMultiplier) == 0x000008, "Member 'BP_BattleDamages_C_LoadFromBuilder::CallFunc_GetBreakBarMultiplier_INPUT_BreakBarMultiplier' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_LoadFromBuilder, CallFunc_GetCriticalHitDamageMultiplier_ReturnValue) == 0x000010, "Member 'BP_BattleDamages_C_LoadFromBuilder::CallFunc_GetCriticalHitDamageMultiplier_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_LoadFromBuilder, CallFunc_GetCriticalHitChanceModifier_ReturnValue) == 0x000018, "Member 'BP_BattleDamages_C_LoadFromBuilder::CallFunc_GetCriticalHitChanceModifier_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_LoadFromBuilder, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000020, "Member 'BP_BattleDamages_C_LoadFromBuilder::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_LoadFromBuilder, CallFunc_GetDefenseAgainstElement_Defense) == 0x000030, "Member 'BP_BattleDamages_C_LoadFromBuilder::CallFunc_GetDefenseAgainstElement_Defense' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_LoadFromBuilder, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'BP_BattleDamages_C_LoadFromBuilder::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_LoadFromBuilder, CallFunc_FCeil_ReturnValue) == 0x000048, "Member 'BP_BattleDamages_C_LoadFromBuilder::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_LoadFromBuilder, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'BP_BattleDamages_C_LoadFromBuilder::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_LoadFromBuilder, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000098, "Member 'BP_BattleDamages_C_LoadFromBuilder::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_LoadFromBuilder, K2Node_MakeArray_Array) == 0x0000A0, "Member 'BP_BattleDamages_C_LoadFromBuilder::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_LoadFromBuilder, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'BP_BattleDamages_C_LoadFromBuilder::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_LoadFromBuilder, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'BP_BattleDamages_C_LoadFromBuilder::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_LoadFromBuilder, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'BP_BattleDamages_C_LoadFromBuilder::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_LoadFromBuilder, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x0000C9, "Member 'BP_BattleDamages_C_LoadFromBuilder::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.LogModifier
// 0x0028 (0x0028 - 0x0000)
struct BP_BattleDamages_C_LogModifier final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_LogModifier) == 0x000008, "Wrong alignment on BP_BattleDamages_C_LogModifier");
static_assert(sizeof(BP_BattleDamages_C_LogModifier) == 0x000028, "Wrong size on BP_BattleDamages_C_LogModifier");
static_assert(offsetof(BP_BattleDamages_C_LogModifier, Text) == 0x000000, "Member 'BP_BattleDamages_C_LogModifier::Text' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_LogModifier, CallFunc_Conv_TextToString_ReturnValue) == 0x000010, "Member 'BP_BattleDamages_C_LogModifier::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_LogModifier, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_BattleDamages_C_LogModifier::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.ModifyBaseDamageElement
// 0x0250 (0x0250 - 0x0000)
struct BP_BattleDamages_C_ModifyBaseDamageElement final
{
public:
	EAttackType                                   NewAttackType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Reason;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	EAttackType                                   local_PreviousAttackType;                          // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_AppendStack__Content__Result;             // 0x0020(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0078(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_AppendStack__Content__Result_1;           // 0x00C0(0x0010)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x00D8(0x0010)()
	bool                                          CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue; // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0110(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0120(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0130(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0178(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01C0(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x01D0(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0218(0x0010)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0228(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0238(0x0010)()
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_ModifyBaseDamageElement) == 0x000008, "Wrong alignment on BP_BattleDamages_C_ModifyBaseDamageElement");
static_assert(sizeof(BP_BattleDamages_C_ModifyBaseDamageElement) == 0x000250, "Wrong size on BP_BattleDamages_C_ModifyBaseDamageElement");
static_assert(offsetof(BP_BattleDamages_C_ModifyBaseDamageElement, NewAttackType) == 0x000000, "Member 'BP_BattleDamages_C_ModifyBaseDamageElement::NewAttackType' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyBaseDamageElement, Reason) == 0x000008, "Member 'BP_BattleDamages_C_ModifyBaseDamageElement::Reason' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyBaseDamageElement, local_PreviousAttackType) == 0x000018, "Member 'BP_BattleDamages_C_ModifyBaseDamageElement::local_PreviousAttackType' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyBaseDamageElement, CallFunc_AppendStack__Content__Result) == 0x000020, "Member 'BP_BattleDamages_C_ModifyBaseDamageElement::CallFunc_AppendStack__Content__Result' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyBaseDamageElement, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_BattleDamages_C_ModifyBaseDamageElement::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyBaseDamageElement, K2Node_MakeStruct_FormatArgumentData_1) == 0x000078, "Member 'BP_BattleDamages_C_ModifyBaseDamageElement::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyBaseDamageElement, CallFunc_AppendStack__Content__Result_1) == 0x0000C0, "Member 'BP_BattleDamages_C_ModifyBaseDamageElement::CallFunc_AppendStack__Content__Result_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyBaseDamageElement, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000D0, "Member 'BP_BattleDamages_C_ModifyBaseDamageElement::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyBaseDamageElement, CallFunc_MakeLiteralText_ReturnValue) == 0x0000D8, "Member 'BP_BattleDamages_C_ModifyBaseDamageElement::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyBaseDamageElement, CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue) == 0x0000E8, "Member 'BP_BattleDamages_C_ModifyBaseDamageElement::CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyBaseDamageElement, CallFunc_IsValid_ReturnValue) == 0x0000E9, "Member 'BP_BattleDamages_C_ModifyBaseDamageElement::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyBaseDamageElement, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000F0, "Member 'BP_BattleDamages_C_ModifyBaseDamageElement::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyBaseDamageElement, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000100, "Member 'BP_BattleDamages_C_ModifyBaseDamageElement::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyBaseDamageElement, CallFunc_Conv_StringToText_ReturnValue) == 0x000110, "Member 'BP_BattleDamages_C_ModifyBaseDamageElement::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyBaseDamageElement, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000120, "Member 'BP_BattleDamages_C_ModifyBaseDamageElement::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyBaseDamageElement, K2Node_MakeStruct_FormatArgumentData_2) == 0x000130, "Member 'BP_BattleDamages_C_ModifyBaseDamageElement::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyBaseDamageElement, K2Node_MakeStruct_FormatArgumentData_3) == 0x000178, "Member 'BP_BattleDamages_C_ModifyBaseDamageElement::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyBaseDamageElement, K2Node_MakeArray_Array) == 0x0001C0, "Member 'BP_BattleDamages_C_ModifyBaseDamageElement::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyBaseDamageElement, K2Node_MakeStruct_FormatArgumentData_4) == 0x0001D0, "Member 'BP_BattleDamages_C_ModifyBaseDamageElement::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyBaseDamageElement, CallFunc_Format_ReturnValue) == 0x000218, "Member 'BP_BattleDamages_C_ModifyBaseDamageElement::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyBaseDamageElement, K2Node_MakeArray_Array_1) == 0x000228, "Member 'BP_BattleDamages_C_ModifyBaseDamageElement::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyBaseDamageElement, CallFunc_Format_ReturnValue_1) == 0x000238, "Member 'BP_BattleDamages_C_ModifyBaseDamageElement::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyBaseDamageElement, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000248, "Member 'BP_BattleDamages_C_ModifyBaseDamageElement::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.ModifyFloatRef
// 0x0190 (0x0190 - 0x0000)
struct BP_BattleDamages_C_ModifyFloatRef final
{
public:
	double                                        TargetVariable;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NewValue;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 VarName;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   Reason;                                            // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	double                                        local_previousValue;                               // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0080(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00C8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00D8(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0120(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0170(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0180(0x0010)()
};
static_assert(alignof(BP_BattleDamages_C_ModifyFloatRef) == 0x000008, "Wrong alignment on BP_BattleDamages_C_ModifyFloatRef");
static_assert(sizeof(BP_BattleDamages_C_ModifyFloatRef) == 0x000190, "Wrong size on BP_BattleDamages_C_ModifyFloatRef");
static_assert(offsetof(BP_BattleDamages_C_ModifyFloatRef, TargetVariable) == 0x000000, "Member 'BP_BattleDamages_C_ModifyFloatRef::TargetVariable' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyFloatRef, NewValue) == 0x000008, "Member 'BP_BattleDamages_C_ModifyFloatRef::NewValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyFloatRef, VarName) == 0x000010, "Member 'BP_BattleDamages_C_ModifyFloatRef::VarName' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyFloatRef, Reason) == 0x000020, "Member 'BP_BattleDamages_C_ModifyFloatRef::Reason' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyFloatRef, local_previousValue) == 0x000030, "Member 'BP_BattleDamages_C_ModifyFloatRef::local_previousValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyFloatRef, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'BP_BattleDamages_C_ModifyFloatRef::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyFloatRef, K2Node_MakeStruct_FormatArgumentData_1) == 0x000080, "Member 'BP_BattleDamages_C_ModifyFloatRef::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyFloatRef, CallFunc_Conv_StringToText_ReturnValue) == 0x0000C8, "Member 'BP_BattleDamages_C_ModifyFloatRef::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyFloatRef, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000D8, "Member 'BP_BattleDamages_C_ModifyFloatRef::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyFloatRef, K2Node_MakeStruct_FormatArgumentData_3) == 0x000120, "Member 'BP_BattleDamages_C_ModifyFloatRef::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyFloatRef, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000168, "Member 'BP_BattleDamages_C_ModifyFloatRef::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyFloatRef, K2Node_MakeArray_Array) == 0x000170, "Member 'BP_BattleDamages_C_ModifyFloatRef::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_ModifyFloatRef, CallFunc_Format_ReturnValue) == 0x000180, "Member 'BP_BattleDamages_C_ModifyFloatRef::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.OverrideWithEffectiveDamage
// 0x00C0 (0x00C0 - 0x0000)
struct BP_BattleDamages_C_OverrideWithEffectiveDamage final
{
public:
	double                                        FinalDamage;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0050(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B0(0x0010)()
};
static_assert(alignof(BP_BattleDamages_C_OverrideWithEffectiveDamage) == 0x000008, "Wrong alignment on BP_BattleDamages_C_OverrideWithEffectiveDamage");
static_assert(sizeof(BP_BattleDamages_C_OverrideWithEffectiveDamage) == 0x0000C0, "Wrong size on BP_BattleDamages_C_OverrideWithEffectiveDamage");
static_assert(offsetof(BP_BattleDamages_C_OverrideWithEffectiveDamage, FinalDamage) == 0x000000, "Member 'BP_BattleDamages_C_OverrideWithEffectiveDamage::FinalDamage' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_OverrideWithEffectiveDamage, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'BP_BattleDamages_C_OverrideWithEffectiveDamage::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_OverrideWithEffectiveDamage, K2Node_MakeStruct_FormatArgumentData_1) == 0x000050, "Member 'BP_BattleDamages_C_OverrideWithEffectiveDamage::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_OverrideWithEffectiveDamage, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000098, "Member 'BP_BattleDamages_C_OverrideWithEffectiveDamage::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_OverrideWithEffectiveDamage, K2Node_MakeArray_Array) == 0x0000A0, "Member 'BP_BattleDamages_C_OverrideWithEffectiveDamage::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_OverrideWithEffectiveDamage, CallFunc_Format_ReturnValue) == 0x0000B0, "Member 'BP_BattleDamages_C_OverrideWithEffectiveDamage::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.PrintMessage
// 0x0158 (0x0158 - 0x0000)
struct BP_BattleDamages_C_PrintMessage final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0048)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0088(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0098(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A8(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00F0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0138(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0148(0x0010)()
};
static_assert(alignof(BP_BattleDamages_C_PrintMessage) == 0x000008, "Wrong alignment on BP_BattleDamages_C_PrintMessage");
static_assert(sizeof(BP_BattleDamages_C_PrintMessage) == 0x000158, "Wrong size on BP_BattleDamages_C_PrintMessage");
static_assert(offsetof(BP_BattleDamages_C_PrintMessage, Message) == 0x000000, "Member 'BP_BattleDamages_C_PrintMessage::Message' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_PrintMessage, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'BP_BattleDamages_C_PrintMessage::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_PrintMessage, CallFunc_GetOwner_ReturnValue) == 0x000058, "Member 'BP_BattleDamages_C_PrintMessage::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_PrintMessage, CallFunc_GetOwner_ReturnValue_1) == 0x000060, "Member 'BP_BattleDamages_C_PrintMessage::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_PrintMessage, CallFunc_GetDisplayName_ReturnValue) == 0x000068, "Member 'BP_BattleDamages_C_PrintMessage::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_PrintMessage, CallFunc_GetDisplayName_ReturnValue_1) == 0x000078, "Member 'BP_BattleDamages_C_PrintMessage::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_PrintMessage, CallFunc_Conv_StringToText_ReturnValue) == 0x000088, "Member 'BP_BattleDamages_C_PrintMessage::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_PrintMessage, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000098, "Member 'BP_BattleDamages_C_PrintMessage::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_PrintMessage, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A8, "Member 'BP_BattleDamages_C_PrintMessage::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_PrintMessage, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000F0, "Member 'BP_BattleDamages_C_PrintMessage::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_PrintMessage, K2Node_MakeArray_Array) == 0x000138, "Member 'BP_BattleDamages_C_PrintMessage::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_PrintMessage, CallFunc_Format_ReturnValue) == 0x000148, "Member 'BP_BattleDamages_C_PrintMessage::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.RollCriticalHit
// 0x0028 (0x0028 - 0x0000)
struct BP_BattleDamages_C_RollCriticalHit final
{
public:
	bool                                          IsCriticalHit_0;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_blockCritical;                               // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_forceCritical;                               // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetForcedCriticalHit_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetCriticalRollToBeat_Value;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue_1; // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue_1;  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_RollCriticalHit) == 0x000008, "Wrong alignment on BP_BattleDamages_C_RollCriticalHit");
static_assert(sizeof(BP_BattleDamages_C_RollCriticalHit) == 0x000028, "Wrong size on BP_BattleDamages_C_RollCriticalHit");
static_assert(offsetof(BP_BattleDamages_C_RollCriticalHit, IsCriticalHit_0) == 0x000000, "Member 'BP_BattleDamages_C_RollCriticalHit::IsCriticalHit_0' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_RollCriticalHit, local_blockCritical) == 0x000001, "Member 'BP_BattleDamages_C_RollCriticalHit::local_blockCritical' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_RollCriticalHit, local_forceCritical) == 0x000002, "Member 'BP_BattleDamages_C_RollCriticalHit::local_forceCritical' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_RollCriticalHit, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BP_BattleDamages_C_RollCriticalHit::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_RollCriticalHit, CallFunc_GetForcedCriticalHit_ReturnValue) == 0x000004, "Member 'BP_BattleDamages_C_RollCriticalHit::CallFunc_GetForcedCriticalHit_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_RollCriticalHit, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000005, "Member 'BP_BattleDamages_C_RollCriticalHit::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_RollCriticalHit, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000006, "Member 'BP_BattleDamages_C_RollCriticalHit::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_RollCriticalHit, CallFunc_Not_PreBool_ReturnValue_1) == 0x000007, "Member 'BP_BattleDamages_C_RollCriticalHit::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_RollCriticalHit, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_BattleDamages_C_RollCriticalHit::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_RollCriticalHit, CallFunc_GetCriticalRollToBeat_Value) == 0x000010, "Member 'BP_BattleDamages_C_RollCriticalHit::CallFunc_GetCriticalRollToBeat_Value' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_RollCriticalHit, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_BattleDamages_C_RollCriticalHit::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_RollCriticalHit, CallFunc_GetConsoleVariableBoolValue_ReturnValue_1) == 0x000019, "Member 'BP_BattleDamages_C_RollCriticalHit::CallFunc_GetConsoleVariableBoolValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_RollCriticalHit, CallFunc_IsPackagedForDistribution_ReturnValue_1) == 0x00001A, "Member 'BP_BattleDamages_C_RollCriticalHit::CallFunc_IsPackagedForDistribution_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_RollCriticalHit, CallFunc_Not_PreBool_ReturnValue_2) == 0x00001B, "Member 'BP_BattleDamages_C_RollCriticalHit::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_RollCriticalHit, CallFunc_RandomFloatInRange_ReturnValue) == 0x000020, "Member 'BP_BattleDamages_C_RollCriticalHit::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.Set Ignore Target Defense
// 0x0002 (0x0002 - 0x0000)
struct BP_BattleDamages_C_Set_Ignore_Target_Defense final
{
public:
	bool                                          Ignore;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_Set_Ignore_Target_Defense) == 0x000001, "Wrong alignment on BP_BattleDamages_C_Set_Ignore_Target_Defense");
static_assert(sizeof(BP_BattleDamages_C_Set_Ignore_Target_Defense) == 0x000002, "Wrong size on BP_BattleDamages_C_Set_Ignore_Target_Defense");
static_assert(offsetof(BP_BattleDamages_C_Set_Ignore_Target_Defense, Ignore) == 0x000000, "Member 'BP_BattleDamages_C_Set_Ignore_Target_Defense::Ignore' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_Set_Ignore_Target_Defense, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_BattleDamages_C_Set_Ignore_Target_Defense::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.SetAffinities
// 0x0098 (0x0098 - 0x0000)
struct BP_BattleDamages_C_SetAffinities final
{
public:
	EElementalAffinity                            BaseTypeAffinity_0;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0010)()
};
static_assert(alignof(BP_BattleDamages_C_SetAffinities) == 0x000008, "Wrong alignment on BP_BattleDamages_C_SetAffinities");
static_assert(sizeof(BP_BattleDamages_C_SetAffinities) == 0x000098, "Wrong size on BP_BattleDamages_C_SetAffinities");
static_assert(offsetof(BP_BattleDamages_C_SetAffinities, BaseTypeAffinity_0) == 0x000000, "Member 'BP_BattleDamages_C_SetAffinities::BaseTypeAffinity_0' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_SetAffinities, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BP_BattleDamages_C_SetAffinities::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_SetAffinities, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'BP_BattleDamages_C_SetAffinities::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_SetAffinities, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'BP_BattleDamages_C_SetAffinities::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_SetAffinities, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_BattleDamages_C_SetAffinities::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_SetAffinities, K2Node_MakeArray_Array) == 0x000078, "Member 'BP_BattleDamages_C_SetAffinities::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_SetAffinities, CallFunc_Format_ReturnValue) == 0x000088, "Member 'BP_BattleDamages_C_SetAffinities::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.SetIsCriticalHit
// 0x00F0 (0x00F0 - 0x0000)
struct BP_BattleDamages_C_SetIsCriticalHit final
{
public:
	bool                                          IsCritical;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DebugReason;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0010)()
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0028(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0080(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D8(0x0010)()
	bool                                          CallFunc_CheckEditableValue_Modify_Allowed;        // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_SetIsCriticalHit) == 0x000008, "Wrong alignment on BP_BattleDamages_C_SetIsCriticalHit");
static_assert(sizeof(BP_BattleDamages_C_SetIsCriticalHit) == 0x0000F0, "Wrong size on BP_BattleDamages_C_SetIsCriticalHit");
static_assert(offsetof(BP_BattleDamages_C_SetIsCriticalHit, IsCritical) == 0x000000, "Member 'BP_BattleDamages_C_SetIsCriticalHit::IsCritical' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_SetIsCriticalHit, DebugReason) == 0x000008, "Member 'BP_BattleDamages_C_SetIsCriticalHit::DebugReason' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_SetIsCriticalHit, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'BP_BattleDamages_C_SetIsCriticalHit::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_SetIsCriticalHit, CallFunc_Conv_BoolToText_ReturnValue) == 0x000028, "Member 'BP_BattleDamages_C_SetIsCriticalHit::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_SetIsCriticalHit, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'BP_BattleDamages_C_SetIsCriticalHit::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_SetIsCriticalHit, K2Node_MakeStruct_FormatArgumentData_1) == 0x000080, "Member 'BP_BattleDamages_C_SetIsCriticalHit::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_SetIsCriticalHit, K2Node_MakeArray_Array) == 0x0000C8, "Member 'BP_BattleDamages_C_SetIsCriticalHit::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_SetIsCriticalHit, CallFunc_Format_ReturnValue) == 0x0000D8, "Member 'BP_BattleDamages_C_SetIsCriticalHit::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_SetIsCriticalHit, CallFunc_CheckEditableValue_Modify_Allowed) == 0x0000E8, "Member 'BP_BattleDamages_C_SetIsCriticalHit::CallFunc_CheckEditableValue_Modify_Allowed' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.SetMissReason
// 0x0090 (0x0090 - 0x0000)
struct BP_BattleDamages_C_SetMissReason final
{
public:
	EMissReason                                   MissReason_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_SetMissReason) == 0x000008, "Wrong alignment on BP_BattleDamages_C_SetMissReason");
static_assert(sizeof(BP_BattleDamages_C_SetMissReason) == 0x000090, "Wrong size on BP_BattleDamages_C_SetMissReason");
static_assert(offsetof(BP_BattleDamages_C_SetMissReason, MissReason_0) == 0x000000, "Member 'BP_BattleDamages_C_SetMissReason::MissReason_0' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_SetMissReason, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BP_BattleDamages_C_SetMissReason::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_SetMissReason, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'BP_BattleDamages_C_SetMissReason::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_SetMissReason, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'BP_BattleDamages_C_SetMissReason::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_SetMissReason, K2Node_MakeArray_Array) == 0x000070, "Member 'BP_BattleDamages_C_SetMissReason::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_SetMissReason, CallFunc_Format_ReturnValue) == 0x000080, "Member 'BP_BattleDamages_C_SetMissReason::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.TryAddLog
// 0x0138 (0x0138 - 0x0000)
struct BP_BattleDamages_C_TryAddLog final
{
public:
	class FText                                   Reason;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	double                                        PreviousValue;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NewValue;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           TargetArray;                                       // 0x0020(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0080(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00C8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0110(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0120(0x0010)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_TryAddLog) == 0x000008, "Wrong alignment on BP_BattleDamages_C_TryAddLog");
static_assert(sizeof(BP_BattleDamages_C_TryAddLog) == 0x000138, "Wrong size on BP_BattleDamages_C_TryAddLog");
static_assert(offsetof(BP_BattleDamages_C_TryAddLog, Reason) == 0x000000, "Member 'BP_BattleDamages_C_TryAddLog::Reason' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_TryAddLog, PreviousValue) == 0x000010, "Member 'BP_BattleDamages_C_TryAddLog::PreviousValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_TryAddLog, NewValue) == 0x000018, "Member 'BP_BattleDamages_C_TryAddLog::NewValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_TryAddLog, TargetArray) == 0x000020, "Member 'BP_BattleDamages_C_TryAddLog::TargetArray' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_TryAddLog, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_BattleDamages_C_TryAddLog::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_TryAddLog, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000078, "Member 'BP_BattleDamages_C_TryAddLog::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_TryAddLog, K2Node_MakeStruct_FormatArgumentData_1) == 0x000080, "Member 'BP_BattleDamages_C_TryAddLog::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_TryAddLog, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000C8, "Member 'BP_BattleDamages_C_TryAddLog::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_TryAddLog, K2Node_MakeArray_Array) == 0x000110, "Member 'BP_BattleDamages_C_TryAddLog::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_TryAddLog, CallFunc_Format_ReturnValue) == 0x000120, "Member 'BP_BattleDamages_C_TryAddLog::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_TryAddLog, CallFunc_Array_Add_ReturnValue) == 0x000130, "Member 'BP_BattleDamages_C_TryAddLog::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.TryRollEnemyDodgeFromStats
// 0x0018 (0x0018 - 0x0000)
struct BP_BattleDamages_C_TryRollEnemyDodgeFromStats final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDeathTouch_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFlyingCharacter_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_TryRollEnemyDodgeFromStats) == 0x000008, "Wrong alignment on BP_BattleDamages_C_TryRollEnemyDodgeFromStats");
static_assert(sizeof(BP_BattleDamages_C_TryRollEnemyDodgeFromStats) == 0x000018, "Wrong size on BP_BattleDamages_C_TryRollEnemyDodgeFromStats");
static_assert(offsetof(BP_BattleDamages_C_TryRollEnemyDodgeFromStats, ReturnValue) == 0x000000, "Member 'BP_BattleDamages_C_TryRollEnemyDodgeFromStats::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_TryRollEnemyDodgeFromStats, CallFunc_IsDeathTouch_ReturnValue) == 0x000001, "Member 'BP_BattleDamages_C_TryRollEnemyDodgeFromStats::CallFunc_IsDeathTouch_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_TryRollEnemyDodgeFromStats, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_BattleDamages_C_TryRollEnemyDodgeFromStats::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_TryRollEnemyDodgeFromStats, CallFunc_RandomFloat_ReturnValue) == 0x000008, "Member 'BP_BattleDamages_C_TryRollEnemyDodgeFromStats::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_TryRollEnemyDodgeFromStats, CallFunc_IsFlyingCharacter_ReturnValue) == 0x000010, "Member 'BP_BattleDamages_C_TryRollEnemyDodgeFromStats::CallFunc_IsFlyingCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_TryRollEnemyDodgeFromStats, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000011, "Member 'BP_BattleDamages_C_TryRollEnemyDodgeFromStats::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_TryRollEnemyDodgeFromStats, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'BP_BattleDamages_C_TryRollEnemyDodgeFromStats::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_TryRollEnemyDodgeFromStats, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000013, "Member 'BP_BattleDamages_C_TryRollEnemyDodgeFromStats::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_TryRollEnemyDodgeFromStats, CallFunc_BooleanOR_ReturnValue) == 0x000014, "Member 'BP_BattleDamages_C_TryRollEnemyDodgeFromStats::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.GetDamageSourceObject
// 0x0020 (0x0020 - 0x0000)
struct BP_BattleDamages_C_GetDamageSourceObject final
{
public:
	TScriptInterface<class IIBattleDamageSource_C> SourceObject;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIBattleDamageSource_C> CallFunc_GetDamageSource_DamageSource;            // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_GetDamageSourceObject) == 0x000008, "Wrong alignment on BP_BattleDamages_C_GetDamageSourceObject");
static_assert(sizeof(BP_BattleDamages_C_GetDamageSourceObject) == 0x000020, "Wrong size on BP_BattleDamages_C_GetDamageSourceObject");
static_assert(offsetof(BP_BattleDamages_C_GetDamageSourceObject, SourceObject) == 0x000000, "Member 'BP_BattleDamages_C_GetDamageSourceObject::SourceObject' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_GetDamageSourceObject, CallFunc_GetDamageSource_DamageSource) == 0x000010, "Member 'BP_BattleDamages_C_GetDamageSourceObject::CallFunc_GetDamageSource_DamageSource' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.GetFinalDamages
// 0x0018 (0x0018 - 0x0000)
struct BP_BattleDamages_C_GetFinalDamages final
{
public:
	double                                        FinalDamages;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_AppendStack__Content__Result;             // 0x0008(0x0010)()
};
static_assert(alignof(BP_BattleDamages_C_GetFinalDamages) == 0x000008, "Wrong alignment on BP_BattleDamages_C_GetFinalDamages");
static_assert(sizeof(BP_BattleDamages_C_GetFinalDamages) == 0x000018, "Wrong size on BP_BattleDamages_C_GetFinalDamages");
static_assert(offsetof(BP_BattleDamages_C_GetFinalDamages, FinalDamages) == 0x000000, "Member 'BP_BattleDamages_C_GetFinalDamages::FinalDamages' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_GetFinalDamages, CallFunc_AppendStack__Content__Result) == 0x000008, "Member 'BP_BattleDamages_C_GetFinalDamages::CallFunc_AppendStack__Content__Result' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.GetFinalDamages_Base
// 0x0018 (0x0018 - 0x0000)
struct BP_BattleDamages_C_GetFinalDamages_Base final
{
public:
	double                                        FinalDamages;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_AppendStack__Content__Result;             // 0x0008(0x0010)()
};
static_assert(alignof(BP_BattleDamages_C_GetFinalDamages_Base) == 0x000008, "Wrong alignment on BP_BattleDamages_C_GetFinalDamages_Base");
static_assert(sizeof(BP_BattleDamages_C_GetFinalDamages_Base) == 0x000018, "Wrong size on BP_BattleDamages_C_GetFinalDamages_Base");
static_assert(offsetof(BP_BattleDamages_C_GetFinalDamages_Base, FinalDamages) == 0x000000, "Member 'BP_BattleDamages_C_GetFinalDamages_Base::FinalDamages' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_GetFinalDamages_Base, CallFunc_AppendStack__Content__Result) == 0x000008, "Member 'BP_BattleDamages_C_GetFinalDamages_Base::CallFunc_AppendStack__Content__Result' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.GetIgnoreTargetDefense
// 0x0001 (0x0001 - 0x0000)
struct BP_BattleDamages_C_GetIgnoreTargetDefense final
{
public:
	bool                                          IgnoreTargetDefense_0;                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_GetIgnoreTargetDefense) == 0x000001, "Wrong alignment on BP_BattleDamages_C_GetIgnoreTargetDefense");
static_assert(sizeof(BP_BattleDamages_C_GetIgnoreTargetDefense) == 0x000001, "Wrong size on BP_BattleDamages_C_GetIgnoreTargetDefense");
static_assert(offsetof(BP_BattleDamages_C_GetIgnoreTargetDefense, IgnoreTargetDefense_0) == 0x000000, "Member 'BP_BattleDamages_C_GetIgnoreTargetDefense::IgnoreTargetDefense_0' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.GetInputDamages
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleDamages_C_GetInputDamages final
{
public:
	double                                        RawDamages;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_GetInputDamages) == 0x000008, "Wrong alignment on BP_BattleDamages_C_GetInputDamages");
static_assert(sizeof(BP_BattleDamages_C_GetInputDamages) == 0x000008, "Wrong size on BP_BattleDamages_C_GetInputDamages");
static_assert(offsetof(BP_BattleDamages_C_GetInputDamages, RawDamages) == 0x000000, "Member 'BP_BattleDamages_C_GetInputDamages::RawDamages' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.GetInputDamages_Base
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleDamages_C_GetInputDamages_Base final
{
public:
	double                                        RawDamages;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_GetInputDamages_Base) == 0x000008, "Wrong alignment on BP_BattleDamages_C_GetInputDamages_Base");
static_assert(sizeof(BP_BattleDamages_C_GetInputDamages_Base) == 0x000008, "Wrong size on BP_BattleDamages_C_GetInputDamages_Base");
static_assert(offsetof(BP_BattleDamages_C_GetInputDamages_Base, RawDamages) == 0x000000, "Member 'BP_BattleDamages_C_GetInputDamages_Base::RawDamages' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.GetSourceCharacter
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleDamages_C_GetSourceCharacter final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        SourceCharacter_0;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleDamages_C_GetSourceCharacter) == 0x000008, "Wrong alignment on BP_BattleDamages_C_GetSourceCharacter");
static_assert(sizeof(BP_BattleDamages_C_GetSourceCharacter) == 0x000008, "Wrong size on BP_BattleDamages_C_GetSourceCharacter");
static_assert(offsetof(BP_BattleDamages_C_GetSourceCharacter, SourceCharacter_0) == 0x000000, "Member 'BP_BattleDamages_C_GetSourceCharacter::SourceCharacter_0' has a wrong offset!");

// Function BP_BattleDamages.BP_BattleDamages_C.PrintError
// 0x0148 (0x0148 - 0x0000)
struct BP_BattleDamages_C_PrintError final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0078(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0088(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00E0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0128(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0138(0x0010)()
};
static_assert(alignof(BP_BattleDamages_C_PrintError) == 0x000008, "Wrong alignment on BP_BattleDamages_C_PrintError");
static_assert(sizeof(BP_BattleDamages_C_PrintError) == 0x000148, "Wrong size on BP_BattleDamages_C_PrintError");
static_assert(offsetof(BP_BattleDamages_C_PrintError, Message) == 0x000000, "Member 'BP_BattleDamages_C_PrintError::Message' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_PrintError, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'BP_BattleDamages_C_PrintError::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_PrintError, CallFunc_GetDisplayName_ReturnValue) == 0x000058, "Member 'BP_BattleDamages_C_PrintError::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_PrintError, CallFunc_GetDisplayName_ReturnValue_1) == 0x000068, "Member 'BP_BattleDamages_C_PrintError::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_PrintError, CallFunc_Conv_StringToText_ReturnValue) == 0x000078, "Member 'BP_BattleDamages_C_PrintError::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_PrintError, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000088, "Member 'BP_BattleDamages_C_PrintError::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_PrintError, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'BP_BattleDamages_C_PrintError::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_PrintError, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000E0, "Member 'BP_BattleDamages_C_PrintError::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_PrintError, K2Node_MakeArray_Array) == 0x000128, "Member 'BP_BattleDamages_C_PrintError::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleDamages_C_PrintError, CallFunc_Format_ReturnValue) == 0x000138, "Member 'BP_BattleDamages_C_PrintError::CallFunc_Format_ReturnValue' has a wrong offset!");

}

