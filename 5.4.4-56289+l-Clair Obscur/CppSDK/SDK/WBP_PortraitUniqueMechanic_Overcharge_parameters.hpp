#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PortraitUniqueMechanic_Overcharge

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_PortraitUniqueMechanic_Overcharge.WBP_PortraitUniqueMechanic_Overcharge_C.ExecuteUbergraph_WBP_PortraitUniqueMechanic_Overcharge
// 0x001C (0x001C - 0x0000)
struct WBP_PortraitUniqueMechanic_Overcharge_C_ExecuteUbergraph_WBP_PortraitUniqueMechanic_Overcharge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 NewValue, int32 PreviousValue)> K2Node_CreateDelegate_OutputDelegate;       // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PreviousValue;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PortraitUniqueMechanic_Overcharge_C_ExecuteUbergraph_WBP_PortraitUniqueMechanic_Overcharge) == 0x000004, "Wrong alignment on WBP_PortraitUniqueMechanic_Overcharge_C_ExecuteUbergraph_WBP_PortraitUniqueMechanic_Overcharge");
static_assert(sizeof(WBP_PortraitUniqueMechanic_Overcharge_C_ExecuteUbergraph_WBP_PortraitUniqueMechanic_Overcharge) == 0x00001C, "Wrong size on WBP_PortraitUniqueMechanic_Overcharge_C_ExecuteUbergraph_WBP_PortraitUniqueMechanic_Overcharge");
static_assert(offsetof(WBP_PortraitUniqueMechanic_Overcharge_C_ExecuteUbergraph_WBP_PortraitUniqueMechanic_Overcharge, EntryPoint) == 0x000000, "Member 'WBP_PortraitUniqueMechanic_Overcharge_C_ExecuteUbergraph_WBP_PortraitUniqueMechanic_Overcharge::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_PortraitUniqueMechanic_Overcharge_C_ExecuteUbergraph_WBP_PortraitUniqueMechanic_Overcharge, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_PortraitUniqueMechanic_Overcharge_C_ExecuteUbergraph_WBP_PortraitUniqueMechanic_Overcharge::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_PortraitUniqueMechanic_Overcharge_C_ExecuteUbergraph_WBP_PortraitUniqueMechanic_Overcharge, K2Node_CustomEvent_NewValue) == 0x000014, "Member 'WBP_PortraitUniqueMechanic_Overcharge_C_ExecuteUbergraph_WBP_PortraitUniqueMechanic_Overcharge::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(WBP_PortraitUniqueMechanic_Overcharge_C_ExecuteUbergraph_WBP_PortraitUniqueMechanic_Overcharge, K2Node_CustomEvent_PreviousValue) == 0x000018, "Member 'WBP_PortraitUniqueMechanic_Overcharge_C_ExecuteUbergraph_WBP_PortraitUniqueMechanic_Overcharge::K2Node_CustomEvent_PreviousValue' has a wrong offset!");

// Function WBP_PortraitUniqueMechanic_Overcharge.WBP_PortraitUniqueMechanic_Overcharge_C.OnChargeCountChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_PortraitUniqueMechanic_Overcharge_C_OnChargeCountChanged final
{
public:
	int32                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PreviousValue;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PortraitUniqueMechanic_Overcharge_C_OnChargeCountChanged) == 0x000004, "Wrong alignment on WBP_PortraitUniqueMechanic_Overcharge_C_OnChargeCountChanged");
static_assert(sizeof(WBP_PortraitUniqueMechanic_Overcharge_C_OnChargeCountChanged) == 0x000008, "Wrong size on WBP_PortraitUniqueMechanic_Overcharge_C_OnChargeCountChanged");
static_assert(offsetof(WBP_PortraitUniqueMechanic_Overcharge_C_OnChargeCountChanged, NewValue) == 0x000000, "Member 'WBP_PortraitUniqueMechanic_Overcharge_C_OnChargeCountChanged::NewValue' has a wrong offset!");
static_assert(offsetof(WBP_PortraitUniqueMechanic_Overcharge_C_OnChargeCountChanged, PreviousValue) == 0x000004, "Member 'WBP_PortraitUniqueMechanic_Overcharge_C_OnChargeCountChanged::PreviousValue' has a wrong offset!");

// Function WBP_PortraitUniqueMechanic_Overcharge.WBP_PortraitUniqueMechanic_Overcharge_C.UpdateChargeUI
// 0x0028 (0x0028 - 0x0000)
struct WBP_PortraitUniqueMechanic_Overcharge_C_UpdateChargeUI final
{
public:
	int32                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PreviousValue;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0010)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PortraitUniqueMechanic_Overcharge_C_UpdateChargeUI) == 0x000008, "Wrong alignment on WBP_PortraitUniqueMechanic_Overcharge_C_UpdateChargeUI");
static_assert(sizeof(WBP_PortraitUniqueMechanic_Overcharge_C_UpdateChargeUI) == 0x000028, "Wrong size on WBP_PortraitUniqueMechanic_Overcharge_C_UpdateChargeUI");
static_assert(offsetof(WBP_PortraitUniqueMechanic_Overcharge_C_UpdateChargeUI, NewValue) == 0x000000, "Member 'WBP_PortraitUniqueMechanic_Overcharge_C_UpdateChargeUI::NewValue' has a wrong offset!");
static_assert(offsetof(WBP_PortraitUniqueMechanic_Overcharge_C_UpdateChargeUI, PreviousValue) == 0x000004, "Member 'WBP_PortraitUniqueMechanic_Overcharge_C_UpdateChargeUI::PreviousValue' has a wrong offset!");
static_assert(offsetof(WBP_PortraitUniqueMechanic_Overcharge_C_UpdateChargeUI, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000008, "Member 'WBP_PortraitUniqueMechanic_Overcharge_C_UpdateChargeUI::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PortraitUniqueMechanic_Overcharge_C_UpdateChargeUI, CallFunc_Greater_IntInt_ReturnValue) == 0x000009, "Member 'WBP_PortraitUniqueMechanic_Overcharge_C_UpdateChargeUI::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PortraitUniqueMechanic_Overcharge_C_UpdateChargeUI, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'WBP_PortraitUniqueMechanic_Overcharge_C_UpdateChargeUI::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PortraitUniqueMechanic_Overcharge_C_UpdateChargeUI, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'WBP_PortraitUniqueMechanic_Overcharge_C_UpdateChargeUI::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

}

