#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemInstance_Gear

#include "Basic.hpp"

#include "BP_ItemInstance_Gear_classes.hpp"
#include "BP_ItemInstance_Gear_parameters.hpp"


namespace SDK
{

// Function BP_ItemInstance_Gear.BP_ItemInstance_Gear_C.ChangeLevel
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewLevel                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    DebugReason                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_ItemInstance_Gear_C::ChangeLevel(int32 NewLevel, const class FString& DebugReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInstance_Gear_C", "ChangeLevel");

	Params::BP_ItemInstance_Gear_C_ChangeLevel Parms{};

	Parms.NewLevel = NewLevel;
	Parms.DebugReason = std::move(DebugReason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ItemInstance_Gear.BP_ItemInstance_Gear_C.ChangeLevelWithLootContext
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_LootContext&            LootContext                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    DebugReason                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_ItemInstance_Gear_C::ChangeLevelWithLootContext(const struct FS_LootContext& LootContext, const class FString& DebugReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInstance_Gear_C", "ChangeLevelWithLootContext");

	Params::BP_ItemInstance_Gear_C_ChangeLevelWithLootContext Parms{};

	Parms.LootContext = std::move(LootContext);
	Parms.DebugReason = std::move(DebugReason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ItemInstance_Gear.BP_ItemInstance_Gear_C.CreateCopy
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_ItemInstance_Gear_C*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UBP_ItemInstance_Gear_C* UBP_ItemInstance_Gear_C::CreateCopy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInstance_Gear_C", "CreateCopy");

	Params::BP_ItemInstance_Gear_C_CreateCopy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ItemInstance_Gear.BP_ItemInstance_Gear_C.GenerateItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_jRPG_Item_StaticData&         ItemStaticItem                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// struct FS_LootContext&                  LootContext                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_GeneratedItemInfo_Base_C**    GeneratedItemInfo                                      (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_ItemInstance_Gear_C::GenerateItem(struct FS_jRPG_Item_StaticData& ItemStaticItem, struct FS_LootContext& LootContext, class UBP_GeneratedItemInfo_Base_C** GeneratedItemInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInstance_Gear_C", "GenerateItem");

	Params::BP_ItemInstance_Gear_C_GenerateItem Parms{};

	Parms.ItemStaticItem = std::move(ItemStaticItem);
	Parms.LootContext = std::move(LootContext);

	UObject::ProcessEvent(Func, &Parms);

	ItemStaticItem = std::move(Parms.ItemStaticItem);
	LootContext = std::move(Parms.LootContext);

	if (GeneratedItemInfo != nullptr)
		*GeneratedItemInfo = Parms.GeneratedItemInfo;
}


// Function BP_ItemInstance_Gear.BP_ItemInstance_Gear_C.GetBaseStatsMultipliers
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<E_jRPG_StatType, double>           ReturnValue                                            (Parm, OutParm, ReturnParm)

TMap<E_jRPG_StatType, double> UBP_ItemInstance_Gear_C::GetBaseStatsMultipliers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInstance_Gear_C", "GetBaseStatsMultipliers");

	Params::BP_ItemInstance_Gear_C_GetBaseStatsMultipliers Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ItemInstance_Gear.BP_ItemInstance_Gear_C.GetChromaValue
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_ItemInstance_Gear_C::GetChromaValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInstance_Gear_C", "GetChromaValue");

	Params::BP_ItemInstance_Gear_C_GetChromaValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ItemInstance_Gear.BP_ItemInstance_Gear_C.GetCurrentLevel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_ItemInstance_Gear_C::GetCurrentLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInstance_Gear_C", "GetCurrentLevel");

	Params::BP_ItemInstance_Gear_C_GetCurrentLevel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ItemInstance_Gear.BP_ItemInstance_Gear_C.GetCurrentQuality
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EWeaponQuality*                         Quality                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ItemInstance_Gear_C::GetCurrentQuality(EWeaponQuality* Quality)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInstance_Gear_C", "GetCurrentQuality");

	Params::BP_ItemInstance_Gear_C_GetCurrentQuality Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Quality != nullptr)
		*Quality = Parms.Quality;
}


// Function BP_ItemInstance_Gear.BP_ItemInstance_Gear_C.GetCurrentStats
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TMap<E_jRPG_StatType, double>*          CurrentStats_0                                         (Parm, OutParm)

void UBP_ItemInstance_Gear_C::GetCurrentStats(TMap<E_jRPG_StatType, double>* CurrentStats_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInstance_Gear_C", "GetCurrentStats");

	Params::BP_ItemInstance_Gear_C_GetCurrentStats Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentStats_0 != nullptr)
		*CurrentStats_0 = std::move(Parms.CurrentStats_0);
}


// Function BP_ItemInstance_Gear.BP_ItemInstance_Gear_C.GetGearGeneratedItemClass
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UClass* UBP_ItemInstance_Gear_C::GetGearGeneratedItemClass()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInstance_Gear_C", "GetGearGeneratedItemClass");

	Params::BP_ItemInstance_Gear_C_GetGearGeneratedItemClass Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ItemInstance_Gear.BP_ItemInstance_Gear_C.GetScalingDataTable
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UDataTable*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UDataTable* UBP_ItemInstance_Gear_C::GetScalingDataTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInstance_Gear_C", "GetScalingDataTable");

	Params::BP_ItemInstance_Gear_C_GetScalingDataTable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ItemInstance_Gear.BP_ItemInstance_Gear_C.GetStatBaseValue
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ItemInstance_Gear_C::GetStatBaseValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInstance_Gear_C", "GetStatBaseValue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ItemInstance_Gear.BP_ItemInstance_Gear_C.GetUnlockedPassiveEffectsIDs
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>*                    PassiveEffectIDs                                       (Parm, OutParm)

void UBP_ItemInstance_Gear_C::GetUnlockedPassiveEffectsIDs(TArray<class FName>* PassiveEffectIDs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInstance_Gear_C", "GetUnlockedPassiveEffectsIDs");

	Params::BP_ItemInstance_Gear_C_GetUnlockedPassiveEffectsIDs Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PassiveEffectIDs != nullptr)
		*PassiveEffectIDs = std::move(Parms.PassiveEffectIDs);
}


// Function BP_ItemInstance_Gear.BP_ItemInstance_Gear_C.LoadBaseStatsMultipliers
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ItemInstance_Gear_C::LoadBaseStatsMultipliers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInstance_Gear_C", "LoadBaseStatsMultipliers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ItemInstance_Gear.BP_ItemInstance_Gear_C.LoadItemDefinition
// (Protected, BlueprintCallable, BlueprintEvent)

void UBP_ItemInstance_Gear_C::LoadItemDefinition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInstance_Gear_C", "LoadItemDefinition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ItemInstance_Gear.BP_ItemInstance_Gear_C.LoadState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_WeaponInstanceHandle&   SaveData                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ItemInstance_Gear_C::LoadState(const struct FS_WeaponInstanceHandle& SaveData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInstance_Gear_C", "LoadState");

	Params::BP_ItemInstance_Gear_C_LoadState Parms{};

	Parms.SaveData = std::move(SaveData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ItemInstance_Gear.BP_ItemInstance_Gear_C.MergeItem
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_ItemInstance_Base_C*          OtherItemInstance                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_ItemInstance_Gear_C::MergeItem(class UBP_ItemInstance_Base_C* OtherItemInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInstance_Gear_C", "MergeItem");

	Params::BP_ItemInstance_Gear_C_MergeItem Parms{};

	Parms.OtherItemInstance = OtherItemInstance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ItemInstance_Gear.BP_ItemInstance_Gear_C.RefreshCurrentGearStats
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ItemInstance_Gear_C::RefreshCurrentGearStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInstance_Gear_C", "RefreshCurrentGearStats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ItemInstance_Gear.BP_ItemInstance_Gear_C.SaveState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_WeaponInstanceHandle&   SaveData                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ItemInstance_Gear_C::SaveState(const struct FS_WeaponInstanceHandle& SaveData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInstance_Gear_C", "SaveState");

	Params::BP_ItemInstance_Gear_C_SaveState Parms{};

	Parms.SaveData = std::move(SaveData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ItemInstance_Gear.BP_ItemInstance_Gear_C.SetBaseStatsMultiplier
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const E_jRPG_StatType                   Stat                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const double                            Value                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ItemInstance_Gear_C::SetBaseStatsMultiplier(const E_jRPG_StatType Stat, const double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInstance_Gear_C", "SetBaseStatsMultiplier");

	Params::BP_ItemInstance_Gear_C_SetBaseStatsMultiplier Parms{};

	Parms.Stat = Stat;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ItemInstance_Gear.BP_ItemInstance_Gear_C.SetCurrentStatValue
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const E_jRPG_StatType                   StatType                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const double&                           Value                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_ItemInstance_Gear_C::SetCurrentStatValue(const E_jRPG_StatType StatType, const double& Value, const class FString& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInstance_Gear_C", "SetCurrentStatValue");

	Params::BP_ItemInstance_Gear_C_SetCurrentStatValue Parms{};

	Parms.StatType = StatType;
	Parms.Value = Value;
	Parms.Reason = std::move(Reason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ItemInstance_Gear.BP_ItemInstance_Gear_C.TryUpgradeLevel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewLevel                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   HasUpgraded                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ItemInstance_Gear_C::TryUpgradeLevel(int32 NewLevel, bool* HasUpgraded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInstance_Gear_C", "TryUpgradeLevel");

	Params::BP_ItemInstance_Gear_C_TryUpgradeLevel Parms{};

	Parms.NewLevel = NewLevel;

	UObject::ProcessEvent(Func, &Parms);

	if (HasUpgraded != nullptr)
		*HasUpgraded = Parms.HasUpgraded;
}


// Function BP_ItemInstance_Gear.BP_ItemInstance_Gear_C.UpgradeLevel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    DebugReason                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_ItemInstance_Gear_C::UpgradeLevel(const class FString& DebugReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInstance_Gear_C", "UpgradeLevel");

	Params::BP_ItemInstance_Gear_C_UpgradeLevel Parms{};

	Parms.DebugReason = std::move(DebugReason);

	UObject::ProcessEvent(Func, &Parms);
}

}

