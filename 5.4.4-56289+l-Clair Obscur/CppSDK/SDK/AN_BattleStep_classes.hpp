#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AN_BattleStep

#include "Basic.hpp"

#include "EFootstepsType_structs.hpp"
#include "Engine_classes.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass AN_BattleStep.AN_BattleStep_C
// 0x0020 (0x0058 - 0x0038)
class UAN_BattleStep_C final : public UAnimNotify
{
public:
	bool                                          RightFoot;                                         // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ShakeClass;                                        // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        RadiusMaxCameraShake;                              // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFootstepsType                                FootstepsType;                                     // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void GetFloorType(const struct FVector& Location, class AActor* Owner, EPhysicalSurface* Surface_Type) const;
	bool Received_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, const struct FAnimNotifyEventReference& EventReference) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AN_BattleStep_C">();
	}
	static class UAN_BattleStep_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAN_BattleStep_C>();
	}
};
static_assert(alignof(UAN_BattleStep_C) == 0x000008, "Wrong alignment on UAN_BattleStep_C");
static_assert(sizeof(UAN_BattleStep_C) == 0x000058, "Wrong size on UAN_BattleStep_C");
static_assert(offsetof(UAN_BattleStep_C, RightFoot) == 0x000038, "Member 'UAN_BattleStep_C::RightFoot' has a wrong offset!");
static_assert(offsetof(UAN_BattleStep_C, ShakeClass) == 0x000040, "Member 'UAN_BattleStep_C::ShakeClass' has a wrong offset!");
static_assert(offsetof(UAN_BattleStep_C, RadiusMaxCameraShake) == 0x000048, "Member 'UAN_BattleStep_C::RadiusMaxCameraShake' has a wrong offset!");
static_assert(offsetof(UAN_BattleStep_C, FootstepsType) == 0x000050, "Member 'UAN_BattleStep_C::FootstepsType' has a wrong offset!");

}

