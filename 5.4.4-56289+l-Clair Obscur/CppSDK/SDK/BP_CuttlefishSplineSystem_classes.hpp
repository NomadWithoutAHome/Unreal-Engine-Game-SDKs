#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CuttlefishSplineSystem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CuttlefishSplineSystem.BP_CuttlefishSplineSystem_C
// 0x0090 (0x0320 - 0x0290)
class ABP_CuttlefishSplineSystem_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 Creature;                                          // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       Spline;                                            // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MovementSpeed;                                     // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Scale;                                             // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AnimationSpeed;                                    // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Camouflage_Type;                                   // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Material;                                          // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Mat_NoCamo;                                        // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Mat_Rock;                                          // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        Camouflage_Change_Speed;                           // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TraceSurface_Length;                               // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Surface_Sand;                                      // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Surface_Rock;                                      // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowSpline;                                        // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Debug;                                             // 0x0311(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_312[0x6];                                      // 0x0312(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DistanceForTick;                                   // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void Trace_SurfaceBelow();
	void Set_Initial_Camouflage();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void ExecuteUbergraph_BP_CuttlefishSplineSystem(int32 EntryPoint);
	void Change_Camouflage();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CuttlefishSplineSystem_C">();
	}
	static class ABP_CuttlefishSplineSystem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CuttlefishSplineSystem_C>();
	}
};
static_assert(alignof(ABP_CuttlefishSplineSystem_C) == 0x000008, "Wrong alignment on ABP_CuttlefishSplineSystem_C");
static_assert(sizeof(ABP_CuttlefishSplineSystem_C) == 0x000320, "Wrong size on ABP_CuttlefishSplineSystem_C");
static_assert(offsetof(ABP_CuttlefishSplineSystem_C, UberGraphFrame) == 0x000290, "Member 'ABP_CuttlefishSplineSystem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CuttlefishSplineSystem_C, Creature) == 0x000298, "Member 'ABP_CuttlefishSplineSystem_C::Creature' has a wrong offset!");
static_assert(offsetof(ABP_CuttlefishSplineSystem_C, Spline) == 0x0002A0, "Member 'ABP_CuttlefishSplineSystem_C::Spline' has a wrong offset!");
static_assert(offsetof(ABP_CuttlefishSplineSystem_C, DefaultSceneRoot) == 0x0002A8, "Member 'ABP_CuttlefishSplineSystem_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_CuttlefishSplineSystem_C, Distance) == 0x0002B0, "Member 'ABP_CuttlefishSplineSystem_C::Distance' has a wrong offset!");
static_assert(offsetof(ABP_CuttlefishSplineSystem_C, MovementSpeed) == 0x0002B8, "Member 'ABP_CuttlefishSplineSystem_C::MovementSpeed' has a wrong offset!");
static_assert(offsetof(ABP_CuttlefishSplineSystem_C, Scale) == 0x0002C0, "Member 'ABP_CuttlefishSplineSystem_C::Scale' has a wrong offset!");
static_assert(offsetof(ABP_CuttlefishSplineSystem_C, AnimationSpeed) == 0x0002C8, "Member 'ABP_CuttlefishSplineSystem_C::AnimationSpeed' has a wrong offset!");
static_assert(offsetof(ABP_CuttlefishSplineSystem_C, Camouflage_Type) == 0x0002D0, "Member 'ABP_CuttlefishSplineSystem_C::Camouflage_Type' has a wrong offset!");
static_assert(offsetof(ABP_CuttlefishSplineSystem_C, Material) == 0x0002D8, "Member 'ABP_CuttlefishSplineSystem_C::Material' has a wrong offset!");
static_assert(offsetof(ABP_CuttlefishSplineSystem_C, Mat_NoCamo) == 0x0002E0, "Member 'ABP_CuttlefishSplineSystem_C::Mat_NoCamo' has a wrong offset!");
static_assert(offsetof(ABP_CuttlefishSplineSystem_C, Mat_Rock) == 0x0002E8, "Member 'ABP_CuttlefishSplineSystem_C::Mat_Rock' has a wrong offset!");
static_assert(offsetof(ABP_CuttlefishSplineSystem_C, Camouflage_Change_Speed) == 0x0002F0, "Member 'ABP_CuttlefishSplineSystem_C::Camouflage_Change_Speed' has a wrong offset!");
static_assert(offsetof(ABP_CuttlefishSplineSystem_C, TraceSurface_Length) == 0x0002F8, "Member 'ABP_CuttlefishSplineSystem_C::TraceSurface_Length' has a wrong offset!");
static_assert(offsetof(ABP_CuttlefishSplineSystem_C, Surface_Sand) == 0x000300, "Member 'ABP_CuttlefishSplineSystem_C::Surface_Sand' has a wrong offset!");
static_assert(offsetof(ABP_CuttlefishSplineSystem_C, Surface_Rock) == 0x000308, "Member 'ABP_CuttlefishSplineSystem_C::Surface_Rock' has a wrong offset!");
static_assert(offsetof(ABP_CuttlefishSplineSystem_C, ShowSpline) == 0x000310, "Member 'ABP_CuttlefishSplineSystem_C::ShowSpline' has a wrong offset!");
static_assert(offsetof(ABP_CuttlefishSplineSystem_C, Debug) == 0x000311, "Member 'ABP_CuttlefishSplineSystem_C::Debug' has a wrong offset!");
static_assert(offsetof(ABP_CuttlefishSplineSystem_C, DistanceForTick) == 0x000318, "Member 'ABP_CuttlefishSplineSystem_C::DistanceForTick' has a wrong offset!");

}

