#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_JournalViewItem

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_JournalViewItem.BP_JournalViewItem_C.ExecuteUbergraph_BP_JournalViewItem
// 0x0020 (0x0020 - 0x0000)
struct BP_JournalViewItem_C_ExecuteUbergraph_BP_JournalViewItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JournalViewItem_C_ExecuteUbergraph_BP_JournalViewItem) == 0x000008, "Wrong alignment on BP_JournalViewItem_C_ExecuteUbergraph_BP_JournalViewItem");
static_assert(sizeof(BP_JournalViewItem_C_ExecuteUbergraph_BP_JournalViewItem) == 0x000020, "Wrong size on BP_JournalViewItem_C_ExecuteUbergraph_BP_JournalViewItem");
static_assert(offsetof(BP_JournalViewItem_C_ExecuteUbergraph_BP_JournalViewItem, EntryPoint) == 0x000000, "Member 'BP_JournalViewItem_C_ExecuteUbergraph_BP_JournalViewItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_JournalViewItem_C_ExecuteUbergraph_BP_JournalViewItem, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_JournalViewItem_C_ExecuteUbergraph_BP_JournalViewItem::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_JournalViewItem_C_ExecuteUbergraph_BP_JournalViewItem, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'BP_JournalViewItem_C_ExecuteUbergraph_BP_JournalViewItem::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BP_JournalViewItem.BP_JournalViewItem_C.GetJournalContentText
// 0x0020 (0x0020 - 0x0000)
struct BP_JournalViewItem_C_GetJournalContentText final
{
public:
	class FText                                   ContentText;                                       // 0x0000(0x0010)(Parm, OutParm)
	class UBP_DataAsset_Item_Journal_C*           K2Node_DynamicCast_AsBP_Data_Asset_Item_Journal;   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JournalViewItem_C_GetJournalContentText) == 0x000008, "Wrong alignment on BP_JournalViewItem_C_GetJournalContentText");
static_assert(sizeof(BP_JournalViewItem_C_GetJournalContentText) == 0x000020, "Wrong size on BP_JournalViewItem_C_GetJournalContentText");
static_assert(offsetof(BP_JournalViewItem_C_GetJournalContentText, ContentText) == 0x000000, "Member 'BP_JournalViewItem_C_GetJournalContentText::ContentText' has a wrong offset!");
static_assert(offsetof(BP_JournalViewItem_C_GetJournalContentText, K2Node_DynamicCast_AsBP_Data_Asset_Item_Journal) == 0x000010, "Member 'BP_JournalViewItem_C_GetJournalContentText::K2Node_DynamicCast_AsBP_Data_Asset_Item_Journal' has a wrong offset!");
static_assert(offsetof(BP_JournalViewItem_C_GetJournalContentText, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_JournalViewItem_C_GetJournalContentText::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_JournalViewItem.BP_JournalViewItem_C.GetJournalHardcodedName
// 0x0008 (0x0008 - 0x0000)
struct BP_JournalViewItem_C_GetJournalHardcodedName final
{
public:
	class FName                                   Item_HardcodedName;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JournalViewItem_C_GetJournalHardcodedName) == 0x000004, "Wrong alignment on BP_JournalViewItem_C_GetJournalHardcodedName");
static_assert(sizeof(BP_JournalViewItem_C_GetJournalHardcodedName) == 0x000008, "Wrong size on BP_JournalViewItem_C_GetJournalHardcodedName");
static_assert(offsetof(BP_JournalViewItem_C_GetJournalHardcodedName, Item_HardcodedName) == 0x000000, "Member 'BP_JournalViewItem_C_GetJournalHardcodedName::Item_HardcodedName' has a wrong offset!");

// Function BP_JournalViewItem.BP_JournalViewItem_C.GetJournalLevelName
// 0x0018 (0x0018 - 0x0000)
struct BP_JournalViewItem_C_GetJournalLevelName final
{
public:
	class FName                                   AssociatedLevel;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_DataAsset_Item_Journal_C*           K2Node_DynamicCast_AsBP_Data_Asset_Item_Journal;   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JournalViewItem_C_GetJournalLevelName) == 0x000008, "Wrong alignment on BP_JournalViewItem_C_GetJournalLevelName");
static_assert(sizeof(BP_JournalViewItem_C_GetJournalLevelName) == 0x000018, "Wrong size on BP_JournalViewItem_C_GetJournalLevelName");
static_assert(offsetof(BP_JournalViewItem_C_GetJournalLevelName, AssociatedLevel) == 0x000000, "Member 'BP_JournalViewItem_C_GetJournalLevelName::AssociatedLevel' has a wrong offset!");
static_assert(offsetof(BP_JournalViewItem_C_GetJournalLevelName, K2Node_DynamicCast_AsBP_Data_Asset_Item_Journal) == 0x000008, "Member 'BP_JournalViewItem_C_GetJournalLevelName::K2Node_DynamicCast_AsBP_Data_Asset_Item_Journal' has a wrong offset!");
static_assert(offsetof(BP_JournalViewItem_C_GetJournalLevelName, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_JournalViewItem_C_GetJournalLevelName::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_JournalViewItem.BP_JournalViewItem_C.GetJournalShortTitle
// 0x0028 (0x0028 - 0x0000)
struct BP_JournalViewItem_C_GetJournalShortTitle final
{
public:
	class FText                                   ShortText;                                         // 0x0000(0x0010)(Parm, OutParm)
	bool                                          IsNumber;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DataAsset_Item_Journal_C*           K2Node_DynamicCast_AsBP_Data_Asset_Item_Journal;   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsCultureInvariant_ReturnValue;       // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JournalViewItem_C_GetJournalShortTitle) == 0x000008, "Wrong alignment on BP_JournalViewItem_C_GetJournalShortTitle");
static_assert(sizeof(BP_JournalViewItem_C_GetJournalShortTitle) == 0x000028, "Wrong size on BP_JournalViewItem_C_GetJournalShortTitle");
static_assert(offsetof(BP_JournalViewItem_C_GetJournalShortTitle, ShortText) == 0x000000, "Member 'BP_JournalViewItem_C_GetJournalShortTitle::ShortText' has a wrong offset!");
static_assert(offsetof(BP_JournalViewItem_C_GetJournalShortTitle, IsNumber) == 0x000010, "Member 'BP_JournalViewItem_C_GetJournalShortTitle::IsNumber' has a wrong offset!");
static_assert(offsetof(BP_JournalViewItem_C_GetJournalShortTitle, K2Node_DynamicCast_AsBP_Data_Asset_Item_Journal) == 0x000018, "Member 'BP_JournalViewItem_C_GetJournalShortTitle::K2Node_DynamicCast_AsBP_Data_Asset_Item_Journal' has a wrong offset!");
static_assert(offsetof(BP_JournalViewItem_C_GetJournalShortTitle, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_JournalViewItem_C_GetJournalShortTitle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JournalViewItem_C_GetJournalShortTitle, CallFunc_TextIsCultureInvariant_ReturnValue) == 0x000021, "Member 'BP_JournalViewItem_C_GetJournalShortTitle::CallFunc_TextIsCultureInvariant_ReturnValue' has a wrong offset!");

// Function BP_JournalViewItem.BP_JournalViewItem_C.GetJournalTitleText
// 0x0010 (0x0010 - 0x0000)
struct BP_JournalViewItem_C_GetJournalTitleText final
{
public:
	class FText                                   TitleText;                                         // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_JournalViewItem_C_GetJournalTitleText) == 0x000008, "Wrong alignment on BP_JournalViewItem_C_GetJournalTitleText");
static_assert(sizeof(BP_JournalViewItem_C_GetJournalTitleText) == 0x000010, "Wrong size on BP_JournalViewItem_C_GetJournalTitleText");
static_assert(offsetof(BP_JournalViewItem_C_GetJournalTitleText, TitleText) == 0x000000, "Member 'BP_JournalViewItem_C_GetJournalTitleText::TitleText' has a wrong offset!");

// Function BP_JournalViewItem.BP_JournalViewItem_C.GetJournalVoiceOver
// 0x0038 (0x0038 - 0x0000)
struct BP_JournalViewItem_C_GetJournalVoiceOver final
{
public:
	TSoftObjectPtr<class USoundBase>              VoiceOver;                                         // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	class UBP_DataAsset_Item_Journal_C*           K2Node_DynamicCast_AsBP_Data_Asset_Item_Journal;   // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JournalViewItem_C_GetJournalVoiceOver) == 0x000008, "Wrong alignment on BP_JournalViewItem_C_GetJournalVoiceOver");
static_assert(sizeof(BP_JournalViewItem_C_GetJournalVoiceOver) == 0x000038, "Wrong size on BP_JournalViewItem_C_GetJournalVoiceOver");
static_assert(offsetof(BP_JournalViewItem_C_GetJournalVoiceOver, VoiceOver) == 0x000000, "Member 'BP_JournalViewItem_C_GetJournalVoiceOver::VoiceOver' has a wrong offset!");
static_assert(offsetof(BP_JournalViewItem_C_GetJournalVoiceOver, K2Node_DynamicCast_AsBP_Data_Asset_Item_Journal) == 0x000028, "Member 'BP_JournalViewItem_C_GetJournalVoiceOver::K2Node_DynamicCast_AsBP_Data_Asset_Item_Journal' has a wrong offset!");
static_assert(offsetof(BP_JournalViewItem_C_GetJournalVoiceOver, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_JournalViewItem_C_GetJournalVoiceOver::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_JournalViewItem.BP_JournalViewItem_C.IsOwned
// 0x000C (0x000C - 0x0000)
struct BP_JournalViewItem_C_IsOwned final
{
public:
	bool                                          IsOwned_0;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfThereIsItemInInventory_Success_;   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfThereIsItemInInventory_IsItemFullyStacked_; // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CheckIfThereIsItemInInventory_ItemIndex;  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JournalViewItem_C_IsOwned) == 0x000004, "Wrong alignment on BP_JournalViewItem_C_IsOwned");
static_assert(sizeof(BP_JournalViewItem_C_IsOwned) == 0x00000C, "Wrong size on BP_JournalViewItem_C_IsOwned");
static_assert(offsetof(BP_JournalViewItem_C_IsOwned, IsOwned_0) == 0x000000, "Member 'BP_JournalViewItem_C_IsOwned::IsOwned_0' has a wrong offset!");
static_assert(offsetof(BP_JournalViewItem_C_IsOwned, CallFunc_CheckIfThereIsItemInInventory_Success_) == 0x000001, "Member 'BP_JournalViewItem_C_IsOwned::CallFunc_CheckIfThereIsItemInInventory_Success_' has a wrong offset!");
static_assert(offsetof(BP_JournalViewItem_C_IsOwned, CallFunc_CheckIfThereIsItemInInventory_IsItemFullyStacked_) == 0x000002, "Member 'BP_JournalViewItem_C_IsOwned::CallFunc_CheckIfThereIsItemInInventory_IsItemFullyStacked_' has a wrong offset!");
static_assert(offsetof(BP_JournalViewItem_C_IsOwned, CallFunc_CheckIfThereIsItemInInventory_ItemIndex) == 0x000004, "Member 'BP_JournalViewItem_C_IsOwned::CallFunc_CheckIfThereIsItemInInventory_ItemIndex' has a wrong offset!");
static_assert(offsetof(BP_JournalViewItem_C_IsOwned, CallFunc_BooleanOR_ReturnValue) == 0x000008, "Member 'BP_JournalViewItem_C_IsOwned::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_JournalViewItem.BP_JournalViewItem_C.IsPlaying
// 0x0001 (0x0001 - 0x0000)
struct BP_JournalViewItem_C_IsPlaying final
{
public:
	bool                                          bIsPlaying_0;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JournalViewItem_C_IsPlaying) == 0x000001, "Wrong alignment on BP_JournalViewItem_C_IsPlaying");
static_assert(sizeof(BP_JournalViewItem_C_IsPlaying) == 0x000001, "Wrong size on BP_JournalViewItem_C_IsPlaying");
static_assert(offsetof(BP_JournalViewItem_C_IsPlaying, bIsPlaying_0) == 0x000000, "Member 'BP_JournalViewItem_C_IsPlaying::bIsPlaying_0' has a wrong offset!");

// Function BP_JournalViewItem.BP_JournalViewItem_C.SetIsPlaying
// 0x0001 (0x0001 - 0x0000)
struct BP_JournalViewItem_C_SetIsPlaying final
{
public:
	bool                                          bIsPlaying_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JournalViewItem_C_SetIsPlaying) == 0x000001, "Wrong alignment on BP_JournalViewItem_C_SetIsPlaying");
static_assert(sizeof(BP_JournalViewItem_C_SetIsPlaying) == 0x000001, "Wrong size on BP_JournalViewItem_C_SetIsPlaying");
static_assert(offsetof(BP_JournalViewItem_C_SetIsPlaying, bIsPlaying_0) == 0x000000, "Member 'BP_JournalViewItem_C_SetIsPlaying::bIsPlaying_0' has a wrong offset!");

// Function BP_JournalViewItem.BP_JournalViewItem_C.ShouldBeAddedToList
// 0x0020 (0x0020 - 0x0000)
struct BP_JournalViewItem_C_ShouldBeAddedToList final
{
public:
	bool                                          bAddToList;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOwned_IsOwned;                          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JournalViewItem_C_ShouldBeAddedToList) == 0x000008, "Wrong alignment on BP_JournalViewItem_C_ShouldBeAddedToList");
static_assert(sizeof(BP_JournalViewItem_C_ShouldBeAddedToList) == 0x000020, "Wrong size on BP_JournalViewItem_C_ShouldBeAddedToList");
static_assert(offsetof(BP_JournalViewItem_C_ShouldBeAddedToList, bAddToList) == 0x000000, "Member 'BP_JournalViewItem_C_ShouldBeAddedToList::bAddToList' has a wrong offset!");
static_assert(offsetof(BP_JournalViewItem_C_ShouldBeAddedToList, CallFunc_IsOwned_IsOwned) == 0x000001, "Member 'BP_JournalViewItem_C_ShouldBeAddedToList::CallFunc_IsOwned_IsOwned' has a wrong offset!");
static_assert(offsetof(BP_JournalViewItem_C_ShouldBeAddedToList, CallFunc_Conv_NameToString_ReturnValue) == 0x000008, "Member 'BP_JournalViewItem_C_ShouldBeAddedToList::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JournalViewItem_C_ShouldBeAddedToList, CallFunc_Contains_ReturnValue) == 0x000018, "Member 'BP_JournalViewItem_C_ShouldBeAddedToList::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JournalViewItem_C_ShouldBeAddedToList, CallFunc_BooleanOR_ReturnValue) == 0x000019, "Member 'BP_JournalViewItem_C_ShouldBeAddedToList::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

