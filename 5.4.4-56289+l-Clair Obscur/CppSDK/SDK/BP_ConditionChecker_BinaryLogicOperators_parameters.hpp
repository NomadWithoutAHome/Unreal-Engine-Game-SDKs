#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ConditionChecker_BinaryLogicOperators

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SandFall_structs.hpp"


namespace SDK::Params
{

// Function BP_ConditionChecker_BinaryLogicOperators.BP_ConditionChecker_BinaryLogicOperators_C.BindEventOnGameStateChanged
// 0x0030 (0x0030 - 0x0000)
struct BP_ConditionChecker_BinaryLogicOperators_C_BindEventOnGameStateChanged final
{
public:
	TDelegate<void()>                             Event;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FConditionChecker_Wrapper              CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ConditionChecker_BinaryLogicOperators_C_BindEventOnGameStateChanged) == 0x000008, "Wrong alignment on BP_ConditionChecker_BinaryLogicOperators_C_BindEventOnGameStateChanged");
static_assert(sizeof(BP_ConditionChecker_BinaryLogicOperators_C_BindEventOnGameStateChanged) == 0x000030, "Wrong size on BP_ConditionChecker_BinaryLogicOperators_C_BindEventOnGameStateChanged");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_BindEventOnGameStateChanged, Event) == 0x000000, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_BindEventOnGameStateChanged::Event' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_BindEventOnGameStateChanged, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_BindEventOnGameStateChanged::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_BindEventOnGameStateChanged, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_BindEventOnGameStateChanged::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_BindEventOnGameStateChanged, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_BindEventOnGameStateChanged::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_BindEventOnGameStateChanged, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_BindEventOnGameStateChanged::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_BindEventOnGameStateChanged, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_BindEventOnGameStateChanged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_BindEventOnGameStateChanged, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_BindEventOnGameStateChanged::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ConditionChecker_BinaryLogicOperators.BP_ConditionChecker_BinaryLogicOperators_C.Check_AND
// 0x0028 (0x0028 - 0x0000)
struct BP_ConditionChecker_BinaryLogicOperators_C_Check_AND final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_Result;                                      // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FConditionChecker_Wrapper              CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_ReturnValue;                        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ConditionChecker_BinaryLogicOperators_C_Check_AND) == 0x000008, "Wrong alignment on BP_ConditionChecker_BinaryLogicOperators_C_Check_AND");
static_assert(sizeof(BP_ConditionChecker_BinaryLogicOperators_C_Check_AND) == 0x000028, "Wrong size on BP_ConditionChecker_BinaryLogicOperators_C_Check_AND");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_AND, Result) == 0x000000, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_AND::Result' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_AND, local_Result) == 0x000001, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_AND::local_Result' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_AND, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_AND::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_AND, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_AND::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_AND, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_AND::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_AND, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_AND::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_AND, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_AND::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_AND, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_AND::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_AND, CallFunc_Check_ReturnValue) == 0x000021, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_AND::CallFunc_Check_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_AND, CallFunc_BooleanAND_ReturnValue) == 0x000022, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_AND::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_ConditionChecker_BinaryLogicOperators.BP_ConditionChecker_BinaryLogicOperators_C.Check_OR
// 0x0028 (0x0028 - 0x0000)
struct BP_ConditionChecker_BinaryLogicOperators_C_Check_OR final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_Result;                                      // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FConditionChecker_Wrapper              CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_ReturnValue;                        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ConditionChecker_BinaryLogicOperators_C_Check_OR) == 0x000008, "Wrong alignment on BP_ConditionChecker_BinaryLogicOperators_C_Check_OR");
static_assert(sizeof(BP_ConditionChecker_BinaryLogicOperators_C_Check_OR) == 0x000028, "Wrong size on BP_ConditionChecker_BinaryLogicOperators_C_Check_OR");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_OR, Result) == 0x000000, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_OR::Result' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_OR, local_Result) == 0x000001, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_OR::local_Result' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_OR, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_OR::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_OR, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_OR::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_OR, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_OR::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_OR, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_OR::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_OR, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_OR::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_OR, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_OR::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_OR, CallFunc_Check_ReturnValue) == 0x000021, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_OR::CallFunc_Check_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_OR, CallFunc_BooleanOR_ReturnValue) == 0x000022, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_OR::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_ConditionChecker_BinaryLogicOperators.BP_ConditionChecker_BinaryLogicOperators_C.Check_XOR
// 0x0038 (0x0038 - 0x0000)
struct BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         local_NumberOfConditionsValid;                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FConditionChecker_Wrapper              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_ReturnValue;                        // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR) == 0x000008, "Wrong alignment on BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR");
static_assert(sizeof(BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR) == 0x000038, "Wrong size on BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR, Result) == 0x000000, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR::Result' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR, local_NumberOfConditionsValid) == 0x000004, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR::local_NumberOfConditionsValid' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR, Temp_int_Variable) == 0x00000C, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR, CallFunc_Percent_IntInt_ReturnValue) == 0x000018, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR, CallFunc_Check_ReturnValue) == 0x000031, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_Check_XOR::CallFunc_Check_ReturnValue' has a wrong offset!");

// Function BP_ConditionChecker_BinaryLogicOperators.BP_ConditionChecker_BinaryLogicOperators_C.CheckInternal
// 0x0005 (0x0005 - 0x0000)
struct BP_ConditionChecker_BinaryLogicOperators_C_CheckInternal final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_XOR_Result;                         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_OR_Result;                          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_AND_Result;                         // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ConditionChecker_BinaryLogicOperators_C_CheckInternal) == 0x000001, "Wrong alignment on BP_ConditionChecker_BinaryLogicOperators_C_CheckInternal");
static_assert(sizeof(BP_ConditionChecker_BinaryLogicOperators_C_CheckInternal) == 0x000005, "Wrong size on BP_ConditionChecker_BinaryLogicOperators_C_CheckInternal");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_CheckInternal, ReturnValue) == 0x000000, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_CheckInternal::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_CheckInternal, CallFunc_Check_XOR_Result) == 0x000001, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_CheckInternal::CallFunc_Check_XOR_Result' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_CheckInternal, CallFunc_Check_OR_Result) == 0x000002, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_CheckInternal::CallFunc_Check_OR_Result' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_CheckInternal, CallFunc_Check_AND_Result) == 0x000003, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_CheckInternal::CallFunc_Check_AND_Result' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_CheckInternal, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_CheckInternal::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_ConditionChecker_BinaryLogicOperators.BP_ConditionChecker_BinaryLogicOperators_C.UnbindEventOnGameStateChanged
// 0x0030 (0x0030 - 0x0000)
struct BP_ConditionChecker_BinaryLogicOperators_C_UnbindEventOnGameStateChanged final
{
public:
	TDelegate<void()>                             Event;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FConditionChecker_Wrapper              CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ConditionChecker_BinaryLogicOperators_C_UnbindEventOnGameStateChanged) == 0x000008, "Wrong alignment on BP_ConditionChecker_BinaryLogicOperators_C_UnbindEventOnGameStateChanged");
static_assert(sizeof(BP_ConditionChecker_BinaryLogicOperators_C_UnbindEventOnGameStateChanged) == 0x000030, "Wrong size on BP_ConditionChecker_BinaryLogicOperators_C_UnbindEventOnGameStateChanged");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_UnbindEventOnGameStateChanged, Event) == 0x000000, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_UnbindEventOnGameStateChanged::Event' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_UnbindEventOnGameStateChanged, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_UnbindEventOnGameStateChanged::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_UnbindEventOnGameStateChanged, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_UnbindEventOnGameStateChanged::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_UnbindEventOnGameStateChanged, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_UnbindEventOnGameStateChanged::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_UnbindEventOnGameStateChanged, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_UnbindEventOnGameStateChanged::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_UnbindEventOnGameStateChanged, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_UnbindEventOnGameStateChanged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_UnbindEventOnGameStateChanged, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_UnbindEventOnGameStateChanged::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ConditionChecker_BinaryLogicOperators.BP_ConditionChecker_BinaryLogicOperators_C.ValidateConditionChecker
// 0x01F8 (0x01F8 - 0x0000)
struct BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker final
{
public:
	TArray<class FText>                           ErrorMessages;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 PropertyPath;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00F8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0140(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0150(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue_1;                     // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue_2;                     // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_AppendPropertyPath_ReturnValue;           // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_AppendPropertyPath_ReturnValue_1;         // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_AppendPropertyPath_ReturnValue_2;         // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FConditionChecker_Wrapper              CallFunc_Array_Get_Item;                           // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C5[0x3];                                      // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ConditionChecker_C*                 K2Node_DynamicCast_AsBP_Condition_Checker;         // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_AppendPropertyPath_ReturnValue_3;         // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker) == 0x000008, "Wrong alignment on BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker");
static_assert(sizeof(BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker) == 0x0001F8, "Wrong size on BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker, ErrorMessages) == 0x000000, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker::ErrorMessages' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker, PropertyPath) == 0x000010, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker::PropertyPath' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000028, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker, K2Node_MakeArray_Array) == 0x000080, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker, CallFunc_Format_ReturnValue) == 0x000090, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x0000A0, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x0000A8, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B0, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000F8, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker, K2Node_MakeArray_Array_1) == 0x000140, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker, K2Node_MakeArray_Array_2) == 0x000150, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker, CallFunc_Format_ReturnValue_1) == 0x000160, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker, CallFunc_Format_ReturnValue_2) == 0x000170, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker, CallFunc_AppendPropertyPath_ReturnValue) == 0x000180, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker::CallFunc_AppendPropertyPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker, CallFunc_AppendPropertyPath_ReturnValue_1) == 0x000190, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker::CallFunc_AppendPropertyPath_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x0001A0, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker, CallFunc_AppendPropertyPath_ReturnValue_2) == 0x0001A8, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker::CallFunc_AppendPropertyPath_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker, CallFunc_Array_Get_Item) == 0x0001B8, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker, CallFunc_Array_Length_ReturnValue) == 0x0001C0, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker, CallFunc_Less_IntInt_ReturnValue) == 0x0001C4, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker, K2Node_DynamicCast_AsBP_Condition_Checker) == 0x0001C8, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker::K2Node_DynamicCast_AsBP_Condition_Checker' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker, K2Node_DynamicCast_bSuccess) == 0x0001D0, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker, CallFunc_GetDisplayName_ReturnValue) == 0x0001D8, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker, CallFunc_AppendPropertyPath_ReturnValue_3) == 0x0001E8, "Member 'BP_ConditionChecker_BinaryLogicOperators_C_ValidateConditionChecker::CallFunc_AppendPropertyPath_ReturnValue_3' has a wrong offset!");

}

