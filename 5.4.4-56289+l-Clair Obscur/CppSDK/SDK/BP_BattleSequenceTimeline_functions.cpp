#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattleSequenceTimeline

#include "Basic.hpp"

#include "BP_BattleSequenceTimeline_classes.hpp"
#include "BP_BattleSequenceTimeline_parameters.hpp"


namespace SDK
{

// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.AddBattleSequenceActionKeyframe
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBattleActionEvent                      ActionType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleSequenceTimeline_C::AddBattleSequenceActionKeyframe(double Time, EBattleActionEvent ActionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "AddBattleSequenceActionKeyframe");

	Params::BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe Parms{};

	Parms.Time = Time;
	Parms.ActionType = ActionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.AddBattleSequenceCameraKeyframe
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBattleSequenceCameraType               CameraType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleSequenceTimeline_C::AddBattleSequenceCameraKeyframe(double Time, EBattleSequenceCameraType CameraType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "AddBattleSequenceCameraKeyframe");

	Params::BP_BattleSequenceTimeline_C_AddBattleSequenceCameraKeyframe Parms{};

	Parms.Time = Time;
	Parms.CameraType = CameraType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.AddQTEPresetKeyframes
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  WindowStartTime                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  AnticipationDuration_0                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ValidityDuration_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  NowTime                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleSequenceTimeline_C::AddQTEPresetKeyframes(double WindowStartTime, double AnticipationDuration_0, double ValidityDuration_0, double NowTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "AddQTEPresetKeyframes");

	Params::BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes Parms{};

	Parms.WindowStartTime = WindowStartTime;
	Parms.AnticipationDuration_0 = AnticipationDuration_0;
	Parms.ValidityDuration_0 = ValidityDuration_0;
	Parms.NowTime = NowTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.AddQTEPresetKeyframes_Legacy
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  WindowStartTime                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  AnticipationDuration_0                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ValidityDuration_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  NowTime                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleSequenceTimeline_C::AddQTEPresetKeyframes_Legacy(double WindowStartTime, double AnticipationDuration_0, double ValidityDuration_0, double NowTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "AddQTEPresetKeyframes_Legacy");

	Params::BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy Parms{};

	Parms.WindowStartTime = WindowStartTime;
	Parms.AnticipationDuration_0 = AnticipationDuration_0;
	Parms.ValidityDuration_0 = ValidityDuration_0;
	Parms.NowTime = NowTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.DeclareBattleSequenceTimingsAsList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_EpicBattleSequenceActor_C*    BattleSequence                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<struct FBattleSequenceKeyframe>& BattleSequenceKeyframes                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const TMap<double, EBattleSequenceCameraType>&CameraKeyframes                                        (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_BattleSequenceTimeline_C::DeclareBattleSequenceTimingsAsList(class ABP_EpicBattleSequenceActor_C* BattleSequence, TArray<struct FBattleSequenceKeyframe>& BattleSequenceKeyframes, const TMap<double, EBattleSequenceCameraType>& CameraKeyframes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "DeclareBattleSequenceTimingsAsList");

	Params::BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList Parms{};

	Parms.BattleSequence = BattleSequence;
	Parms.BattleSequenceKeyframes = std::move(BattleSequenceKeyframes);
	Parms.CameraKeyframes = std::move(CameraKeyframes);

	UObject::ProcessEvent(Func, &Parms);

	BattleSequenceKeyframes = std::move(Parms.BattleSequenceKeyframes);
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.ExecuteUbergraph_BP_BattleSequenceTimeline
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleSequenceTimeline_C::ExecuteUbergraph_BP_BattleSequenceTimeline(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "ExecuteUbergraph_BP_BattleSequenceTimeline");

	Params::BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.ExpiresSoonerThan
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBP_BattleSequenceTimeline_C*     Other                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleSequenceTimeline_C::ExpiresSoonerThan(class UBP_BattleSequenceTimeline_C* Other, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "ExpiresSoonerThan");

	Params::BP_BattleSequenceTimeline_C_ExpiresSoonerThan Parms{};

	Parms.Other = Other;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.ForceStopSequence
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleSequenceTimeline_C::ForceStopSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "ForceStopSequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.GetCurrentBattleSequenceTime
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 Time                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleSequenceTimeline_C::GetCurrentBattleSequenceTime(double* Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "GetCurrentBattleSequenceTime");

	Params::BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Time != nullptr)
		*Time = Parms.Time;
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.GetCurrentBattleSequenceTimeInAsset
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBP_BattleSequenceTimeline_C::GetCurrentBattleSequenceTimeInAsset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "GetCurrentBattleSequenceTimeInAsset");

	Params::BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTimeInAsset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.GetCurrentTimeForBattleSequenceTimeline
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleSequenceTimeline_C::GetCurrentTimeForBattleSequenceTimeline(double* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "GetCurrentTimeForBattleSequenceTimeline");

	Params::BP_BattleSequenceTimeline_C_GetCurrentTimeForBattleSequenceTimeline Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.GetDebugText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UBP_BattleSequenceTimeline_C::GetDebugText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "GetDebugText");

	Params::BP_BattleSequenceTimeline_C_GetDebugText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.GetQTEWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWBP_HUD_QTE_Base_C**             Output                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_BattleSequenceTimeline_C::GetQTEWidget(class UWBP_HUD_QTE_Base_C** Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "GetQTEWidget");

	Params::BP_BattleSequenceTimeline_C_GetQTEWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.GetTiedObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject**                         Object                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_BattleSequenceTimeline_C::GetTiedObject(class UObject** Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "GetTiedObject");

	Params::BP_BattleSequenceTimeline_C_GetTiedObject Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Object != nullptr)
		*Object = Parms.Object;
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.InterruptTimeline
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleSequenceTimeline_C::InterruptTimeline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "InterruptTimeline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.IsInPerfectWindow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_BattleSequenceTimeline_C::IsInPerfectWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "IsInPerfectWindow");

	Params::BP_BattleSequenceTimeline_C_IsInPerfectWindow Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.OnBattleSequenceActionReached
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBattleActionEvent                      KeyframeType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleSequenceTimeline_C::OnBattleSequenceActionReached(EBattleActionEvent KeyframeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "OnBattleSequenceActionReached");

	Params::BP_BattleSequenceTimeline_C_OnBattleSequenceActionReached Parms{};

	Parms.KeyframeType = KeyframeType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.OnBattleSequenceFinished
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_BattleSequenceTimeline_C::OnBattleSequenceFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "OnBattleSequenceFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.OnSkillComboExitPointReached
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_BattleSequenceTimeline_C::OnSkillComboExitPointReached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "OnSkillComboExitPointReached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.OnSkillComboWindowEndReached
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_BattleSequenceTimeline_C::OnSkillComboWindowEndReached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "OnSkillComboWindowEndReached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.OnSkillComboWindowPreReached
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_BattleSequenceTimeline_C::OnSkillComboWindowPreReached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "OnSkillComboWindowPreReached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.OnSkillComboWindowStartReached
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_BattleSequenceTimeline_C::OnSkillComboWindowStartReached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "OnSkillComboWindowStartReached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.OnSkillEffectReached
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_BattleSequenceTimeline_C::OnSkillEffectReached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "OnSkillEffectReached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.OnUIAction
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleSequenceTimeline_C::OnUIAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "OnUIAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.OnUINavigationFocus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class UBP_UINavigationFocusEvent_C*FocusEventBP                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_BattleSequenceTimeline_C::OnUINavigationFocus(const class UBP_UINavigationFocusEvent_C* FocusEventBP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "OnUINavigationFocus");

	Params::BP_BattleSequenceTimeline_C_OnUINavigationFocus Parms{};

	Parms.FocusEventBP = FocusEventBP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.OnUINavigationFocusLost
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleSequenceTimeline_C::OnUINavigationFocusLost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "OnUINavigationFocusLost");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.QueueNextBattleSequenceKeyframe
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_BattleSequenceTimeline_C::QueueNextBattleSequenceKeyframe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "QueueNextBattleSequenceKeyframe");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.SetCurrentBattleSequenceAction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBattleActionEvent                      BattleSequenceAction                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleSequenceTimeline_C::SetCurrentBattleSequenceAction(EBattleActionEvent BattleSequenceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "SetCurrentBattleSequenceAction");

	Params::BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction Parms{};

	Parms.BattleSequenceAction = BattleSequenceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.StartAllowSkillCombo
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_BattleSequenceTimeline_C::StartAllowSkillCombo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "StartAllowSkillCombo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.StartEndPhase
// (BlueprintCallable, BlueprintEvent)

void UBP_BattleSequenceTimeline_C::StartEndPhase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "StartEndPhase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.StartPrePhase
// (BlueprintCallable, BlueprintEvent)

void UBP_BattleSequenceTimeline_C::StartPrePhase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "StartPrePhase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.StartValidityPhase
// (BlueprintCallable, BlueprintEvent)

void UBP_BattleSequenceTimeline_C::StartValidityPhase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "StartValidityPhase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.StopAllowSkillCombo
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_BattleSequenceTimeline_C::StopAllowSkillCombo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "StopAllowSkillCombo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.StopSequence
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleSequenceTimeline_C::StopSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "StopSequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.TickBattleSequenceTimeline
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_BattleSequenceTimeline_C::TickBattleSequenceTimeline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "TickBattleSequenceTimeline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.TickCustomTimers
// (BlueprintCallable, BlueprintEvent)

void UBP_BattleSequenceTimeline_C::TickCustomTimers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "TickCustomTimers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.TryActivate
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Perfect                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleSequenceTimeline_C::TryActivate(bool* Success, bool* Perfect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "TryActivate");

	Params::BP_BattleSequenceTimeline_C_TryActivate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (Perfect != nullptr)
		*Perfect = Parms.Perfect;
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.VerifyBattleSequenceActionChange
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EBattleActionEvent                      CurrentState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBattleActionEvent                      PreviousState                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<EBattleActionEvent>*             ExpectedValue                                          (Parm, OutParm)

void UBP_BattleSequenceTimeline_C::VerifyBattleSequenceActionChange(EBattleActionEvent CurrentState, EBattleActionEvent PreviousState, bool* IsValid, TArray<EBattleActionEvent>* ExpectedValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "VerifyBattleSequenceActionChange");

	Params::BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange Parms{};

	Parms.CurrentState = CurrentState;
	Parms.PreviousState = PreviousState;

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	if (ExpectedValue != nullptr)
		*ExpectedValue = std::move(Parms.ExpectedValue);
}


// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.VerifyBattleSequenceTimeline
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TMap<double, struct FFBattleSequenceTimelineKeyframe>&Timeline                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_BattleSequenceTimeline_C::VerifyBattleSequenceTimeline(const TMap<double, struct FFBattleSequenceTimelineKeyframe>& Timeline)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleSequenceTimeline_C", "VerifyBattleSequenceTimeline");

	Params::BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline Parms{};

	Parms.Timeline = std::move(Timeline);

	UObject::ProcessEvent(Func, &Parms);
}

}

