#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PictoCartridge

#include "Basic.hpp"

#include "EWeaponQuality_structs.hpp"
#include "E_jRPG_StatType_structs.hpp"
#include "S_jRPG_Item_StaticData_structs.hpp"
#include "FPassiveEffect_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_PictoCartridge.WBP_PictoCartridge_C.SetPictoDataFromInstance
// 0x0270 (0x0270 - 0x0000)
struct WBP_PictoCartridge_C_SetPictoDataFromInstance final
{
public:
	class UBP_ItemInstance_Gear_Pictos_C*         ItemInstance;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponQuality                                CallFunc_GetCurrentQuality_Quality;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentLevel_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetUnlockedPassiveEffectsIDs_PassiveEffectIDs; // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_StaticData                CallFunc_GetItemStaticData_ItemStaticData;         // 0x0030(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	TMap<E_jRPG_StatType, double>                 CallFunc_GetCurrentStats_CurrentStats;             // 0x0160(0x0050)()
	TArray<E_jRPG_StatType>                       CallFunc_Map_Keys_Keys;                            // 0x01B0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_StatType                               CallFunc_Array_Get_Item;                           // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x01DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPassiveEffect                        CallFunc_GetPassiveEffectDefinition_PassiveEffect; // 0x01F8(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetPassiveEffectDefinition_Found;         // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNameValid_ReturnValue;                  // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24A[0x6];                                      // 0x024A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_PictoCombatStat_C*                 CallFunc_BP_CreateEntryOfClass_ReturnValue;        // 0x0250(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x026A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PictoCartridge_C_SetPictoDataFromInstance) == 0x000008, "Wrong alignment on WBP_PictoCartridge_C_SetPictoDataFromInstance");
static_assert(sizeof(WBP_PictoCartridge_C_SetPictoDataFromInstance) == 0x000270, "Wrong size on WBP_PictoCartridge_C_SetPictoDataFromInstance");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, ItemInstance) == 0x000000, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::ItemInstance' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, Temp_bool_True_if_break_was_hit_Variable) == 0x000008, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, CallFunc_GetCurrentQuality_Quality) == 0x000009, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::CallFunc_GetCurrentQuality_Quality' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, CallFunc_GetCurrentLevel_ReturnValue) == 0x00000C, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::CallFunc_GetCurrentLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, CallFunc_GetUnlockedPassiveEffectsIDs_PassiveEffectIDs) == 0x000018, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::CallFunc_GetUnlockedPassiveEffectsIDs_PassiveEffectIDs' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, CallFunc_GetItemStaticData_ItemStaticData) == 0x000030, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::CallFunc_GetItemStaticData_ItemStaticData' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, CallFunc_GetCurrentStats_CurrentStats) == 0x000160, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::CallFunc_GetCurrentStats_CurrentStats' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, CallFunc_Map_Keys_Keys) == 0x0001B0, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, CallFunc_Array_Length_ReturnValue_1) == 0x0001C0, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, Temp_int_Loop_Counter_Variable) == 0x0001C4, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, CallFunc_Less_IntInt_ReturnValue) == 0x0001C8, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, CallFunc_Add_IntInt_ReturnValue) == 0x0001CC, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, Temp_int_Array_Index_Variable) == 0x0001D0, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, Temp_int_Array_Index_Variable_1) == 0x0001D4, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, CallFunc_Array_Get_Item) == 0x0001D8, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, CallFunc_Array_Get_Item_1) == 0x0001DC, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, CallFunc_Map_Find_Value) == 0x0001E8, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, CallFunc_Map_Find_ReturnValue) == 0x0001F0, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, CallFunc_GetPassiveEffectDefinition_PassiveEffect) == 0x0001F8, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::CallFunc_GetPassiveEffectDefinition_PassiveEffect' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, CallFunc_GetPassiveEffectDefinition_Found) == 0x000240, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::CallFunc_GetPassiveEffectDefinition_Found' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, CallFunc_FTrunc_ReturnValue) == 0x000244, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, CallFunc_IsNameValid_ReturnValue) == 0x000248, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::CallFunc_IsNameValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, Temp_byte_Variable) == 0x000249, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, CallFunc_BP_CreateEntryOfClass_ReturnValue) == 0x000250, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::CallFunc_BP_CreateEntryOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, Temp_byte_Variable_1) == 0x000258, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, Temp_int_Loop_Counter_Variable_1) == 0x00025C, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, CallFunc_Less_IntInt_ReturnValue_1) == 0x000260, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, CallFunc_Add_IntInt_ReturnValue_1) == 0x000264, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, CallFunc_BooleanAND_ReturnValue) == 0x000268, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, Temp_bool_Variable) == 0x000269, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_SetPictoDataFromInstance, K2Node_Select_Default) == 0x00026A, "Member 'WBP_PictoCartridge_C_SetPictoDataFromInstance::K2Node_Select_Default' has a wrong offset!");

// Function WBP_PictoCartridge.WBP_PictoCartridge_C.Set Picto Data
// 0x0018 (0x0018 - 0x0000)
struct WBP_PictoCartridge_C_Set_Picto_Data final
{
public:
	class UBP_PictoViewItem_C*                    PictoViewItem;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_Pictos_C*         CallFunc_GetGearPictosInstance_AsBP_Item_Instance_Gear_Pictos; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PictoCartridge_C_Set_Picto_Data) == 0x000008, "Wrong alignment on WBP_PictoCartridge_C_Set_Picto_Data");
static_assert(sizeof(WBP_PictoCartridge_C_Set_Picto_Data) == 0x000018, "Wrong size on WBP_PictoCartridge_C_Set_Picto_Data");
static_assert(offsetof(WBP_PictoCartridge_C_Set_Picto_Data, PictoViewItem) == 0x000000, "Member 'WBP_PictoCartridge_C_Set_Picto_Data::PictoViewItem' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_Set_Picto_Data, CallFunc_GetGearPictosInstance_AsBP_Item_Instance_Gear_Pictos) == 0x000008, "Member 'WBP_PictoCartridge_C_Set_Picto_Data::CallFunc_GetGearPictosInstance_AsBP_Item_Instance_Gear_Pictos' has a wrong offset!");
static_assert(offsetof(WBP_PictoCartridge_C_Set_Picto_Data, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_PictoCartridge_C_Set_Picto_Data::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

