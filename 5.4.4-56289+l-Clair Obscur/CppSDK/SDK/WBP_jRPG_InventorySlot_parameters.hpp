#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_jRPG_InventorySlot

#include "Basic.hpp"

#include "S_jRPG_Item_StaticData_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_jRPG_InventorySlot.WBP_jRPG_InventorySlot_C.ExecuteUbergraph_WBP_jRPG_InventorySlot
// 0x0020 (0x0020 - 0x0000)
struct WBP_jRPG_InventorySlot_C_ExecuteUbergraph_WBP_jRPG_InventorySlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_jRPG_InventorySlot_C_ExecuteUbergraph_WBP_jRPG_InventorySlot) == 0x000008, "Wrong alignment on WBP_jRPG_InventorySlot_C_ExecuteUbergraph_WBP_jRPG_InventorySlot");
static_assert(sizeof(WBP_jRPG_InventorySlot_C_ExecuteUbergraph_WBP_jRPG_InventorySlot) == 0x000020, "Wrong size on WBP_jRPG_InventorySlot_C_ExecuteUbergraph_WBP_jRPG_InventorySlot");
static_assert(offsetof(WBP_jRPG_InventorySlot_C_ExecuteUbergraph_WBP_jRPG_InventorySlot, EntryPoint) == 0x000000, "Member 'WBP_jRPG_InventorySlot_C_ExecuteUbergraph_WBP_jRPG_InventorySlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_jRPG_InventorySlot_C_ExecuteUbergraph_WBP_jRPG_InventorySlot, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_jRPG_InventorySlot_C_ExecuteUbergraph_WBP_jRPG_InventorySlot::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_jRPG_InventorySlot_C_ExecuteUbergraph_WBP_jRPG_InventorySlot, CallFunc_PlayAnimation_ReturnValue_1) == 0x000010, "Member 'WBP_jRPG_InventorySlot_C_ExecuteUbergraph_WBP_jRPG_InventorySlot::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_jRPG_InventorySlot_C_ExecuteUbergraph_WBP_jRPG_InventorySlot, CallFunc_PlayAnimation_ReturnValue_2) == 0x000018, "Member 'WBP_jRPG_InventorySlot_C_ExecuteUbergraph_WBP_jRPG_InventorySlot::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");

// Function WBP_jRPG_InventorySlot.WBP_jRPG_InventorySlot_C.UpdateItemData
// 0x0180 (0x0180 - 0x0000)
struct WBP_jRPG_InventorySlot_C_UpdateItemData final
{
public:
	int32                                         CurrentStackAmount;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_StaticData                ItemStaticData;                                    // 0x0008(0x0130)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0138(0x0010)()
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_RarityToColor_LinearColor;                // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x016C(0x0014)()
};
static_assert(alignof(WBP_jRPG_InventorySlot_C_UpdateItemData) == 0x000008, "Wrong alignment on WBP_jRPG_InventorySlot_C_UpdateItemData");
static_assert(sizeof(WBP_jRPG_InventorySlot_C_UpdateItemData) == 0x000180, "Wrong size on WBP_jRPG_InventorySlot_C_UpdateItemData");
static_assert(offsetof(WBP_jRPG_InventorySlot_C_UpdateItemData, CurrentStackAmount) == 0x000000, "Member 'WBP_jRPG_InventorySlot_C_UpdateItemData::CurrentStackAmount' has a wrong offset!");
static_assert(offsetof(WBP_jRPG_InventorySlot_C_UpdateItemData, ItemStaticData) == 0x000008, "Member 'WBP_jRPG_InventorySlot_C_UpdateItemData::ItemStaticData' has a wrong offset!");
static_assert(offsetof(WBP_jRPG_InventorySlot_C_UpdateItemData, CallFunc_Conv_IntToText_ReturnValue) == 0x000138, "Member 'WBP_jRPG_InventorySlot_C_UpdateItemData::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_jRPG_InventorySlot_C_UpdateItemData, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000148, "Member 'WBP_jRPG_InventorySlot_C_UpdateItemData::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_jRPG_InventorySlot_C_UpdateItemData, CallFunc_RarityToColor_LinearColor) == 0x000150, "Member 'WBP_jRPG_InventorySlot_C_UpdateItemData::CallFunc_RarityToColor_LinearColor' has a wrong offset!");
static_assert(offsetof(WBP_jRPG_InventorySlot_C_UpdateItemData, K2Node_DynamicCast_AsTexture_2D) == 0x000160, "Member 'WBP_jRPG_InventorySlot_C_UpdateItemData::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(WBP_jRPG_InventorySlot_C_UpdateItemData, K2Node_DynamicCast_bSuccess) == 0x000168, "Member 'WBP_jRPG_InventorySlot_C_UpdateItemData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_jRPG_InventorySlot_C_UpdateItemData, K2Node_MakeStruct_SlateColor) == 0x00016C, "Member 'WBP_jRPG_InventorySlot_C_UpdateItemData::K2Node_MakeStruct_SlateColor' has a wrong offset!");

}

