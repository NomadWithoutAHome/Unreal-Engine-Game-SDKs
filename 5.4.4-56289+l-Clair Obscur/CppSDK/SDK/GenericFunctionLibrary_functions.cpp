#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GenericFunctionLibrary

#include "Basic.hpp"

#include "GenericFunctionLibrary_classes.hpp"
#include "GenericFunctionLibrary_parameters.hpp"


namespace SDK
{

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.ConcatenateSoftObjectDisplayNames
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<TSoftObjectPtr<class UObject>>&  Objects                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const class FString&                    Separator                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString*                          Result                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UGenericFunctionLibrary_C::ConcatenateSoftObjectDisplayNames(TArray<TSoftObjectPtr<class UObject>>& Objects, const class FString& Separator, class UObject* __WorldContext, class FString* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "ConcatenateSoftObjectDisplayNames");

	Params::GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames Parms{};

	Parms.Objects = std::move(Objects);
	Parms.Separator = std::move(Separator);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Objects = std::move(Parms.Objects);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.IsInEditorPreview
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UGenericFunctionLibrary_C::IsInEditorPreview(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "IsInEditorPreview");

	Params::GenericFunctionLibrary_C_IsInEditorPreview Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.CompareIntegers
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// uint8                                   Comparison                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   A                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   B                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UGenericFunctionLibrary_C::CompareIntegers(uint8 Comparison, int32 A, int32 B, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "CompareIntegers");

	Params::GenericFunctionLibrary_C_CompareIntegers Parms{};

	Parms.Comparison = Comparison;
	Parms.A = A;
	Parms.B = B;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.IsCurrentPlatformConsole
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   CurrentPlatformIsConsole                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGenericFunctionLibrary_C::IsCurrentPlatformConsole(class UObject* __WorldContext, bool* CurrentPlatformIsConsole)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "IsCurrentPlatformConsole");

	Params::GenericFunctionLibrary_C_IsCurrentPlatformConsole Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (CurrentPlatformIsConsole != nullptr)
		*CurrentPlatformIsConsole = Parms.CurrentPlatformIsConsole;
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.AddIfValid
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class UObject*>&                 Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGenericFunctionLibrary_C::AddIfValid(class UObject* Object, TArray<class UObject*>& Array, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "AddIfValid");

	Params::GenericFunctionLibrary_C_AddIfValid Parms{};

	Parms.Object = Object;
	Parms.Array = std::move(Array);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.ToTextArray_(String)
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>&                  StringArray                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class FText>*                    TextArray                                              (Parm, OutParm)

void UGenericFunctionLibrary_C::ToTextArray__String_(TArray<class FString>& StringArray, class UObject* __WorldContext, TArray<class FText>* TextArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "ToTextArray_(String)");

	Params::GenericFunctionLibrary_C_ToTextArray__String_ Parms{};

	Parms.StringArray = std::move(StringArray);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	StringArray = std::move(Parms.StringArray);

	if (TextArray != nullptr)
		*TextArray = std::move(Parms.TextArray);
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.ValidateObjectArray
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UObject*>&                 Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const class FString&                    ArrayName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString*                          ErrorMessage                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UGenericFunctionLibrary_C::ValidateObjectArray(TArray<class UObject*>& Array, const class FString& ArrayName, class UObject* __WorldContext, bool* IsValid, class FString* ErrorMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "ValidateObjectArray");

	Params::GenericFunctionLibrary_C_ValidateObjectArray Parms{};

	Parms.Array = std::move(Array);
	Parms.ArrayName = std::move(ArrayName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	if (ErrorMessage != nullptr)
		*ErrorMessage = std::move(Parms.ErrorMessage);
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.CheckObjectArray
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UObject*>&                 Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const class FString&                    ArrayName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGenericFunctionLibrary_C::CheckObjectArray(TArray<class UObject*>& Array, const class FString& ArrayName, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "CheckObjectArray");

	Params::GenericFunctionLibrary_C_CheckObjectArray Parms{};

	Parms.Array = std::move(Array);
	Parms.ArrayName = std::move(ArrayName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.ToStringArray_(integer)
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>&                          IntegerArray                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class FString>*                  StringArray                                            (Parm, OutParm)

void UGenericFunctionLibrary_C::ToStringArray__integer_(TArray<int32>& IntegerArray, class UObject* __WorldContext, TArray<class FString>* StringArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "ToStringArray_(integer)");

	Params::GenericFunctionLibrary_C_ToStringArray__integer_ Parms{};

	Parms.IntegerArray = std::move(IntegerArray);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	IntegerArray = std::move(Parms.IntegerArray);

	if (StringArray != nullptr)
		*StringArray = std::move(Parms.StringArray);
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.SetCanvasSlotAsHorizontalFillPercentage
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCanvasPanelSlot*                 Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  FillAlpha                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGenericFunctionLibrary_C::SetCanvasSlotAsHorizontalFillPercentage(class UCanvasPanelSlot* Target, double FillAlpha, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "SetCanvasSlotAsHorizontalFillPercentage");

	Params::GenericFunctionLibrary_C_SetCanvasSlotAsHorizontalFillPercentage Parms{};

	Parms.Target = Target;
	Parms.FillAlpha = FillAlpha;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.ArrayOfFloatsToString
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<double>&                         In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString*                          OutString                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UGenericFunctionLibrary_C::ArrayOfFloatsToString(TArray<double>& In, class UObject* __WorldContext, class FString* OutString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "ArrayOfFloatsToString");

	Params::GenericFunctionLibrary_C_ArrayOfFloatsToString Parms{};

	Parms.In = std::move(In);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	In = std::move(Parms.In);

	if (OutString != nullptr)
		*OutString = std::move(Parms.OutString);
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.IsDataRowHandleSet
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FDataTableRowHandle&       RowHandle                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UGenericFunctionLibrary_C::IsDataRowHandleSet(const struct FDataTableRowHandle& RowHandle, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "IsDataRowHandleSet");

	Params::GenericFunctionLibrary_C_IsDataRowHandleSet Parms{};

	Parms.RowHandle = std::move(RowHandle);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.GetRandomOtherObjectFromArray
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UObject*>&                 Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject**                         OutItem                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGenericFunctionLibrary_C::GetRandomOtherObjectFromArray(TArray<class UObject*>& Array, class UObject* Object, class UObject* __WorldContext, class UObject** OutItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "GetRandomOtherObjectFromArray");

	Params::GenericFunctionLibrary_C_GetRandomOtherObjectFromArray Parms{};

	Parms.Array = std::move(Array);
	Parms.Object = Object;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);

	if (OutItem != nullptr)
		*OutItem = Parms.OutItem;
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.ConcatenateClassDisplayNames
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UClass*>&                  Objects                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const class FString&                    Separator                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString*                          Result                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UGenericFunctionLibrary_C::ConcatenateClassDisplayNames(TArray<class UClass*>& Objects, const class FString& Separator, class UObject* __WorldContext, class FString* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "ConcatenateClassDisplayNames");

	Params::GenericFunctionLibrary_C_ConcatenateClassDisplayNames Parms{};

	Parms.Objects = std::move(Objects);
	Parms.Separator = std::move(Separator);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Objects = std::move(Parms.Objects);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.ConcatenateSoftClassDisplayNames
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<TSoftClassPtr<class UClass>>&    Objects                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const class FString&                    Separator                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString*                          Result                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UGenericFunctionLibrary_C::ConcatenateSoftClassDisplayNames(TArray<TSoftClassPtr<class UClass>>& Objects, const class FString& Separator, class UObject* __WorldContext, class FString* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "ConcatenateSoftClassDisplayNames");

	Params::GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames Parms{};

	Parms.Objects = std::move(Objects);
	Parms.Separator = std::move(Separator);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Objects = std::move(Parms.Objects);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.CompareFloats
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// uint8                                   Comparison                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  A                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  B                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UGenericFunctionLibrary_C::CompareFloats(uint8 Comparison, double A, double B, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "CompareFloats");

	Params::GenericFunctionLibrary_C_CompareFloats Parms{};

	Parms.Comparison = Comparison;
	Parms.A = A;
	Parms.B = B;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.StartLatentAction
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    DebugReason                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USF_BlueprintLatentAction**       AsyncAction                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGenericFunctionLibrary_C::StartLatentAction(const class FString& DebugReason, class UObject* __WorldContext, class USF_BlueprintLatentAction** AsyncAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "StartLatentAction");

	Params::GenericFunctionLibrary_C_StartLatentAction Parms{};

	Parms.DebugReason = std::move(DebugReason);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (AsyncAction != nullptr)
		*AsyncAction = Parms.AsyncAction;
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.IncrementModulo
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32&                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Modulo                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UGenericFunctionLibrary_C::IncrementModulo(int32& Value, int32 Modulo, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "IncrementModulo");

	Params::GenericFunctionLibrary_C_IncrementModulo Parms{};

	Parms.Value = Value;
	Parms.Modulo = Modulo;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Value = Parms.Value;

	return Parms.ReturnValue;
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.ConcatenateDisplayNamesString
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UObject*>&                 Objects                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const class FString&                    Separator                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString*                          Result                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UGenericFunctionLibrary_C::ConcatenateDisplayNamesString(TArray<class UObject*>& Objects, const class FString& Separator, class UObject* __WorldContext, class FString* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "ConcatenateDisplayNamesString");

	Params::GenericFunctionLibrary_C_ConcatenateDisplayNamesString Parms{};

	Parms.Objects = std::move(Objects);
	Parms.Separator = std::move(Separator);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Objects = std::move(Parms.Objects);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.GetShorterVector
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector&                   Start1                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   End1                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Start2                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         End2                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGenericFunctionLibrary_C::GetShorterVector(const struct FVector& Start1, const struct FVector& End1, double Distance, class UObject* __WorldContext, struct FVector* Start2, struct FVector* End2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "GetShorterVector");

	Params::GenericFunctionLibrary_C_GetShorterVector Parms{};

	Parms.Start1 = std::move(Start1);
	Parms.End1 = std::move(End1);
	Parms.Distance = Distance;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Start2 != nullptr)
		*Start2 = std::move(Parms.Start2);

	if (End2 != nullptr)
		*End2 = std::move(Parms.End2);
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.AreWIP_ChecksEnabled
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UGenericFunctionLibrary_C::AreWIP_ChecksEnabled(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "AreWIP_ChecksEnabled");

	Params::GenericFunctionLibrary_C_AreWIP_ChecksEnabled Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.IsChildOfClass
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TSoftClassPtr<class UClass>             SoftClass                                              (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UGenericFunctionLibrary_C::IsChildOfClass(class UObject* Object, TSoftClassPtr<class UClass> SoftClass, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "IsChildOfClass");

	Params::GenericFunctionLibrary_C_IsChildOfClass Parms{};

	Parms.Object = Object;
	Parms.SoftClass = SoftClass;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.IsDebugModeEnabled
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UGenericFunctionLibrary_C::IsDebugModeEnabled(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "IsDebugModeEnabled");

	Params::GenericFunctionLibrary_C_IsDebugModeEnabled Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.ArrayContainsInvalid
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UObject*>&                 Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>*                          ArrayIndex                                             (Parm, OutParm)

void UGenericFunctionLibrary_C::ArrayContainsInvalid(TArray<class UObject*>& Array, class UObject* __WorldContext, bool* Result, TArray<int32>* ArrayIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "ArrayContainsInvalid");

	Params::GenericFunctionLibrary_C_ArrayContainsInvalid Parms{};

	Parms.Array = std::move(Array);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (ArrayIndex != nullptr)
		*ArrayIndex = std::move(Parms.ArrayIndex);
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.GetPrimitiveScreenPercentage
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class USceneComponent*            Primitive                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UGenericFunctionLibrary_C::GetPrimitiveScreenPercentage(const class USceneComponent* Primitive, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "GetPrimitiveScreenPercentage");

	Params::GenericFunctionLibrary_C_GetPrimitiveScreenPercentage Parms{};

	Parms.Primitive = Primitive;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.WasPrimitiveRecentlyRenderedOnScreen
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class UPrimitiveComponent*        Primitive                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UGenericFunctionLibrary_C::WasPrimitiveRecentlyRenderedOnScreen(const class UPrimitiveComponent* Primitive, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "WasPrimitiveRecentlyRenderedOnScreen");

	Params::GenericFunctionLibrary_C_WasPrimitiveRecentlyRenderedOnScreen Parms{};

	Parms.Primitive = Primitive;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.ResetHysteresisTimer
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTimerHandle&                    Handle                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// const class FString&                    DebugName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGenericFunctionLibrary_C::ResetHysteresisTimer(struct FTimerHandle& Handle, const class FString& DebugName, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "ResetHysteresisTimer");

	Params::GenericFunctionLibrary_C_ResetHysteresisTimer Parms{};

	Parms.Handle = std::move(Handle);
	Parms.DebugName = std::move(DebugName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Handle = std::move(Parms.Handle);
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.GetLocalCanvasSlotParams
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWidget*                          ChildWidget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class UWidget*                          NewParentCanvas                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       position                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       Size                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGenericFunctionLibrary_C::GetLocalCanvasSlotParams(class UWidget* ChildWidget, class UWidget* NewParentCanvas, class UObject* __WorldContext, struct FVector2D* position, struct FVector2D* Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "GetLocalCanvasSlotParams");

	Params::GenericFunctionLibrary_C_GetLocalCanvasSlotParams Parms{};

	Parms.ChildWidget = ChildWidget;
	Parms.NewParentCanvas = NewParentCanvas;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (position != nullptr)
		*position = std::move(Parms.position);

	if (Size != nullptr)
		*Size = std::move(Parms.Size);
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.AddChildToCanvas_Fill
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCanvasPanel*                     Canvas                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class UWidget*                          Content                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UCanvasPanelSlot**                CanvasSlot                                             (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UGenericFunctionLibrary_C::AddChildToCanvas_Fill(class UCanvasPanel* Canvas, class UWidget* Content, class UObject* __WorldContext, class UCanvasPanelSlot** CanvasSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "AddChildToCanvas_Fill");

	Params::GenericFunctionLibrary_C_AddChildToCanvas_Fill Parms{};

	Parms.Canvas = Canvas;
	Parms.Content = Content;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (CanvasSlot != nullptr)
		*CanvasSlot = Parms.CanvasSlot;
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.CopyUISlot
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPanelSlot*                       SourceSlot                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPanelSlot*                       TargetSlot                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGenericFunctionLibrary_C::CopyUISlot(class UPanelSlot* SourceSlot, class UPanelSlot* TargetSlot, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "CopyUISlot");

	Params::GenericFunctionLibrary_C_CopyUISlot Parms{};

	Parms.SourceSlot = SourceSlot;
	Parms.TargetSlot = TargetSlot;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.ApplyUISlotToWidget
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPanelSlot*                       Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGenericFunctionLibrary_C::ApplyUISlotToWidget(class UWidget* Widget, class UPanelSlot* Slot, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "ApplyUISlotToWidget");

	Params::GenericFunctionLibrary_C_ApplyUISlotToWidget Parms{};

	Parms.Widget = Widget;
	Parms.Slot = Slot;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.CloneUISlotFromWidget
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPanelSlot**                      Slot                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UGenericFunctionLibrary_C::CloneUISlotFromWidget(class UWidget* Widget, class UObject* __WorldContext, class UPanelSlot** Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "CloneUISlotFromWidget");

	Params::GenericFunctionLibrary_C_CloneUISlotFromWidget Parms{};

	Parms.Widget = Widget;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Slot != nullptr)
		*Slot = Parms.Slot;
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.IsDifferentOptionalBool
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EOptionalBoolean&                       Bool1                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool&                                   Bool                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UGenericFunctionLibrary_C::IsDifferentOptionalBool(EOptionalBoolean& Bool1, bool& Bool, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "IsDifferentOptionalBool");

	Params::GenericFunctionLibrary_C_IsDifferentOptionalBool Parms{};

	Parms.Bool1 = Bool1;
	Parms.Bool = Bool;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Bool1 = Parms.Bool1;
	Bool = Parms.Bool;

	return Parms.ReturnValue;
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.IsSameOptionalBool
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EOptionalBoolean&                       Bool1                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool&                                   Bool                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsSet                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UGenericFunctionLibrary_C::IsSameOptionalBool(EOptionalBoolean& Bool1, bool& Bool, class UObject* __WorldContext, bool* IsSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "IsSameOptionalBool");

	Params::GenericFunctionLibrary_C_IsSameOptionalBool Parms{};

	Parms.Bool1 = Bool1;
	Parms.Bool = Bool;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Bool1 = Parms.Bool1;
	Bool = Parms.Bool;

	if (IsSet != nullptr)
		*IsSet = Parms.IsSet;

	return Parms.ReturnValue;
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.==OptionalBool
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EOptionalBoolean&                       Bool1                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EOptionalBoolean&                       Bool2                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsSame                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGenericFunctionLibrary_C::__OptionalBool(EOptionalBoolean& Bool1, EOptionalBoolean& Bool2, class UObject* __WorldContext, bool* IsSame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "==OptionalBool");

	Params::GenericFunctionLibrary_C___OptionalBool Parms{};

	Parms.Bool1 = Bool1;
	Parms.Bool2 = Bool2;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Bool1 = Parms.Bool1;
	Bool2 = Parms.Bool2;

	if (IsSame != nullptr)
		*IsSame = Parms.IsSame;
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.ResetOptionalBool
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EOptionalBoolean&                       Bool                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGenericFunctionLibrary_C::ResetOptionalBool(EOptionalBoolean& Bool, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "ResetOptionalBool");

	Params::GenericFunctionLibrary_C_ResetOptionalBool Parms{};

	Parms.Bool = Bool;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Bool = Parms.Bool;
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.SetOptionalBool
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EOptionalBoolean&                       Bool                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   _                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGenericFunctionLibrary_C::SetOptionalBool(bool Value, EOptionalBoolean& Bool, class UObject* __WorldContext, bool* _)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "SetOptionalBool");

	Params::GenericFunctionLibrary_C_SetOptionalBool Parms{};

	Parms.Value = Value;
	Parms.Bool = Bool;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Bool = Parms.Bool;

	if (_ != nullptr)
		*_ = Parms._;
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.FromOptionalBool
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EOptionalBoolean                        Bool                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsSet                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGenericFunctionLibrary_C::FromOptionalBool(EOptionalBoolean Bool, class UObject* __WorldContext, bool* IsSet, bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "FromOptionalBool");

	Params::GenericFunctionLibrary_C_FromOptionalBool Parms{};

	Parms.Bool = Bool;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (IsSet != nullptr)
		*IsSet = Parms.IsSet;

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.ToOptionalBool
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Bool                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EOptionalBoolean*                       OptionalBool                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGenericFunctionLibrary_C::ToOptionalBool(bool Bool, class UObject* __WorldContext, EOptionalBoolean* OptionalBool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "ToOptionalBool");

	Params::GenericFunctionLibrary_C_ToOptionalBool Parms{};

	Parms.Bool = Bool;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (OptionalBool != nullptr)
		*OptionalBool = Parms.OptionalBool;
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.GetThresholdIntVector
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  X                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Y                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Threshold                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FIntVector*                      IntVector                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGenericFunctionLibrary_C::GetThresholdIntVector(double X, double Y, double Threshold, class UObject* __WorldContext, struct FIntVector* IntVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "GetThresholdIntVector");

	Params::GenericFunctionLibrary_C_GetThresholdIntVector Parms{};

	Parms.X = X;
	Parms.Y = Y;
	Parms.Threshold = Threshold;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (IntVector != nullptr)
		*IntVector = std::move(Parms.IntVector);
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.GetThresholdAbsoluteValue_Float
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Threshold                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UGenericFunctionLibrary_C::GetThresholdAbsoluteValue_Float(double Value, double Threshold, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "GetThresholdAbsoluteValue_Float");

	Params::GenericFunctionLibrary_C_GetThresholdAbsoluteValue_Float Parms{};

	Parms.Value = Value;
	Parms.Threshold = Threshold;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.GetUINavigationDirectionFromInputVector
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FIntVector&                      DirectionVector                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EUINavigationDirection*                 Direction                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGenericFunctionLibrary_C::GetUINavigationDirectionFromInputVector(struct FIntVector& DirectionVector, class UObject* __WorldContext, EUINavigationDirection* Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "GetUINavigationDirectionFromInputVector");

	Params::GenericFunctionLibrary_C_GetUINavigationDirectionFromInputVector Parms{};

	Parms.DirectionVector = std::move(DirectionVector);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	DirectionVector = std::move(Parms.DirectionVector);

	if (Direction != nullptr)
		*Direction = Parms.Direction;
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.GetDirectionFromInputVector
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FIntVector&                DirectionVector                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EDirection*                             Direction                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGenericFunctionLibrary_C::GetDirectionFromInputVector(const struct FIntVector& DirectionVector, class UObject* __WorldContext, EDirection* Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "GetDirectionFromInputVector");

	Params::GenericFunctionLibrary_C_GetDirectionFromInputVector Parms{};

	Parms.DirectionVector = std::move(DirectionVector);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Direction != nullptr)
		*Direction = Parms.Direction;
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.SetWidgetVisibilityIfNeeded
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// ESlateVisibility                        WantedVisibility                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Visibility_Changed                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGenericFunctionLibrary_C::SetWidgetVisibilityIfNeeded(class UWidget* Widget, ESlateVisibility WantedVisibility, class UObject* __WorldContext, bool* Visibility_Changed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "SetWidgetVisibilityIfNeeded");

	Params::GenericFunctionLibrary_C_SetWidgetVisibilityIfNeeded Parms{};

	Parms.Widget = Widget;
	Parms.WantedVisibility = WantedVisibility;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Visibility_Changed != nullptr)
		*Visibility_Changed = Parms.Visibility_Changed;
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.GetUINavigationComponent
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UBP_UINavigationComponent_C*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UBP_UINavigationComponent_C* UGenericFunctionLibrary_C::GetUINavigationComponent(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "GetUINavigationComponent");

	Params::GenericFunctionLibrary_C_GetUINavigationComponent Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.ClampToViewport
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector2D&                 position                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 Margin                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGenericFunctionLibrary_C::ClampToViewport(const struct FVector2D& position, const struct FVector2D& Margin, class UObject* __WorldContext, struct FVector2D* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "ClampToViewport");

	Params::GenericFunctionLibrary_C_ClampToViewport Parms{};

	Parms.position = std::move(position);
	Parms.Margin = std::move(Margin);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.ConcatenateDisplayNames
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UObject*>&                 Objects                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            Result                                                 (Parm, OutParm)

void UGenericFunctionLibrary_C::ConcatenateDisplayNames(TArray<class UObject*>& Objects, class UObject* __WorldContext, class FText* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "ConcatenateDisplayNames");

	Params::GenericFunctionLibrary_C_ConcatenateDisplayNames Parms{};

	Parms.Objects = std::move(Objects);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Objects = std::move(Parms.Objects);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.BattleSequenceKeyframeToText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FFBattleSequenceTimelineKeyframe&Keyframe                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            Text                                                   (Parm, OutParm)

void UGenericFunctionLibrary_C::BattleSequenceKeyframeToText(double Time, const struct FFBattleSequenceTimelineKeyframe& Keyframe, class UObject* __WorldContext, class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "BattleSequenceKeyframeToText");

	Params::GenericFunctionLibrary_C_BattleSequenceKeyframeToText Parms{};

	Parms.Time = Time;
	Parms.Keyframe = std::move(Keyframe);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function GenericFunctionLibrary.GenericFunctionLibrary_C.GetUndilatedTimeSeconds
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double*                                 UndilatedTime                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGenericFunctionLibrary_C::GetUndilatedTimeSeconds(class UObject* WorldContextObject, class UObject* __WorldContext, double* UndilatedTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GenericFunctionLibrary_C", "GetUndilatedTimeSeconds");

	Params::GenericFunctionLibrary_C_GetUndilatedTimeSeconds Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (UndilatedTime != nullptr)
		*UndilatedTime = Parms.UndilatedTime;
}

}

