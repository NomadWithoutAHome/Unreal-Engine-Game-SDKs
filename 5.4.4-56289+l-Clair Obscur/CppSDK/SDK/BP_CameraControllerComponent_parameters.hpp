#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CameraControllerComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "S_CameraConfig_structs.hpp"
#include "S_CameraRecenterRequest_structs.hpp"
#include "E_CharacterList_structs.hpp"
#include "Engine_structs.hpp"
#include "CinematicCamera_structs.hpp"


namespace SDK::Params
{

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.AddCameraConfigOnFreeAimCamera
// 0x0030 (0x0030 - 0x0000)
struct BP_CameraControllerComponent_C_AddCameraConfigOnFreeAimCamera final
{
public:
	class UBP_DataAsset_CameraConfig_C*           CameraConfig;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FViewTargetTransitionParams            TransitionParameters;                              // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class ABP_jRPG_Character_World_C*             CallFunc_GetOwnerAsCharacterWorld_CharacterWorld;  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    CallFunc_GetSpringArmFreeAimCamera_SpringArm;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CallFunc_GetFreeAimCamera_Camera;                  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraControllerComponent_C_AddCameraConfigOnFreeAimCamera) == 0x000008, "Wrong alignment on BP_CameraControllerComponent_C_AddCameraConfigOnFreeAimCamera");
static_assert(sizeof(BP_CameraControllerComponent_C_AddCameraConfigOnFreeAimCamera) == 0x000030, "Wrong size on BP_CameraControllerComponent_C_AddCameraConfigOnFreeAimCamera");
static_assert(offsetof(BP_CameraControllerComponent_C_AddCameraConfigOnFreeAimCamera, CameraConfig) == 0x000000, "Member 'BP_CameraControllerComponent_C_AddCameraConfigOnFreeAimCamera::CameraConfig' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_AddCameraConfigOnFreeAimCamera, TransitionParameters) == 0x000008, "Member 'BP_CameraControllerComponent_C_AddCameraConfigOnFreeAimCamera::TransitionParameters' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_AddCameraConfigOnFreeAimCamera, CallFunc_GetOwnerAsCharacterWorld_CharacterWorld) == 0x000018, "Member 'BP_CameraControllerComponent_C_AddCameraConfigOnFreeAimCamera::CallFunc_GetOwnerAsCharacterWorld_CharacterWorld' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_AddCameraConfigOnFreeAimCamera, CallFunc_GetSpringArmFreeAimCamera_SpringArm) == 0x000020, "Member 'BP_CameraControllerComponent_C_AddCameraConfigOnFreeAimCamera::CallFunc_GetSpringArmFreeAimCamera_SpringArm' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_AddCameraConfigOnFreeAimCamera, CallFunc_GetFreeAimCamera_Camera) == 0x000028, "Member 'BP_CameraControllerComponent_C_AddCameraConfigOnFreeAimCamera::CallFunc_GetFreeAimCamera_Camera' has a wrong offset!");

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.AddCameraConfigOnMainCamera
// 0x0030 (0x0030 - 0x0000)
struct BP_CameraControllerComponent_C_AddCameraConfigOnMainCamera final
{
public:
	class UBP_DataAsset_CameraConfig_C*           CameraConfig;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FViewTargetTransitionParams            TransitionParameters;                              // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class ABP_jRPG_Character_World_C*             CallFunc_GetOwnerAsCharacterWorld_CharacterWorld;  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    CallFunc_GetSpringArmMainCamera_SpringArm_MainCamera; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CallFunc_GetMainCamera_MainCamera;                 // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraControllerComponent_C_AddCameraConfigOnMainCamera) == 0x000008, "Wrong alignment on BP_CameraControllerComponent_C_AddCameraConfigOnMainCamera");
static_assert(sizeof(BP_CameraControllerComponent_C_AddCameraConfigOnMainCamera) == 0x000030, "Wrong size on BP_CameraControllerComponent_C_AddCameraConfigOnMainCamera");
static_assert(offsetof(BP_CameraControllerComponent_C_AddCameraConfigOnMainCamera, CameraConfig) == 0x000000, "Member 'BP_CameraControllerComponent_C_AddCameraConfigOnMainCamera::CameraConfig' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_AddCameraConfigOnMainCamera, TransitionParameters) == 0x000008, "Member 'BP_CameraControllerComponent_C_AddCameraConfigOnMainCamera::TransitionParameters' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_AddCameraConfigOnMainCamera, CallFunc_GetOwnerAsCharacterWorld_CharacterWorld) == 0x000018, "Member 'BP_CameraControllerComponent_C_AddCameraConfigOnMainCamera::CallFunc_GetOwnerAsCharacterWorld_CharacterWorld' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_AddCameraConfigOnMainCamera, CallFunc_GetSpringArmMainCamera_SpringArm_MainCamera) == 0x000020, "Member 'BP_CameraControllerComponent_C_AddCameraConfigOnMainCamera::CallFunc_GetSpringArmMainCamera_SpringArm_MainCamera' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_AddCameraConfigOnMainCamera, CallFunc_GetMainCamera_MainCamera) == 0x000028, "Member 'BP_CameraControllerComponent_C_AddCameraConfigOnMainCamera::CallFunc_GetMainCamera_MainCamera' has a wrong offset!");

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.AddNewCameraConfigOnComponents
// 0x0058 (0x0058 - 0x0000)
struct BP_CameraControllerComponent_C_AddNewCameraConfigOnComponents final
{
public:
	class UCameraComponent*                       CameraComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArmComponent;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	const class UBP_DataAsset_CameraConfig_C*     CameraConfig;                                      // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	struct FViewTargetTransitionParams            TransitionParameters;                              // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBP_CameraConfigBlender_C*              CallFunc_FindOrCreateCameraConfigBlender_CameraConfigBlender; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraControllerComponent_C_AddNewCameraConfigOnComponents) == 0x000008, "Wrong alignment on BP_CameraControllerComponent_C_AddNewCameraConfigOnComponents");
static_assert(sizeof(BP_CameraControllerComponent_C_AddNewCameraConfigOnComponents) == 0x000058, "Wrong size on BP_CameraControllerComponent_C_AddNewCameraConfigOnComponents");
static_assert(offsetof(BP_CameraControllerComponent_C_AddNewCameraConfigOnComponents, CameraComponent) == 0x000000, "Member 'BP_CameraControllerComponent_C_AddNewCameraConfigOnComponents::CameraComponent' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_AddNewCameraConfigOnComponents, SpringArmComponent) == 0x000008, "Member 'BP_CameraControllerComponent_C_AddNewCameraConfigOnComponents::SpringArmComponent' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_AddNewCameraConfigOnComponents, CameraConfig) == 0x000010, "Member 'BP_CameraControllerComponent_C_AddNewCameraConfigOnComponents::CameraConfig' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_AddNewCameraConfigOnComponents, TransitionParameters) == 0x000018, "Member 'BP_CameraControllerComponent_C_AddNewCameraConfigOnComponents::TransitionParameters' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_AddNewCameraConfigOnComponents, K2Node_MakeArray_Array) == 0x000028, "Member 'BP_CameraControllerComponent_C_AddNewCameraConfigOnComponents::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_AddNewCameraConfigOnComponents, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_CameraControllerComponent_C_AddNewCameraConfigOnComponents::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_AddNewCameraConfigOnComponents, CallFunc_Format_ReturnValue) == 0x000040, "Member 'BP_CameraControllerComponent_C_AddNewCameraConfigOnComponents::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_AddNewCameraConfigOnComponents, CallFunc_FindOrCreateCameraConfigBlender_CameraConfigBlender) == 0x000050, "Member 'BP_CameraControllerComponent_C_AddNewCameraConfigOnComponents::CallFunc_FindOrCreateCameraConfigBlender_CameraConfigBlender' has a wrong offset!");

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.CanPerformCameraRecenter
// 0x0018 (0x0018 - 0x0000)
struct BP_CameraControllerComponent_C_CanPerformCameraRecenter final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_World_C*             CallFunc_GetOwnerAsCharacterWorld_CharacterWorld;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPerformingLookAt_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraControllerComponent_C_CanPerformCameraRecenter) == 0x000008, "Wrong alignment on BP_CameraControllerComponent_C_CanPerformCameraRecenter");
static_assert(sizeof(BP_CameraControllerComponent_C_CanPerformCameraRecenter) == 0x000018, "Wrong size on BP_CameraControllerComponent_C_CanPerformCameraRecenter");
static_assert(offsetof(BP_CameraControllerComponent_C_CanPerformCameraRecenter, ReturnValue) == 0x000000, "Member 'BP_CameraControllerComponent_C_CanPerformCameraRecenter::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_CanPerformCameraRecenter, CallFunc_GetOwnerAsCharacterWorld_CharacterWorld) == 0x000008, "Member 'BP_CameraControllerComponent_C_CanPerformCameraRecenter::CallFunc_GetOwnerAsCharacterWorld_CharacterWorld' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_CanPerformCameraRecenter, CallFunc_IsPerformingLookAt_ReturnValue) == 0x000010, "Member 'BP_CameraControllerComponent_C_CanPerformCameraRecenter::CallFunc_IsPerformingLookAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_CanPerformCameraRecenter, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_CameraControllerComponent_C_CanPerformCameraRecenter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.CheckForErrors
// 0x0040 (0x0040 - 0x0000)
struct BP_CameraControllerComponent_C_CheckForErrors final
{
public:
	TArray<class FText>                           ErrorMessages;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0018(0x0010)(ConstParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_World_C*             K2Node_DynamicCast_AsBP_J_RPG_Character_World;     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraControllerComponent_C_CheckForErrors) == 0x000008, "Wrong alignment on BP_CameraControllerComponent_C_CheckForErrors");
static_assert(sizeof(BP_CameraControllerComponent_C_CheckForErrors) == 0x000040, "Wrong size on BP_CameraControllerComponent_C_CheckForErrors");
static_assert(offsetof(BP_CameraControllerComponent_C_CheckForErrors, ErrorMessages) == 0x000000, "Member 'BP_CameraControllerComponent_C_CheckForErrors::ErrorMessages' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_CheckForErrors, ReturnValue) == 0x000010, "Member 'BP_CameraControllerComponent_C_CheckForErrors::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_CheckForErrors, Temp_text_Variable) == 0x000018, "Member 'BP_CameraControllerComponent_C_CheckForErrors::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_CheckForErrors, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BP_CameraControllerComponent_C_CheckForErrors::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_CheckForErrors, K2Node_DynamicCast_AsBP_J_RPG_Character_World) == 0x000030, "Member 'BP_CameraControllerComponent_C_CheckForErrors::K2Node_DynamicCast_AsBP_J_RPG_Character_World' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_CheckForErrors, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_CameraControllerComponent_C_CheckForErrors::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_CheckForErrors, CallFunc_Array_Add_ReturnValue) == 0x00003C, "Member 'BP_CameraControllerComponent_C_CheckForErrors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.ComputeCameraShakeScale
// 0x0048 (0x0048 - 0x0000)
struct BP_CameraControllerComponent_C_ComputeCameraShakeScale final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_World_C*             CallFunc_GetOwnerAsCharacterWorld_CharacterWorld;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeSquared_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraControllerComponent_C_ComputeCameraShakeScale) == 0x000008, "Wrong alignment on BP_CameraControllerComponent_C_ComputeCameraShakeScale");
static_assert(sizeof(BP_CameraControllerComponent_C_ComputeCameraShakeScale) == 0x000048, "Wrong size on BP_CameraControllerComponent_C_ComputeCameraShakeScale");
static_assert(offsetof(BP_CameraControllerComponent_C_ComputeCameraShakeScale, ReturnValue) == 0x000000, "Member 'BP_CameraControllerComponent_C_ComputeCameraShakeScale::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_ComputeCameraShakeScale, CallFunc_GetOwnerAsCharacterWorld_CharacterWorld) == 0x000008, "Member 'BP_CameraControllerComponent_C_ComputeCameraShakeScale::CallFunc_GetOwnerAsCharacterWorld_CharacterWorld' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_ComputeCameraShakeScale, CallFunc_GetVelocity_ReturnValue) == 0x000010, "Member 'BP_CameraControllerComponent_C_ComputeCameraShakeScale::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_ComputeCameraShakeScale, CallFunc_VSizeSquared_ReturnValue) == 0x000028, "Member 'BP_CameraControllerComponent_C_ComputeCameraShakeScale::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_ComputeCameraShakeScale, CallFunc_NormalizeToRange_ReturnValue) == 0x000030, "Member 'BP_CameraControllerComponent_C_ComputeCameraShakeScale::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_ComputeCameraShakeScale, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_CameraControllerComponent_C_ComputeCameraShakeScale::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_ComputeCameraShakeScale, CallFunc_FClamp_ReturnValue) == 0x000040, "Member 'BP_CameraControllerComponent_C_ComputeCameraShakeScale::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.ComputeDistanceBetweenCameraAndCharacterMesh
// 0x0050 (0x0050 - 0x0000)
struct BP_CameraControllerComponent_C_ComputeDistanceBetweenCameraAndCharacterMesh final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_World_C*             CallFunc_GetOwnerAsCharacterWorld_CharacterWorld;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CallFunc_GetMainCamera_MainCamera;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraControllerComponent_C_ComputeDistanceBetweenCameraAndCharacterMesh) == 0x000008, "Wrong alignment on BP_CameraControllerComponent_C_ComputeDistanceBetweenCameraAndCharacterMesh");
static_assert(sizeof(BP_CameraControllerComponent_C_ComputeDistanceBetweenCameraAndCharacterMesh) == 0x000050, "Wrong size on BP_CameraControllerComponent_C_ComputeDistanceBetweenCameraAndCharacterMesh");
static_assert(offsetof(BP_CameraControllerComponent_C_ComputeDistanceBetweenCameraAndCharacterMesh, ReturnValue) == 0x000000, "Member 'BP_CameraControllerComponent_C_ComputeDistanceBetweenCameraAndCharacterMesh::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_ComputeDistanceBetweenCameraAndCharacterMesh, CallFunc_GetOwnerAsCharacterWorld_CharacterWorld) == 0x000008, "Member 'BP_CameraControllerComponent_C_ComputeDistanceBetweenCameraAndCharacterMesh::CallFunc_GetOwnerAsCharacterWorld_CharacterWorld' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_ComputeDistanceBetweenCameraAndCharacterMesh, CallFunc_GetMainCamera_MainCamera) == 0x000010, "Member 'BP_CameraControllerComponent_C_ComputeDistanceBetweenCameraAndCharacterMesh::CallFunc_GetMainCamera_MainCamera' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_ComputeDistanceBetweenCameraAndCharacterMesh, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_CameraControllerComponent_C_ComputeDistanceBetweenCameraAndCharacterMesh::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_ComputeDistanceBetweenCameraAndCharacterMesh, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000030, "Member 'BP_CameraControllerComponent_C_ComputeDistanceBetweenCameraAndCharacterMesh::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_ComputeDistanceBetweenCameraAndCharacterMesh, CallFunc_Vector_Distance_ReturnValue) == 0x000048, "Member 'BP_CameraControllerComponent_C_ComputeDistanceBetweenCameraAndCharacterMesh::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.DebugDrawCameraControllerComponent
// 0x0068 (0x0068 - 0x0000)
struct BP_CameraControllerComponent_C_DebugDrawCameraControllerComponent final
{
public:
	class FString                                 local_DebugString;                                 // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CameraConfigBlender_C*              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDebugString_ReturnValue;               // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraControllerComponent_C_DebugDrawCameraControllerComponent) == 0x000008, "Wrong alignment on BP_CameraControllerComponent_C_DebugDrawCameraControllerComponent");
static_assert(sizeof(BP_CameraControllerComponent_C_DebugDrawCameraControllerComponent) == 0x000068, "Wrong size on BP_CameraControllerComponent_C_DebugDrawCameraControllerComponent");
static_assert(offsetof(BP_CameraControllerComponent_C_DebugDrawCameraControllerComponent, local_DebugString) == 0x000000, "Member 'BP_CameraControllerComponent_C_DebugDrawCameraControllerComponent::local_DebugString' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_DebugDrawCameraControllerComponent, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_CameraControllerComponent_C_DebugDrawCameraControllerComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_DebugDrawCameraControllerComponent, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_CameraControllerComponent_C_DebugDrawCameraControllerComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_DebugDrawCameraControllerComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_CameraControllerComponent_C_DebugDrawCameraControllerComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_DebugDrawCameraControllerComponent, CallFunc_GetBoolCVar_ReturnValue) == 0x00001C, "Member 'BP_CameraControllerComponent_C_DebugDrawCameraControllerComponent::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_DebugDrawCameraControllerComponent, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_CameraControllerComponent_C_DebugDrawCameraControllerComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_DebugDrawCameraControllerComponent, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_CameraControllerComponent_C_DebugDrawCameraControllerComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_DebugDrawCameraControllerComponent, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_CameraControllerComponent_C_DebugDrawCameraControllerComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_DebugDrawCameraControllerComponent, CallFunc_GetDebugString_ReturnValue) == 0x000038, "Member 'BP_CameraControllerComponent_C_DebugDrawCameraControllerComponent::CallFunc_GetDebugString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_DebugDrawCameraControllerComponent, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'BP_CameraControllerComponent_C_DebugDrawCameraControllerComponent::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_DebugDrawCameraControllerComponent, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000058, "Member 'BP_CameraControllerComponent_C_DebugDrawCameraControllerComponent::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.ExecuteUbergraph_BP_CameraControllerComponent
// 0x0028 (0x0028 - 0x0000)
struct BP_CameraControllerComponent_C_ExecuteUbergraph_BP_CameraControllerComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Paused;                               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_UpdateCameraRecenter_DeltaSeconds_ImplicitCast; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateDynamicCameraFocusDistance_DeltaSeconds_ImplicitCast; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateCameraShake_DeltaSeconds_ImplicitCast; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraControllerComponent_C_ExecuteUbergraph_BP_CameraControllerComponent) == 0x000008, "Wrong alignment on BP_CameraControllerComponent_C_ExecuteUbergraph_BP_CameraControllerComponent");
static_assert(sizeof(BP_CameraControllerComponent_C_ExecuteUbergraph_BP_CameraControllerComponent) == 0x000028, "Wrong size on BP_CameraControllerComponent_C_ExecuteUbergraph_BP_CameraControllerComponent");
static_assert(offsetof(BP_CameraControllerComponent_C_ExecuteUbergraph_BP_CameraControllerComponent, EntryPoint) == 0x000000, "Member 'BP_CameraControllerComponent_C_ExecuteUbergraph_BP_CameraControllerComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_ExecuteUbergraph_BP_CameraControllerComponent, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_CameraControllerComponent_C_ExecuteUbergraph_BP_CameraControllerComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_ExecuteUbergraph_BP_CameraControllerComponent, K2Node_Event_Paused) == 0x000008, "Member 'BP_CameraControllerComponent_C_ExecuteUbergraph_BP_CameraControllerComponent::K2Node_Event_Paused' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_ExecuteUbergraph_BP_CameraControllerComponent, CallFunc_UpdateCameraRecenter_DeltaSeconds_ImplicitCast) == 0x000010, "Member 'BP_CameraControllerComponent_C_ExecuteUbergraph_BP_CameraControllerComponent::CallFunc_UpdateCameraRecenter_DeltaSeconds_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_ExecuteUbergraph_BP_CameraControllerComponent, CallFunc_UpdateDynamicCameraFocusDistance_DeltaSeconds_ImplicitCast) == 0x000018, "Member 'BP_CameraControllerComponent_C_ExecuteUbergraph_BP_CameraControllerComponent::CallFunc_UpdateDynamicCameraFocusDistance_DeltaSeconds_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_ExecuteUbergraph_BP_CameraControllerComponent, CallFunc_UpdateCameraShake_DeltaSeconds_ImplicitCast) == 0x000020, "Member 'BP_CameraControllerComponent_C_ExecuteUbergraph_BP_CameraControllerComponent::CallFunc_UpdateCameraShake_DeltaSeconds_ImplicitCast' has a wrong offset!");

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.FindOrCreateCameraConfigBlender
// 0x0058 (0x0058 - 0x0000)
struct BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender final
{
public:
	class UCameraComponent*                       CameraComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArmComponent;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CameraConfigBlender_C*              CameraConfigBlender;                               // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CameraConfigBlender_C*              CallFunc_SpawnObject_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CameraConfigBlender_C*              CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAppliedOnComponents_IsApplied;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CameraConfigBlender_C*              CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender) == 0x000008, "Wrong alignment on BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender");
static_assert(sizeof(BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender) == 0x000058, "Wrong size on BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender");
static_assert(offsetof(BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender, CameraComponent) == 0x000000, "Member 'BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender::CameraComponent' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender, SpringArmComponent) == 0x000008, "Member 'BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender::SpringArmComponent' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender, CameraConfigBlender) == 0x000010, "Member 'BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender::CameraConfigBlender' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender, CallFunc_SpawnObject_ReturnValue) == 0x000028, "Member 'BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender, CallFunc_IsAppliedOnComponents_IsApplied) == 0x000038, "Member 'BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender::CallFunc_IsAppliedOnComponents_IsApplied' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender, CallFunc_Array_Add_ReturnValue) == 0x00003C, "Member 'BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_CameraControllerComponent_C_FindOrCreateCameraConfigBlender::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.GetCameraConfig
// 0x0130 (0x0130 - 0x0000)
struct BP_CameraControllerComponent_C_GetCameraConfig final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CameraConfig                        CameraConfig;                                      // 0x0008(0x0088)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CameraConfigBlender_C*              CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CameraConfig                        CallFunc_GetCurrentCameraConfigFromComponents_CameraConfig; // 0x00A0(0x0088)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraControllerComponent_C_GetCameraConfig) == 0x000008, "Wrong alignment on BP_CameraControllerComponent_C_GetCameraConfig");
static_assert(sizeof(BP_CameraControllerComponent_C_GetCameraConfig) == 0x000130, "Wrong size on BP_CameraControllerComponent_C_GetCameraConfig");
static_assert(offsetof(BP_CameraControllerComponent_C_GetCameraConfig, Index_0) == 0x000000, "Member 'BP_CameraControllerComponent_C_GetCameraConfig::Index_0' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_GetCameraConfig, CameraConfig) == 0x000008, "Member 'BP_CameraControllerComponent_C_GetCameraConfig::CameraConfig' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_GetCameraConfig, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_CameraControllerComponent_C_GetCameraConfig::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_GetCameraConfig, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'BP_CameraControllerComponent_C_GetCameraConfig::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_GetCameraConfig, CallFunc_GetCurrentCameraConfigFromComponents_CameraConfig) == 0x0000A0, "Member 'BP_CameraControllerComponent_C_GetCameraConfig::CallFunc_GetCurrentCameraConfigFromComponents_CameraConfig' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_GetCameraConfig, CallFunc_Greater_IntInt_ReturnValue) == 0x000128, "Member 'BP_CameraControllerComponent_C_GetCameraConfig::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.GetOwnerAsCharacterWorld
// 0x0020 (0x0020 - 0x0000)
struct BP_CameraControllerComponent_C_GetOwnerAsCharacterWorld final
{
public:
	class ABP_jRPG_Character_World_C*             CharacterWorld;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_World_C*             K2Node_DynamicCast_AsBP_J_RPG_Character_World;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraControllerComponent_C_GetOwnerAsCharacterWorld) == 0x000008, "Wrong alignment on BP_CameraControllerComponent_C_GetOwnerAsCharacterWorld");
static_assert(sizeof(BP_CameraControllerComponent_C_GetOwnerAsCharacterWorld) == 0x000020, "Wrong size on BP_CameraControllerComponent_C_GetOwnerAsCharacterWorld");
static_assert(offsetof(BP_CameraControllerComponent_C_GetOwnerAsCharacterWorld, CharacterWorld) == 0x000000, "Member 'BP_CameraControllerComponent_C_GetOwnerAsCharacterWorld::CharacterWorld' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_GetOwnerAsCharacterWorld, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_CameraControllerComponent_C_GetOwnerAsCharacterWorld::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_GetOwnerAsCharacterWorld, K2Node_DynamicCast_AsBP_J_RPG_Character_World) == 0x000010, "Member 'BP_CameraControllerComponent_C_GetOwnerAsCharacterWorld::K2Node_DynamicCast_AsBP_J_RPG_Character_World' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_GetOwnerAsCharacterWorld, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_CameraControllerComponent_C_GetOwnerAsCharacterWorld::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.IsPerformingCameraRecenter
// 0x0001 (0x0001 - 0x0000)
struct BP_CameraControllerComponent_C_IsPerformingCameraRecenter final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraControllerComponent_C_IsPerformingCameraRecenter) == 0x000001, "Wrong alignment on BP_CameraControllerComponent_C_IsPerformingCameraRecenter");
static_assert(sizeof(BP_CameraControllerComponent_C_IsPerformingCameraRecenter) == 0x000001, "Wrong size on BP_CameraControllerComponent_C_IsPerformingCameraRecenter");
static_assert(offsetof(BP_CameraControllerComponent_C_IsPerformingCameraRecenter, ReturnValue) == 0x000000, "Member 'BP_CameraControllerComponent_C_IsPerformingCameraRecenter::ReturnValue' has a wrong offset!");

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_CameraControllerComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraControllerComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_CameraControllerComponent_C_ReceiveTick");
static_assert(sizeof(BP_CameraControllerComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_CameraControllerComponent_C_ReceiveTick");
static_assert(offsetof(BP_CameraControllerComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_CameraControllerComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.RemoveCameraConfigOnComponents
// 0x0058 (0x0058 - 0x0000)
struct BP_CameraControllerComponent_C_RemoveCameraConfigOnComponents final
{
public:
	class UCameraComponent*                       CameraComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArmComponent;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	const class UBP_DataAsset_CameraConfig_C*     CameraConfig;                                      // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	struct FViewTargetTransitionParams            TransitionParameters;                              // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBP_CameraConfigBlender_C*              CallFunc_FindOrCreateCameraConfigBlender_CameraConfigBlender; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraControllerComponent_C_RemoveCameraConfigOnComponents) == 0x000008, "Wrong alignment on BP_CameraControllerComponent_C_RemoveCameraConfigOnComponents");
static_assert(sizeof(BP_CameraControllerComponent_C_RemoveCameraConfigOnComponents) == 0x000058, "Wrong size on BP_CameraControllerComponent_C_RemoveCameraConfigOnComponents");
static_assert(offsetof(BP_CameraControllerComponent_C_RemoveCameraConfigOnComponents, CameraComponent) == 0x000000, "Member 'BP_CameraControllerComponent_C_RemoveCameraConfigOnComponents::CameraComponent' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_RemoveCameraConfigOnComponents, SpringArmComponent) == 0x000008, "Member 'BP_CameraControllerComponent_C_RemoveCameraConfigOnComponents::SpringArmComponent' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_RemoveCameraConfigOnComponents, CameraConfig) == 0x000010, "Member 'BP_CameraControllerComponent_C_RemoveCameraConfigOnComponents::CameraConfig' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_RemoveCameraConfigOnComponents, TransitionParameters) == 0x000018, "Member 'BP_CameraControllerComponent_C_RemoveCameraConfigOnComponents::TransitionParameters' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_RemoveCameraConfigOnComponents, K2Node_MakeArray_Array) == 0x000028, "Member 'BP_CameraControllerComponent_C_RemoveCameraConfigOnComponents::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_RemoveCameraConfigOnComponents, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_CameraControllerComponent_C_RemoveCameraConfigOnComponents::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_RemoveCameraConfigOnComponents, CallFunc_Format_ReturnValue) == 0x000040, "Member 'BP_CameraControllerComponent_C_RemoveCameraConfigOnComponents::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_RemoveCameraConfigOnComponents, CallFunc_FindOrCreateCameraConfigBlender_CameraConfigBlender) == 0x000050, "Member 'BP_CameraControllerComponent_C_RemoveCameraConfigOnComponents::CallFunc_FindOrCreateCameraConfigBlender_CameraConfigBlender' has a wrong offset!");

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.RemoveCameraConfigOnFreeAimCamera
// 0x0030 (0x0030 - 0x0000)
struct BP_CameraControllerComponent_C_RemoveCameraConfigOnFreeAimCamera final
{
public:
	class UBP_DataAsset_CameraConfig_C*           CameraConfig;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FViewTargetTransitionParams            TransitionParameters;                              // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class ABP_jRPG_Character_World_C*             CallFunc_GetOwnerAsCharacterWorld_CharacterWorld;  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CallFunc_GetFreeAimCamera_Camera;                  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    CallFunc_GetSpringArmFreeAimCamera_SpringArm;      // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraControllerComponent_C_RemoveCameraConfigOnFreeAimCamera) == 0x000008, "Wrong alignment on BP_CameraControllerComponent_C_RemoveCameraConfigOnFreeAimCamera");
static_assert(sizeof(BP_CameraControllerComponent_C_RemoveCameraConfigOnFreeAimCamera) == 0x000030, "Wrong size on BP_CameraControllerComponent_C_RemoveCameraConfigOnFreeAimCamera");
static_assert(offsetof(BP_CameraControllerComponent_C_RemoveCameraConfigOnFreeAimCamera, CameraConfig) == 0x000000, "Member 'BP_CameraControllerComponent_C_RemoveCameraConfigOnFreeAimCamera::CameraConfig' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_RemoveCameraConfigOnFreeAimCamera, TransitionParameters) == 0x000008, "Member 'BP_CameraControllerComponent_C_RemoveCameraConfigOnFreeAimCamera::TransitionParameters' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_RemoveCameraConfigOnFreeAimCamera, CallFunc_GetOwnerAsCharacterWorld_CharacterWorld) == 0x000018, "Member 'BP_CameraControllerComponent_C_RemoveCameraConfigOnFreeAimCamera::CallFunc_GetOwnerAsCharacterWorld_CharacterWorld' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_RemoveCameraConfigOnFreeAimCamera, CallFunc_GetFreeAimCamera_Camera) == 0x000020, "Member 'BP_CameraControllerComponent_C_RemoveCameraConfigOnFreeAimCamera::CallFunc_GetFreeAimCamera_Camera' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_RemoveCameraConfigOnFreeAimCamera, CallFunc_GetSpringArmFreeAimCamera_SpringArm) == 0x000028, "Member 'BP_CameraControllerComponent_C_RemoveCameraConfigOnFreeAimCamera::CallFunc_GetSpringArmFreeAimCamera_SpringArm' has a wrong offset!");

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.RemoveCameraConfigOnMainCamera
// 0x0030 (0x0030 - 0x0000)
struct BP_CameraControllerComponent_C_RemoveCameraConfigOnMainCamera final
{
public:
	class UBP_DataAsset_CameraConfig_C*           CameraConfig;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FViewTargetTransitionParams            TransitionParameters;                              // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class ABP_jRPG_Character_World_C*             CallFunc_GetOwnerAsCharacterWorld_CharacterWorld;  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CallFunc_GetMainCamera_MainCamera;                 // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    CallFunc_GetSpringArmMainCamera_SpringArm_MainCamera; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraControllerComponent_C_RemoveCameraConfigOnMainCamera) == 0x000008, "Wrong alignment on BP_CameraControllerComponent_C_RemoveCameraConfigOnMainCamera");
static_assert(sizeof(BP_CameraControllerComponent_C_RemoveCameraConfigOnMainCamera) == 0x000030, "Wrong size on BP_CameraControllerComponent_C_RemoveCameraConfigOnMainCamera");
static_assert(offsetof(BP_CameraControllerComponent_C_RemoveCameraConfigOnMainCamera, CameraConfig) == 0x000000, "Member 'BP_CameraControllerComponent_C_RemoveCameraConfigOnMainCamera::CameraConfig' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_RemoveCameraConfigOnMainCamera, TransitionParameters) == 0x000008, "Member 'BP_CameraControllerComponent_C_RemoveCameraConfigOnMainCamera::TransitionParameters' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_RemoveCameraConfigOnMainCamera, CallFunc_GetOwnerAsCharacterWorld_CharacterWorld) == 0x000018, "Member 'BP_CameraControllerComponent_C_RemoveCameraConfigOnMainCamera::CallFunc_GetOwnerAsCharacterWorld_CharacterWorld' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_RemoveCameraConfigOnMainCamera, CallFunc_GetMainCamera_MainCamera) == 0x000020, "Member 'BP_CameraControllerComponent_C_RemoveCameraConfigOnMainCamera::CallFunc_GetMainCamera_MainCamera' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_RemoveCameraConfigOnMainCamera, CallFunc_GetSpringArmMainCamera_SpringArm_MainCamera) == 0x000028, "Member 'BP_CameraControllerComponent_C_RemoveCameraConfigOnMainCamera::CallFunc_GetSpringArmMainCamera_SpringArm_MainCamera' has a wrong offset!");

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.RequestCameraRecenter
// 0x0038 (0x0038 - 0x0000)
struct BP_CameraControllerComponent_C_RequestCameraRecenter final
{
public:
	struct FS_CameraRecenterRequest               CameraRecenterRequest_0;                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_World_C*             CallFunc_GetOwnerAsCharacterWorld_CharacterWorld;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPerformCameraRecenter_ReturnValue;     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CameraControllerComponent_C_RequestCameraRecenter) == 0x000008, "Wrong alignment on BP_CameraControllerComponent_C_RequestCameraRecenter");
static_assert(sizeof(BP_CameraControllerComponent_C_RequestCameraRecenter) == 0x000038, "Wrong size on BP_CameraControllerComponent_C_RequestCameraRecenter");
static_assert(offsetof(BP_CameraControllerComponent_C_RequestCameraRecenter, CameraRecenterRequest_0) == 0x000000, "Member 'BP_CameraControllerComponent_C_RequestCameraRecenter::CameraRecenterRequest_0' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_RequestCameraRecenter, CallFunc_GetOwnerAsCharacterWorld_CharacterWorld) == 0x000008, "Member 'BP_CameraControllerComponent_C_RequestCameraRecenter::CallFunc_GetOwnerAsCharacterWorld_CharacterWorld' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_RequestCameraRecenter, CallFunc_CanPerformCameraRecenter_ReturnValue) == 0x000010, "Member 'BP_CameraControllerComponent_C_RequestCameraRecenter::CallFunc_CanPerformCameraRecenter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_RequestCameraRecenter, CallFunc_GetController_ReturnValue) == 0x000018, "Member 'BP_CameraControllerComponent_C_RequestCameraRecenter::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_RequestCameraRecenter, CallFunc_GetControlRotation_ReturnValue) == 0x000020, "Member 'BP_CameraControllerComponent_C_RequestCameraRecenter::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.SetFocusDistance
// 0x0088 (0x0088 - 0x0000)
struct BP_CameraControllerComponent_C_SetFocusDistance final
{
public:
	float                                         FocusDistance;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_World_C*             CallFunc_GetOwnerAsCharacterWorld_CharacterWorld;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCameraFocusSettings                   K2Node_MakeStruct_CameraFocusSettings;             // 0x0010(0x0060)()
	class UCameraComponent*                       CallFunc_GetMainCamera_MainCamera;                 // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCineCameraComponent*                   K2Node_DynamicCast_AsCine_Camera_Component;        // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraControllerComponent_C_SetFocusDistance) == 0x000008, "Wrong alignment on BP_CameraControllerComponent_C_SetFocusDistance");
static_assert(sizeof(BP_CameraControllerComponent_C_SetFocusDistance) == 0x000088, "Wrong size on BP_CameraControllerComponent_C_SetFocusDistance");
static_assert(offsetof(BP_CameraControllerComponent_C_SetFocusDistance, FocusDistance) == 0x000000, "Member 'BP_CameraControllerComponent_C_SetFocusDistance::FocusDistance' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetFocusDistance, CallFunc_GetOwnerAsCharacterWorld_CharacterWorld) == 0x000008, "Member 'BP_CameraControllerComponent_C_SetFocusDistance::CallFunc_GetOwnerAsCharacterWorld_CharacterWorld' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetFocusDistance, K2Node_MakeStruct_CameraFocusSettings) == 0x000010, "Member 'BP_CameraControllerComponent_C_SetFocusDistance::K2Node_MakeStruct_CameraFocusSettings' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetFocusDistance, CallFunc_GetMainCamera_MainCamera) == 0x000070, "Member 'BP_CameraControllerComponent_C_SetFocusDistance::CallFunc_GetMainCamera_MainCamera' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetFocusDistance, K2Node_DynamicCast_AsCine_Camera_Component) == 0x000078, "Member 'BP_CameraControllerComponent_C_SetFocusDistance::K2Node_DynamicCast_AsCine_Camera_Component' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetFocusDistance, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_CameraControllerComponent_C_SetFocusDistance::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.SetFocusDistanceWithComponent
// 0x00C8 (0x00C8 - 0x0000)
struct BP_CameraControllerComponent_C_SetFocusDistanceWithComponent final
{
public:
	class USceneComponent*                        ComponentToFocus;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_World_C*             CallFunc_GetOwnerAsCharacterWorld_CharacterWorld;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CallFunc_GetMainCamera_MainCamera;                 // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCineCameraComponent*                   K2Node_DynamicCast_AsCine_Camera_Component;        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCameraFocusSettings                   K2Node_MakeStruct_CameraFocusSettings;             // 0x0060(0x0060)()
	float                                         K2Node_MakeStruct_ManualFocusDistance_ImplicitCast; // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraControllerComponent_C_SetFocusDistanceWithComponent) == 0x000008, "Wrong alignment on BP_CameraControllerComponent_C_SetFocusDistanceWithComponent");
static_assert(sizeof(BP_CameraControllerComponent_C_SetFocusDistanceWithComponent) == 0x0000C8, "Wrong size on BP_CameraControllerComponent_C_SetFocusDistanceWithComponent");
static_assert(offsetof(BP_CameraControllerComponent_C_SetFocusDistanceWithComponent, ComponentToFocus) == 0x000000, "Member 'BP_CameraControllerComponent_C_SetFocusDistanceWithComponent::ComponentToFocus' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetFocusDistanceWithComponent, CallFunc_GetOwnerAsCharacterWorld_CharacterWorld) == 0x000008, "Member 'BP_CameraControllerComponent_C_SetFocusDistanceWithComponent::CallFunc_GetOwnerAsCharacterWorld_CharacterWorld' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetFocusDistanceWithComponent, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'BP_CameraControllerComponent_C_SetFocusDistanceWithComponent::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetFocusDistanceWithComponent, CallFunc_GetMainCamera_MainCamera) == 0x000028, "Member 'BP_CameraControllerComponent_C_SetFocusDistanceWithComponent::CallFunc_GetMainCamera_MainCamera' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetFocusDistanceWithComponent, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000030, "Member 'BP_CameraControllerComponent_C_SetFocusDistanceWithComponent::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetFocusDistanceWithComponent, K2Node_DynamicCast_AsCine_Camera_Component) == 0x000048, "Member 'BP_CameraControllerComponent_C_SetFocusDistanceWithComponent::K2Node_DynamicCast_AsCine_Camera_Component' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetFocusDistanceWithComponent, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_CameraControllerComponent_C_SetFocusDistanceWithComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetFocusDistanceWithComponent, CallFunc_Vector_Distance_ReturnValue) == 0x000058, "Member 'BP_CameraControllerComponent_C_SetFocusDistanceWithComponent::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetFocusDistanceWithComponent, K2Node_MakeStruct_CameraFocusSettings) == 0x000060, "Member 'BP_CameraControllerComponent_C_SetFocusDistanceWithComponent::K2Node_MakeStruct_CameraFocusSettings' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetFocusDistanceWithComponent, K2Node_MakeStruct_ManualFocusDistance_ImplicitCast) == 0x0000C0, "Member 'BP_CameraControllerComponent_C_SetFocusDistanceWithComponent::K2Node_MakeStruct_ManualFocusDistance_ImplicitCast' has a wrong offset!");

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.SetGameplayPaused
// 0x0001 (0x0001 - 0x0000)
struct BP_CameraControllerComponent_C_SetGameplayPaused final
{
public:
	bool                                          Paused;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraControllerComponent_C_SetGameplayPaused) == 0x000001, "Wrong alignment on BP_CameraControllerComponent_C_SetGameplayPaused");
static_assert(sizeof(BP_CameraControllerComponent_C_SetGameplayPaused) == 0x000001, "Wrong size on BP_CameraControllerComponent_C_SetGameplayPaused");
static_assert(offsetof(BP_CameraControllerComponent_C_SetGameplayPaused, Paused) == 0x000000, "Member 'BP_CameraControllerComponent_C_SetGameplayPaused::Paused' has a wrong offset!");

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.SetupCameraConfigOnComponents
// 0x0058 (0x0058 - 0x0000)
struct BP_CameraControllerComponent_C_SetupCameraConfigOnComponents final
{
public:
	class UCameraComponent*                       CameraComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArmComponent;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	const class UBP_DataAsset_CameraConfig_C*     CameraConfig;                                      // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	struct FViewTargetTransitionParams            TransitionParameters;                              // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBP_CameraConfigBlender_C*              CallFunc_FindOrCreateCameraConfigBlender_CameraConfigBlender; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraControllerComponent_C_SetupCameraConfigOnComponents) == 0x000008, "Wrong alignment on BP_CameraControllerComponent_C_SetupCameraConfigOnComponents");
static_assert(sizeof(BP_CameraControllerComponent_C_SetupCameraConfigOnComponents) == 0x000058, "Wrong size on BP_CameraControllerComponent_C_SetupCameraConfigOnComponents");
static_assert(offsetof(BP_CameraControllerComponent_C_SetupCameraConfigOnComponents, CameraComponent) == 0x000000, "Member 'BP_CameraControllerComponent_C_SetupCameraConfigOnComponents::CameraComponent' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetupCameraConfigOnComponents, SpringArmComponent) == 0x000008, "Member 'BP_CameraControllerComponent_C_SetupCameraConfigOnComponents::SpringArmComponent' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetupCameraConfigOnComponents, CameraConfig) == 0x000010, "Member 'BP_CameraControllerComponent_C_SetupCameraConfigOnComponents::CameraConfig' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetupCameraConfigOnComponents, TransitionParameters) == 0x000018, "Member 'BP_CameraControllerComponent_C_SetupCameraConfigOnComponents::TransitionParameters' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetupCameraConfigOnComponents, K2Node_MakeArray_Array) == 0x000028, "Member 'BP_CameraControllerComponent_C_SetupCameraConfigOnComponents::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetupCameraConfigOnComponents, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_CameraControllerComponent_C_SetupCameraConfigOnComponents::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetupCameraConfigOnComponents, CallFunc_Format_ReturnValue) == 0x000040, "Member 'BP_CameraControllerComponent_C_SetupCameraConfigOnComponents::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetupCameraConfigOnComponents, CallFunc_FindOrCreateCameraConfigBlender_CameraConfigBlender) == 0x000050, "Member 'BP_CameraControllerComponent_C_SetupCameraConfigOnComponents::CallFunc_FindOrCreateCameraConfigBlender_CameraConfigBlender' has a wrong offset!");

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.SetupCameraConfigOnFreeAimCamera
// 0x0030 (0x0030 - 0x0000)
struct BP_CameraControllerComponent_C_SetupCameraConfigOnFreeAimCamera final
{
public:
	class UBP_DataAsset_CameraConfig_C*           CameraConfig;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FViewTargetTransitionParams            TransitionParameters;                              // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class ABP_jRPG_Character_World_C*             CallFunc_GetOwnerAsCharacterWorld_CharacterWorld;  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    CallFunc_GetSpringArmFreeAimCamera_SpringArm;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CallFunc_GetFreeAimCamera_Camera;                  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraControllerComponent_C_SetupCameraConfigOnFreeAimCamera) == 0x000008, "Wrong alignment on BP_CameraControllerComponent_C_SetupCameraConfigOnFreeAimCamera");
static_assert(sizeof(BP_CameraControllerComponent_C_SetupCameraConfigOnFreeAimCamera) == 0x000030, "Wrong size on BP_CameraControllerComponent_C_SetupCameraConfigOnFreeAimCamera");
static_assert(offsetof(BP_CameraControllerComponent_C_SetupCameraConfigOnFreeAimCamera, CameraConfig) == 0x000000, "Member 'BP_CameraControllerComponent_C_SetupCameraConfigOnFreeAimCamera::CameraConfig' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetupCameraConfigOnFreeAimCamera, TransitionParameters) == 0x000008, "Member 'BP_CameraControllerComponent_C_SetupCameraConfigOnFreeAimCamera::TransitionParameters' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetupCameraConfigOnFreeAimCamera, CallFunc_GetOwnerAsCharacterWorld_CharacterWorld) == 0x000018, "Member 'BP_CameraControllerComponent_C_SetupCameraConfigOnFreeAimCamera::CallFunc_GetOwnerAsCharacterWorld_CharacterWorld' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetupCameraConfigOnFreeAimCamera, CallFunc_GetSpringArmFreeAimCamera_SpringArm) == 0x000020, "Member 'BP_CameraControllerComponent_C_SetupCameraConfigOnFreeAimCamera::CallFunc_GetSpringArmFreeAimCamera_SpringArm' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetupCameraConfigOnFreeAimCamera, CallFunc_GetFreeAimCamera_Camera) == 0x000028, "Member 'BP_CameraControllerComponent_C_SetupCameraConfigOnFreeAimCamera::CallFunc_GetFreeAimCamera_Camera' has a wrong offset!");

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.SetupCameraConfigOnMainCamera
// 0x0030 (0x0030 - 0x0000)
struct BP_CameraControllerComponent_C_SetupCameraConfigOnMainCamera final
{
public:
	class UBP_DataAsset_CameraConfig_C*           CameraConfig;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FViewTargetTransitionParams            TransitionParameters;                              // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class ABP_jRPG_Character_World_C*             CallFunc_GetOwnerAsCharacterWorld_CharacterWorld;  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    CallFunc_GetSpringArmMainCamera_SpringArm_MainCamera; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CallFunc_GetMainCamera_MainCamera;                 // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraControllerComponent_C_SetupCameraConfigOnMainCamera) == 0x000008, "Wrong alignment on BP_CameraControllerComponent_C_SetupCameraConfigOnMainCamera");
static_assert(sizeof(BP_CameraControllerComponent_C_SetupCameraConfigOnMainCamera) == 0x000030, "Wrong size on BP_CameraControllerComponent_C_SetupCameraConfigOnMainCamera");
static_assert(offsetof(BP_CameraControllerComponent_C_SetupCameraConfigOnMainCamera, CameraConfig) == 0x000000, "Member 'BP_CameraControllerComponent_C_SetupCameraConfigOnMainCamera::CameraConfig' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetupCameraConfigOnMainCamera, TransitionParameters) == 0x000008, "Member 'BP_CameraControllerComponent_C_SetupCameraConfigOnMainCamera::TransitionParameters' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetupCameraConfigOnMainCamera, CallFunc_GetOwnerAsCharacterWorld_CharacterWorld) == 0x000018, "Member 'BP_CameraControllerComponent_C_SetupCameraConfigOnMainCamera::CallFunc_GetOwnerAsCharacterWorld_CharacterWorld' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetupCameraConfigOnMainCamera, CallFunc_GetSpringArmMainCamera_SpringArm_MainCamera) == 0x000020, "Member 'BP_CameraControllerComponent_C_SetupCameraConfigOnMainCamera::CallFunc_GetSpringArmMainCamera_SpringArm_MainCamera' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetupCameraConfigOnMainCamera, CallFunc_GetMainCamera_MainCamera) == 0x000028, "Member 'BP_CameraControllerComponent_C_SetupCameraConfigOnMainCamera::CallFunc_GetMainCamera_MainCamera' has a wrong offset!");

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.SetupCameraConfigs
// 0x0020 (0x0020 - 0x0000)
struct BP_CameraControllerComponent_C_SetupCameraConfigs final
{
public:
	class UBP_DataAsset_CameraConfig_C*           CameraConfig;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_DataAsset_CameraConfig_C*           FreeAimCameraConfig;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FViewTargetTransitionParams            TransitionParameters;                              // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_CameraControllerComponent_C_SetupCameraConfigs) == 0x000008, "Wrong alignment on BP_CameraControllerComponent_C_SetupCameraConfigs");
static_assert(sizeof(BP_CameraControllerComponent_C_SetupCameraConfigs) == 0x000020, "Wrong size on BP_CameraControllerComponent_C_SetupCameraConfigs");
static_assert(offsetof(BP_CameraControllerComponent_C_SetupCameraConfigs, CameraConfig) == 0x000000, "Member 'BP_CameraControllerComponent_C_SetupCameraConfigs::CameraConfig' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetupCameraConfigs, FreeAimCameraConfig) == 0x000008, "Member 'BP_CameraControllerComponent_C_SetupCameraConfigs::FreeAimCameraConfig' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_SetupCameraConfigs, TransitionParameters) == 0x000010, "Member 'BP_CameraControllerComponent_C_SetupCameraConfigs::TransitionParameters' has a wrong offset!");

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.ShouldEnableCameraShake
// 0x0028 (0x0028 - 0x0000)
struct BP_CameraControllerComponent_C_ShouldEnableCameraShake final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_World_C*             CallFunc_GetOwnerAsCharacterWorld_CharacterWorld;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasCameraOverride_HasOverride;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_CharacterList                               CallFunc_GetCurrentCharacterWorld_CurrentCharacterWorldEnum; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraControllerComponent_C_ShouldEnableCameraShake) == 0x000008, "Wrong alignment on BP_CameraControllerComponent_C_ShouldEnableCameraShake");
static_assert(sizeof(BP_CameraControllerComponent_C_ShouldEnableCameraShake) == 0x000028, "Wrong size on BP_CameraControllerComponent_C_ShouldEnableCameraShake");
static_assert(offsetof(BP_CameraControllerComponent_C_ShouldEnableCameraShake, ReturnValue) == 0x000000, "Member 'BP_CameraControllerComponent_C_ShouldEnableCameraShake::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_ShouldEnableCameraShake, CallFunc_GetOwnerAsCharacterWorld_CharacterWorld) == 0x000008, "Member 'BP_CameraControllerComponent_C_ShouldEnableCameraShake::CallFunc_GetOwnerAsCharacterWorld_CharacterWorld' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_ShouldEnableCameraShake, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_CameraControllerComponent_C_ShouldEnableCameraShake::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_ShouldEnableCameraShake, CallFunc_HasCameraOverride_HasOverride) == 0x000011, "Member 'BP_CameraControllerComponent_C_ShouldEnableCameraShake::CallFunc_HasCameraOverride_HasOverride' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_ShouldEnableCameraShake, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'BP_CameraControllerComponent_C_ShouldEnableCameraShake::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_ShouldEnableCameraShake, CallFunc_GetCustomGI_ReturnValue) == 0x000018, "Member 'BP_CameraControllerComponent_C_ShouldEnableCameraShake::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_ShouldEnableCameraShake, CallFunc_GetCurrentCharacterWorld_CurrentCharacterWorldEnum) == 0x000020, "Member 'BP_CameraControllerComponent_C_ShouldEnableCameraShake::CallFunc_GetCurrentCharacterWorld_CurrentCharacterWorldEnum' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_ShouldEnableCameraShake, CallFunc_Array_Contains_ReturnValue) == 0x000021, "Member 'BP_CameraControllerComponent_C_ShouldEnableCameraShake::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.StopAllCameraShakes
// 0x0008 (0x0008 - 0x0000)
struct BP_CameraControllerComponent_C_StopAllCameraShakes final
{
public:
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraControllerComponent_C_StopAllCameraShakes) == 0x000008, "Wrong alignment on BP_CameraControllerComponent_C_StopAllCameraShakes");
static_assert(sizeof(BP_CameraControllerComponent_C_StopAllCameraShakes) == 0x000008, "Wrong size on BP_CameraControllerComponent_C_StopAllCameraShakes");
static_assert(offsetof(BP_CameraControllerComponent_C_StopAllCameraShakes, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000000, "Member 'BP_CameraControllerComponent_C_StopAllCameraShakes::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.UpdateCameraConfigBlenders
// 0x0028 (0x0028 - 0x0000)
struct BP_CameraControllerComponent_C_UpdateCameraConfigBlenders final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CameraConfigBlender_C*              CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_UpdateCameraConfigBlender_DeltaSeconds_ImplicitCast; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraControllerComponent_C_UpdateCameraConfigBlenders) == 0x000008, "Wrong alignment on BP_CameraControllerComponent_C_UpdateCameraConfigBlenders");
static_assert(sizeof(BP_CameraControllerComponent_C_UpdateCameraConfigBlenders) == 0x000028, "Wrong size on BP_CameraControllerComponent_C_UpdateCameraConfigBlenders");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraConfigBlenders, DeltaSeconds) == 0x000000, "Member 'BP_CameraControllerComponent_C_UpdateCameraConfigBlenders::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraConfigBlenders, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_CameraControllerComponent_C_UpdateCameraConfigBlenders::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraConfigBlenders, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_CameraControllerComponent_C_UpdateCameraConfigBlenders::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraConfigBlenders, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_CameraControllerComponent_C_UpdateCameraConfigBlenders::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraConfigBlenders, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_CameraControllerComponent_C_UpdateCameraConfigBlenders::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraConfigBlenders, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_CameraControllerComponent_C_UpdateCameraConfigBlenders::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraConfigBlenders, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_CameraControllerComponent_C_UpdateCameraConfigBlenders::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraConfigBlenders, CallFunc_UpdateCameraConfigBlender_DeltaSeconds_ImplicitCast) == 0x000020, "Member 'BP_CameraControllerComponent_C_UpdateCameraConfigBlenders::CallFunc_UpdateCameraConfigBlender_DeltaSeconds_ImplicitCast' has a wrong offset!");

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.UpdateCameraRecenter
// 0x00A8 (0x00A8 - 0x0000)
struct BP_CameraControllerComponent_C_UpdateCameraRecenter final
{
public:
	double                                        DeltaSeconds;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_World_C*             CallFunc_GetOwnerAsCharacterWorld_CharacterWorld;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_World_C*             CallFunc_GetOwnerAsCharacterWorld_CharacterWorld_1; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RLerp_Alpha_ImplicitCast;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraControllerComponent_C_UpdateCameraRecenter) == 0x000008, "Wrong alignment on BP_CameraControllerComponent_C_UpdateCameraRecenter");
static_assert(sizeof(BP_CameraControllerComponent_C_UpdateCameraRecenter) == 0x0000A8, "Wrong size on BP_CameraControllerComponent_C_UpdateCameraRecenter");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraRecenter, DeltaSeconds) == 0x000000, "Member 'BP_CameraControllerComponent_C_UpdateCameraRecenter::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraRecenter, CallFunc_GetOwnerAsCharacterWorld_CharacterWorld) == 0x000008, "Member 'BP_CameraControllerComponent_C_UpdateCameraRecenter::CallFunc_GetOwnerAsCharacterWorld_CharacterWorld' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraRecenter, CallFunc_GetOwnerAsCharacterWorld_CharacterWorld_1) == 0x000010, "Member 'BP_CameraControllerComponent_C_UpdateCameraRecenter::CallFunc_GetOwnerAsCharacterWorld_CharacterWorld_1' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraRecenter, CallFunc_GetController_ReturnValue) == 0x000018, "Member 'BP_CameraControllerComponent_C_UpdateCameraRecenter::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraRecenter, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000020, "Member 'BP_CameraControllerComponent_C_UpdateCameraRecenter::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraRecenter, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_CameraControllerComponent_C_UpdateCameraRecenter::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraRecenter, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_CameraControllerComponent_C_UpdateCameraRecenter::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraRecenter, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_CameraControllerComponent_C_UpdateCameraRecenter::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraRecenter, CallFunc_SelectFloat_ReturnValue) == 0x000050, "Member 'BP_CameraControllerComponent_C_UpdateCameraRecenter::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraRecenter, CallFunc_FClamp_ReturnValue) == 0x000058, "Member 'BP_CameraControllerComponent_C_UpdateCameraRecenter::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraRecenter, CallFunc_RLerp_ReturnValue) == 0x000060, "Member 'BP_CameraControllerComponent_C_UpdateCameraRecenter::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraRecenter, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000078, "Member 'BP_CameraControllerComponent_C_UpdateCameraRecenter::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraRecenter, CallFunc_BreakRotator_Roll) == 0x00007C, "Member 'BP_CameraControllerComponent_C_UpdateCameraRecenter::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraRecenter, CallFunc_BreakRotator_Pitch) == 0x000080, "Member 'BP_CameraControllerComponent_C_UpdateCameraRecenter::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraRecenter, CallFunc_BreakRotator_Yaw) == 0x000084, "Member 'BP_CameraControllerComponent_C_UpdateCameraRecenter::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraRecenter, CallFunc_MakeRotator_ReturnValue) == 0x000088, "Member 'BP_CameraControllerComponent_C_UpdateCameraRecenter::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraRecenter, CallFunc_RLerp_Alpha_ImplicitCast) == 0x0000A0, "Member 'BP_CameraControllerComponent_C_UpdateCameraRecenter::CallFunc_RLerp_Alpha_ImplicitCast' has a wrong offset!");

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.UpdateCameraShake
// 0x0050 (0x0050 - 0x0000)
struct BP_CameraControllerComponent_C_UpdateCameraShake final
{
public:
	double                                        DeltaSeconds;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ComputeCameraShakeScale_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldEnableCameraShake_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_World_C*             CallFunc_GetOwnerAsCharacterWorld_CharacterWorld;  // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraShakeBase*                       CallFunc_StartCameraShakeFromSource_ReturnValue;   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_StartCameraShakeFromSource_Scale_ImplicitCast; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_ShakeScale_ImplicitCast;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraControllerComponent_C_UpdateCameraShake) == 0x000008, "Wrong alignment on BP_CameraControllerComponent_C_UpdateCameraShake");
static_assert(sizeof(BP_CameraControllerComponent_C_UpdateCameraShake) == 0x000050, "Wrong size on BP_CameraControllerComponent_C_UpdateCameraShake");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraShake, DeltaSeconds) == 0x000000, "Member 'BP_CameraControllerComponent_C_UpdateCameraShake::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraShake, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000008, "Member 'BP_CameraControllerComponent_C_UpdateCameraShake::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraShake, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_CameraControllerComponent_C_UpdateCameraShake::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraShake, CallFunc_ComputeCameraShakeScale_ReturnValue) == 0x000018, "Member 'BP_CameraControllerComponent_C_UpdateCameraShake::CallFunc_ComputeCameraShakeScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraShake, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'BP_CameraControllerComponent_C_UpdateCameraShake::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraShake, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x000028, "Member 'BP_CameraControllerComponent_C_UpdateCameraShake::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraShake, CallFunc_ShouldEnableCameraShake_ReturnValue) == 0x000030, "Member 'BP_CameraControllerComponent_C_UpdateCameraShake::CallFunc_ShouldEnableCameraShake_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraShake, CallFunc_GetOwnerAsCharacterWorld_CharacterWorld) == 0x000038, "Member 'BP_CameraControllerComponent_C_UpdateCameraShake::CallFunc_GetOwnerAsCharacterWorld_CharacterWorld' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraShake, CallFunc_StartCameraShakeFromSource_ReturnValue) == 0x000040, "Member 'BP_CameraControllerComponent_C_UpdateCameraShake::CallFunc_StartCameraShakeFromSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraShake, CallFunc_StartCameraShakeFromSource_Scale_ImplicitCast) == 0x000048, "Member 'BP_CameraControllerComponent_C_UpdateCameraShake::CallFunc_StartCameraShakeFromSource_Scale_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateCameraShake, K2Node_VariableSet_ShakeScale_ImplicitCast) == 0x00004C, "Member 'BP_CameraControllerComponent_C_UpdateCameraShake::K2Node_VariableSet_ShakeScale_ImplicitCast' has a wrong offset!");

// Function BP_CameraControllerComponent.BP_CameraControllerComponent_C.UpdateDynamicCameraFocusDistance
// 0x0298 (0x0298 - 0x0000)
struct BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance final
{
public:
	double                                        DeltaSeconds;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ComputeDistanceBetweenCameraAndCharacterMesh_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0028(0x0010)(ConstParm, ReferenceParm)
	class ABP_jRPG_Character_World_C*             CallFunc_GetOwnerAsCharacterWorld_CharacterWorld;  // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CallFunc_GetMainCamera_MainCamera;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00A8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A3[0x1];                                      // 0x01A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFocusDistance_FocusDistance_ImplicitCast; // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_B_ImplicitCast;                      // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFocusDistance_FocusDistance_ImplicitCast_1; // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance) == 0x000008, "Wrong alignment on BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance");
static_assert(sizeof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance) == 0x000298, "Wrong size on BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, DeltaSeconds) == 0x000000, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_ComputeDistanceBetweenCameraAndCharacterMesh_ReturnValue) == 0x000008, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_ComputeDistanceBetweenCameraAndCharacterMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000010, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, Temp_object_Variable) == 0x000028, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_GetOwnerAsCharacterWorld_CharacterWorld) == 0x000038, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_GetOwnerAsCharacterWorld_CharacterWorld' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_GetMainCamera_MainCamera) == 0x000040, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_GetMainCamera_MainCamera' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_GetForwardVector_ReturnValue) == 0x000048, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000060, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000078, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_Add_VectorVector_ReturnValue) == 0x000090, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_LineTraceSingle_OutHit) == 0x0000A8, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_LineTraceSingle_ReturnValue) == 0x0001A0, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_BreakHitResult_bBlockingHit) == 0x0001A1, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001A2, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_BreakHitResult_Time) == 0x0001A4, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_BreakHitResult_Distance) == 0x0001A8, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_BreakHitResult_Location) == 0x0001B0, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_BreakHitResult_ImpactPoint) == 0x0001C8, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_BreakHitResult_Normal) == 0x0001E0, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_BreakHitResult_ImpactNormal) == 0x0001F8, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_BreakHitResult_PhysMat) == 0x000210, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_BreakHitResult_HitActor) == 0x000218, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_BreakHitResult_HitComponent) == 0x000220, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_BreakHitResult_HitBoneName) == 0x000228, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_BreakHitResult_BoneName) == 0x000230, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_BreakHitResult_HitItem) == 0x000238, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_BreakHitResult_ElementIndex) == 0x00023C, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_BreakHitResult_FaceIndex) == 0x000240, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_BreakHitResult_TraceStart) == 0x000248, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_BreakHitResult_TraceEnd) == 0x000260, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_FMax_ReturnValue) == 0x000278, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_SetFocusDistance_FocusDistance_ImplicitCast) == 0x000280, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_SetFocusDistance_FocusDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_FMax_B_ImplicitCast) == 0x000288, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_FMax_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance, CallFunc_SetFocusDistance_FocusDistance_ImplicitCast_1) == 0x000290, "Member 'BP_CameraControllerComponent_C_UpdateDynamicCameraFocusDistance::CallFunc_SetFocusDistance_FocusDistance_ImplicitCast_1' has a wrong offset!");

}

