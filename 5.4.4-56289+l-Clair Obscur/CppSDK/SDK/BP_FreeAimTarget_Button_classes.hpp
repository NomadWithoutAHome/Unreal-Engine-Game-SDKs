#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FreeAimTarget_Button

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FSoundEvent_structs.hpp"
#include "BP_FreeAimTarget_Trigger_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FreeAimTarget_Button.BP_FreeAimTarget_Button_C
// 0x0068 (0x0390 - 0x0328)
class ABP_FreeAimTarget_Button_C final : public ABP_FreeAimTarget_Trigger_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_FreeAimTarget_Button_C;          // 0x0328(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SM_PaintcageBIG;                                   // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       FollowSpline;                                      // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AC_PainCage_Button_Activate;                       // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AC_FreeAimTarget_Button_LP;                        // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Fx;                                                // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        R;                                                 // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          UseFollowSpline;                                   // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldDisplayFlyingIndicator;                      // 0x0361(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_362[0x6];                                      // 0x0362(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        FlyingIndicatorMidPathHeight;                      // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ButtonMaterial;                                    // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     ActorToTriggerTransformArray;                      // 0x0378(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FFSoundEvent                           AC_FreeAimTarget_Explosion;                        // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

public:
	void TriggerTargets(bool Instant);
	void SpawnFlyingIndicator(class AActor* ActorToTrigger_0, const struct FTransform& Transform);
	void ReceiveBeginPlay();
	void OnObjectInteractionStateLoaded(bool InteractionState);
	void IsInteractionAvailable(bool* Available);
	void FreeAimHit(class ABP_jRPG_Character_World_C* PlayerCharacterWorld, const struct FVector& HitLocation, bool IsDisabled);
	void ExplorationAttacked(class ABP_jRPG_Character_World_C* PlayerCharacter, const struct FVector& ImpactPoint);
	void ExecuteUbergraph_BP_FreeAimTarget_Button(int32 EntryPoint);
	void CreateDynamicFlyingBehavior(class AActor* Target, const struct FTransform& TargetTransform);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FreeAimTarget_Button_C">();
	}
	static class ABP_FreeAimTarget_Button_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FreeAimTarget_Button_C>();
	}
};
static_assert(alignof(ABP_FreeAimTarget_Button_C) == 0x000008, "Wrong alignment on ABP_FreeAimTarget_Button_C");
static_assert(sizeof(ABP_FreeAimTarget_Button_C) == 0x000390, "Wrong size on ABP_FreeAimTarget_Button_C");
static_assert(offsetof(ABP_FreeAimTarget_Button_C, UberGraphFrame_BP_FreeAimTarget_Button_C) == 0x000328, "Member 'ABP_FreeAimTarget_Button_C::UberGraphFrame_BP_FreeAimTarget_Button_C' has a wrong offset!");
static_assert(offsetof(ABP_FreeAimTarget_Button_C, SM_PaintcageBIG) == 0x000330, "Member 'ABP_FreeAimTarget_Button_C::SM_PaintcageBIG' has a wrong offset!");
static_assert(offsetof(ABP_FreeAimTarget_Button_C, FollowSpline) == 0x000338, "Member 'ABP_FreeAimTarget_Button_C::FollowSpline' has a wrong offset!");
static_assert(offsetof(ABP_FreeAimTarget_Button_C, AC_PainCage_Button_Activate) == 0x000340, "Member 'ABP_FreeAimTarget_Button_C::AC_PainCage_Button_Activate' has a wrong offset!");
static_assert(offsetof(ABP_FreeAimTarget_Button_C, AC_FreeAimTarget_Button_LP) == 0x000348, "Member 'ABP_FreeAimTarget_Button_C::AC_FreeAimTarget_Button_LP' has a wrong offset!");
static_assert(offsetof(ABP_FreeAimTarget_Button_C, Fx) == 0x000350, "Member 'ABP_FreeAimTarget_Button_C::Fx' has a wrong offset!");
static_assert(offsetof(ABP_FreeAimTarget_Button_C, R) == 0x000358, "Member 'ABP_FreeAimTarget_Button_C::R' has a wrong offset!");
static_assert(offsetof(ABP_FreeAimTarget_Button_C, UseFollowSpline) == 0x000360, "Member 'ABP_FreeAimTarget_Button_C::UseFollowSpline' has a wrong offset!");
static_assert(offsetof(ABP_FreeAimTarget_Button_C, ShouldDisplayFlyingIndicator) == 0x000361, "Member 'ABP_FreeAimTarget_Button_C::ShouldDisplayFlyingIndicator' has a wrong offset!");
static_assert(offsetof(ABP_FreeAimTarget_Button_C, FlyingIndicatorMidPathHeight) == 0x000368, "Member 'ABP_FreeAimTarget_Button_C::FlyingIndicatorMidPathHeight' has a wrong offset!");
static_assert(offsetof(ABP_FreeAimTarget_Button_C, ButtonMaterial) == 0x000370, "Member 'ABP_FreeAimTarget_Button_C::ButtonMaterial' has a wrong offset!");
static_assert(offsetof(ABP_FreeAimTarget_Button_C, ActorToTriggerTransformArray) == 0x000378, "Member 'ABP_FreeAimTarget_Button_C::ActorToTriggerTransformArray' has a wrong offset!");
static_assert(offsetof(ABP_FreeAimTarget_Button_C, AC_FreeAimTarget_Explosion) == 0x000388, "Member 'ABP_FreeAimTarget_Button_C::AC_FreeAimTarget_Explosion' has a wrong offset!");

}

