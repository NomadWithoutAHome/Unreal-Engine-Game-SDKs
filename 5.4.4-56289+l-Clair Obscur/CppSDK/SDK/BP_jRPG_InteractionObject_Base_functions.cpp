#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_jRPG_InteractionObject_Base

#include "Basic.hpp"

#include "BP_jRPG_InteractionObject_Base_classes.hpp"
#include "BP_jRPG_InteractionObject_Base_parameters.hpp"


namespace SDK
{

// Function BP_jRPG_InteractionObject_Base.BP_jRPG_InteractionObject_Base_C.CheckForErrors
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>&                    ErrorMessages                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_jRPG_InteractionObject_Base_C::CheckForErrors(TArray<class FText>& ErrorMessages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_InteractionObject_Base_C", "CheckForErrors");

	Params::BP_jRPG_InteractionObject_Base_C_CheckForErrors Parms{};

	Parms.ErrorMessages = std::move(ErrorMessages);

	UObject::ProcessEvent(Func, &Parms);

	ErrorMessages = std::move(Parms.ErrorMessages);

	return Parms.ReturnValue;
}


// Function BP_jRPG_InteractionObject_Base.BP_jRPG_InteractionObject_Base_C.ShouldHideDistantInteraction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_jRPG_InteractionObject_Base_C::ShouldHideDistantInteraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_InteractionObject_Base_C", "ShouldHideDistantInteraction");

	Params::BP_jRPG_InteractionObject_Base_C_ShouldHideDistantInteraction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_InteractionObject_Base.BP_jRPG_InteractionObject_Base_C.CanInteractWithMount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   CanInteract                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_InteractionObject_Base_C::CanInteractWithMount(bool* CanInteract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_InteractionObject_Base_C", "CanInteractWithMount");

	Params::BP_jRPG_InteractionObject_Base_C_CanInteractWithMount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CanInteract != nullptr)
		*CanInteract = Parms.CanInteract;
}


// Function BP_jRPG_InteractionObject_Base.BP_jRPG_InteractionObject_Base_C.IsInteractionDone
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Done                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_InteractionObject_Base_C::IsInteractionDone(bool* Done)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_InteractionObject_Base_C", "IsInteractionDone");

	Params::BP_jRPG_InteractionObject_Base_C_IsInteractionDone Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Done != nullptr)
		*Done = Parms.Done;
}


// Function BP_jRPG_InteractionObject_Base.BP_jRPG_InteractionObject_Base_C.GetInteractionPromptParams
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFPromptParams*                  PromptParams                                           (Parm, OutParm, HasGetValueTypeHash)

void ABP_jRPG_InteractionObject_Base_C::GetInteractionPromptParams(struct FFPromptParams* PromptParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_InteractionObject_Base_C", "GetInteractionPromptParams");

	Params::BP_jRPG_InteractionObject_Base_C_GetInteractionPromptParams Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PromptParams != nullptr)
		*PromptParams = std::move(Parms.PromptParams);
}


// Function BP_jRPG_InteractionObject_Base.BP_jRPG_InteractionObject_Base_C.IsInteractionAvailable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Available                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_InteractionObject_Base_C::IsInteractionAvailable(bool* Available)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_InteractionObject_Base_C", "IsInteractionAvailable");

	Params::BP_jRPG_InteractionObject_Base_C_IsInteractionAvailable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Available != nullptr)
		*Available = Parms.Available;
}


// Function BP_jRPG_InteractionObject_Base.BP_jRPG_InteractionObject_Base_C.UpdateInteractionState
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_InteractionObject_Base_C::UpdateInteractionState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_InteractionObject_Base_C", "UpdateInteractionState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_InteractionObject_Base.BP_jRPG_InteractionObject_Base_C.SetInteractionEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InteractionEnabled_0                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_InteractionObject_Base_C::SetInteractionEnabled(bool InteractionEnabled_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_InteractionObject_Base_C", "SetInteractionEnabled");

	Params::BP_jRPG_InteractionObject_Base_C_SetInteractionEnabled Parms{};

	Parms.InteractionEnabled_0 = InteractionEnabled_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_InteractionObject_Base.BP_jRPG_InteractionObject_Base_C.GetObjectInteractionState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   InteractionState                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_InteractionObject_Base_C::GetObjectInteractionState(bool* InteractionState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_InteractionObject_Base_C", "GetObjectInteractionState");

	Params::BP_jRPG_InteractionObject_Base_C_GetObjectInteractionState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InteractionState != nullptr)
		*InteractionState = Parms.InteractionState;
}


// Function BP_jRPG_InteractionObject_Base.BP_jRPG_InteractionObject_Base_C.SetObjectInteractionState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InteractionState                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_InteractionObject_Base_C::SetObjectInteractionState(bool InteractionState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_InteractionObject_Base_C", "SetObjectInteractionState");

	Params::BP_jRPG_InteractionObject_Base_C_SetObjectInteractionState Parms{};

	Parms.InteractionState = InteractionState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_InteractionObject_Base.BP_jRPG_InteractionObject_Base_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_InteractionObject_Base_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_InteractionObject_Base_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_InteractionObject_Base.BP_jRPG_InteractionObject_Base_C.BndEvt__InteractionRange_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_InteractionObject_Base_C::BndEvt__InteractionRange_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_InteractionObject_Base_C", "BndEvt__InteractionRange_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_jRPG_InteractionObject_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_InteractionObject_Base.BP_jRPG_InteractionObject_Base_C.OnInteractionRequested
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_jRPG_Character_World_C*       InteractingWorldCharacter                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Instant                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_InteractionObject_Base_C::OnInteractionRequested(class ABP_jRPG_Character_World_C* InteractingWorldCharacter, bool Instant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_InteractionObject_Base_C", "OnInteractionRequested");

	Params::BP_jRPG_InteractionObject_Base_C_OnInteractionRequested Parms{};

	Parms.InteractingWorldCharacter = InteractingWorldCharacter;
	Parms.Instant = Instant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_InteractionObject_Base.BP_jRPG_InteractionObject_Base_C.OnInteractionDisabled
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_InteractionObject_Base_C::OnInteractionDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_InteractionObject_Base_C", "OnInteractionDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_InteractionObject_Base.BP_jRPG_InteractionObject_Base_C.BndEvt__InteractionRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_jRPG_InteractionObject_Base_C::BndEvt__InteractionRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_InteractionObject_Base_C", "BndEvt__InteractionRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_jRPG_InteractionObject_Base_C_BndEvt__InteractionRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_InteractionObject_Base.BP_jRPG_InteractionObject_Base_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_jRPG_InteractionObject_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_InteractionObject_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_InteractionObject_Base.BP_jRPG_InteractionObject_Base_C.OnOverlapEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_InteractionObject_Base_C::OnOverlapEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_InteractionObject_Base_C", "OnOverlapEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_InteractionObject_Base.BP_jRPG_InteractionObject_Base_C.OnInteractionEnabled
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_InteractionObject_Base_C::OnInteractionEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_InteractionObject_Base_C", "OnInteractionEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_InteractionObject_Base.BP_jRPG_InteractionObject_Base_C.OnEndOverlapEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_InteractionObject_Base_C::OnEndOverlapEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_InteractionObject_Base_C", "OnEndOverlapEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_InteractionObject_Base.BP_jRPG_InteractionObject_Base_C.OnEnemyBattleStateLoaded
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    BattleState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_InteractionObject_Base_C::OnEnemyBattleStateLoaded(bool BattleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_InteractionObject_Base_C", "OnEnemyBattleStateLoaded");

	Params::BP_jRPG_InteractionObject_Base_C_OnEnemyBattleStateLoaded Parms{};

	Parms.BattleState = BattleState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_InteractionObject_Base.BP_jRPG_InteractionObject_Base_C.OnObjectInteractionStateLoaded
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InteractionState                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_InteractionObject_Base_C::OnObjectInteractionStateLoaded(bool InteractionState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_InteractionObject_Base_C", "OnObjectInteractionStateLoaded");

	Params::BP_jRPG_InteractionObject_Base_C_OnObjectInteractionStateLoaded Parms{};

	Parms.InteractionState = InteractionState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_InteractionObject_Base.BP_jRPG_InteractionObject_Base_C.ExecuteUbergraph_BP_jRPG_InteractionObject_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_InteractionObject_Base_C::ExecuteUbergraph_BP_jRPG_InteractionObject_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_InteractionObject_Base_C", "ExecuteUbergraph_BP_jRPG_InteractionObject_Base");

	Params::BP_jRPG_InteractionObject_Base_C_ExecuteUbergraph_BP_jRPG_InteractionObject_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_InteractionObject_Base.BP_jRPG_InteractionObject_Base_C.Editor_DrawDebugShapes
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_jRPG_InteractionObject_Base_C::Editor_DrawDebugShapes() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_InteractionObject_Base_C", "Editor_DrawDebugShapes");

	Params::BP_jRPG_InteractionObject_Base_C_Editor_DrawDebugShapes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_InteractionObject_Base.BP_jRPG_InteractionObject_Base_C.Editor_GetDebugShapes
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<struct FEditorDebugShape_Arrow>& Arrows                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FEditorDebugShape_Arrow>& Lines                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_jRPG_InteractionObject_Base_C::Editor_GetDebugShapes(TArray<struct FEditorDebugShape_Arrow>& Arrows, TArray<struct FEditorDebugShape_Arrow>& Lines) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_InteractionObject_Base_C", "Editor_GetDebugShapes");

	Params::BP_jRPG_InteractionObject_Base_C_Editor_GetDebugShapes Parms{};

	Parms.Arrows = std::move(Arrows);
	Parms.Lines = std::move(Lines);

	UObject::ProcessEvent(Func, &Parms);

	Arrows = std::move(Parms.Arrows);
	Lines = std::move(Parms.Lines);

	return Parms.ReturnValue;
}


// Function BP_jRPG_InteractionObject_Base.BP_jRPG_InteractionObject_Base_C.GetInteractionFeedbackLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FVector*                         Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_InteractionObject_Base_C::GetInteractionFeedbackLocation(struct FVector* Location) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_InteractionObject_Base_C", "GetInteractionFeedbackLocation");

	Params::BP_jRPG_InteractionObject_Base_C_GetInteractionFeedbackLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_jRPG_InteractionObject_Base.BP_jRPG_InteractionObject_Base_C.GetInteractionLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FVector*                         Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_InteractionObject_Base_C::GetInteractionLocation(struct FVector* Location) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_InteractionObject_Base_C", "GetInteractionLocation");

	Params::BP_jRPG_InteractionObject_Base_C_GetInteractionLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}

}

