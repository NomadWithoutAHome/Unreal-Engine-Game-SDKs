#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DataAsset_SkillGraph

#include "Basic.hpp"

#include "BP_DataAsset_SkillGraph_classes.hpp"
#include "BP_DataAsset_SkillGraph_parameters.hpp"


namespace SDK
{

// Function BP_DataAsset_SkillGraph.BP_DataAsset_SkillGraph_C.DoesEdgeExist
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_DataAsset_Skill_C*            Node1                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UBP_DataAsset_Skill_C*            Node2                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Exists                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_DataAsset_SkillGraph_C::DoesEdgeExist(class UBP_DataAsset_Skill_C* Node1, class UBP_DataAsset_Skill_C* Node2, bool* Exists)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataAsset_SkillGraph_C", "DoesEdgeExist");

	Params::BP_DataAsset_SkillGraph_C_DoesEdgeExist Parms{};

	Parms.Node1 = Node1;
	Parms.Node2 = Node2;

	UObject::ProcessEvent(Func, &Parms);

	if (Exists != nullptr)
		*Exists = Parms.Exists;
}


// Function BP_DataAsset_SkillGraph.BP_DataAsset_SkillGraph_C.FindEdge
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_DataAsset_Skill_C*            skill1                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UBP_DataAsset_Skill_C*            Skill2                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFSkillGraphEdge*                Edge                                                   (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32*                                  EdgeIndex                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_DataAsset_SkillGraph_C::FindEdge(class UBP_DataAsset_Skill_C* skill1, class UBP_DataAsset_Skill_C* Skill2, bool* Found, struct FFSkillGraphEdge* Edge, int32* EdgeIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataAsset_SkillGraph_C", "FindEdge");

	Params::BP_DataAsset_SkillGraph_C_FindEdge Parms{};

	Parms.skill1 = skill1;
	Parms.Skill2 = Skill2;

	UObject::ProcessEvent(Func, &Parms);

	if (Found != nullptr)
		*Found = Parms.Found;

	if (Edge != nullptr)
		*Edge = std::move(Parms.Edge);

	if (EdgeIndex != nullptr)
		*EdgeIndex = Parms.EdgeIndex;
}


// Function BP_DataAsset_SkillGraph.BP_DataAsset_SkillGraph_C.FindEdgesFromSkill
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_DataAsset_Skill_C*            Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<struct FFSkillGraphEdge>*        MatchingEdges                                          (Parm, OutParm)

void UBP_DataAsset_SkillGraph_C::FindEdgesFromSkill(class UBP_DataAsset_Skill_C* Skill, TArray<struct FFSkillGraphEdge>* MatchingEdges)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataAsset_SkillGraph_C", "FindEdgesFromSkill");

	Params::BP_DataAsset_SkillGraph_C_FindEdgesFromSkill Parms{};

	Parms.Skill = Skill;

	UObject::ProcessEvent(Func, &Parms);

	if (MatchingEdges != nullptr)
		*MatchingEdges = std::move(Parms.MatchingEdges);
}


// Function BP_DataAsset_SkillGraph.BP_DataAsset_SkillGraph_C.FindSkillByNameID
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SkillNameID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_DataAsset_Skill_C**           Skill                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_DataAsset_SkillGraph_C::FindSkillByNameID(class FName SkillNameID, bool* Found, class UBP_DataAsset_Skill_C** Skill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataAsset_SkillGraph_C", "FindSkillByNameID");

	Params::BP_DataAsset_SkillGraph_C_FindSkillByNameID Parms{};

	Parms.SkillNameID = SkillNameID;

	UObject::ProcessEvent(Func, &Parms);

	if (Found != nullptr)
		*Found = Parms.Found;

	if (Skill != nullptr)
		*Skill = Parms.Skill;
}


// Function BP_DataAsset_SkillGraph.BP_DataAsset_SkillGraph_C.FindSkillNode
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_DataAsset_Skill_C*            Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFSkillGraphNode*                Node                                                   (Parm, OutParm, NoDestructor, HasGetValueTypeHash)
// int32*                                  Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_DataAsset_SkillGraph_C::FindSkillNode(class UBP_DataAsset_Skill_C* Skill, bool* Found, struct FFSkillGraphNode* Node, int32* Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataAsset_SkillGraph_C", "FindSkillNode");

	Params::BP_DataAsset_SkillGraph_C_FindSkillNode Parms{};

	Parms.Skill = Skill;

	UObject::ProcessEvent(Func, &Parms);

	if (Found != nullptr)
		*Found = Parms.Found;

	if (Node != nullptr)
		*Node = std::move(Parms.Node);

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}


// Function BP_DataAsset_SkillGraph.BP_DataAsset_SkillGraph_C.FindSkillNodeSafe
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_DataAsset_Skill_C*            Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFSkillGraphNode*                Node                                                   (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBP_DataAsset_SkillGraph_C::FindSkillNodeSafe(class UBP_DataAsset_Skill_C* Skill, bool* Found, struct FFSkillGraphNode* Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataAsset_SkillGraph_C", "FindSkillNodeSafe");

	Params::BP_DataAsset_SkillGraph_C_FindSkillNodeSafe Parms{};

	Parms.Skill = Skill;

	UObject::ProcessEvent(Func, &Parms);

	if (Found != nullptr)
		*Found = Parms.Found;

	if (Node != nullptr)
		*Node = std::move(Parms.Node);
}


// Function BP_DataAsset_SkillGraph.BP_DataAsset_SkillGraph_C.FindSkillsUnlockedByItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FFSkillGraphNode>         ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<struct FFSkillGraphNode> UBP_DataAsset_SkillGraph_C::FindSkillsUnlockedByItem(class FName ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataAsset_SkillGraph_C", "FindSkillsUnlockedByItem");

	Params::BP_DataAsset_SkillGraph_C_FindSkillsUnlockedByItem Parms{};

	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_DataAsset_SkillGraph.BP_DataAsset_SkillGraph_C.GetAdjacentSkills
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_DataAsset_Skill_C*            Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class UBP_DataAsset_Skill_C*>*   Skills                                                 (Parm, OutParm)

void UBP_DataAsset_SkillGraph_C::GetAdjacentSkills(class UBP_DataAsset_Skill_C* Skill, TArray<class UBP_DataAsset_Skill_C*>* Skills)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataAsset_SkillGraph_C", "GetAdjacentSkills");

	Params::BP_DataAsset_SkillGraph_C_GetAdjacentSkills Parms{};

	Parms.Skill = Skill;

	UObject::ProcessEvent(Func, &Parms);

	if (Skills != nullptr)
		*Skills = std::move(Parms.Skills);
}


// Function BP_DataAsset_SkillGraph.BP_DataAsset_SkillGraph_C.GetCustomGroupingPolicies
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UClass*>                   ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<class UClass*> UBP_DataAsset_SkillGraph_C::GetCustomGroupingPolicies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataAsset_SkillGraph_C", "GetCustomGroupingPolicies");

	Params::BP_DataAsset_SkillGraph_C_GetCustomGroupingPolicies Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_DataAsset_SkillGraph.BP_DataAsset_SkillGraph_C.GetNodesInsideBox
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 StartPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 Size                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FFSkillGraphNode>*        Nodes_0                                                (Parm, OutParm)

void UBP_DataAsset_SkillGraph_C::GetNodesInsideBox(const struct FVector2D& StartPoint, const struct FVector2D& Size, TArray<struct FFSkillGraphNode>* Nodes_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataAsset_SkillGraph_C", "GetNodesInsideBox");

	Params::BP_DataAsset_SkillGraph_C_GetNodesInsideBox Parms{};

	Parms.StartPoint = std::move(StartPoint);
	Parms.Size = std::move(Size);

	UObject::ProcessEvent(Func, &Parms);

	if (Nodes_0 != nullptr)
		*Nodes_0 = std::move(Parms.Nodes_0);
}


// Function BP_DataAsset_SkillGraph.BP_DataAsset_SkillGraph_C.GetSkillNodePointUnlockCost
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FFSkillUnlockData&         FSkillUnlockData                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// int32*                                  UnlockCost                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_DataAsset_SkillGraph_C::GetSkillNodePointUnlockCost(const struct FFSkillUnlockData& FSkillUnlockData, int32* UnlockCost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataAsset_SkillGraph_C", "GetSkillNodePointUnlockCost");

	Params::BP_DataAsset_SkillGraph_C_GetSkillNodePointUnlockCost Parms{};

	Parms.FSkillUnlockData = std::move(FSkillUnlockData);

	UObject::ProcessEvent(Func, &Parms);

	if (UnlockCost != nullptr)
		*UnlockCost = Parms.UnlockCost;
}


// Function BP_DataAsset_SkillGraph.BP_DataAsset_SkillGraph_C.GetSkillPointUnlockCost
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBP_DataAsset_Skill_C*            Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32*                                  UnlockCost                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_DataAsset_SkillGraph_C::GetSkillPointUnlockCost(class UBP_DataAsset_Skill_C* Skill, int32* UnlockCost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataAsset_SkillGraph_C", "GetSkillPointUnlockCost");

	Params::BP_DataAsset_SkillGraph_C_GetSkillPointUnlockCost Parms{};

	Parms.Skill = Skill;

	UObject::ProcessEvent(Func, &Parms);

	if (UnlockCost != nullptr)
		*UnlockCost = Parms.UnlockCost;
}


// Function BP_DataAsset_SkillGraph.BP_DataAsset_SkillGraph_C.GetStartingSkills
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UBP_DataAsset_Skill_C*>*   Skills                                                 (Parm, OutParm)

void UBP_DataAsset_SkillGraph_C::GetStartingSkills(TArray<class UBP_DataAsset_Skill_C*>* Skills)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataAsset_SkillGraph_C", "GetStartingSkills");

	Params::BP_DataAsset_SkillGraph_C_GetStartingSkills Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Skills != nullptr)
		*Skills = std::move(Parms.Skills);
}


// Function BP_DataAsset_SkillGraph.BP_DataAsset_SkillGraph_C.IsSecretSkill
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBP_DataAsset_Skill_C*            Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsSecret                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_DataAsset_SkillGraph_C::IsSecretSkill(class UBP_DataAsset_Skill_C* Skill, bool* IsSecret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataAsset_SkillGraph_C", "IsSecretSkill");

	Params::BP_DataAsset_SkillGraph_C_IsSecretSkill Parms{};

	Parms.Skill = Skill;

	UObject::ProcessEvent(Func, &Parms);

	if (IsSecret != nullptr)
		*IsSecret = Parms.IsSecret;
}


// Function BP_DataAsset_SkillGraph.BP_DataAsset_SkillGraph_C.IsStartingSkill
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBP_DataAsset_Skill_C*            Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_DataAsset_SkillGraph_C::IsStartingSkill(class UBP_DataAsset_Skill_C* Skill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataAsset_SkillGraph_C", "IsStartingSkill");

	Params::BP_DataAsset_SkillGraph_C_IsStartingSkill Parms{};

	Parms.Skill = Skill;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_DataAsset_SkillGraph.BP_DataAsset_SkillGraph_C.RemoveEdge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_DataAsset_Skill_C*            Node1                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UBP_DataAsset_Skill_C*            Node2                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_DataAsset_SkillGraph_C::RemoveEdge(class UBP_DataAsset_Skill_C* Node1, class UBP_DataAsset_Skill_C* Node2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataAsset_SkillGraph_C", "RemoveEdge");

	Params::BP_DataAsset_SkillGraph_C_RemoveEdge Parms{};

	Parms.Node1 = Node1;
	Parms.Node2 = Node2;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DataAsset_SkillGraph.BP_DataAsset_SkillGraph_C.RemoveSkill
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_DataAsset_Skill_C*            Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_DataAsset_SkillGraph_C::RemoveSkill(class UBP_DataAsset_Skill_C* Skill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataAsset_SkillGraph_C", "RemoveSkill");

	Params::BP_DataAsset_SkillGraph_C_RemoveSkill Parms{};

	Parms.Skill = Skill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DataAsset_SkillGraph.BP_DataAsset_SkillGraph_C.TryFindSkillsByNameIDs
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>&                    NameIDs                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class UBP_DataAsset_Skill_C*>*   SkillAssets                                            (Parm, OutParm)
// bool*                                   AllFound                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FName>*                    MissingNameIDs                                         (Parm, OutParm)

void UBP_DataAsset_SkillGraph_C::TryFindSkillsByNameIDs(TArray<class FName>& NameIDs, TArray<class UBP_DataAsset_Skill_C*>* SkillAssets, bool* AllFound, TArray<class FName>* MissingNameIDs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataAsset_SkillGraph_C", "TryFindSkillsByNameIDs");

	Params::BP_DataAsset_SkillGraph_C_TryFindSkillsByNameIDs Parms{};

	Parms.NameIDs = std::move(NameIDs);

	UObject::ProcessEvent(Func, &Parms);

	NameIDs = std::move(Parms.NameIDs);

	if (SkillAssets != nullptr)
		*SkillAssets = std::move(Parms.SkillAssets);

	if (AllFound != nullptr)
		*AllFound = Parms.AllFound;

	if (MissingNameIDs != nullptr)
		*MissingNameIDs = std::move(Parms.MissingNameIDs);
}


// Function BP_DataAsset_SkillGraph.BP_DataAsset_SkillGraph_C.UpdateSkillNode
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FFSkillGraphNode&          Node                                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_DataAsset_SkillGraph_C::UpdateSkillNode(const struct FFSkillGraphNode& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataAsset_SkillGraph_C", "UpdateSkillNode");

	Params::BP_DataAsset_SkillGraph_C_UpdateSkillNode Parms{};

	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DataAsset_SkillGraph.BP_DataAsset_SkillGraph_C.UpdateSkillNodeFromSkill
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_DataAsset_Skill_C*            Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FFSkillGraphNode&          Node                                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_DataAsset_SkillGraph_C::UpdateSkillNodeFromSkill(class UBP_DataAsset_Skill_C* Skill, const struct FFSkillGraphNode& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataAsset_SkillGraph_C", "UpdateSkillNodeFromSkill");

	Params::BP_DataAsset_SkillGraph_C_UpdateSkillNodeFromSkill Parms{};

	Parms.Skill = Skill;
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}

}

