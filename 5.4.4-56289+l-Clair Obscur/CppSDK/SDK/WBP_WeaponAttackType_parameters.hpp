#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_WeaponAttackType

#include "Basic.hpp"

#include "EAttackType_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_WeaponAttackType.WBP_WeaponAttackType_C.SetAttackType
// 0x0028 (0x0028 - 0x0000)
struct WBP_WeaponAttackType_C_SetAttackType final
{
public:
	EAttackType                                   InAttackType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               CallFunc_GetAttackElementTypeIcon_Texture;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponAttackType_C_SetAttackType) == 0x000008, "Wrong alignment on WBP_WeaponAttackType_C_SetAttackType");
static_assert(sizeof(WBP_WeaponAttackType_C_SetAttackType) == 0x000028, "Wrong size on WBP_WeaponAttackType_C_SetAttackType");
static_assert(offsetof(WBP_WeaponAttackType_C_SetAttackType, InAttackType) == 0x000000, "Member 'WBP_WeaponAttackType_C_SetAttackType::InAttackType' has a wrong offset!");
static_assert(offsetof(WBP_WeaponAttackType_C_SetAttackType, Temp_bool_Variable) == 0x000001, "Member 'WBP_WeaponAttackType_C_SetAttackType::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponAttackType_C_SetAttackType, CallFunc_GetAttackElementTypeIcon_Texture) == 0x000008, "Member 'WBP_WeaponAttackType_C_SetAttackType::CallFunc_GetAttackElementTypeIcon_Texture' has a wrong offset!");
static_assert(offsetof(WBP_WeaponAttackType_C_SetAttackType, Temp_byte_Variable) == 0x000010, "Member 'WBP_WeaponAttackType_C_SetAttackType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponAttackType_C_SetAttackType, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'WBP_WeaponAttackType_C_SetAttackType::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponAttackType_C_SetAttackType, K2Node_DynamicCast_AsTexture_2D) == 0x000018, "Member 'WBP_WeaponAttackType_C_SetAttackType::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(WBP_WeaponAttackType_C_SetAttackType, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_WeaponAttackType_C_SetAttackType::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_WeaponAttackType_C_SetAttackType, Temp_byte_Variable_1) == 0x000021, "Member 'WBP_WeaponAttackType_C_SetAttackType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponAttackType_C_SetAttackType, K2Node_Select_Default) == 0x000022, "Member 'WBP_WeaponAttackType_C_SetAttackType::K2Node_Select_Default' has a wrong offset!");

// Function WBP_WeaponAttackType.WBP_WeaponAttackType_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_WeaponAttackType_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponAttackType_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_WeaponAttackType_C_PreConstruct");
static_assert(sizeof(WBP_WeaponAttackType_C_PreConstruct) == 0x000001, "Wrong size on WBP_WeaponAttackType_C_PreConstruct");
static_assert(offsetof(WBP_WeaponAttackType_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_WeaponAttackType_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_WeaponAttackType.WBP_WeaponAttackType_C.ExecuteUbergraph_WBP_WeaponAttackType
// 0x0008 (0x0008 - 0x0000)
struct WBP_WeaponAttackType_C_ExecuteUbergraph_WBP_WeaponAttackType final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponAttackType_C_ExecuteUbergraph_WBP_WeaponAttackType) == 0x000004, "Wrong alignment on WBP_WeaponAttackType_C_ExecuteUbergraph_WBP_WeaponAttackType");
static_assert(sizeof(WBP_WeaponAttackType_C_ExecuteUbergraph_WBP_WeaponAttackType) == 0x000008, "Wrong size on WBP_WeaponAttackType_C_ExecuteUbergraph_WBP_WeaponAttackType");
static_assert(offsetof(WBP_WeaponAttackType_C_ExecuteUbergraph_WBP_WeaponAttackType, EntryPoint) == 0x000000, "Member 'WBP_WeaponAttackType_C_ExecuteUbergraph_WBP_WeaponAttackType::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_WeaponAttackType_C_ExecuteUbergraph_WBP_WeaponAttackType, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_WeaponAttackType_C_ExecuteUbergraph_WBP_WeaponAttackType::K2Node_Event_IsDesignTime' has a wrong offset!");

}

