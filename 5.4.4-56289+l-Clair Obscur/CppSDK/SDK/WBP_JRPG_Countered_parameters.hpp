#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_JRPG_Countered

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_JRPG_Countered.WBP_JRPG_Countered_C.ExecuteUbergraph_WBP_JRPG_Countered
// 0x00F0 (0x00F0 - 0x0000)
struct WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable;                              // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_1;                            // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0038(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldLocationToScreen_ScreenLocation; // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToScreen_ReturnValue; // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered) == 0x000008, "Wrong alignment on WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered");
static_assert(sizeof(WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered) == 0x0000F0, "Wrong size on WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered");
static_assert(offsetof(WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered, EntryPoint) == 0x000000, "Member 'WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered, Temp_bool_Variable) == 0x000004, "Member 'WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered, Temp_byte_Variable) == 0x000005, "Member 'WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered, Temp_bool_Variable_1) == 0x000007, "Member 'WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered, Temp_struct_Variable) == 0x000008, "Member 'WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered, Temp_struct_Variable_1) == 0x000020, "Member 'WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered, K2Node_Event_MyGeometry) == 0x000038, "Member 'WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered, K2Node_Event_InDeltaTime) == 0x000070, "Member 'WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered, CallFunc_GetPlayerController_ReturnValue) == 0x000078, "Member 'WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000080, "Member 'WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered, CallFunc_GetObjectClass_ReturnValue) == 0x000098, "Member 'WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered, CallFunc_ClassIsChildOf_ReturnValue) == 0x0000A0, "Member 'WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered, K2Node_Select_Default) == 0x0000A8, "Member 'WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C0, "Member 'WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered, CallFunc_ProjectWorldLocationToScreen_ScreenLocation) == 0x0000D8, "Member 'WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered::CallFunc_ProjectWorldLocationToScreen_ScreenLocation' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered, CallFunc_ProjectWorldLocationToScreen_ReturnValue) == 0x0000E8, "Member 'WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered::CallFunc_ProjectWorldLocationToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered, K2Node_Select_Default_1) == 0x0000E9, "Member 'WBP_JRPG_Countered_C_ExecuteUbergraph_WBP_JRPG_Countered::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_JRPG_Countered.WBP_JRPG_Countered_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_JRPG_Countered_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_JRPG_Countered_C_Tick) == 0x000004, "Wrong alignment on WBP_JRPG_Countered_C_Tick");
static_assert(sizeof(WBP_JRPG_Countered_C_Tick) == 0x00003C, "Wrong size on WBP_JRPG_Countered_C_Tick");
static_assert(offsetof(WBP_JRPG_Countered_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_JRPG_Countered_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Countered_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_JRPG_Countered_C_Tick::InDeltaTime' has a wrong offset!");

}

