#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_JournalViewItem

#include "Basic.hpp"

#include "BP_JournalViewItem_classes.hpp"
#include "BP_JournalViewItem_parameters.hpp"


namespace SDK
{

// Function BP_JournalViewItem.BP_JournalViewItem_C.Call
// (BlueprintCallable, BlueprintEvent)

void UBP_JournalViewItem_C::Call()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JournalViewItem_C", "Call");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_JournalViewItem.BP_JournalViewItem_C.ExecuteUbergraph_BP_JournalViewItem
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_JournalViewItem_C::ExecuteUbergraph_BP_JournalViewItem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JournalViewItem_C", "ExecuteUbergraph_BP_JournalViewItem");

	Params::BP_JournalViewItem_C_ExecuteUbergraph_BP_JournalViewItem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_JournalViewItem.BP_JournalViewItem_C.GetJournalContentText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText*                            ContentText                                            (Parm, OutParm)

void UBP_JournalViewItem_C::GetJournalContentText(class FText* ContentText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JournalViewItem_C", "GetJournalContentText");

	Params::BP_JournalViewItem_C_GetJournalContentText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ContentText != nullptr)
		*ContentText = std::move(Parms.ContentText);
}


// Function BP_JournalViewItem.BP_JournalViewItem_C.GetJournalHardcodedName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName*                            Item_HardcodedName                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_JournalViewItem_C::GetJournalHardcodedName(class FName* Item_HardcodedName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JournalViewItem_C", "GetJournalHardcodedName");

	Params::BP_JournalViewItem_C_GetJournalHardcodedName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Item_HardcodedName != nullptr)
		*Item_HardcodedName = Parms.Item_HardcodedName;
}


// Function BP_JournalViewItem.BP_JournalViewItem_C.GetJournalLevelName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName*                            AssociatedLevel                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_JournalViewItem_C::GetJournalLevelName(class FName* AssociatedLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JournalViewItem_C", "GetJournalLevelName");

	Params::BP_JournalViewItem_C_GetJournalLevelName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AssociatedLevel != nullptr)
		*AssociatedLevel = Parms.AssociatedLevel;
}


// Function BP_JournalViewItem.BP_JournalViewItem_C.GetJournalShortTitle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText*                            ShortText                                              (Parm, OutParm)
// bool*                                   IsNumber                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_JournalViewItem_C::GetJournalShortTitle(class FText* ShortText, bool* IsNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JournalViewItem_C", "GetJournalShortTitle");

	Params::BP_JournalViewItem_C_GetJournalShortTitle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ShortText != nullptr)
		*ShortText = std::move(Parms.ShortText);

	if (IsNumber != nullptr)
		*IsNumber = Parms.IsNumber;
}


// Function BP_JournalViewItem.BP_JournalViewItem_C.GetJournalTitleText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText*                            TitleText                                              (Parm, OutParm)

void UBP_JournalViewItem_C::GetJournalTitleText(class FText* TitleText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JournalViewItem_C", "GetJournalTitleText");

	Params::BP_JournalViewItem_C_GetJournalTitleText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TitleText != nullptr)
		*TitleText = std::move(Parms.TitleText);
}


// Function BP_JournalViewItem.BP_JournalViewItem_C.GetJournalVoiceOver
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class USoundBase>*       VoiceOver                                              (Parm, OutParm, HasGetValueTypeHash)

void UBP_JournalViewItem_C::GetJournalVoiceOver(TSoftObjectPtr<class USoundBase>* VoiceOver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JournalViewItem_C", "GetJournalVoiceOver");

	Params::BP_JournalViewItem_C_GetJournalVoiceOver Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (VoiceOver != nullptr)
		*VoiceOver = Parms.VoiceOver;
}


// Function BP_JournalViewItem.BP_JournalViewItem_C.IsOwned
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsOwned_0                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_JournalViewItem_C::IsOwned(bool* IsOwned_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JournalViewItem_C", "IsOwned");

	Params::BP_JournalViewItem_C_IsOwned Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsOwned_0 != nullptr)
		*IsOwned_0 = Parms.IsOwned_0;
}


// Function BP_JournalViewItem.BP_JournalViewItem_C.IsPlaying
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   bIsPlaying_0                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_JournalViewItem_C::IsPlaying(bool* bIsPlaying_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JournalViewItem_C", "IsPlaying");

	Params::BP_JournalViewItem_C_IsPlaying Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsPlaying_0 != nullptr)
		*bIsPlaying_0 = Parms.bIsPlaying_0;
}


// Function BP_JournalViewItem.BP_JournalViewItem_C.SetIsPlaying
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsPlaying_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_JournalViewItem_C::SetIsPlaying(bool bIsPlaying_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JournalViewItem_C", "SetIsPlaying");

	Params::BP_JournalViewItem_C_SetIsPlaying Parms{};

	Parms.bIsPlaying_0 = bIsPlaying_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_JournalViewItem.BP_JournalViewItem_C.ShouldBeAddedToList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   bAddToList                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_JournalViewItem_C::ShouldBeAddedToList(bool* bAddToList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JournalViewItem_C", "ShouldBeAddedToList");

	Params::BP_JournalViewItem_C_ShouldBeAddedToList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bAddToList != nullptr)
		*bAddToList = Parms.bAddToList;
}


// Function BP_JournalViewItem.BP_JournalViewItem_C.TriggerUnlockJournal
// (BlueprintCallable, BlueprintEvent)

void UBP_JournalViewItem_C::TriggerUnlockJournal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JournalViewItem_C", "TriggerUnlockJournal");

	UObject::ProcessEvent(Func, nullptr);
}

}

