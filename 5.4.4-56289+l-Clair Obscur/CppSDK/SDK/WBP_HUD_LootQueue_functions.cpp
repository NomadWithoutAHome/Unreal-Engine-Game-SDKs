#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HUD_LootQueue

#include "Basic.hpp"

#include "WBP_HUD_LootQueue_classes.hpp"
#include "WBP_HUD_LootQueue_parameters.hpp"


namespace SDK
{

// Function WBP_HUD_LootQueue.WBP_HUD_LootQueue_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_HUD_LootQueue_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_LootQueue_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_HUD_LootQueue.WBP_HUD_LootQueue_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_HUD_LootQueue_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_LootQueue_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_HUD_LootQueue.WBP_HUD_LootQueue_C.ExecuteUbergraph_WBP_HUD_LootQueue
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_HUD_LootQueue_C::ExecuteUbergraph_WBP_HUD_LootQueue(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_LootQueue_C", "ExecuteUbergraph_WBP_HUD_LootQueue");

	Params::WBP_HUD_LootQueue_C_ExecuteUbergraph_WBP_HUD_LootQueue Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_HUD_LootQueue.WBP_HUD_LootQueue_C.GetIsPaused
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   IsPaused_0                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_HUD_LootQueue_C::GetIsPaused(bool* IsPaused_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_LootQueue_C", "GetIsPaused");

	Params::WBP_HUD_LootQueue_C_GetIsPaused Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPaused_0 != nullptr)
		*IsPaused_0 = Parms.IsPaused_0;
}


// Function WBP_HUD_LootQueue.WBP_HUD_LootQueue_C.OnBattleFinished
// (BlueprintCallable, BlueprintEvent)

void UWBP_HUD_LootQueue_C::OnBattleFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_LootQueue_C", "OnBattleFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_HUD_LootQueue.WBP_HUD_LootQueue_C.OnItemAdded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_GeneratedItemInfo_Base_C*     GeneratedItemInfo                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FS_LootContext&            LootContext                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_HUD_LootQueue_C::OnItemAdded(class UBP_GeneratedItemInfo_Base_C* GeneratedItemInfo, const struct FS_LootContext& LootContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_LootQueue_C", "OnItemAdded");

	Params::WBP_HUD_LootQueue_C_OnItemAdded Parms{};

	Parms.GeneratedItemInfo = GeneratedItemInfo;
	Parms.LootContext = std::move(LootContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_HUD_LootQueue.WBP_HUD_LootQueue_C.OnItemBought
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_MerchantItemSellData&   BoughtItemData                                         (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// class UBP_ItemInstance_Base_C*          PreviousItemInstance                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_HUD_LootQueue_C::OnItemBought(const struct FS_MerchantItemSellData& BoughtItemData, class UBP_ItemInstance_Base_C* PreviousItemInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_LootQueue_C", "OnItemBought");

	Params::WBP_HUD_LootQueue_C_OnItemBought Parms{};

	Parms.BoughtItemData = std::move(BoughtItemData);
	Parms.PreviousItemInstance = PreviousItemInstance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_HUD_LootQueue.WBP_HUD_LootQueue_C.OnPassiveEffectLearned
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             PassiveEffectName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_HUD_LootQueue_C::OnPassiveEffectLearned(class FName PassiveEffectName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_LootQueue_C", "OnPassiveEffectLearned");

	Params::WBP_HUD_LootQueue_C_OnPassiveEffectLearned Parms{};

	Parms.PassiveEffectName = PassiveEffectName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_HUD_LootQueue.WBP_HUD_LootQueue_C.OnResumeQueueTimerEnded
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_HUD_LootQueue_C::OnResumeQueueTimerEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_LootQueue_C", "OnResumeQueueTimerEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_HUD_LootQueue.WBP_HUD_LootQueue_C.OnTriggerBoughtItemsQueue
// (BlueprintCallable, BlueprintEvent)

void UWBP_HUD_LootQueue_C::OnTriggerBoughtItemsQueue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_LootQueue_C", "OnTriggerBoughtItemsQueue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_HUD_LootQueue.WBP_HUD_LootQueue_C.PauseQueue
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_HUD_LootQueue_C::PauseQueue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_LootQueue_C", "PauseQueue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_HUD_LootQueue.WBP_HUD_LootQueue_C.ResumeQueue
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_HUD_LootQueue_C::ResumeQueue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_LootQueue_C", "ResumeQueue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_HUD_LootQueue.WBP_HUD_LootQueue_C.SetMerchantMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_MerchantComponent_C*          MerchantComponent_0                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_HUD_LootQueue_C::SetMerchantMode(class UBP_MerchantComponent_C* MerchantComponent_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_HUD_LootQueue_C", "SetMerchantMode");

	Params::WBP_HUD_LootQueue_C_SetMerchantMode Parms{};

	Parms.MerchantComponent_0 = MerchantComponent_0;

	UObject::ProcessEvent(Func, &Parms);
}

}

