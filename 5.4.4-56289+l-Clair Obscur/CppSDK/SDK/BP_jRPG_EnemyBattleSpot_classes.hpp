#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_jRPG_EnemyBattleSpot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_jRPG_FormationType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_jRPG_EnemyBattleSpot.BP_jRPG_EnemyBattleSpot_C
// 0x0040 (0x02D0 - 0x0290)
class ABP_jRPG_EnemyBattleSpot_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        SpawnPosition;                                     // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 PreviewMesh;                                       // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   Text;                                              // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule;                                           // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotIndex;                                         // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	E_jRPG_FormationType                          Formation;                                         // 0x02CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void DEBUG_CVarChange_ShowBattleDebug(bool NewValue);
	void ExecuteUbergraph_BP_jRPG_EnemyBattleSpot(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_jRPG_EnemyBattleSpot_C">();
	}
	static class ABP_jRPG_EnemyBattleSpot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_jRPG_EnemyBattleSpot_C>();
	}
};
static_assert(alignof(ABP_jRPG_EnemyBattleSpot_C) == 0x000008, "Wrong alignment on ABP_jRPG_EnemyBattleSpot_C");
static_assert(sizeof(ABP_jRPG_EnemyBattleSpot_C) == 0x0002D0, "Wrong size on ABP_jRPG_EnemyBattleSpot_C");
static_assert(offsetof(ABP_jRPG_EnemyBattleSpot_C, UberGraphFrame) == 0x000290, "Member 'ABP_jRPG_EnemyBattleSpot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_jRPG_EnemyBattleSpot_C, SpawnPosition) == 0x000298, "Member 'ABP_jRPG_EnemyBattleSpot_C::SpawnPosition' has a wrong offset!");
static_assert(offsetof(ABP_jRPG_EnemyBattleSpot_C, PreviewMesh) == 0x0002A0, "Member 'ABP_jRPG_EnemyBattleSpot_C::PreviewMesh' has a wrong offset!");
static_assert(offsetof(ABP_jRPG_EnemyBattleSpot_C, Text) == 0x0002A8, "Member 'ABP_jRPG_EnemyBattleSpot_C::Text' has a wrong offset!");
static_assert(offsetof(ABP_jRPG_EnemyBattleSpot_C, Arrow) == 0x0002B0, "Member 'ABP_jRPG_EnemyBattleSpot_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_jRPG_EnemyBattleSpot_C, Capsule) == 0x0002B8, "Member 'ABP_jRPG_EnemyBattleSpot_C::Capsule' has a wrong offset!");
static_assert(offsetof(ABP_jRPG_EnemyBattleSpot_C, Scene) == 0x0002C0, "Member 'ABP_jRPG_EnemyBattleSpot_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_jRPG_EnemyBattleSpot_C, SlotIndex) == 0x0002C8, "Member 'ABP_jRPG_EnemyBattleSpot_C::SlotIndex' has a wrong offset!");
static_assert(offsetof(ABP_jRPG_EnemyBattleSpot_C, Formation) == 0x0002CC, "Member 'ABP_jRPG_EnemyBattleSpot_C::Formation' has a wrong offset!");

}

