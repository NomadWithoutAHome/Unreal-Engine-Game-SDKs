#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FreeAimShooterBattleComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "EAttackType_structs.hpp"
#include "EFreeAimType_structs.hpp"
#include "Engine_structs.hpp"
#include "EFreeAimBodyPartType_structs.hpp"


namespace SDK::Params
{

// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.OnProjectileFiringFinished
// 0x0001 (0x0001 - 0x0000)
struct BP_FreeAimShooterBattleComponent_C_OnProjectileFiringFinished final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeAimShooterBattleComponent_C_OnProjectileFiringFinished) == 0x000001, "Wrong alignment on BP_FreeAimShooterBattleComponent_C_OnProjectileFiringFinished");
static_assert(sizeof(BP_FreeAimShooterBattleComponent_C_OnProjectileFiringFinished) == 0x000001, "Wrong size on BP_FreeAimShooterBattleComponent_C_OnProjectileFiringFinished");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_OnProjectileFiringFinished, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_FreeAimShooterBattleComponent_C_OnProjectileFiringFinished::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.CanCancelFreeAim
// 0x0018 (0x0018 - 0x0000)
struct BP_FreeAimShooterBattleComponent_C_CanCancelFreeAim final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBattleEnding_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeAimShooterBattleComponent_C_CanCancelFreeAim) == 0x000008, "Wrong alignment on BP_FreeAimShooterBattleComponent_C_CanCancelFreeAim");
static_assert(sizeof(BP_FreeAimShooterBattleComponent_C_CanCancelFreeAim) == 0x000018, "Wrong size on BP_FreeAimShooterBattleComponent_C_CanCancelFreeAim");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_CanCancelFreeAim, ReturnValue) == 0x000000, "Member 'BP_FreeAimShooterBattleComponent_C_CanCancelFreeAim::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_CanCancelFreeAim, CallFunc_GetBattleManager_ReturnValue) == 0x000008, "Member 'BP_FreeAimShooterBattleComponent_C_CanCancelFreeAim::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_CanCancelFreeAim, CallFunc_IsBattleEnding_ReturnValue) == 0x000010, "Member 'BP_FreeAimShooterBattleComponent_C_CanCancelFreeAim::CallFunc_IsBattleEnding_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_CanCancelFreeAim, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_FreeAimShooterBattleComponent_C_CanCancelFreeAim::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_CanCancelFreeAim, CallFunc_Not_PreBool_ReturnValue_1) == 0x000012, "Member 'BP_FreeAimShooterBattleComponent_C_CanCancelFreeAim::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_CanCancelFreeAim, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000013, "Member 'BP_FreeAimShooterBattleComponent_C_CanCancelFreeAim::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_CanCancelFreeAim, CallFunc_BooleanAND_ReturnValue) == 0x000014, "Member 'BP_FreeAimShooterBattleComponent_C_CanCancelFreeAim::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_CanCancelFreeAim, CallFunc_BooleanAND_ReturnValue_1) == 0x000015, "Member 'BP_FreeAimShooterBattleComponent_C_CanCancelFreeAim::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.SetShotsLeft
// 0x0004 (0x0004 - 0x0000)
struct BP_FreeAimShooterBattleComponent_C_SetShotsLeft final
{
public:
	int32                                         ShotsLeft_0;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeAimShooterBattleComponent_C_SetShotsLeft) == 0x000004, "Wrong alignment on BP_FreeAimShooterBattleComponent_C_SetShotsLeft");
static_assert(sizeof(BP_FreeAimShooterBattleComponent_C_SetShotsLeft) == 0x000004, "Wrong size on BP_FreeAimShooterBattleComponent_C_SetShotsLeft");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_SetShotsLeft, ShotsLeft_0) == 0x000000, "Member 'BP_FreeAimShooterBattleComponent_C_SetShotsLeft::ShotsLeft_0' has a wrong offset!");

// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.HasUnlimitedShots
// 0x0002 (0x0002 - 0x0000)
struct BP_FreeAimShooterBattleComponent_C_HasUnlimitedShots final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeAimShooterBattleComponent_C_HasUnlimitedShots) == 0x000001, "Wrong alignment on BP_FreeAimShooterBattleComponent_C_HasUnlimitedShots");
static_assert(sizeof(BP_FreeAimShooterBattleComponent_C_HasUnlimitedShots) == 0x000002, "Wrong size on BP_FreeAimShooterBattleComponent_C_HasUnlimitedShots");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_HasUnlimitedShots, ReturnValue) == 0x000000, "Member 'BP_FreeAimShooterBattleComponent_C_HasUnlimitedShots::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_HasUnlimitedShots, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000001, "Member 'BP_FreeAimShooterBattleComponent_C_HasUnlimitedShots::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.HasShotsLeft
// 0x0004 (0x0004 - 0x0000)
struct BP_FreeAimShooterBattleComponent_C_HasShotsLeft final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasUnlimitedShots_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeAimShooterBattleComponent_C_HasShotsLeft) == 0x000001, "Wrong alignment on BP_FreeAimShooterBattleComponent_C_HasShotsLeft");
static_assert(sizeof(BP_FreeAimShooterBattleComponent_C_HasShotsLeft) == 0x000004, "Wrong size on BP_FreeAimShooterBattleComponent_C_HasShotsLeft");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_HasShotsLeft, ReturnValue) == 0x000000, "Member 'BP_FreeAimShooterBattleComponent_C_HasShotsLeft::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_HasShotsLeft, CallFunc_HasUnlimitedShots_ReturnValue) == 0x000001, "Member 'BP_FreeAimShooterBattleComponent_C_HasShotsLeft::CallFunc_HasUnlimitedShots_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_HasShotsLeft, CallFunc_Greater_IntInt_ReturnValue) == 0x000002, "Member 'BP_FreeAimShooterBattleComponent_C_HasShotsLeft::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_HasShotsLeft, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BP_FreeAimShooterBattleComponent_C_HasShotsLeft::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.FireFreeAimProjectile
// 0x0020 (0x0020 - 0x0000)
struct BP_FreeAimShooterBattleComponent_C_FireFreeAimProjectile final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_FreeAimProjectile_Base_C*           CallFunc_PrepareNextFreeAimProjectile_CreatedProjectileActor; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeAimShooterBattleComponent_C_FireFreeAimProjectile) == 0x000008, "Wrong alignment on BP_FreeAimShooterBattleComponent_C_FireFreeAimProjectile");
static_assert(sizeof(BP_FreeAimShooterBattleComponent_C_FireFreeAimProjectile) == 0x000020, "Wrong size on BP_FreeAimShooterBattleComponent_C_FireFreeAimProjectile");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_FireFreeAimProjectile, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_FreeAimShooterBattleComponent_C_FireFreeAimProjectile::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_FireFreeAimProjectile, CallFunc_PrepareNextFreeAimProjectile_CreatedProjectileActor) == 0x000010, "Member 'BP_FreeAimShooterBattleComponent_C_FireFreeAimProjectile::CallFunc_PrepareNextFreeAimProjectile_CreatedProjectileActor' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_FireFreeAimProjectile, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_FreeAimShooterBattleComponent_C_FireFreeAimProjectile::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.PrepareNextFreeAimProjectile
// 0x00E0 (0x00E0 - 0x0000)
struct BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile final
{
public:
	class ABP_FreeAimProjectile_Base_C*           CreatedProjectileActor;                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_FreeAimProjectile_Base_C*           CallFunc_FinishSpawningActor_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_FreeAimProjectile_Battle_C*         K2Node_DynamicCast_AsBP_Free_Aim_Projectile_Battle; // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_GetComponentByClass_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EAttackType                                   CallFunc_GetBaseDamageType_ReturnValue;            // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile) == 0x000010, "Wrong alignment on BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile");
static_assert(sizeof(BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile) == 0x0000E0, "Wrong size on BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile, CreatedProjectileActor) == 0x000000, "Member 'BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile::CreatedProjectileActor' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile, CallFunc_GetOwner_ReturnValue_1) == 0x000010, "Member 'BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile, K2Node_DynamicCast_AsCharacter) == 0x000018, "Member 'BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile, CallFunc_GetSocketLocation_ReturnValue) == 0x000028, "Member 'BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000A0, "Member 'BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000B0, "Member 'BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile, K2Node_DynamicCast_AsBP_Free_Aim_Projectile_Battle) == 0x0000B8, "Member 'BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile::K2Node_DynamicCast_AsBP_Free_Aim_Projectile_Battle' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile, K2Node_DynamicCast_bSuccess_1) == 0x0000C0, "Member 'BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile, CallFunc_GetOwner_ReturnValue_2) == 0x0000C8, "Member 'BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile, CallFunc_GetComponentByClass_ReturnValue) == 0x0000D0, "Member 'BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile, CallFunc_GetBaseDamageType_ReturnValue) == 0x0000D8, "Member 'BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile::CallFunc_GetBaseDamageType_ReturnValue' has a wrong offset!");

// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.HasFreeAimTimeExpired
// 0x0001 (0x0001 - 0x0000)
struct BP_FreeAimShooterBattleComponent_C_HasFreeAimTimeExpired final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeAimShooterBattleComponent_C_HasFreeAimTimeExpired) == 0x000001, "Wrong alignment on BP_FreeAimShooterBattleComponent_C_HasFreeAimTimeExpired");
static_assert(sizeof(BP_FreeAimShooterBattleComponent_C_HasFreeAimTimeExpired) == 0x000001, "Wrong size on BP_FreeAimShooterBattleComponent_C_HasFreeAimTimeExpired");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_HasFreeAimTimeExpired, ReturnValue) == 0x000000, "Member 'BP_FreeAimShooterBattleComponent_C_HasFreeAimTimeExpired::ReturnValue' has a wrong offset!");

// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.Internal_DisableFreeAim
// 0x0001 (0x0001 - 0x0000)
struct BP_FreeAimShooterBattleComponent_C_Internal_DisableFreeAim final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeAimShooterBattleComponent_C_Internal_DisableFreeAim) == 0x000001, "Wrong alignment on BP_FreeAimShooterBattleComponent_C_Internal_DisableFreeAim");
static_assert(sizeof(BP_FreeAimShooterBattleComponent_C_Internal_DisableFreeAim) == 0x000001, "Wrong size on BP_FreeAimShooterBattleComponent_C_Internal_DisableFreeAim");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_Internal_DisableFreeAim, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_FreeAimShooterBattleComponent_C_Internal_DisableFreeAim::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.CancelRegularFreeAim
// 0x0090 (0x0090 - 0x0000)
struct BP_FreeAimShooterBattleComponent_C_CancelRegularFreeAim final
{
public:
	bool                                          CallFunc_CanCancelFreeAim_ReturnValue;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0010)()
};
static_assert(alignof(BP_FreeAimShooterBattleComponent_C_CancelRegularFreeAim) == 0x000008, "Wrong alignment on BP_FreeAimShooterBattleComponent_C_CancelRegularFreeAim");
static_assert(sizeof(BP_FreeAimShooterBattleComponent_C_CancelRegularFreeAim) == 0x000090, "Wrong size on BP_FreeAimShooterBattleComponent_C_CancelRegularFreeAim");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_CancelRegularFreeAim, CallFunc_CanCancelFreeAim_ReturnValue) == 0x000000, "Member 'BP_FreeAimShooterBattleComponent_C_CancelRegularFreeAim::CallFunc_CanCancelFreeAim_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_CancelRegularFreeAim, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BP_FreeAimShooterBattleComponent_C_CancelRegularFreeAim::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_CancelRegularFreeAim, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'BP_FreeAimShooterBattleComponent_C_CancelRegularFreeAim::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_CancelRegularFreeAim, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'BP_FreeAimShooterBattleComponent_C_CancelRegularFreeAim::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_CancelRegularFreeAim, K2Node_MakeArray_Array) == 0x000070, "Member 'BP_FreeAimShooterBattleComponent_C_CancelRegularFreeAim::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_CancelRegularFreeAim, CallFunc_Format_ReturnValue) == 0x000080, "Member 'BP_FreeAimShooterBattleComponent_C_CancelRegularFreeAim::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.EndFreeAim
// 0x0018 (0x0018 - 0x0000)
struct BP_FreeAimShooterBattleComponent_C_EndFreeAim final
{
public:
	EFreeAimType                                  local_LastFreeAimType;                             // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> K2Node_MakeArray_Array;                          // 0x0008(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_FreeAimShooterBattleComponent_C_EndFreeAim) == 0x000008, "Wrong alignment on BP_FreeAimShooterBattleComponent_C_EndFreeAim");
static_assert(sizeof(BP_FreeAimShooterBattleComponent_C_EndFreeAim) == 0x000018, "Wrong size on BP_FreeAimShooterBattleComponent_C_EndFreeAim");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_EndFreeAim, local_LastFreeAimType) == 0x000000, "Member 'BP_FreeAimShooterBattleComponent_C_EndFreeAim::local_LastFreeAimType' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_EndFreeAim, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_FreeAimShooterBattleComponent_C_EndFreeAim::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.EnableFreeAim
// 0x0150 (0x0150 - 0x0000)
struct BP_FreeAimShooterBattleComponent_C_EnableFreeAim final
{
public:
	EFreeAimType                                  FreeAimType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AmmoCount;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TimeLimit;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ProjectileClass_0;                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0048)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0068(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00C0(0x0010)()
	class ABP_FreeAimProjectile_Base_C*           CallFunc_PrepareNextFreeAimProjectile_CreatedProjectileActor; // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00D8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0120(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0130(0x0010)()
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeAimShooterBattleComponent_C_EnableFreeAim) == 0x000008, "Wrong alignment on BP_FreeAimShooterBattleComponent_C_EnableFreeAim");
static_assert(sizeof(BP_FreeAimShooterBattleComponent_C_EnableFreeAim) == 0x000150, "Wrong size on BP_FreeAimShooterBattleComponent_C_EnableFreeAim");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_EnableFreeAim, FreeAimType) == 0x000000, "Member 'BP_FreeAimShooterBattleComponent_C_EnableFreeAim::FreeAimType' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_EnableFreeAim, AmmoCount) == 0x000004, "Member 'BP_FreeAimShooterBattleComponent_C_EnableFreeAim::AmmoCount' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_EnableFreeAim, TimeLimit) == 0x000008, "Member 'BP_FreeAimShooterBattleComponent_C_EnableFreeAim::TimeLimit' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_EnableFreeAim, ProjectileClass_0) == 0x000010, "Member 'BP_FreeAimShooterBattleComponent_C_EnableFreeAim::ProjectileClass_0' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_EnableFreeAim, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'BP_FreeAimShooterBattleComponent_C_EnableFreeAim::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_EnableFreeAim, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000060, "Member 'BP_FreeAimShooterBattleComponent_C_EnableFreeAim::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_EnableFreeAim, K2Node_MakeStruct_FormatArgumentData_1) == 0x000068, "Member 'BP_FreeAimShooterBattleComponent_C_EnableFreeAim::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_EnableFreeAim, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000B0, "Member 'BP_FreeAimShooterBattleComponent_C_EnableFreeAim::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_EnableFreeAim, CallFunc_Conv_StringToText_ReturnValue) == 0x0000C0, "Member 'BP_FreeAimShooterBattleComponent_C_EnableFreeAim::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_EnableFreeAim, CallFunc_PrepareNextFreeAimProjectile_CreatedProjectileActor) == 0x0000D0, "Member 'BP_FreeAimShooterBattleComponent_C_EnableFreeAim::CallFunc_PrepareNextFreeAimProjectile_CreatedProjectileActor' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_EnableFreeAim, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000D8, "Member 'BP_FreeAimShooterBattleComponent_C_EnableFreeAim::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_EnableFreeAim, K2Node_MakeArray_Array) == 0x000120, "Member 'BP_FreeAimShooterBattleComponent_C_EnableFreeAim::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_EnableFreeAim, CallFunc_Format_ReturnValue) == 0x000130, "Member 'BP_FreeAimShooterBattleComponent_C_EnableFreeAim::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_EnableFreeAim, CallFunc_GetTimeSeconds_ReturnValue) == 0x000140, "Member 'BP_FreeAimShooterBattleComponent_C_EnableFreeAim::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_EnableFreeAim, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000148, "Member 'BP_FreeAimShooterBattleComponent_C_EnableFreeAim::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_FreeAimShooterBattleComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeAimShooterBattleComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_FreeAimShooterBattleComponent_C_ReceiveTick");
static_assert(sizeof(BP_FreeAimShooterBattleComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_FreeAimShooterBattleComponent_C_ReceiveTick");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_FreeAimShooterBattleComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.BindFreeAimProjectile
// 0x0008 (0x0008 - 0x0000)
struct BP_FreeAimShooterBattleComponent_C_BindFreeAimProjectile final
{
public:
	class ABP_FreeAimProjectile_Base_C*           Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeAimShooterBattleComponent_C_BindFreeAimProjectile) == 0x000008, "Wrong alignment on BP_FreeAimShooterBattleComponent_C_BindFreeAimProjectile");
static_assert(sizeof(BP_FreeAimShooterBattleComponent_C_BindFreeAimProjectile) == 0x000008, "Wrong size on BP_FreeAimShooterBattleComponent_C_BindFreeAimProjectile");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_BindFreeAimProjectile, Projectile) == 0x000000, "Member 'BP_FreeAimShooterBattleComponent_C_BindFreeAimProjectile::Projectile' has a wrong offset!");

// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.OnFreeAimProjectileHit
// 0x0110 (0x0110 - 0x0000)
struct BP_FreeAimShooterBattleComponent_C_OnFreeAimProjectileHit final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EFreeAimBodyPartType                          BodyPart;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             HitResult;                                         // 0x0010(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UBP_FreeAimTargetPart_C*                TargetBodyPartBP;                                  // 0x0108(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeAimShooterBattleComponent_C_OnFreeAimProjectileHit) == 0x000008, "Wrong alignment on BP_FreeAimShooterBattleComponent_C_OnFreeAimProjectileHit");
static_assert(sizeof(BP_FreeAimShooterBattleComponent_C_OnFreeAimProjectileHit) == 0x000110, "Wrong size on BP_FreeAimShooterBattleComponent_C_OnFreeAimProjectileHit");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_OnFreeAimProjectileHit, Character) == 0x000000, "Member 'BP_FreeAimShooterBattleComponent_C_OnFreeAimProjectileHit::Character' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_OnFreeAimProjectileHit, BodyPart) == 0x000008, "Member 'BP_FreeAimShooterBattleComponent_C_OnFreeAimProjectileHit::BodyPart' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_OnFreeAimProjectileHit, HitResult) == 0x000010, "Member 'BP_FreeAimShooterBattleComponent_C_OnFreeAimProjectileHit::HitResult' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_OnFreeAimProjectileHit, TargetBodyPartBP) == 0x000108, "Member 'BP_FreeAimShooterBattleComponent_C_OnFreeAimProjectileHit::TargetBodyPartBP' has a wrong offset!");

// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.UpdateAimingLocation
// 0x0018 (0x0018 - 0x0000)
struct BP_FreeAimShooterBattleComponent_C_UpdateAimingLocation final
{
public:
	struct FVector                                WorldAimLocation;                                  // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeAimShooterBattleComponent_C_UpdateAimingLocation) == 0x000008, "Wrong alignment on BP_FreeAimShooterBattleComponent_C_UpdateAimingLocation");
static_assert(sizeof(BP_FreeAimShooterBattleComponent_C_UpdateAimingLocation) == 0x000018, "Wrong size on BP_FreeAimShooterBattleComponent_C_UpdateAimingLocation");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_UpdateAimingLocation, WorldAimLocation) == 0x000000, "Member 'BP_FreeAimShooterBattleComponent_C_UpdateAimingLocation::WorldAimLocation' has a wrong offset!");

// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.ExecuteUbergraph_BP_FreeAimShooterBattleComponent
// 0x0250 (0x0250 - 0x0000)
struct BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasFreeAimTimeExpired_ReturnValue;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasFreeAimTimeExpired_ReturnValue_1;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_FreeAimProjectile_Base_C*           K2Node_CustomEvent_Projectile;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_CustomEvent_Character;                      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EFreeAimBodyPartType                          K2Node_CustomEvent_BodyPart;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_HitResult;                      // 0x0030(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UBP_FreeAimTargetPart_C*                K2Node_CustomEvent_TargetBodyPartBP;               // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0148(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0158(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0168(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01B0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0208(0x0010)()
	bool                                          CallFunc_HasShotsLeft_ReturnValue;                 // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasShotsLeft_ReturnValue_1;               // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x021B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_WorldAimLocation;               // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ABP_jRPG_Character_Battle_Base_C* Character, EFreeAimBodyPartType BodyPart, const struct FHitResult& HitResult, class UBP_FreeAimTargetPart_C* TargetBodyPartBP)> K2Node_CreateDelegate_OutputDelegate; // 0x0240(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent) == 0x000008, "Wrong alignment on BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent");
static_assert(sizeof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent) == 0x000250, "Wrong size on BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent, EntryPoint) == 0x000000, "Member 'BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent, CallFunc_HasFreeAimTimeExpired_ReturnValue) == 0x000005, "Member 'BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent::CallFunc_HasFreeAimTimeExpired_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent, CallFunc_Not_PreBool_ReturnValue_1) == 0x000006, "Member 'BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent, K2Node_Event_DeltaSeconds) == 0x00000C, "Member 'BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent, CallFunc_HasFreeAimTimeExpired_ReturnValue_1) == 0x000010, "Member 'BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent::CallFunc_HasFreeAimTimeExpired_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent, K2Node_CustomEvent_Projectile) == 0x000018, "Member 'BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent::K2Node_CustomEvent_Projectile' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent, K2Node_CustomEvent_Character) == 0x000020, "Member 'BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent, K2Node_CustomEvent_BodyPart) == 0x000028, "Member 'BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent::K2Node_CustomEvent_BodyPart' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent, K2Node_CustomEvent_HitResult) == 0x000030, "Member 'BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent::K2Node_CustomEvent_HitResult' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent, K2Node_CustomEvent_TargetBodyPartBP) == 0x000128, "Member 'BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent::K2Node_CustomEvent_TargetBodyPartBP' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent, K2Node_SwitchEnum_CmpSuccess) == 0x000130, "Member 'BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000138, "Member 'BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000148, "Member 'BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent, CallFunc_Conv_StringToText_ReturnValue) == 0x000158, "Member 'BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent, K2Node_MakeStruct_FormatArgumentData) == 0x000168, "Member 'BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001B0, "Member 'BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent, K2Node_MakeArray_Array) == 0x0001F8, "Member 'BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent, CallFunc_Format_ReturnValue) == 0x000208, "Member 'BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent, CallFunc_HasShotsLeft_ReturnValue) == 0x000218, "Member 'BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent::CallFunc_HasShotsLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent, CallFunc_HasShotsLeft_ReturnValue_1) == 0x000219, "Member 'BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent::CallFunc_HasShotsLeft_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent, CallFunc_Not_PreBool_ReturnValue_2) == 0x00021A, "Member 'BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00021B, "Member 'BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent, CallFunc_Add_IntInt_ReturnValue) == 0x00021C, "Member 'BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent, Temp_int_Variable) == 0x000220, "Member 'BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent, Temp_int_Variable_1) == 0x000224, "Member 'BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent, K2Node_CustomEvent_WorldAimLocation) == 0x000228, "Member 'BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent::K2Node_CustomEvent_WorldAimLocation' has a wrong offset!");
static_assert(offsetof(BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000240, "Member 'BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

}

