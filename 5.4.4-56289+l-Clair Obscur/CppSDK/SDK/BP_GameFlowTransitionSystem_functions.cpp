#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameFlowTransitionSystem

#include "Basic.hpp"

#include "BP_GameFlowTransitionSystem_classes.hpp"
#include "BP_GameFlowTransitionSystem_parameters.hpp"


namespace SDK
{

// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.ExecuteUbergraph_BP_GameFlowTransitionSystem
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameFlowTransitionSystem_C::ExecuteUbergraph_BP_GameFlowTransitionSystem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowTransitionSystem_C", "ExecuteUbergraph_BP_GameFlowTransitionSystem");

	Params::BP_GameFlowTransitionSystem_C_ExecuteUbergraph_BP_GameFlowTransitionSystem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.GetFadeAmountDuringFadeOut
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UBP_GameFlowTransitionSystem_C::GetFadeAmountDuringFadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowTransitionSystem_C", "GetFadeAmountDuringFadeOut");

	Params::BP_GameFlowTransitionSystem_C_GetFadeAmountDuringFadeOut Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.GetTransitionPhase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_GameFlowTransitionPhase*              Phase                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameFlowTransitionSystem_C::GetTransitionPhase(E_GameFlowTransitionPhase* Phase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowTransitionSystem_C", "GetTransitionPhase");

	Params::BP_GameFlowTransitionSystem_C_GetTransitionPhase Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Phase != nullptr)
		*Phase = Parms.Phase;
}


// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.HoldTransition
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GameFlowTransitionSystem_C::HoldTransition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowTransitionSystem_C", "HoldTransition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.IsTransitionStateValid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_GameFlowTransitionSystem_C::IsTransitionStateValid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowTransitionSystem_C", "IsTransitionStateValid");

	Params::BP_GameFlowTransitionSystem_C_IsTransitionStateValid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.OnTransitionPhaseChange
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_GameFlowTransitionSystem_C::OnTransitionPhaseChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowTransitionSystem_C", "OnTransitionPhaseChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameFlowTransitionSystem_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowTransitionSystem_C", "ReceiveTick");

	Params::BP_GameFlowTransitionSystem_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.ReleaseTransition
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  OverrideFadeOutTransition                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameFlowTransitionSystem_C::ReleaseTransition(double OverrideFadeOutTransition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowTransitionSystem_C", "ReleaseTransition");

	Params::BP_GameFlowTransitionSystem_C_ReleaseTransition Parms{};

	Parms.OverrideFadeOutTransition = OverrideFadeOutTransition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.RequestTransition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_GameFlowTransitionRequest&TransitionRequest                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameFlowTransitionSystem_C::RequestTransition(const struct FS_GameFlowTransitionRequest& TransitionRequest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowTransitionSystem_C", "RequestTransition");

	Params::BP_GameFlowTransitionSystem_C_RequestTransition Parms{};

	Parms.TransitionRequest = std::move(TransitionRequest);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.SetGameplayPaused
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Paused                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameFlowTransitionSystem_C::SetGameplayPaused(bool Paused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowTransitionSystem_C", "SetGameplayPaused");

	Params::BP_GameFlowTransitionSystem_C_SetGameplayPaused Parms{};

	Parms.Paused = Paused;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.SetIsTransitionInHold
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hold                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameFlowTransitionSystem_C::SetIsTransitionInHold(bool Hold)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowTransitionSystem_C", "SetIsTransitionInHold");

	Params::BP_GameFlowTransitionSystem_C_SetIsTransitionInHold Parms{};

	Parms.Hold = Hold;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.SetTransitionPhase
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_GameFlowTransitionPhase               Phase                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameFlowTransitionSystem_C::SetTransitionPhase(E_GameFlowTransitionPhase Phase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowTransitionSystem_C", "SetTransitionPhase");

	Params::BP_GameFlowTransitionSystem_C_SetTransitionPhase Parms{};

	Parms.Phase = Phase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.StartNewTransition
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_GameFlowTransitionRequest&TransitionRequest                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameFlowTransitionSystem_C::StartNewTransition(const struct FS_GameFlowTransitionRequest& TransitionRequest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowTransitionSystem_C", "StartNewTransition");

	Params::BP_GameFlowTransitionSystem_C_StartNewTransition Parms{};

	Parms.TransitionRequest = std::move(TransitionRequest);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.StopBlackScreenTransition
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_GameFlowTransitionSystem_C::StopBlackScreenTransition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowTransitionSystem_C", "StopBlackScreenTransition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.StopTransitionOfType
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// ES_GameFlowTransitionType               TransitionType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameFlowTransitionSystem_C::StopTransitionOfType(ES_GameFlowTransitionType TransitionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowTransitionSystem_C", "StopTransitionOfType");

	Params::BP_GameFlowTransitionSystem_C_StopTransitionOfType Parms{};

	Parms.TransitionType = TransitionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.UpdateBlackScreenFadeIn
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_GameFlowTransitionSystem_C::UpdateBlackScreenFadeIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowTransitionSystem_C", "UpdateBlackScreenFadeIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.UpdateBlackScreenFadeOut
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_GameFlowTransitionSystem_C::UpdateBlackScreenFadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowTransitionSystem_C", "UpdateBlackScreenFadeOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.UpdateCurrentTransition
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ElapsedSeconds                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameFlowTransitionSystem_C::UpdateCurrentTransition(double ElapsedSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowTransitionSystem_C", "UpdateCurrentTransition");

	Params::BP_GameFlowTransitionSystem_C_UpdateCurrentTransition Parms{};

	Parms.ElapsedSeconds = ElapsedSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.UpdateElapsedTime
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ElapsedSeconds                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameFlowTransitionSystem_C::UpdateElapsedTime(double ElapsedSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowTransitionSystem_C", "UpdateElapsedTime");

	Params::BP_GameFlowTransitionSystem_C_UpdateElapsedTime Parms{};

	Parms.ElapsedSeconds = ElapsedSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.UpdateFadeInOfType
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// ES_GameFlowTransitionType               TransitionType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameFlowTransitionSystem_C::UpdateFadeInOfType(ES_GameFlowTransitionType TransitionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowTransitionSystem_C", "UpdateFadeInOfType");

	Params::BP_GameFlowTransitionSystem_C_UpdateFadeInOfType Parms{};

	Parms.TransitionType = TransitionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.UpdateFadeOutOfType
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// ES_GameFlowTransitionType               TransitionType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameFlowTransitionSystem_C::UpdateFadeOutOfType(ES_GameFlowTransitionType TransitionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowTransitionSystem_C", "UpdateFadeOutOfType");

	Params::BP_GameFlowTransitionSystem_C_UpdateFadeOutOfType Parms{};

	Parms.TransitionType = TransitionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.UpdateFadeOutTransitionOfType
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// ES_GameFlowTransitionType               TransitionType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameFlowTransitionSystem_C::UpdateFadeOutTransitionOfType(ES_GameFlowTransitionType TransitionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowTransitionSystem_C", "UpdateFadeOutTransitionOfType");

	Params::BP_GameFlowTransitionSystem_C_UpdateFadeOutTransitionOfType Parms{};

	Parms.TransitionType = TransitionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.UpdateTransitionSystem
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameFlowTransitionSystem_C::UpdateTransitionSystem(double DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowTransitionSystem_C", "UpdateTransitionSystem");

	Params::BP_GameFlowTransitionSystem_C_UpdateTransitionSystem Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.UpdateWait
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_GameFlowTransitionSystem_C::UpdateWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowTransitionSystem_C", "UpdateWait");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.ValidateTransitionRequest
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_GameFlowTransitionRequest&    TransitionRequest                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameFlowTransitionSystem_C::ValidateTransitionRequest(struct FS_GameFlowTransitionRequest& TransitionRequest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowTransitionSystem_C", "ValidateTransitionRequest");

	Params::BP_GameFlowTransitionSystem_C_ValidateTransitionRequest Parms{};

	Parms.TransitionRequest = std::move(TransitionRequest);

	UObject::ProcessEvent(Func, &Parms);

	TransitionRequest = std::move(Parms.TransitionRequest);
}

}

