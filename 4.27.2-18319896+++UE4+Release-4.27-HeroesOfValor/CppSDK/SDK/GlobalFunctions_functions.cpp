#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GlobalFunctions

#include "Basic.hpp"

#include "GlobalFunctions_classes.hpp"
#include "GlobalFunctions_parameters.hpp"


namespace SDK
{

// Function GlobalFunctions.GlobalFunctions_C.Get PlayerUnitType
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_Units*                                UnitType                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::Get_PlayerUnitType(class APawn* Pawn, class UObject* __WorldContext, E_Units* UnitType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "Get PlayerUnitType");

	Params::GlobalFunctions_C_Get_PlayerUnitType Parms{};

	Parms.Pawn = Pawn;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (UnitType != nullptr)
		*UnitType = Parms.UnitType;
}


// Function GlobalFunctions.GlobalFunctions_C.GetRandomSpawnPoint
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_Flag_C*                       Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsAI                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         SpawnLocation                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator*                        SpawnRotation                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ABP_VehicleBase_C**               VehicleToEnterAfterSpawn                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::GetRandomSpawnPoint(class ABP_Flag_C* Flag, bool IsAI, class UObject* __WorldContext, struct FVector* SpawnLocation, struct FRotator* SpawnRotation, class ABP_VehicleBase_C** VehicleToEnterAfterSpawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetRandomSpawnPoint");

	Params::GlobalFunctions_C_GetRandomSpawnPoint Parms{};

	Parms.Flag = Flag;
	Parms.IsAI = IsAI;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (SpawnLocation != nullptr)
		*SpawnLocation = std::move(Parms.SpawnLocation);

	if (SpawnRotation != nullptr)
		*SpawnRotation = std::move(Parms.SpawnRotation);

	if (VehicleToEnterAfterSpawn != nullptr)
		*VehicleToEnterAfterSpawn = Parms.VehicleToEnterAfterSpawn;
}


// Function GlobalFunctions.GlobalFunctions_C.GetProjectileFireDirection
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UArrowComponent*                  ProjectileStart                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   CameraLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   CameraDirection                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TArray<class AActor*>&            ActorsToIgnore                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FVector&                   ActorLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UseSimpleDirection                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         FinalDirection                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsInstantHit                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult*                      InstantHit                                             (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UGlobalFunctions_C::GetProjectileFireDirection(class UArrowComponent* ProjectileStart, const struct FVector& CameraLocation, const struct FVector& CameraDirection, const TArray<class AActor*>& ActorsToIgnore, const struct FVector& ActorLocation, bool UseSimpleDirection, class UObject* __WorldContext, struct FVector* FinalDirection, float* Distance, bool* IsInstantHit, struct FHitResult* InstantHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetProjectileFireDirection");

	Params::GlobalFunctions_C_GetProjectileFireDirection Parms{};

	Parms.ProjectileStart = ProjectileStart;
	Parms.CameraLocation = std::move(CameraLocation);
	Parms.CameraDirection = std::move(CameraDirection);
	Parms.ActorsToIgnore = std::move(ActorsToIgnore);
	Parms.ActorLocation = std::move(ActorLocation);
	Parms.UseSimpleDirection = UseSimpleDirection;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (FinalDirection != nullptr)
		*FinalDirection = std::move(Parms.FinalDirection);

	if (Distance != nullptr)
		*Distance = Parms.Distance;

	if (IsInstantHit != nullptr)
		*IsInstantHit = Parms.IsInstantHit;

	if (InstantHit != nullptr)
		*InstantHit = std::move(Parms.InstantHit);
}


// Function GlobalFunctions.GlobalFunctions_C.GetCosmeticItemIndex
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FST_Unlockable&            Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  ItemIndex                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::GetCosmeticItemIndex(const struct FST_Unlockable& Item, class UObject* __WorldContext, int32* ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetCosmeticItemIndex");

	Params::GlobalFunctions_C_GetCosmeticItemIndex Parms{};

	Parms.Item = std::move(Item);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ItemIndex != nullptr)
		*ItemIndex = Parms.ItemIndex;
}


// Function GlobalFunctions.GlobalFunctions_C.IsItemUnlocked?
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_UnlockableCategories                  Category                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ItemIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Unlocked                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGlobalFunctions_C::IsItemUnlocked_(E_UnlockableCategories Category, int32 ItemIndex, class UObject* __WorldContext, bool* Unlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "IsItemUnlocked?");

	Params::GlobalFunctions_C_IsItemUnlocked_ Parms{};

	Parms.Category = Category;
	Parms.ItemIndex = ItemIndex;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Unlocked != nullptr)
		*Unlocked = Parms.Unlocked;
}


// Function GlobalFunctions.GlobalFunctions_C.GetCosmeticItemDatatable
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_UnlockableCategories                  Category                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDataTable**                      NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::GetCosmeticItemDatatable(E_UnlockableCategories Category, class UObject* __WorldContext, class UDataTable** NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetCosmeticItemDatatable");

	Params::GlobalFunctions_C_GetCosmeticItemDatatable Parms{};

	Parms.Category = Category;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function GlobalFunctions.GlobalFunctions_C.DisplayDamageNumber
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   WorldPosition                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DamageAmount                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CriticalHit_                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsLow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// E_DamageTypes                           DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::DisplayDamageNumber(const struct FVector& WorldPosition, int32 DamageAmount, bool CriticalHit_, class AActor* HitActor, bool IsLow, E_DamageTypes DamageType, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "DisplayDamageNumber");

	Params::GlobalFunctions_C_DisplayDamageNumber Parms{};

	Parms.WorldPosition = std::move(WorldPosition);
	Parms.DamageAmount = DamageAmount;
	Parms.CriticalHit_ = CriticalHit_;
	Parms.HitActor = HitActor;
	Parms.IsLow = IsLow;
	Parms.DamageType = DamageType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function GlobalFunctions.GlobalFunctions_C.GetPawnData
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           PawnActor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_Teams*                                Team                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  PlayerIndex                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FST_PlayerStats*                 PlayerStats                                            (Parm, OutParm, HasGetValueTypeHash)
// class UPawnDataComponent_C**            PawnDataComponent                                      (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::GetPawnData(class AActor* PawnActor, class UObject* __WorldContext, E_Teams* Team, int32* PlayerIndex, struct FST_PlayerStats* PlayerStats, class UPawnDataComponent_C** PawnDataComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetPawnData");

	Params::GlobalFunctions_C_GetPawnData Parms{};

	Parms.PawnActor = PawnActor;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Team != nullptr)
		*Team = Parms.Team;

	if (PlayerIndex != nullptr)
		*PlayerIndex = Parms.PlayerIndex;

	if (PlayerStats != nullptr)
		*PlayerStats = std::move(Parms.PlayerStats);

	if (PawnDataComponent != nullptr)
		*PawnDataComponent = Parms.PawnDataComponent;
}


// Function GlobalFunctions.GlobalFunctions_C.EnterUIModus
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::EnterUIModus(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "EnterUIModus");

	Params::GlobalFunctions_C_EnterUIModus Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function GlobalFunctions.GlobalFunctions_C.EnterGameModus
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::EnterGameModus(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "EnterGameModus");

	Params::GlobalFunctions_C_EnterGameModus Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function GlobalFunctions.GlobalFunctions_C.InflictDamage
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class AActor*&                    HitActor                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DamageAmount                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_DamageTypes                           DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TArray<class AActor*>&            AlreadyHitActors                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    FromServer                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   DamageDirection                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            AttackerPawn                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           BuffDebuff                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PlayerIndex_Attacker_                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IgnoreTeamProtection                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const class FText&                      SpecialKillMessage                                     (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    ShouldBreakInvisibility                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsCriticalHit                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsPiercingDamage                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::InflictDamage(const class AActor*& HitActor, const struct FVector& HitLocation, int32 DamageAmount, E_DamageTypes DamageType, const TArray<class AActor*>& AlreadyHitActors, bool FromServer, const struct FVector& DamageDirection, class APawn* AttackerPawn, class UClass* BuffDebuff, int32 PlayerIndex_Attacker_, bool IgnoreTeamProtection, const class FText& SpecialKillMessage, bool ShouldBreakInvisibility, bool IsCriticalHit, bool IsPiercingDamage, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "InflictDamage");

	Params::GlobalFunctions_C_InflictDamage Parms{};

	Parms.HitActor = HitActor;
	Parms.HitLocation = std::move(HitLocation);
	Parms.DamageAmount = DamageAmount;
	Parms.DamageType = DamageType;
	Parms.AlreadyHitActors = std::move(AlreadyHitActors);
	Parms.FromServer = FromServer;
	Parms.DamageDirection = std::move(DamageDirection);
	Parms.AttackerPawn = AttackerPawn;
	Parms.BuffDebuff = BuffDebuff;
	Parms.PlayerIndex_Attacker_ = PlayerIndex_Attacker_;
	Parms.IgnoreTeamProtection = IgnoreTeamProtection;
	Parms.SpecialKillMessage = std::move(SpecialKillMessage);
	Parms.ShouldBreakInvisibility = ShouldBreakInvisibility;
	Parms.IsCriticalHit = IsCriticalHit;
	Parms.IsPiercingDamage = IsPiercingDamage;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function GlobalFunctions.GlobalFunctions_C.InflictAOEDamage
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   AOELocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AOERadius                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_DamageTypes                           DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TArray<class AActor*>&            AlreadyHitActors                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FVector&                   DamageDirection                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            AttackerPawn                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           BuffDebuff                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FromServer                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   DamageAmount                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Debug                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      SpecialKillMessage                                     (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    EnableLaunch                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   LaunchForce                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IgnoreAOERadius_AlwaysDealFullDMG_                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FHitResult&                ExtraHit_optional_                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::InflictAOEDamage(const struct FVector& AOELocation, float AOERadius, E_DamageTypes DamageType, const TArray<class AActor*>& AlreadyHitActors, const struct FVector& DamageDirection, class APawn* AttackerPawn, class UClass* BuffDebuff, bool FromServer, int32 DamageAmount, bool Debug, int32 PlayerIndex, const class FText& SpecialKillMessage, bool EnableLaunch, float LaunchForce, bool IgnoreAOERadius_AlwaysDealFullDMG_, const struct FHitResult& ExtraHit_optional_, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "InflictAOEDamage");

	Params::GlobalFunctions_C_InflictAOEDamage Parms{};

	Parms.AOELocation = std::move(AOELocation);
	Parms.AOERadius = AOERadius;
	Parms.DamageType = DamageType;
	Parms.AlreadyHitActors = std::move(AlreadyHitActors);
	Parms.DamageDirection = std::move(DamageDirection);
	Parms.AttackerPawn = AttackerPawn;
	Parms.BuffDebuff = BuffDebuff;
	Parms.FromServer = FromServer;
	Parms.DamageAmount = DamageAmount;
	Parms.Debug = Debug;
	Parms.PlayerIndex = PlayerIndex;
	Parms.SpecialKillMessage = std::move(SpecialKillMessage);
	Parms.EnableLaunch = EnableLaunch;
	Parms.LaunchForce = LaunchForce;
	Parms.IgnoreAOERadius_AlwaysDealFullDMG_ = IgnoreAOERadius_AlwaysDealFullDMG_;
	Parms.ExtraHit_optional_ = std::move(ExtraHit_optional_);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function GlobalFunctions.GlobalFunctions_C.GetRandomTeamFlag
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_Teams                                 Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_Flag_C**                      Flag                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::GetRandomTeamFlag(E_Teams Team, class UObject* __WorldContext, class ABP_Flag_C** Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetRandomTeamFlag");

	Params::GlobalFunctions_C_GetRandomTeamFlag Parms{};

	Parms.Team = Team;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Flag != nullptr)
		*Flag = Parms.Flag;
}


// Function GlobalFunctions.GlobalFunctions_C.GetAllPlayerUnitsProgress
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FST_UnitProgress>*        UnitProgress                                           (Parm, OutParm)

void UGlobalFunctions_C::GetAllPlayerUnitsProgress(class UObject* __WorldContext, TArray<struct FST_UnitProgress>* UnitProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetAllPlayerUnitsProgress");

	Params::GlobalFunctions_C_GetAllPlayerUnitsProgress Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (UnitProgress != nullptr)
		*UnitProgress = std::move(Parms.UnitProgress);
}


// Function GlobalFunctions.GlobalFunctions_C.GetPlayerUnitProgress
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_Units                                 Class_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_Teams                                 Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FST_UnitProgress*                Progress                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UGlobalFunctions_C::GetPlayerUnitProgress(E_Units Class_0, E_Teams Team, class UObject* __WorldContext, struct FST_UnitProgress* Progress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetPlayerUnitProgress");

	Params::GlobalFunctions_C_GetPlayerUnitProgress Parms{};

	Parms.Class_0 = Class_0;
	Parms.Team = Team;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Progress != nullptr)
		*Progress = std::move(Parms.Progress);
}


// Function GlobalFunctions.GlobalFunctions_C.ApplyWeaponSkin
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FST_Unlockable&            Cosmetic                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UStaticMeshComponent*             MeshComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    MainlyWoodenWeapon                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::ApplyWeaponSkin(const struct FST_Unlockable& Cosmetic, class UStaticMeshComponent* MeshComponent, bool MainlyWoodenWeapon, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "ApplyWeaponSkin");

	Params::GlobalFunctions_C_ApplyWeaponSkin Parms{};

	Parms.Cosmetic = std::move(Cosmetic);
	Parms.MeshComponent = MeshComponent;
	Parms.MainlyWoodenWeapon = MainlyWoodenWeapon;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function GlobalFunctions.GlobalFunctions_C.GetCosmeticItemStruct
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_UnlockableCategories                  Category                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FST_Unlockable*                  Item                                                   (Parm, OutParm, HasGetValueTypeHash)

void UGlobalFunctions_C::GetCosmeticItemStruct(int32 Index_0, E_UnlockableCategories Category, class UObject* __WorldContext, struct FST_Unlockable* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetCosmeticItemStruct");

	Params::GlobalFunctions_C_GetCosmeticItemStruct Parms{};

	Parms.Index_0 = Index_0;
	Parms.Category = Category;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Item != nullptr)
		*Item = std::move(Parms.Item);
}


// Function GlobalFunctions.GlobalFunctions_C.LevelableUnitsAPICallsList
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FString>*                  Units                                                  (Parm, OutParm)

void UGlobalFunctions_C::LevelableUnitsAPICallsList(class UObject* __WorldContext, TArray<class FString>* Units)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "LevelableUnitsAPICallsList");

	Params::GlobalFunctions_C_LevelableUnitsAPICallsList Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Units != nullptr)
		*Units = std::move(Parms.Units);
}


// Function GlobalFunctions.GlobalFunctions_C.GetUnitLevel
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FST_UnitProgress&          UnitProgress                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  Level                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  RequiredXPForNextLevel                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  CurrentXPAmountProgress                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::GetUnitLevel(const struct FST_UnitProgress& UnitProgress, class UObject* __WorldContext, int32* Level, int32* RequiredXPForNextLevel, int32* CurrentXPAmountProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetUnitLevel");

	Params::GlobalFunctions_C_GetUnitLevel Parms{};

	Parms.UnitProgress = std::move(UnitProgress);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Level != nullptr)
		*Level = Parms.Level;

	if (RequiredXPForNextLevel != nullptr)
		*RequiredXPForNextLevel = Parms.RequiredXPForNextLevel;

	if (CurrentXPAmountProgress != nullptr)
		*CurrentXPAmountProgress = Parms.CurrentXPAmountProgress;
}


// Function GlobalFunctions.GlobalFunctions_C.GetLevelFromXP
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   XPAmount                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  Level                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  RequiredXPForNextLevel                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  CurrentXPAmountProgress                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::GetLevelFromXP(int32 XPAmount, class UObject* __WorldContext, int32* Level, int32* RequiredXPForNextLevel, int32* CurrentXPAmountProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetLevelFromXP");

	Params::GlobalFunctions_C_GetLevelFromXP Parms{};

	Parms.XPAmount = XPAmount;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Level != nullptr)
		*Level = Parms.Level;

	if (RequiredXPForNextLevel != nullptr)
		*RequiredXPForNextLevel = Parms.RequiredXPForNextLevel;

	if (CurrentXPAmountProgress != nullptr)
		*CurrentXPAmountProgress = Parms.CurrentXPAmountProgress;
}


// Function GlobalFunctions.GlobalFunctions_C.GetPlayerRankTitle
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   TotalLevel                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString*                          Rank                                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UGlobalFunctions_C::GetPlayerRankTitle(int32 TotalLevel, class UObject* __WorldContext, class FString* Rank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetPlayerRankTitle");

	Params::GlobalFunctions_C_GetPlayerRankTitle Parms{};

	Parms.TotalLevel = TotalLevel;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Rank != nullptr)
		*Rank = std::move(Parms.Rank);
}


// Function GlobalFunctions.GlobalFunctions_C.GetPlayerRank
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  PlayerRank                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::GetPlayerRank(class UObject* __WorldContext, int32* PlayerRank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetPlayerRank");

	Params::GlobalFunctions_C_GetPlayerRank Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (PlayerRank != nullptr)
		*PlayerRank = Parms.PlayerRank;
}


// Function GlobalFunctions.GlobalFunctions_C.GetRequiredXPForLevel
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UGlobalFunctions_C::GetRequiredXPForLevel(int32 Level, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetRequiredXPForLevel");

	Params::GlobalFunctions_C_GetRequiredXPForLevel Parms{};

	Parms.Level = Level;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GlobalFunctions.GlobalFunctions_C.GetTotalPlayerScore
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  TotalScore                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::GetTotalPlayerScore(class UObject* __WorldContext, int32* TotalScore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetTotalPlayerScore");

	Params::GlobalFunctions_C_GetTotalPlayerScore Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (TotalScore != nullptr)
		*TotalScore = Parms.TotalScore;
}


// Function GlobalFunctions.GlobalFunctions_C.GetPlayerStats
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FST_PlayerStats*                 Stats                                                  (Parm, OutParm, HasGetValueTypeHash)

void UGlobalFunctions_C::GetPlayerStats(int32 PlayerIndex, class UObject* __WorldContext, struct FST_PlayerStats* Stats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetPlayerStats");

	Params::GlobalFunctions_C_GetPlayerStats Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Stats != nullptr)
		*Stats = std::move(Parms.Stats);
}


// Function GlobalFunctions.GlobalFunctions_C.Global Game Settings
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  AI_CommandoDetectRange                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  GravityAmount                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  Camera_FOV                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::Global_Game_Settings(class UObject* __WorldContext, float* AI_CommandoDetectRange, float* GravityAmount, float* Camera_FOV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "Global Game Settings");

	Params::GlobalFunctions_C_Global_Game_Settings Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (AI_CommandoDetectRange != nullptr)
		*AI_CommandoDetectRange = Parms.AI_CommandoDetectRange;

	if (GravityAmount != nullptr)
		*GravityAmount = Parms.GravityAmount;

	if (Camera_FOV != nullptr)
		*Camera_FOV = Parms.Camera_FOV;
}


// Function GlobalFunctions.GlobalFunctions_C.GetOptions
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FST_Options*                     Options                                                (Parm, OutParm, HasGetValueTypeHash)

void UGlobalFunctions_C::GetOptions(class UObject* __WorldContext, struct FST_Options* Options)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetOptions");

	Params::GlobalFunctions_C_GetOptions Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Options != nullptr)
		*Options = std::move(Parms.Options);
}


// Function GlobalFunctions.GlobalFunctions_C.ApplyCharacterCustomization
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FST_CharacterCustomization&Customization                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           FacialHair                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           CharacterMesh                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStaticMeshComponent*             Hat                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStaticMeshComponent*             HatExtras                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           Legs                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStaticMeshComponent*             UpperFace                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           Torso                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStaticMeshComponent*             LowerFace                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           Back                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           Feet                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic**        LegsMID                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic**        CharacterMID                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UMaterialInstanceDynamic*>*HatItemMIDs                                            (Parm, OutParm)
// TArray<class UMaterialInstanceDynamic*>*TorsoMIDs                                              (Parm, OutParm)

void UGlobalFunctions_C::ApplyCharacterCustomization(const struct FST_CharacterCustomization& Customization, class USkeletalMeshComponent* FacialHair, class USkeletalMeshComponent* CharacterMesh, class UStaticMeshComponent* Hat, class UStaticMeshComponent* HatExtras, class USkeletalMeshComponent* Legs, class UStaticMeshComponent* UpperFace, class USkeletalMeshComponent* Torso, class UStaticMeshComponent* LowerFace, class USkeletalMeshComponent* Back, class USkeletalMeshComponent* Feet, class UObject* __WorldContext, class UMaterialInstanceDynamic** LegsMID, class UMaterialInstanceDynamic** CharacterMID, TArray<class UMaterialInstanceDynamic*>* HatItemMIDs, TArray<class UMaterialInstanceDynamic*>* TorsoMIDs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "ApplyCharacterCustomization");

	Params::GlobalFunctions_C_ApplyCharacterCustomization Parms{};

	Parms.Customization = std::move(Customization);
	Parms.FacialHair = FacialHair;
	Parms.CharacterMesh = CharacterMesh;
	Parms.Hat = Hat;
	Parms.HatExtras = HatExtras;
	Parms.Legs = Legs;
	Parms.UpperFace = UpperFace;
	Parms.Torso = Torso;
	Parms.LowerFace = LowerFace;
	Parms.Back = Back;
	Parms.Feet = Feet;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (LegsMID != nullptr)
		*LegsMID = Parms.LegsMID;

	if (CharacterMID != nullptr)
		*CharacterMID = Parms.CharacterMID;

	if (HatItemMIDs != nullptr)
		*HatItemMIDs = std::move(Parms.HatItemMIDs);

	if (TorsoMIDs != nullptr)
		*TorsoMIDs = std::move(Parms.TorsoMIDs);
}


// Function GlobalFunctions.GlobalFunctions_C.GetClassAndTeamUnitIndex
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_Units                                 Class_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_Teams                                 Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::GetClassAndTeamUnitIndex(E_Units Class_0, E_Teams Team, class UObject* __WorldContext, int32* Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetClassAndTeamUnitIndex");

	Params::GlobalFunctions_C_GetClassAndTeamUnitIndex Parms{};

	Parms.Class_0 = Class_0;
	Parms.Team = Team;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}


// Function GlobalFunctions.GlobalFunctions_C.IncreaseStat
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Stat                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   IncreaseAmount                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGlobalFunctions_C::IncreaseStat(const class FString& Stat, int32 IncreaseAmount, class UObject* __WorldContext, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "IncreaseStat");

	Params::GlobalFunctions_C_IncreaseStat Parms{};

	Parms.Stat = std::move(Stat);
	Parms.IncreaseAmount = IncreaseAmount;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function GlobalFunctions.GlobalFunctions_C.GetEventRewardFromScore
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Score                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  Amount                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::GetEventRewardFromScore(int32 Score, class UObject* __WorldContext, int32* Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetEventRewardFromScore");

	Params::GlobalFunctions_C_GetEventRewardFromScore Parms{};

	Parms.Score = Score;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Amount != nullptr)
		*Amount = Parms.Amount;
}


// Function GlobalFunctions.GlobalFunctions_C.GetAOEObstacleHitAmount
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   AOEOriginLocation                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  DamageAmount_0_1_                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::GetAOEObstacleHitAmount(class AActor* HitActor, const struct FVector& AOEOriginLocation, class UObject* __WorldContext, float* DamageAmount_0_1_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetAOEObstacleHitAmount");

	Params::GlobalFunctions_C_GetAOEObstacleHitAmount Parms{};

	Parms.HitActor = HitActor;
	Parms.AOEOriginLocation = std::move(AOEOriginLocation);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (DamageAmount_0_1_ != nullptr)
		*DamageAmount_0_1_ = Parms.DamageAmount_0_1_;
}


// Function GlobalFunctions.GlobalFunctions_C.Get Unit Character Customization
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FST_SelectedCosmeticItems& SelectedCosmeticItems                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// int32                                   UnitIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FST_CharacterCustomization*      CharacterCustomization                                 (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::Get_Unit_Character_Customization(const struct FST_SelectedCosmeticItems& SelectedCosmeticItems, int32 UnitIndex, class UObject* __WorldContext, struct FST_CharacterCustomization* CharacterCustomization)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "Get Unit Character Customization");

	Params::GlobalFunctions_C_Get_Unit_Character_Customization Parms{};

	Parms.SelectedCosmeticItems = std::move(SelectedCosmeticItems);
	Parms.UnitIndex = UnitIndex;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (CharacterCustomization != nullptr)
		*CharacterCustomization = std::move(Parms.CharacterCustomization);
}


// Function GlobalFunctions.GlobalFunctions_C.GetSteamItemUnlockedState
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ItemIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Unlocked                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32*                                  Quantity                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::GetSteamItemUnlockedState(int32 ItemIndex, class UObject* __WorldContext, bool* Unlocked, int32* Quantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetSteamItemUnlockedState");

	Params::GlobalFunctions_C_GetSteamItemUnlockedState Parms{};

	Parms.ItemIndex = ItemIndex;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Unlocked != nullptr)
		*Unlocked = Parms.Unlocked;

	if (Quantity != nullptr)
		*Quantity = Parms.Quantity;
}


// Function GlobalFunctions.GlobalFunctions_C.CheckIfPawnIsAlive
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Alive                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGlobalFunctions_C::CheckIfPawnIsAlive(class APawn* Pawn, class UObject* __WorldContext, bool* Alive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "CheckIfPawnIsAlive");

	Params::GlobalFunctions_C_CheckIfPawnIsAlive Parms{};

	Parms.Pawn = Pawn;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Alive != nullptr)
		*Alive = Parms.Alive;
}


// Function GlobalFunctions.GlobalFunctions_C.GetMapCenter
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         MapCenterLocation                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGlobalFunctions_C::GetMapCenter(class UObject* __WorldContext, struct FVector* MapCenterLocation, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetMapCenter");

	Params::GlobalFunctions_C_GetMapCenter Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (MapCenterLocation != nullptr)
		*MapCenterLocation = std::move(Parms.MapCenterLocation);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function GlobalFunctions.GlobalFunctions_C.GetTruePawnLocation
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         PawnLocation                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::GetTruePawnLocation(class APawn* Pawn, class UObject* __WorldContext, struct FVector* PawnLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetTruePawnLocation");

	Params::GlobalFunctions_C_GetTruePawnLocation Parms{};

	Parms.Pawn = Pawn;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (PawnLocation != nullptr)
		*PawnLocation = std::move(Parms.PawnLocation);
}


// Function GlobalFunctions.GlobalFunctions_C.GetCharacterDamageBuffDebuff
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_Character_C*                  Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass**                          BuffDebuff                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::GetCharacterDamageBuffDebuff(class ABP_Character_C* Character, class UObject* __WorldContext, class UClass** BuffDebuff)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetCharacterDamageBuffDebuff");

	Params::GlobalFunctions_C_GetCharacterDamageBuffDebuff Parms{};

	Parms.Character = Character;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (BuffDebuff != nullptr)
		*BuffDebuff = Parms.BuffDebuff;
}


// Function GlobalFunctions.GlobalFunctions_C.InitOptions
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::InitOptions(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "InitOptions");

	Params::GlobalFunctions_C_InitOptions Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function GlobalFunctions.GlobalFunctions_C.RemovePlayerFromGame
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::RemovePlayerFromGame(class APlayerState* PlayerState, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "RemovePlayerFromGame");

	Params::GlobalFunctions_C_RemovePlayerFromGame Parms{};

	Parms.PlayerState = PlayerState;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function GlobalFunctions.GlobalFunctions_C.CheckIfOnCommunityBanList
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   OnList                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGlobalFunctions_C::CheckIfOnCommunityBanList(class APlayerState* PlayerState, class UObject* __WorldContext, bool* OnList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "CheckIfOnCommunityBanList");

	Params::GlobalFunctions_C_CheckIfOnCommunityBanList Parms{};

	Parms.PlayerState = PlayerState;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (OnList != nullptr)
		*OnList = Parms.OnList;
}


// Function GlobalFunctions.GlobalFunctions_C.GetPlayerControllerFromPlayerState
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController**               PlayerController                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::GetPlayerControllerFromPlayerState(class APlayerState* PlayerState, class UObject* __WorldContext, class APlayerController** PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetPlayerControllerFromPlayerState");

	Params::GlobalFunctions_C_GetPlayerControllerFromPlayerState Parms{};

	Parms.PlayerState = PlayerState;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (PlayerController != nullptr)
		*PlayerController = Parms.PlayerController;
}

}

