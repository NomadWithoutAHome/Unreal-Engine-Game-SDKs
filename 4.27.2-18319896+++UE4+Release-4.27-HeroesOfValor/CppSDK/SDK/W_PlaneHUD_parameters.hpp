#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PlaneHUD

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function W_PlaneHUD.W_PlaneHUD_C.ExecuteUbergraph_W_PlaneHUD
// 0x01E0 (0x01E0 - 0x0000)
struct W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Controller_C*                       K2Node_DynamicCast_AsBP_Controller;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlaneBase_C*                        K2Node_DynamicCast_AsBP_Plane_Base;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87[0x1];                                       // 0x0087(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputActionKeyMapping>         CallFunc_GetActionMappingByName_OutMappings;       // 0x0090(0x0010)(ReferenceParm)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item;                           // 0x00A8(0x0028)()
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x00D0(0x0018)()
	class FText                                   CallFunc_FormatKeybindName_ReturnValue;            // 0x00E8(0x0018)()
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_1;           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputActionKeyMapping>         CallFunc_GetActionMappingByName_OutMappings_1;     // 0x0108(0x0010)(ReferenceParm)
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_2;           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item_1;                         // 0x0120(0x0028)()
	TArray<struct FInputActionKeyMapping>         CallFunc_GetActionMappingByName_OutMappings_2;     // 0x0148(0x0010)(ReferenceParm)
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item_2;                         // 0x0158(0x0028)()
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue_1;         // 0x0180(0x0018)()
	class FText                                   CallFunc_FormatKeybindName_ReturnValue_1;          // 0x0198(0x0018)()
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue_2;         // 0x01B0(0x0018)()
	class FText                                   CallFunc_FormatKeybindName_ReturnValue_2;          // 0x01C8(0x0018)()
};
static_assert(alignof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD) == 0x000008, "Wrong alignment on W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD");
static_assert(sizeof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD) == 0x0001E0, "Wrong size on W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, EntryPoint) == 0x000000, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, K2Node_Event_MyGeometry) == 0x000004, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, CallFunc_GetPlayerController_ReturnValue) == 0x000040, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, K2Node_DynamicCast_AsBP_Controller) == 0x000048, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::K2Node_DynamicCast_AsBP_Controller' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, CallFunc_K2_GetPawn_ReturnValue) == 0x000058, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, K2Node_DynamicCast_AsBP_Plane_Base) == 0x000060, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::K2Node_DynamicCast_AsBP_Plane_Base' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00006C, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, CallFunc_Not_PreBool_ReturnValue) == 0x000070, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, CallFunc_SelectInt_ReturnValue) == 0x000074, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000078, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, CallFunc_Add_FloatFloat_ReturnValue) == 0x00007C, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, CallFunc_MapRangeClamped_ReturnValue) == 0x000080, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, Temp_bool_Has_Been_Initd_Variable) == 0x000084, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, Temp_bool_Has_Been_Initd_Variable_1) == 0x000085, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, Temp_bool_IsClosed_Variable) == 0x000086, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, CallFunc_GetInputSettings_ReturnValue) == 0x000088, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, CallFunc_GetActionMappingByName_OutMappings) == 0x000090, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::CallFunc_GetActionMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, Temp_bool_IsClosed_Variable_1) == 0x0000A0, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, CallFunc_Key_GetDisplayName_ReturnValue) == 0x0000D0, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, CallFunc_FormatKeybindName_ReturnValue) == 0x0000E8, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::CallFunc_FormatKeybindName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, CallFunc_GetInputSettings_ReturnValue_1) == 0x000100, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::CallFunc_GetInputSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, CallFunc_GetActionMappingByName_OutMappings_1) == 0x000108, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::CallFunc_GetActionMappingByName_OutMappings_1' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, CallFunc_GetInputSettings_ReturnValue_2) == 0x000118, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::CallFunc_GetInputSettings_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, CallFunc_Array_Get_Item_1) == 0x000120, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, CallFunc_GetActionMappingByName_OutMappings_2) == 0x000148, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::CallFunc_GetActionMappingByName_OutMappings_2' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, CallFunc_Array_Get_Item_2) == 0x000158, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, CallFunc_Key_GetDisplayName_ReturnValue_1) == 0x000180, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::CallFunc_Key_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, CallFunc_FormatKeybindName_ReturnValue_1) == 0x000198, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::CallFunc_FormatKeybindName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, CallFunc_Key_GetDisplayName_ReturnValue_2) == 0x0001B0, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::CallFunc_Key_GetDisplayName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD, CallFunc_FormatKeybindName_ReturnValue_2) == 0x0001C8, "Member 'W_PlaneHUD_C_ExecuteUbergraph_W_PlaneHUD::CallFunc_FormatKeybindName_ReturnValue_2' has a wrong offset!");

// Function W_PlaneHUD.W_PlaneHUD_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_PlaneHUD_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlaneHUD_C_Tick) == 0x000004, "Wrong alignment on W_PlaneHUD_C_Tick");
static_assert(sizeof(W_PlaneHUD_C_Tick) == 0x00003C, "Wrong size on W_PlaneHUD_C_Tick");
static_assert(offsetof(W_PlaneHUD_C_Tick, MyGeometry) == 0x000000, "Member 'W_PlaneHUD_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_Tick, InDeltaTime) == 0x000038, "Member 'W_PlaneHUD_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_PlaneHUD.W_PlaneHUD_C.SetMGBorderColor
// 0x0020 (0x0020 - 0x0000)
struct W_PlaneHUD_C_SetMGBorderColor final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlaneHUD_C_SetMGBorderColor) == 0x000004, "Wrong alignment on W_PlaneHUD_C_SetMGBorderColor");
static_assert(sizeof(W_PlaneHUD_C_SetMGBorderColor) == 0x000020, "Wrong size on W_PlaneHUD_C_SetMGBorderColor");
static_assert(offsetof(W_PlaneHUD_C_SetMGBorderColor, ReturnValue) == 0x000000, "Member 'W_PlaneHUD_C_SetMGBorderColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_SetMGBorderColor, CallFunc_SelectColor_ReturnValue) == 0x000010, "Member 'W_PlaneHUD_C_SetMGBorderColor::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

// Function W_PlaneHUD.W_PlaneHUD_C.SetSpeedBoostBorderColor
// 0x0020 (0x0020 - 0x0000)
struct W_PlaneHUD_C_SetSpeedBoostBorderColor final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlaneHUD_C_SetSpeedBoostBorderColor) == 0x000004, "Wrong alignment on W_PlaneHUD_C_SetSpeedBoostBorderColor");
static_assert(sizeof(W_PlaneHUD_C_SetSpeedBoostBorderColor) == 0x000020, "Wrong size on W_PlaneHUD_C_SetSpeedBoostBorderColor");
static_assert(offsetof(W_PlaneHUD_C_SetSpeedBoostBorderColor, ReturnValue) == 0x000000, "Member 'W_PlaneHUD_C_SetSpeedBoostBorderColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlaneHUD_C_SetSpeedBoostBorderColor, CallFunc_SelectColor_ReturnValue) == 0x000010, "Member 'W_PlaneHUD_C_SetSpeedBoostBorderColor::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

}

