#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PowderKegProjectile

#include "Basic.hpp"

#include "BP_PowderKegProjectile_classes.hpp"
#include "BP_PowderKegProjectile_parameters.hpp"


namespace SDK
{

// Function BP_PowderKegProjectile.BP_PowderKegProjectile_C.ExecuteUbergraph_BP_PowderKegProjectile
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PowderKegProjectile_C::ExecuteUbergraph_BP_PowderKegProjectile(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PowderKegProjectile_C", "ExecuteUbergraph_BP_PowderKegProjectile");

	Params::BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PowderKegProjectile.BP_PowderKegProjectile_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_PowderKegProjectile_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PowderKegProjectile_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PowderKegProjectile.BP_PowderKegProjectile_C.MC_HitEffect
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PowderKegProjectile_C::MC_HitEffect(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PowderKegProjectile_C", "MC_HitEffect");

	Params::BP_PowderKegProjectile_C_MC_HitEffect Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PowderKegProjectile.BP_PowderKegProjectile_C.ApplyDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DamageAmount_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   DamageHitLocation                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   DamageDirection                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            AttackerPawn                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Debuff                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_DamageTypes                           DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsCriticalHit                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IgnoreTeamProtection                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const class FText&                      SpecialKillMessage_0                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    ShouldBreakInvisibility                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsPiercingDamage_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PowderKegProjectile_C::ApplyDamage(int32 DamageAmount_0, const struct FVector& DamageHitLocation, const struct FVector& DamageDirection, class APawn* AttackerPawn, class UClass* Debuff, E_DamageTypes DamageType, int32 PlayerIndex, bool IsCriticalHit, bool IgnoreTeamProtection, const class FText& SpecialKillMessage_0, bool ShouldBreakInvisibility, bool IsPiercingDamage_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PowderKegProjectile_C", "ApplyDamage");

	Params::BP_PowderKegProjectile_C_ApplyDamage Parms{};

	Parms.DamageAmount_0 = DamageAmount_0;
	Parms.DamageHitLocation = std::move(DamageHitLocation);
	Parms.DamageDirection = std::move(DamageDirection);
	Parms.AttackerPawn = AttackerPawn;
	Parms.Debuff = Debuff;
	Parms.DamageType = DamageType;
	Parms.PlayerIndex = PlayerIndex;
	Parms.IsCriticalHit = IsCriticalHit;
	Parms.IgnoreTeamProtection = IgnoreTeamProtection;
	Parms.SpecialKillMessage_0 = std::move(SpecialKillMessage_0);
	Parms.ShouldBreakInvisibility = ShouldBreakInvisibility;
	Parms.IsPiercingDamage_0 = IsPiercingDamage_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PowderKegProjectile.BP_PowderKegProjectile_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_PowderKegProjectile_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PowderKegProjectile_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PowderKegProjectile.BP_PowderKegProjectile_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void ABP_PowderKegProjectile_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PowderKegProjectile_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PowderKegProjectile.BP_PowderKegProjectile_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void ABP_PowderKegProjectile_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PowderKegProjectile_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}

}

