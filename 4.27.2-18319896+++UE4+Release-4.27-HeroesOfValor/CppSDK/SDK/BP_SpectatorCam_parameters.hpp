#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SpectatorCam

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_SpectatorCam.BP_SpectatorCam_C.ExecuteUbergraph_BP_SpectatorCam
// 0x0230 (0x0230 - 0x0000)
struct BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisKeyEvent_AxisValue_1;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        CallFunc_Array_Random_OutItem;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisKeyEvent_AxisValue;                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorRelativeLocation_SweepHitResult; // 0x0074(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x011C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_1;     // 0x01A4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam) == 0x000008, "Wrong alignment on BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam");
static_assert(sizeof(BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam) == 0x000230, "Wrong size on BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam");
static_assert(offsetof(BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam, EntryPoint) == 0x000000, "Member 'BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam, K2Node_DynamicCast_AsBP_Game_Instance) == 0x000010, "Member 'BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam::K2Node_DynamicCast_AsBP_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x000028, "Member 'BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam, K2Node_InputAxisKeyEvent_AxisValue_1) == 0x000034, "Member 'BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam::K2Node_InputAxisKeyEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam, CallFunc_Array_Random_OutItem) == 0x000040, "Member 'BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam, CallFunc_Array_Random_OutIndex) == 0x000048, "Member 'BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00004C, "Member 'BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam, K2Node_InputAxisKeyEvent_AxisValue) == 0x000050, "Member 'BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam::K2Node_InputAxisKeyEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000054, "Member 'BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000058, "Member 'BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000064, "Member 'BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam, CallFunc_BreakRotator_Roll) == 0x000068, "Member 'BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam, CallFunc_BreakRotator_Pitch) == 0x00006C, "Member 'BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam, CallFunc_BreakRotator_Yaw) == 0x000070, "Member 'BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam, CallFunc_K2_SetActorRelativeLocation_SweepHitResult) == 0x000074, "Member 'BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam::CallFunc_K2_SetActorRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000FC, "Member 'BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000100, "Member 'BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam, CallFunc_MakeRotator_ReturnValue) == 0x000104, "Member 'BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam, CallFunc_MakeRotator_ReturnValue_1) == 0x000110, "Member 'BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x00011C, "Member 'BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam, CallFunc_K2_SetWorldRotation_SweepHitResult_1) == 0x0001A4, "Member 'BP_SpectatorCam_C_ExecuteUbergraph_BP_SpectatorCam::CallFunc_K2_SetWorldRotation_SweepHitResult_1' has a wrong offset!");

// Function BP_SpectatorCam.BP_SpectatorCam_C.InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent_1
// 0x0004 (0x0004 - 0x0000)
struct BP_SpectatorCam_C_InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent_1 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpectatorCam_C_InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent_1) == 0x000004, "Wrong alignment on BP_SpectatorCam_C_InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent_1");
static_assert(sizeof(BP_SpectatorCam_C_InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent_1) == 0x000004, "Wrong size on BP_SpectatorCam_C_InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent_1");
static_assert(offsetof(BP_SpectatorCam_C_InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent_1, AxisValue) == 0x000000, "Member 'BP_SpectatorCam_C_InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent_1::AxisValue' has a wrong offset!");

// Function BP_SpectatorCam.BP_SpectatorCam_C.InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent_0
// 0x0004 (0x0004 - 0x0000)
struct BP_SpectatorCam_C_InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent_0 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpectatorCam_C_InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent_0) == 0x000004, "Wrong alignment on BP_SpectatorCam_C_InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent_0");
static_assert(sizeof(BP_SpectatorCam_C_InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent_0) == 0x000004, "Wrong size on BP_SpectatorCam_C_InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent_0");
static_assert(offsetof(BP_SpectatorCam_C_InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent_0, AxisValue) == 0x000000, "Member 'BP_SpectatorCam_C_InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent_0::AxisValue' has a wrong offset!");

}

