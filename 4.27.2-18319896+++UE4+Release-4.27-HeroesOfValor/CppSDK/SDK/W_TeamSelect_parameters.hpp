#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_TeamSelect

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_TeamSelect.W_TeamSelect_C.ExecuteUbergraph_W_TeamSelect
// 0x0080 (0x0080 - 0x0000)
struct W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTeamJoinableStates_CanJoinAllies;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetTeamJoinableStates_CanJoinAxis;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeamJoinableStates_AlliedPlayers;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTeamJoinableStates_AxisPlayers;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0010(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Controller_C*                       K2Node_DynamicCast_AsBP_Controller;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Controller_C*                       K2Node_DynamicCast_AsBP_Controller_1;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect) == 0x000008, "Wrong alignment on W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect");
static_assert(sizeof(W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect) == 0x000080, "Wrong size on W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect");
static_assert(offsetof(W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect, EntryPoint) == 0x000000, "Member 'W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect, CallFunc_GetTeamJoinableStates_CanJoinAllies) == 0x000004, "Member 'W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect::CallFunc_GetTeamJoinableStates_CanJoinAllies' has a wrong offset!");
static_assert(offsetof(W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect, CallFunc_GetTeamJoinableStates_CanJoinAxis) == 0x000005, "Member 'W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect::CallFunc_GetTeamJoinableStates_CanJoinAxis' has a wrong offset!");
static_assert(offsetof(W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect, CallFunc_GetTeamJoinableStates_AlliedPlayers) == 0x000008, "Member 'W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect::CallFunc_GetTeamJoinableStates_AlliedPlayers' has a wrong offset!");
static_assert(offsetof(W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect, CallFunc_GetTeamJoinableStates_AxisPlayers) == 0x00000C, "Member 'W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect::CallFunc_GetTeamJoinableStates_AxisPlayers' has a wrong offset!");
static_assert(offsetof(W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect, K2Node_Event_MyGeometry) == 0x000010, "Member 'W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect, K2Node_Event_InDeltaTime) == 0x000048, "Member 'W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect, CallFunc_GetPlayerController_ReturnValue) == 0x000050, "Member 'W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect, K2Node_DynamicCast_AsBP_Controller) == 0x000058, "Member 'W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect::K2Node_DynamicCast_AsBP_Controller' has a wrong offset!");
static_assert(offsetof(W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect, CallFunc_GetPlayerController_ReturnValue_1) == 0x000068, "Member 'W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect, K2Node_DynamicCast_AsBP_Controller_1) == 0x000070, "Member 'W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect::K2Node_DynamicCast_AsBP_Controller_1' has a wrong offset!");
static_assert(offsetof(W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'W_TeamSelect_C_ExecuteUbergraph_W_TeamSelect::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function W_TeamSelect.W_TeamSelect_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_TeamSelect_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_TeamSelect_C_Tick) == 0x000004, "Wrong alignment on W_TeamSelect_C_Tick");
static_assert(sizeof(W_TeamSelect_C_Tick) == 0x00003C, "Wrong size on W_TeamSelect_C_Tick");
static_assert(offsetof(W_TeamSelect_C_Tick, MyGeometry) == 0x000000, "Member 'W_TeamSelect_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_TeamSelect_C_Tick, InDeltaTime) == 0x000038, "Member 'W_TeamSelect_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_TeamSelect.W_TeamSelect_C.SetMapName
// 0x0050 (0x0050 - 0x0000)
struct W_TeamSelect_C_SetMapName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0018)()
};
static_assert(alignof(W_TeamSelect_C_SetMapName) == 0x000008, "Wrong alignment on W_TeamSelect_C_SetMapName");
static_assert(sizeof(W_TeamSelect_C_SetMapName) == 0x000050, "Wrong size on W_TeamSelect_C_SetMapName");
static_assert(offsetof(W_TeamSelect_C_SetMapName, ReturnValue) == 0x000000, "Member 'W_TeamSelect_C_SetMapName::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TeamSelect_C_SetMapName, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000018, "Member 'W_TeamSelect_C_SetMapName::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TeamSelect_C_SetMapName, CallFunc_Replace_ReturnValue) == 0x000028, "Member 'W_TeamSelect_C_SetMapName::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TeamSelect_C_SetMapName, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'W_TeamSelect_C_SetMapName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function W_TeamSelect.W_TeamSelect_C.EnableAlliedFlag
// 0x0020 (0x0020 - 0x0000)
struct W_TeamSelect_C_EnableAlliedFlag final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_TeamSelect_C_EnableAlliedFlag) == 0x000008, "Wrong alignment on W_TeamSelect_C_EnableAlliedFlag");
static_assert(sizeof(W_TeamSelect_C_EnableAlliedFlag) == 0x000020, "Wrong size on W_TeamSelect_C_EnableAlliedFlag");
static_assert(offsetof(W_TeamSelect_C_EnableAlliedFlag, ReturnValue) == 0x000000, "Member 'W_TeamSelect_C_EnableAlliedFlag::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TeamSelect_C_EnableAlliedFlag, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'W_TeamSelect_C_EnableAlliedFlag::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TeamSelect_C_EnableAlliedFlag, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x000010, "Member 'W_TeamSelect_C_EnableAlliedFlag::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(W_TeamSelect_C_EnableAlliedFlag, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_TeamSelect_C_EnableAlliedFlag::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_TeamSelect.W_TeamSelect_C.EnableAxisFlag
// 0x0020 (0x0020 - 0x0000)
struct W_TeamSelect_C_EnableAxisFlag final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_TeamSelect_C_EnableAxisFlag) == 0x000008, "Wrong alignment on W_TeamSelect_C_EnableAxisFlag");
static_assert(sizeof(W_TeamSelect_C_EnableAxisFlag) == 0x000020, "Wrong size on W_TeamSelect_C_EnableAxisFlag");
static_assert(offsetof(W_TeamSelect_C_EnableAxisFlag, ReturnValue) == 0x000000, "Member 'W_TeamSelect_C_EnableAxisFlag::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TeamSelect_C_EnableAxisFlag, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'W_TeamSelect_C_EnableAxisFlag::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TeamSelect_C_EnableAxisFlag, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x000010, "Member 'W_TeamSelect_C_EnableAxisFlag::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(W_TeamSelect_C_EnableAxisFlag, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_TeamSelect_C_EnableAxisFlag::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

