#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EquipableBase

#include "Basic.hpp"

#include "BP_EquipableBase_classes.hpp"
#include "BP_EquipableBase_parameters.hpp"


namespace SDK
{

// Function BP_EquipableBase.BP_EquipableBase_C.ExecuteUbergraph_BP_EquipableBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EquipableBase_C::ExecuteUbergraph_BP_EquipableBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipableBase_C", "ExecuteUbergraph_BP_EquipableBase");

	Params::BP_EquipableBase_C_ExecuteUbergraph_BP_EquipableBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipableBase.BP_EquipableBase_C.OC_Reload
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_EquipableBase_C::OC_Reload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipableBase_C", "OC_Reload");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipableBase.BP_EquipableBase_C.Reload
// (BlueprintCallable, BlueprintEvent)

void ABP_EquipableBase_C::Reload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipableBase_C", "Reload");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipableBase.BP_EquipableBase_C.HasBeenUnequiped
// (BlueprintCallable, BlueprintEvent)

void ABP_EquipableBase_C::HasBeenUnequiped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipableBase_C", "HasBeenUnequiped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipableBase.BP_EquipableBase_C.HasBeenEquiped
// (BlueprintCallable, BlueprintEvent)

void ABP_EquipableBase_C::HasBeenEquiped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipableBase_C", "HasBeenEquiped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipableBase.BP_EquipableBase_C.UnhideWeapon
// (BlueprintCallable, BlueprintEvent)

void ABP_EquipableBase_C::UnhideWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipableBase_C", "UnhideWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipableBase.BP_EquipableBase_C.HideWeapon
// (BlueprintCallable, BlueprintEvent)

void ABP_EquipableBase_C::HideWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipableBase_C", "HideWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipableBase.BP_EquipableBase_C.S_LoadSkin
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SkinIndex_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EquipableBase_C::S_LoadSkin(int32 SkinIndex_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipableBase_C", "S_LoadSkin");

	Params::BP_EquipableBase_C_S_LoadSkin Parms{};

	Parms.SkinIndex_0 = SkinIndex_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipableBase.BP_EquipableBase_C.EquipedStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Equiped                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EquipableBase_C::EquipedStateChanged(bool Equiped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipableBase_C", "EquipedStateChanged");

	Params::BP_EquipableBase_C_EquipedStateChanged Parms{};

	Parms.Equiped = Equiped;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipableBase.BP_EquipableBase_C.WeaponUsed(NonAutoRepeating)
// (BlueprintCallable, BlueprintEvent)

void ABP_EquipableBase_C::WeaponUsed_NonAutoRepeating_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipableBase_C", "WeaponUsed(NonAutoRepeating)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipableBase.BP_EquipableBase_C.UsingStateChanged
// (BlueprintCallable, BlueprintEvent)

void ABP_EquipableBase_C::UsingStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipableBase_C", "UsingStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipableBase.BP_EquipableBase_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EquipableBase_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipableBase_C", "ReceiveTick");

	Params::BP_EquipableBase_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipableBase.BP_EquipableBase_C.StopUse
// (BlueprintCallable, BlueprintEvent)

void ABP_EquipableBase_C::StopUse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipableBase_C", "StopUse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipableBase.BP_EquipableBase_C.Use
// (BlueprintCallable, BlueprintEvent)

void ABP_EquipableBase_C::Use()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipableBase_C", "Use");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipableBase.BP_EquipableBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_EquipableBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipableBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipableBase.BP_EquipableBase_C.OnRep_SkinIndex
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_EquipableBase_C::OnRep_SkinIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipableBase_C", "OnRep_SkinIndex");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipableBase.BP_EquipableBase_C.CheckIfOwnerOfThisWeapon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   IsOwner                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EquipableBase_C::CheckIfOwnerOfThisWeapon(bool* IsOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipableBase_C", "CheckIfOwnerOfThisWeapon");

	Params::BP_EquipableBase_C_CheckIfOwnerOfThisWeapon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsOwner != nullptr)
		*IsOwner = Parms.IsOwner;
}


// Function BP_EquipableBase.BP_EquipableBase_C.IsCurrentlyEquiped?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Equiped                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EquipableBase_C::IsCurrentlyEquiped_(bool* Equiped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipableBase_C", "IsCurrentlyEquiped?");

	Params::BP_EquipableBase_C_IsCurrentlyEquiped_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Equiped != nullptr)
		*Equiped = Parms.Equiped;
}


// Function BP_EquipableBase.BP_EquipableBase_C.GetSkinIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  SkinIndex_0                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EquipableBase_C::GetSkinIndex(int32* SkinIndex_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipableBase_C", "GetSkinIndex");

	Params::BP_EquipableBase_C_GetSkinIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SkinIndex_0 != nullptr)
		*SkinIndex_0 = Parms.SkinIndex_0;
}

}

