#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameInstance

#include "Basic.hpp"

#include "ST_SelectedCosmeticItems_structs.hpp"


namespace SDK::Params
{

// Function BP_GameInstance.BP_GameInstance_C.ExecuteUbergraph_BP_GameInstance
// 0x0004 (0x0004 - 0x0000)
struct BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance) == 0x000004, "Wrong alignment on BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance");
static_assert(sizeof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance) == 0x000004, "Wrong size on BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance");
static_assert(offsetof(BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance, EntryPoint) == 0x000000, "Member 'BP_GameInstance_C_ExecuteUbergraph_BP_GameInstance::EntryPoint' has a wrong offset!");

// Function BP_GameInstance.BP_GameInstance_C.SaveOptions
// 0x0010 (0x0010 - 0x0000)
struct BP_GameInstance_C_SaveOptions final
{
public:
	class USG_Options_C*                          CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameInstance_C_SaveOptions) == 0x000008, "Wrong alignment on BP_GameInstance_C_SaveOptions");
static_assert(sizeof(BP_GameInstance_C_SaveOptions) == 0x000010, "Wrong size on BP_GameInstance_C_SaveOptions");
static_assert(offsetof(BP_GameInstance_C_SaveOptions, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000000, "Member 'BP_GameInstance_C_SaveOptions::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_SaveOptions, CallFunc_SaveGameToSlot_ReturnValue) == 0x000008, "Member 'BP_GameInstance_C_SaveOptions::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function BP_GameInstance.BP_GameInstance_C.LoadOptions
// 0x0018 (0x0018 - 0x0000)
struct BP_GameInstance_C_LoadOptions final
{
public:
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USG_Options_C*                          K2Node_DynamicCast_AsSG_Options;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameInstance_C_LoadOptions) == 0x000008, "Wrong alignment on BP_GameInstance_C_LoadOptions");
static_assert(sizeof(BP_GameInstance_C_LoadOptions) == 0x000018, "Wrong size on BP_GameInstance_C_LoadOptions");
static_assert(offsetof(BP_GameInstance_C_LoadOptions, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000000, "Member 'BP_GameInstance_C_LoadOptions::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadOptions, K2Node_DynamicCast_AsSG_Options) == 0x000008, "Member 'BP_GameInstance_C_LoadOptions::K2Node_DynamicCast_AsSG_Options' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadOptions, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_GameInstance_C_LoadOptions::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_GameInstance.BP_GameInstance_C.SaveCustomization
// 0x0010 (0x0010 - 0x0000)
struct BP_GameInstance_C_SaveCustomization final
{
public:
	class USG_Customization_C*                    CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameInstance_C_SaveCustomization) == 0x000008, "Wrong alignment on BP_GameInstance_C_SaveCustomization");
static_assert(sizeof(BP_GameInstance_C_SaveCustomization) == 0x000010, "Wrong size on BP_GameInstance_C_SaveCustomization");
static_assert(offsetof(BP_GameInstance_C_SaveCustomization, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000000, "Member 'BP_GameInstance_C_SaveCustomization::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_SaveCustomization, CallFunc_SaveGameToSlot_ReturnValue) == 0x000008, "Member 'BP_GameInstance_C_SaveCustomization::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function BP_GameInstance.BP_GameInstance_C.LoadCustomization
// 0x0218 (0x0218 - 0x0000)
struct BP_GameInstance_C_LoadCustomization final
{
public:
	TArray<int32>                                 TempHairStyleArray;                                // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<float>                                 TempSkinColorArray;                                // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 TempHairColorArray;                                // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 TempFacialHairArray;                               // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm)
	TArray<int32>                                 K2Node_MakeArray_Array_1;                          // 0x0050(0x0010)(ReferenceParm)
	TArray<int32>                                 K2Node_MakeArray_Array_2;                          // 0x0060(0x0010)(ReferenceParm)
	TArray<int32>                                 K2Node_MakeArray_Array_3;                          // 0x0070(0x0010)(ReferenceParm)
	TArray<int32>                                 K2Node_MakeArray_Array_4;                          // 0x0080(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x00A0(0x0010)(ReferenceParm)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_1;       // 0x00B8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_SelectedCosmeticItems              K2Node_MakeStruct_ST_SelectedCosmeticItems;        // 0x00E0(0x0100)(HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_2;       // 0x01E0(0x0010)(ReferenceParm)
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USG_Customization_C*                    K2Node_DynamicCast_AsSG_Customization;             // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_2;       // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameInstance_C_LoadCustomization) == 0x000008, "Wrong alignment on BP_GameInstance_C_LoadCustomization");
static_assert(sizeof(BP_GameInstance_C_LoadCustomization) == 0x000218, "Wrong size on BP_GameInstance_C_LoadCustomization");
static_assert(offsetof(BP_GameInstance_C_LoadCustomization, TempHairStyleArray) == 0x000000, "Member 'BP_GameInstance_C_LoadCustomization::TempHairStyleArray' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadCustomization, TempSkinColorArray) == 0x000010, "Member 'BP_GameInstance_C_LoadCustomization::TempSkinColorArray' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadCustomization, TempHairColorArray) == 0x000020, "Member 'BP_GameInstance_C_LoadCustomization::TempHairColorArray' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadCustomization, TempFacialHairArray) == 0x000030, "Member 'BP_GameInstance_C_LoadCustomization::TempFacialHairArray' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadCustomization, K2Node_MakeArray_Array) == 0x000040, "Member 'BP_GameInstance_C_LoadCustomization::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadCustomization, K2Node_MakeArray_Array_1) == 0x000050, "Member 'BP_GameInstance_C_LoadCustomization::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadCustomization, K2Node_MakeArray_Array_2) == 0x000060, "Member 'BP_GameInstance_C_LoadCustomization::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadCustomization, K2Node_MakeArray_Array_3) == 0x000070, "Member 'BP_GameInstance_C_LoadCustomization::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadCustomization, K2Node_MakeArray_Array_4) == 0x000080, "Member 'BP_GameInstance_C_LoadCustomization::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadCustomization, Temp_int_Variable) == 0x000090, "Member 'BP_GameInstance_C_LoadCustomization::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadCustomization, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000094, "Member 'BP_GameInstance_C_LoadCustomization::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadCustomization, CallFunc_Add_IntInt_ReturnValue) == 0x000098, "Member 'BP_GameInstance_C_LoadCustomization::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadCustomization, CallFunc_GetDataTableRowNames_OutRowNames) == 0x0000A0, "Member 'BP_GameInstance_C_LoadCustomization::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadCustomization, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000B0, "Member 'BP_GameInstance_C_LoadCustomization::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadCustomization, CallFunc_Array_Length_ReturnValue) == 0x0000B4, "Member 'BP_GameInstance_C_LoadCustomization::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadCustomization, CallFunc_GetDataTableRowNames_OutRowNames_1) == 0x0000B8, "Member 'BP_GameInstance_C_LoadCustomization::CallFunc_GetDataTableRowNames_OutRowNames_1' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadCustomization, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_GameInstance_C_LoadCustomization::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadCustomization, CallFunc_Array_Length_ReturnValue_1) == 0x0000CC, "Member 'BP_GameInstance_C_LoadCustomization::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadCustomization, CallFunc_RandomIntegerInRange_ReturnValue) == 0x0000D0, "Member 'BP_GameInstance_C_LoadCustomization::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadCustomization, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000D4, "Member 'BP_GameInstance_C_LoadCustomization::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadCustomization, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x0000D8, "Member 'BP_GameInstance_C_LoadCustomization::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadCustomization, K2Node_MakeStruct_ST_SelectedCosmeticItems) == 0x0000E0, "Member 'BP_GameInstance_C_LoadCustomization::K2Node_MakeStruct_ST_SelectedCosmeticItems' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadCustomization, CallFunc_GetDataTableRowNames_OutRowNames_2) == 0x0001E0, "Member 'BP_GameInstance_C_LoadCustomization::CallFunc_GetDataTableRowNames_OutRowNames_2' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadCustomization, CallFunc_LoadGameFromSlot_ReturnValue) == 0x0001F0, "Member 'BP_GameInstance_C_LoadCustomization::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadCustomization, CallFunc_Array_Length_ReturnValue_2) == 0x0001F8, "Member 'BP_GameInstance_C_LoadCustomization::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadCustomization, K2Node_DynamicCast_AsSG_Customization) == 0x000200, "Member 'BP_GameInstance_C_LoadCustomization::K2Node_DynamicCast_AsSG_Customization' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadCustomization, K2Node_DynamicCast_bSuccess) == 0x000208, "Member 'BP_GameInstance_C_LoadCustomization::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadCustomization, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x00020C, "Member 'BP_GameInstance_C_LoadCustomization::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadCustomization, CallFunc_RandomIntegerInRange_ReturnValue_2) == 0x000210, "Member 'BP_GameInstance_C_LoadCustomization::CallFunc_RandomIntegerInRange_ReturnValue_2' has a wrong offset!");

// Function BP_GameInstance.BP_GameInstance_C.SaveLoadout
// 0x0010 (0x0010 - 0x0000)
struct BP_GameInstance_C_SaveLoadout final
{
public:
	class USG_Loadout_C*                          CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameInstance_C_SaveLoadout) == 0x000008, "Wrong alignment on BP_GameInstance_C_SaveLoadout");
static_assert(sizeof(BP_GameInstance_C_SaveLoadout) == 0x000010, "Wrong size on BP_GameInstance_C_SaveLoadout");
static_assert(offsetof(BP_GameInstance_C_SaveLoadout, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000000, "Member 'BP_GameInstance_C_SaveLoadout::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_SaveLoadout, CallFunc_SaveGameToSlot_ReturnValue) == 0x000008, "Member 'BP_GameInstance_C_SaveLoadout::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function BP_GameInstance.BP_GameInstance_C.LoadLoadout
// 0x0018 (0x0018 - 0x0000)
struct BP_GameInstance_C_LoadLoadout final
{
public:
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USG_Loadout_C*                          K2Node_DynamicCast_AsSG_Loadout;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameInstance_C_LoadLoadout) == 0x000008, "Wrong alignment on BP_GameInstance_C_LoadLoadout");
static_assert(sizeof(BP_GameInstance_C_LoadLoadout) == 0x000018, "Wrong size on BP_GameInstance_C_LoadLoadout");
static_assert(offsetof(BP_GameInstance_C_LoadLoadout, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000000, "Member 'BP_GameInstance_C_LoadLoadout::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadLoadout, K2Node_DynamicCast_AsSG_Loadout) == 0x000008, "Member 'BP_GameInstance_C_LoadLoadout::K2Node_DynamicCast_AsSG_Loadout' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadLoadout, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_GameInstance_C_LoadLoadout::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_GameInstance.BP_GameInstance_C.UpdateVideoOptions
// 0x0048 (0x0048 - 0x0000)
struct BP_GameInstance_C_UpdateVideoOptions final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameInstance_C_UpdateVideoOptions) == 0x000008, "Wrong alignment on BP_GameInstance_C_UpdateVideoOptions");
static_assert(sizeof(BP_GameInstance_C_UpdateVideoOptions) == 0x000048, "Wrong size on BP_GameInstance_C_UpdateVideoOptions");
static_assert(offsetof(BP_GameInstance_C_UpdateVideoOptions, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_GameInstance_C_UpdateVideoOptions::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_UpdateVideoOptions, CallFunc_Conv_IntToString_ReturnValue) == 0x000008, "Member 'BP_GameInstance_C_UpdateVideoOptions::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_UpdateVideoOptions, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'BP_GameInstance_C_UpdateVideoOptions::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_UpdateVideoOptions, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000028, "Member 'BP_GameInstance_C_UpdateVideoOptions::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_UpdateVideoOptions, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000038, "Member 'BP_GameInstance_C_UpdateVideoOptions::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BP_GameInstance.BP_GameInstance_C.SaveServerSettings
// 0x0010 (0x0010 - 0x0000)
struct BP_GameInstance_C_SaveServerSettings final
{
public:
	class USG_ServerSettings_C*                   CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameInstance_C_SaveServerSettings) == 0x000008, "Wrong alignment on BP_GameInstance_C_SaveServerSettings");
static_assert(sizeof(BP_GameInstance_C_SaveServerSettings) == 0x000010, "Wrong size on BP_GameInstance_C_SaveServerSettings");
static_assert(offsetof(BP_GameInstance_C_SaveServerSettings, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000000, "Member 'BP_GameInstance_C_SaveServerSettings::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_SaveServerSettings, CallFunc_SaveGameToSlot_ReturnValue) == 0x000008, "Member 'BP_GameInstance_C_SaveServerSettings::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function BP_GameInstance.BP_GameInstance_C.LoadServerSettings
// 0x0018 (0x0018 - 0x0000)
struct BP_GameInstance_C_LoadServerSettings final
{
public:
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USG_ServerSettings_C*                   K2Node_DynamicCast_AsSG_Server_Settings;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameInstance_C_LoadServerSettings) == 0x000008, "Wrong alignment on BP_GameInstance_C_LoadServerSettings");
static_assert(sizeof(BP_GameInstance_C_LoadServerSettings) == 0x000018, "Wrong size on BP_GameInstance_C_LoadServerSettings");
static_assert(offsetof(BP_GameInstance_C_LoadServerSettings, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000000, "Member 'BP_GameInstance_C_LoadServerSettings::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadServerSettings, K2Node_DynamicCast_AsSG_Server_Settings) == 0x000008, "Member 'BP_GameInstance_C_LoadServerSettings::K2Node_DynamicCast_AsSG_Server_Settings' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadServerSettings, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_GameInstance_C_LoadServerSettings::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_GameInstance.BP_GameInstance_C.SavePermaBanList
// 0x0010 (0x0010 - 0x0000)
struct BP_GameInstance_C_SavePermaBanList final
{
public:
	class USG_BanList_C*                          CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameInstance_C_SavePermaBanList) == 0x000008, "Wrong alignment on BP_GameInstance_C_SavePermaBanList");
static_assert(sizeof(BP_GameInstance_C_SavePermaBanList) == 0x000010, "Wrong size on BP_GameInstance_C_SavePermaBanList");
static_assert(offsetof(BP_GameInstance_C_SavePermaBanList, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000000, "Member 'BP_GameInstance_C_SavePermaBanList::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_SavePermaBanList, CallFunc_SaveGameToSlot_ReturnValue) == 0x000008, "Member 'BP_GameInstance_C_SavePermaBanList::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function BP_GameInstance.BP_GameInstance_C.LoadPermaBanList
// 0x0018 (0x0018 - 0x0000)
struct BP_GameInstance_C_LoadPermaBanList final
{
public:
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USG_BanList_C*                          K2Node_DynamicCast_AsSG_Ban_List;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameInstance_C_LoadPermaBanList) == 0x000008, "Wrong alignment on BP_GameInstance_C_LoadPermaBanList");
static_assert(sizeof(BP_GameInstance_C_LoadPermaBanList) == 0x000018, "Wrong size on BP_GameInstance_C_LoadPermaBanList");
static_assert(offsetof(BP_GameInstance_C_LoadPermaBanList, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000000, "Member 'BP_GameInstance_C_LoadPermaBanList::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadPermaBanList, K2Node_DynamicCast_AsSG_Ban_List) == 0x000008, "Member 'BP_GameInstance_C_LoadPermaBanList::K2Node_DynamicCast_AsSG_Ban_List' has a wrong offset!");
static_assert(offsetof(BP_GameInstance_C_LoadPermaBanList, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_GameInstance_C_LoadPermaBanList::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

