#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CosmeticPreview

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ST_Unlockable_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CosmeticPreview.BP_CosmeticPreview_C
// 0x01A0 (0x03C0 - 0x0220)
class ABP_CosmeticPreview_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Plane;                                             // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               SceneCaptureComponent2D;                           // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FST_Unlockable                         Item;                                              // 0x0258(0x0148)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               WeaponTextureMID;                                  // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               WeaponFlatColorMID;                                // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MeshCycleIndex;                                    // 0x03B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B4[0x4];                                      // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            MeshToLoad;                                        // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_CosmeticPreview(int32 EntryPoint);
	void ReloadWeaponSkin();
	void CycleMeshUp();
	void LoadItem();
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CosmeticPreview_C">();
	}
	static class ABP_CosmeticPreview_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CosmeticPreview_C>();
	}
};
static_assert(alignof(ABP_CosmeticPreview_C) == 0x000008, "Wrong alignment on ABP_CosmeticPreview_C");
static_assert(sizeof(ABP_CosmeticPreview_C) == 0x0003C0, "Wrong size on ABP_CosmeticPreview_C");
static_assert(offsetof(ABP_CosmeticPreview_C, UberGraphFrame) == 0x000220, "Member 'ABP_CosmeticPreview_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CosmeticPreview_C, Plane) == 0x000228, "Member 'ABP_CosmeticPreview_C::Plane' has a wrong offset!");
static_assert(offsetof(ABP_CosmeticPreview_C, StaticMesh) == 0x000230, "Member 'ABP_CosmeticPreview_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_CosmeticPreview_C, Arrow) == 0x000238, "Member 'ABP_CosmeticPreview_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_CosmeticPreview_C, SpotLight) == 0x000240, "Member 'ABP_CosmeticPreview_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_CosmeticPreview_C, SceneCaptureComponent2D) == 0x000248, "Member 'ABP_CosmeticPreview_C::SceneCaptureComponent2D' has a wrong offset!");
static_assert(offsetof(ABP_CosmeticPreview_C, DefaultSceneRoot) == 0x000250, "Member 'ABP_CosmeticPreview_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_CosmeticPreview_C, Item) == 0x000258, "Member 'ABP_CosmeticPreview_C::Item' has a wrong offset!");
static_assert(offsetof(ABP_CosmeticPreview_C, WeaponTextureMID) == 0x0003A0, "Member 'ABP_CosmeticPreview_C::WeaponTextureMID' has a wrong offset!");
static_assert(offsetof(ABP_CosmeticPreview_C, WeaponFlatColorMID) == 0x0003A8, "Member 'ABP_CosmeticPreview_C::WeaponFlatColorMID' has a wrong offset!");
static_assert(offsetof(ABP_CosmeticPreview_C, MeshCycleIndex) == 0x0003B0, "Member 'ABP_CosmeticPreview_C::MeshCycleIndex' has a wrong offset!");
static_assert(offsetof(ABP_CosmeticPreview_C, MeshToLoad) == 0x0003B8, "Member 'ABP_CosmeticPreview_C::MeshToLoad' has a wrong offset!");

}

