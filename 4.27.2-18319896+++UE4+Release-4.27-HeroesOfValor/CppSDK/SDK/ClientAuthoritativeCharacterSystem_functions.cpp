#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ClientAuthoritativeCharacterSystem

#include "Basic.hpp"

#include "ClientAuthoritativeCharacterSystem_classes.hpp"
#include "ClientAuthoritativeCharacterSystem_parameters.hpp"


namespace SDK
{

// Function ClientAuthoritativeCharacterSystem.ClientAuthoritativeCharacter.ClientAuthoritativeMove
// (Net, Native, Event, Public, NetServer)
// Parameters:
// const struct FClientAuthoritativeMoveData&MoveData                                               (ConstParm, Parm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AClientAuthoritativeCharacter::ClientAuthoritativeMove(const struct FClientAuthoritativeMoveData& MoveData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClientAuthoritativeCharacter", "ClientAuthoritativeMove");

	Params::ClientAuthoritativeCharacter_ClientAuthoritativeMove Parms{};

	Parms.MoveData = std::move(MoveData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

