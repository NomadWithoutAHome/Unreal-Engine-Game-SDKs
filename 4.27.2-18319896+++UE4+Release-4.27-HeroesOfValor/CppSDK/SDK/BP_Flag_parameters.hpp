#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Flag

#include "Basic.hpp"

#include "E_Units_structs.hpp"
#include "E_Teams_structs.hpp"
#include "ST_PlayerStats_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Flag.BP_Flag_C.ExecuteUbergraph_BP_Flag
// 0x0170 (0x0170 - 0x0000)
struct BP_Flag_C_ExecuteUbergraph_BP_Flag final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCapturingTeam_IsBeingCaptured;         // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Teams                                       CallFunc_GetCapturingTeam_CapturingTeam;           // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_FlagUI_C*                            K2Node_DynamicCast_AsW_Flag_UI;                    // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Teams                                       K2Node_CustomEvent_Team;                           // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_Conquest_C*               K2Node_DynamicCast_AsBP_Game_State_Conquest;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F[0x1];                                       // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_1;        // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_SpawnSelectFlag_C*                   K2Node_DynamicCast_AsW_Spawn_Select_Flag;          // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0098(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00E8(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0128(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0140(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0150(0x0018)()
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x016B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Flag_C_ExecuteUbergraph_BP_Flag) == 0x000008, "Wrong alignment on BP_Flag_C_ExecuteUbergraph_BP_Flag");
static_assert(sizeof(BP_Flag_C_ExecuteUbergraph_BP_Flag) == 0x000170, "Wrong size on BP_Flag_C_ExecuteUbergraph_BP_Flag");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, EntryPoint) == 0x000000, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_HasAuthority_ReturnValue) == 0x000005, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000006, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, Temp_bool_IsClosed_Variable) == 0x000007, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, Temp_bool_Has_Been_Initd_Variable_1) == 0x000008, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, Temp_bool_IsClosed_Variable_1) == 0x000009, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, Temp_bool_Has_Been_Initd_Variable_2) == 0x00000A, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00000B, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_HasAuthority_ReturnValue_1) == 0x00000C, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, K2Node_Event_DeltaSeconds) == 0x000010, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, Temp_bool_Has_Been_Initd_Variable_3) == 0x000014, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_GetCapturingTeam_IsBeingCaptured) == 0x000015, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_GetCapturingTeam_IsBeingCaptured' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_GetCapturingTeam_CapturingTeam) == 0x000016, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_GetCapturingTeam_CapturingTeam' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000017, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000018, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, Temp_bool_IsClosed_Variable_2) == 0x000019, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000020, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, K2Node_DynamicCast_AsW_Flag_UI) == 0x000028, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::K2Node_DynamicCast_AsW_Flag_UI' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, K2Node_SwitchEnum_CmpSuccess) == 0x000031, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, K2Node_CustomEvent_Team) == 0x000032, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::K2Node_CustomEvent_Team' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000033, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, K2Node_SwitchEnum_CmpSuccess_1) == 0x000034, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000035, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000036, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_GetGameState_ReturnValue) == 0x000038, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000040, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, K2Node_DynamicCast_AsBP_Game_State_Conquest) == 0x000048, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::K2Node_DynamicCast_AsBP_Game_State_Conquest' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000058, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00005C, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_Add_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000064, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_FClamp_ReturnValue) == 0x000068, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_FClamp_ReturnValue_1) == 0x00006C, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000070, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000074, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_FClamp_ReturnValue_2) == 0x000078, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, K2Node_SwitchEnum_CmpSuccess_2) == 0x00007C, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, K2Node_SwitchEnum_CmpSuccess_3) == 0x00007D, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_Less_FloatFloat_ReturnValue) == 0x00007E, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_GetUserWidgetObject_ReturnValue_1) == 0x000080, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_GetUserWidgetObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, K2Node_DynamicCast_AsW_Spawn_Select_Flag) == 0x000088, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::K2Node_DynamicCast_AsW_Spawn_Select_Flag' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, K2Node_DynamicCast_bSuccess_2) == 0x000090, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, K2Node_MakeStruct_FormatArgumentData) == 0x000098, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, K2Node_MakeArray_Array) == 0x0000D8, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000E8, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_Format_ReturnValue) == 0x000128, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, K2Node_MakeArray_Array_1) == 0x000140, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_Format_ReturnValue_1) == 0x000150, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000168, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, Temp_bool_IsClosed_Variable_3) == 0x000169, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, K2Node_SwitchEnum_CmpSuccess_4) == 0x00016A, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_BooleanAND_ReturnValue) == 0x00016B, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_BooleanAND_ReturnValue_1) == 0x00016C, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_ExecuteUbergraph_BP_Flag, CallFunc_BooleanAND_ReturnValue_2) == 0x00016D, "Member 'BP_Flag_C_ExecuteUbergraph_BP_Flag::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_Flag.BP_Flag_C.MC_Capture
// 0x0001 (0x0001 - 0x0000)
struct BP_Flag_C_MC_Capture final
{
public:
	E_Teams                                       Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Flag_C_MC_Capture) == 0x000001, "Wrong alignment on BP_Flag_C_MC_Capture");
static_assert(sizeof(BP_Flag_C_MC_Capture) == 0x000001, "Wrong size on BP_Flag_C_MC_Capture");
static_assert(offsetof(BP_Flag_C_MC_Capture, Team) == 0x000000, "Member 'BP_Flag_C_MC_Capture::Team' has a wrong offset!");

// Function BP_Flag.BP_Flag_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Flag_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Flag_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Flag_C_ReceiveTick");
static_assert(sizeof(BP_Flag_C_ReceiveTick) == 0x000004, "Wrong size on BP_Flag_C_ReceiveTick");
static_assert(offsetof(BP_Flag_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Flag_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Flag.BP_Flag_C.UserConstructionScript
// 0x0002 (0x0002 - 0x0000)
struct BP_Flag_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Flag_C_UserConstructionScript) == 0x000001, "Wrong alignment on BP_Flag_C_UserConstructionScript");
static_assert(sizeof(BP_Flag_C_UserConstructionScript) == 0x000002, "Wrong size on BP_Flag_C_UserConstructionScript");
static_assert(offsetof(BP_Flag_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_Flag_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_UserConstructionScript, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_Flag_C_UserConstructionScript::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_Flag.BP_Flag_C.GetCapturingTeam
// 0x0238 (0x0238 - 0x0000)
struct BP_Flag_C_GetCapturingTeam final
{
public:
	bool                                          IsBeingCaptured;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Teams                                       CapturingTeam_0;                                   // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APawn*>                          CheckedPawns;                                      // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         AlliedPlayers;                                     // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AxisPlayers;                                       // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0028(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_SphereTraceMulti_OutHits;                 // 0x0080(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMulti_ReturnValue;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x009C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_126[0x2];                                      // 0x0126(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B2[0x2];                                      // 0x01B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Teams                                       CallFunc_GetPawnData_Team;                         // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPawnData_PlayerIndex;                  // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_PlayerStats                        CallFunc_GetPawnData_PlayerStats;                  // 0x01C0(0x0068)(HasGetValueTypeHash)
	class UPawnDataComponent_C*                   CallFunc_GetPawnData_PawnDataComponent;            // 0x0228(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfPawnIsAlive_Alive;                 // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPawnControlled_ReturnValue;             // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Flag_C_GetCapturingTeam) == 0x000008, "Wrong alignment on BP_Flag_C_GetCapturingTeam");
static_assert(sizeof(BP_Flag_C_GetCapturingTeam) == 0x000238, "Wrong size on BP_Flag_C_GetCapturingTeam");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, IsBeingCaptured) == 0x000000, "Member 'BP_Flag_C_GetCapturingTeam::IsBeingCaptured' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CapturingTeam_0) == 0x000001, "Member 'BP_Flag_C_GetCapturingTeam::CapturingTeam_0' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CheckedPawns) == 0x000008, "Member 'BP_Flag_C_GetCapturingTeam::CheckedPawns' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, AlliedPlayers) == 0x000018, "Member 'BP_Flag_C_GetCapturingTeam::AlliedPlayers' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, AxisPlayers) == 0x00001C, "Member 'BP_Flag_C_GetCapturingTeam::AxisPlayers' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_Flag_C_GetCapturingTeam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, Temp_object_Variable) == 0x000028, "Member 'BP_Flag_C_GetCapturingTeam::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_Flag_C_GetCapturingTeam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, Temp_int_Variable) == 0x000044, "Member 'BP_Flag_C_GetCapturingTeam::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, Temp_int_Variable_1) == 0x000048, "Member 'BP_Flag_C_GetCapturingTeam::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00004C, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00004D, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_BooleanAND_ReturnValue) == 0x00004E, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_Greater_IntInt_ReturnValue) == 0x00004F, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_Add_IntInt_ReturnValue_2) == 0x000054, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_Add_VectorVector_ReturnValue) == 0x000064, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000070, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_SphereTraceMulti_OutHits) == 0x000080, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_SphereTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_SphereTraceMulti_ReturnValue) == 0x000090, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_SphereTraceMulti_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_Array_Get_Item) == 0x00009C, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_BreakHitResult_bBlockingHit) == 0x000124, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_BreakHitResult_bInitialOverlap) == 0x000125, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_BreakHitResult_Time) == 0x000128, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_BreakHitResult_Distance) == 0x00012C, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_BreakHitResult_Location) == 0x000130, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_BreakHitResult_ImpactPoint) == 0x00013C, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_BreakHitResult_Normal) == 0x000148, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_BreakHitResult_ImpactNormal) == 0x000154, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_BreakHitResult_PhysMat) == 0x000160, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_BreakHitResult_HitActor) == 0x000168, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_BreakHitResult_HitComponent) == 0x000170, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_BreakHitResult_HitBoneName) == 0x000178, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_BreakHitResult_HitItem) == 0x000180, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_BreakHitResult_ElementIndex) == 0x000184, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_BreakHitResult_FaceIndex) == 0x000188, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_BreakHitResult_TraceStart) == 0x00018C, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_BreakHitResult_TraceEnd) == 0x000198, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, K2Node_DynamicCast_AsPawn) == 0x0001A8, "Member 'BP_Flag_C_GetCapturingTeam::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, K2Node_DynamicCast_bSuccess) == 0x0001B0, "Member 'BP_Flag_C_GetCapturingTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_Array_Contains_ReturnValue) == 0x0001B1, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_Array_Add_ReturnValue) == 0x0001B4, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_GetPawnData_Team) == 0x0001B8, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_GetPawnData_Team' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_GetPawnData_PlayerIndex) == 0x0001BC, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_GetPawnData_PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_GetPawnData_PlayerStats) == 0x0001C0, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_GetPawnData_PlayerStats' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_GetPawnData_PawnDataComponent) == 0x000228, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_GetPawnData_PawnDataComponent' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_CheckIfPawnIsAlive_Alive) == 0x000230, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_CheckIfPawnIsAlive_Alive' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, K2Node_SwitchEnum_CmpSuccess) == 0x000231, "Member 'BP_Flag_C_GetCapturingTeam::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GetCapturingTeam, CallFunc_IsPawnControlled_ReturnValue) == 0x000232, "Member 'BP_Flag_C_GetCapturingTeam::CallFunc_IsPawnControlled_ReturnValue' has a wrong offset!");

// Function BP_Flag.BP_Flag_C.GrantScoreToCapturingPawns
// 0x00A8 (0x00A8 - 0x0000)
struct BP_Flag_C_GrantScoreToCapturingPawns final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Units                                       CallFunc_Get_PlayerUnitType_UnitType;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Teams                                       CallFunc_GetPawnData_Team;                         // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPawnData_PlayerIndex;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_PlayerStats                        CallFunc_GetPawnData_PlayerStats;                  // 0x0030(0x0068)(HasGetValueTypeHash)
	class UPawnDataComponent_C*                   CallFunc_GetPawnData_PawnDataComponent;            // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Flag_C_GrantScoreToCapturingPawns) == 0x000008, "Wrong alignment on BP_Flag_C_GrantScoreToCapturingPawns");
static_assert(sizeof(BP_Flag_C_GrantScoreToCapturingPawns) == 0x0000A8, "Wrong size on BP_Flag_C_GrantScoreToCapturingPawns");
static_assert(offsetof(BP_Flag_C_GrantScoreToCapturingPawns, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_Flag_C_GrantScoreToCapturingPawns::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GrantScoreToCapturingPawns, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_Flag_C_GrantScoreToCapturingPawns::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GrantScoreToCapturingPawns, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_Flag_C_GrantScoreToCapturingPawns::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GrantScoreToCapturingPawns, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'BP_Flag_C_GrantScoreToCapturingPawns::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GrantScoreToCapturingPawns, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_Flag_C_GrantScoreToCapturingPawns::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GrantScoreToCapturingPawns, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x000020, "Member 'BP_Flag_C_GrantScoreToCapturingPawns::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GrantScoreToCapturingPawns, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_Flag_C_GrantScoreToCapturingPawns::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GrantScoreToCapturingPawns, CallFunc_Get_PlayerUnitType_UnitType) == 0x000029, "Member 'BP_Flag_C_GrantScoreToCapturingPawns::CallFunc_Get_PlayerUnitType_UnitType' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GrantScoreToCapturingPawns, CallFunc_GetPawnData_Team) == 0x00002A, "Member 'BP_Flag_C_GrantScoreToCapturingPawns::CallFunc_GetPawnData_Team' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GrantScoreToCapturingPawns, CallFunc_GetPawnData_PlayerIndex) == 0x00002C, "Member 'BP_Flag_C_GrantScoreToCapturingPawns::CallFunc_GetPawnData_PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GrantScoreToCapturingPawns, CallFunc_GetPawnData_PlayerStats) == 0x000030, "Member 'BP_Flag_C_GrantScoreToCapturingPawns::CallFunc_GetPawnData_PlayerStats' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GrantScoreToCapturingPawns, CallFunc_GetPawnData_PawnDataComponent) == 0x000098, "Member 'BP_Flag_C_GrantScoreToCapturingPawns::CallFunc_GetPawnData_PawnDataComponent' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GrantScoreToCapturingPawns, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BP_Flag_C_GrantScoreToCapturingPawns::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flag_C_GrantScoreToCapturingPawns, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_Flag_C_GrantScoreToCapturingPawns::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

