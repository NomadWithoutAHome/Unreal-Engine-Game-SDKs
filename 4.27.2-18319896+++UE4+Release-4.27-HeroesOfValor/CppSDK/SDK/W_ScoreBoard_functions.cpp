#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ScoreBoard

#include "Basic.hpp"

#include "W_ScoreBoard_classes.hpp"
#include "W_ScoreBoard_parameters.hpp"


namespace SDK
{

// Function W_ScoreBoard.W_ScoreBoard_C.ExecuteUbergraph_W_ScoreBoard
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ScoreBoard_C::ExecuteUbergraph_W_ScoreBoard(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScoreBoard_C", "ExecuteUbergraph_W_ScoreBoard");

	Params::W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ScoreBoard.W_ScoreBoard_C.CloseScoreboard
// (BlueprintCallable, BlueprintEvent)

void UW_ScoreBoard_C::CloseScoreboard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScoreBoard_C", "CloseScoreboard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ScoreBoard.W_ScoreBoard_C.ReloadScoreboard
// (BlueprintCallable, BlueprintEvent)

void UW_ScoreBoard_C::ReloadScoreboard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScoreBoard_C", "ReloadScoreboard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ScoreBoard.W_ScoreBoard_C.UpdateScoreboard
// (BlueprintCallable, BlueprintEvent)

void UW_ScoreBoard_C::UpdateScoreboard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScoreBoard_C", "UpdateScoreboard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ScoreBoard.W_ScoreBoard_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ScoreBoard_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScoreBoard_C", "Tick");

	Params::W_ScoreBoard_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ScoreBoard.W_ScoreBoard_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_ScoreBoard_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScoreBoard_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ScoreBoard.W_ScoreBoard_C.GetConnectedPlayersCount
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  PlayerCount                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ScoreBoard_C::GetConnectedPlayersCount(int32* PlayerCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScoreBoard_C", "GetConnectedPlayersCount");

	Params::W_ScoreBoard_C_GetConnectedPlayersCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerCount != nullptr)
		*PlayerCount = Parms.PlayerCount;
}


// Function W_ScoreBoard.W_ScoreBoard_C.SortListOnScore
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Teams                                 Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FST_PlayerStats>*         SortedEntries                                          (Parm, OutParm)

void UW_ScoreBoard_C::SortListOnScore(E_Teams Team, TArray<struct FST_PlayerStats>* SortedEntries)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScoreBoard_C", "SortListOnScore");

	Params::W_ScoreBoard_C_SortListOnScore Parms{};

	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);

	if (SortedEntries != nullptr)
		*SortedEntries = std::move(Parms.SortedEntries);
}


// Function W_ScoreBoard.W_ScoreBoard_C.UpdateSortedEntries
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Teams                                 Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ScoreBoard_C::UpdateSortedEntries(E_Teams Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScoreBoard_C", "UpdateSortedEntries");

	Params::W_ScoreBoard_C_UpdateSortedEntries Parms{};

	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ScoreBoard.W_ScoreBoard_C.UpdateStats
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPanelWidget*                     List                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ScoreBoard_C::UpdateStats(class UPanelWidget* List)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScoreBoard_C", "UpdateStats");

	Params::W_ScoreBoard_C_UpdateStats Parms{};

	Parms.List = List;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ScoreBoard.W_ScoreBoard_C.SetServerName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UW_ScoreBoard_C::SetServerName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScoreBoard_C", "SetServerName");

	Params::W_ScoreBoard_C_SetServerName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_ScoreBoard.W_ScoreBoard_C.GetSpectatorAmount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  PlayerCount                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ScoreBoard_C::GetSpectatorAmount(int32* PlayerCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScoreBoard_C", "GetSpectatorAmount");

	Params::W_ScoreBoard_C_GetSpectatorAmount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerCount != nullptr)
		*PlayerCount = Parms.PlayerCount;
}


// Function W_ScoreBoard.W_ScoreBoard_C.SetPlayerAmount
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UW_ScoreBoard_C::SetPlayerAmount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScoreBoard_C", "SetPlayerAmount");

	Params::W_ScoreBoard_C_SetPlayerAmount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_ScoreBoard.W_ScoreBoard_C.SetHostName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UW_ScoreBoard_C::SetHostName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ScoreBoard_C", "SetHostName");

	Params::W_ScoreBoard_C_SetHostName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

