#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Burning

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_BuffDebuffBase_classes.hpp"
#include "E_Teams_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Burning.BP_Burning_C
// 0x0020 (0x0288 - 0x0268)
class ABP_Burning_C final : public ABP_BuffDebuffBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Burning_C;                       // 0x0268(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   PointLight;                                        // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio;                                             // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Burning(int32 EntryPoint);
	void EndBuff();
	void Refresh();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Burning_C">();
	}
	static class ABP_Burning_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Burning_C>();
	}
};
static_assert(alignof(ABP_Burning_C) == 0x000008, "Wrong alignment on ABP_Burning_C");
static_assert(sizeof(ABP_Burning_C) == 0x000288, "Wrong size on ABP_Burning_C");
static_assert(offsetof(ABP_Burning_C, UberGraphFrame_BP_Burning_C) == 0x000268, "Member 'ABP_Burning_C::UberGraphFrame_BP_Burning_C' has a wrong offset!");
static_assert(offsetof(ABP_Burning_C, PointLight) == 0x000270, "Member 'ABP_Burning_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_Burning_C, Audio) == 0x000278, "Member 'ABP_Burning_C::Audio' has a wrong offset!");
static_assert(offsetof(ABP_Burning_C, ParticleSystem) == 0x000280, "Member 'ABP_Burning_C::ParticleSystem' has a wrong offset!");

}

