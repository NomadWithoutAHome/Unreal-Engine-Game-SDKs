#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_SpecialActionStack

#include "Basic.hpp"

#include "ST_Notification_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_SpecialActionStack.W_SpecialActionStack_C.ExecuteUbergraph_W_SpecialActionStack
// 0x0118 (0x0118 - 0x0000)
struct W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Message;                        // 0x0048(0x0018)()
	struct FLinearColor                           K2Node_CustomEvent_Color;                          // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_Tag;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_KilledPlayerUsername;           // 0x0078(0x0018)()
	struct FST_Notification                       K2Node_MakeStruct_ST_Notification;                 // 0x0090(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfNotificationAlreadyExists_AlreadyExistsAndReplayed; // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x00E0(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_SpecialActionNotification_C*         K2Node_DynamicCast_AsW_Special_Action_Notification; // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack) == 0x000008, "Wrong alignment on W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack");
static_assert(sizeof(W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack) == 0x000118, "Wrong size on W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack");
static_assert(offsetof(W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack, EntryPoint) == 0x000000, "Member 'W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack, K2Node_Event_MyGeometry) == 0x000008, "Member 'W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack, K2Node_Event_InDeltaTime) == 0x000040, "Member 'W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack, K2Node_CustomEvent_Message) == 0x000048, "Member 'W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack::K2Node_CustomEvent_Message' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack, K2Node_CustomEvent_Color) == 0x000060, "Member 'W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack::K2Node_CustomEvent_Color' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack, K2Node_CustomEvent_Tag) == 0x000070, "Member 'W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack::K2Node_CustomEvent_Tag' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack, K2Node_CustomEvent_KilledPlayerUsername) == 0x000078, "Member 'W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack::K2Node_CustomEvent_KilledPlayerUsername' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack, K2Node_MakeStruct_ST_Notification) == 0x000090, "Member 'W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack::K2Node_MakeStruct_ST_Notification' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack, CallFunc_CheckIfNotificationAlreadyExists_AlreadyExistsAndReplayed) == 0x0000D8, "Member 'W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack::CallFunc_CheckIfNotificationAlreadyExists_AlreadyExistsAndReplayed' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000D9, "Member 'W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack, CallFunc_GetAllChildren_ReturnValue) == 0x0000E0, "Member 'W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack, CallFunc_Greater_IntInt_ReturnValue) == 0x0000F4, "Member 'W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack, CallFunc_GetChildAt_ReturnValue) == 0x0000F8, "Member 'W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack, Temp_bool_IsClosed_Variable_1) == 0x000100, "Member 'W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack, K2Node_DynamicCast_AsW_Special_Action_Notification) == 0x000108, "Member 'W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack::K2Node_DynamicCast_AsW_Special_Action_Notification' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack, Temp_bool_Has_Been_Initd_Variable_1) == 0x000111, "Member 'W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");

// Function W_SpecialActionStack.W_SpecialActionStack_C.AddNotification
// 0x0048 (0x0048 - 0x0000)
struct W_SpecialActionStack_C_AddNotification final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FLinearColor                           Color;                                             // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Tag;                                               // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   KilledPlayerUsername;                              // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_SpecialActionStack_C_AddNotification) == 0x000008, "Wrong alignment on W_SpecialActionStack_C_AddNotification");
static_assert(sizeof(W_SpecialActionStack_C_AddNotification) == 0x000048, "Wrong size on W_SpecialActionStack_C_AddNotification");
static_assert(offsetof(W_SpecialActionStack_C_AddNotification, Message) == 0x000000, "Member 'W_SpecialActionStack_C_AddNotification::Message' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_AddNotification, Color) == 0x000018, "Member 'W_SpecialActionStack_C_AddNotification::Color' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_AddNotification, Tag) == 0x000028, "Member 'W_SpecialActionStack_C_AddNotification::Tag' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_AddNotification, KilledPlayerUsername) == 0x000030, "Member 'W_SpecialActionStack_C_AddNotification::KilledPlayerUsername' has a wrong offset!");

// Function W_SpecialActionStack.W_SpecialActionStack_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_SpecialActionStack_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SpecialActionStack_C_Tick) == 0x000004, "Wrong alignment on W_SpecialActionStack_C_Tick");
static_assert(sizeof(W_SpecialActionStack_C_Tick) == 0x00003C, "Wrong size on W_SpecialActionStack_C_Tick");
static_assert(offsetof(W_SpecialActionStack_C_Tick, MyGeometry) == 0x000000, "Member 'W_SpecialActionStack_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_Tick, InDeltaTime) == 0x000038, "Member 'W_SpecialActionStack_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_SpecialActionStack.W_SpecialActionStack_C.CheckIfNotificationAlreadyExists
// 0x0090 (0x0090 - 0x0000)
struct W_SpecialActionStack_C_CheckIfNotificationAlreadyExists final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FLinearColor                           Color;                                             // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Tag;                                               // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   KilledPlayerUsername;                              // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          AlreadyExistsAndReplayed;                          // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_SpecialActionNotification_C*         K2Node_DynamicCast_AsW_Special_Action_Notification; // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SpecialActionStack_C_CheckIfNotificationAlreadyExists) == 0x000008, "Wrong alignment on W_SpecialActionStack_C_CheckIfNotificationAlreadyExists");
static_assert(sizeof(W_SpecialActionStack_C_CheckIfNotificationAlreadyExists) == 0x000090, "Wrong size on W_SpecialActionStack_C_CheckIfNotificationAlreadyExists");
static_assert(offsetof(W_SpecialActionStack_C_CheckIfNotificationAlreadyExists, Message) == 0x000000, "Member 'W_SpecialActionStack_C_CheckIfNotificationAlreadyExists::Message' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_CheckIfNotificationAlreadyExists, Color) == 0x000018, "Member 'W_SpecialActionStack_C_CheckIfNotificationAlreadyExists::Color' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_CheckIfNotificationAlreadyExists, Tag) == 0x000028, "Member 'W_SpecialActionStack_C_CheckIfNotificationAlreadyExists::Tag' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_CheckIfNotificationAlreadyExists, KilledPlayerUsername) == 0x000030, "Member 'W_SpecialActionStack_C_CheckIfNotificationAlreadyExists::KilledPlayerUsername' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_CheckIfNotificationAlreadyExists, AlreadyExistsAndReplayed) == 0x000048, "Member 'W_SpecialActionStack_C_CheckIfNotificationAlreadyExists::AlreadyExistsAndReplayed' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_CheckIfNotificationAlreadyExists, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'W_SpecialActionStack_C_CheckIfNotificationAlreadyExists::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_CheckIfNotificationAlreadyExists, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'W_SpecialActionStack_C_CheckIfNotificationAlreadyExists::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_CheckIfNotificationAlreadyExists, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'W_SpecialActionStack_C_CheckIfNotificationAlreadyExists::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_CheckIfNotificationAlreadyExists, CallFunc_GetAllChildren_ReturnValue) == 0x000058, "Member 'W_SpecialActionStack_C_CheckIfNotificationAlreadyExists::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_CheckIfNotificationAlreadyExists, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'W_SpecialActionStack_C_CheckIfNotificationAlreadyExists::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_CheckIfNotificationAlreadyExists, CallFunc_Array_Get_Item) == 0x000070, "Member 'W_SpecialActionStack_C_CheckIfNotificationAlreadyExists::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_CheckIfNotificationAlreadyExists, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'W_SpecialActionStack_C_CheckIfNotificationAlreadyExists::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_CheckIfNotificationAlreadyExists, K2Node_DynamicCast_AsW_Special_Action_Notification) == 0x000080, "Member 'W_SpecialActionStack_C_CheckIfNotificationAlreadyExists::K2Node_DynamicCast_AsW_Special_Action_Notification' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_CheckIfNotificationAlreadyExists, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'W_SpecialActionStack_C_CheckIfNotificationAlreadyExists::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_CheckIfNotificationAlreadyExists, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000089, "Member 'W_SpecialActionStack_C_CheckIfNotificationAlreadyExists::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function W_SpecialActionStack.W_SpecialActionStack_C.AddEntry
// 0x0080 (0x0080 - 0x0000)
struct W_SpecialActionStack_C_AddEntry final
{
public:
	class UPanelWidget*                           HorBox;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_Notification                       Notification;                                      // 0x0008(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UW_SpecialActionNotification_C*         CallFunc_Create_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     K2Node_DynamicCast_AsHorizontal_Box_Slot;          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SpecialActionStack_C_AddEntry) == 0x000008, "Wrong alignment on W_SpecialActionStack_C_AddEntry");
static_assert(sizeof(W_SpecialActionStack_C_AddEntry) == 0x000080, "Wrong size on W_SpecialActionStack_C_AddEntry");
static_assert(offsetof(W_SpecialActionStack_C_AddEntry, HorBox) == 0x000000, "Member 'W_SpecialActionStack_C_AddEntry::HorBox' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_AddEntry, Notification) == 0x000008, "Member 'W_SpecialActionStack_C_AddEntry::Notification' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_AddEntry, CallFunc_Create_ReturnValue) == 0x000050, "Member 'W_SpecialActionStack_C_AddEntry::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_AddEntry, CallFunc_AddChild_ReturnValue) == 0x000058, "Member 'W_SpecialActionStack_C_AddEntry::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_AddEntry, K2Node_DynamicCast_AsHorizontal_Box_Slot) == 0x000060, "Member 'W_SpecialActionStack_C_AddEntry::K2Node_DynamicCast_AsHorizontal_Box_Slot' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_AddEntry, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'W_SpecialActionStack_C_AddEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_AddEntry, CallFunc_MakeLiteralFloat_ReturnValue) == 0x00006C, "Member 'W_SpecialActionStack_C_AddEntry::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SpecialActionStack_C_AddEntry, K2Node_MakeStruct_Margin) == 0x000070, "Member 'W_SpecialActionStack_C_AddEntry::K2Node_MakeStruct_Margin' has a wrong offset!");

}

