#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Rocket_0

#include "Basic.hpp"

#include "E_Teams_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Rocket.BP_Rocket_C.ExecuteUbergraph_BP_Rocket
// 0x00C8 (0x00C8 - 0x0000)
struct BP_Rocket_C_ExecuteUbergraph_BP_Rocket final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0048(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0058(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0070(0x0018)()
	E_Teams                                       Temp_byte_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket) == 0x000008, "Wrong alignment on BP_Rocket_C_ExecuteUbergraph_BP_Rocket");
static_assert(sizeof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket) == 0x0000C8, "Wrong size on BP_Rocket_C_ExecuteUbergraph_BP_Rocket");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, EntryPoint) == 0x000000, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, Temp_struct_Variable) == 0x000004, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, K2Node_SwitchEnum_CmpSuccess) == 0x000014, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, Temp_struct_Variable_1) == 0x000018, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, Temp_struct_Variable_2) == 0x000028, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, K2Node_MakeArray_Array_1) == 0x000048, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, CallFunc_Format_ReturnValue) == 0x000058, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, CallFunc_Format_ReturnValue_1) == 0x000070, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, Temp_byte_Variable) == 0x000088, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, K2Node_Select_Default) == 0x00008C, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, CallFunc_BreakColor_R) == 0x00009C, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, CallFunc_BreakColor_G) == 0x0000A0, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, CallFunc_BreakColor_B) == 0x0000A4, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, CallFunc_BreakColor_A) == 0x0000A8, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, CallFunc_MakeVector_ReturnValue) == 0x0000AC, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000B8, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

}

