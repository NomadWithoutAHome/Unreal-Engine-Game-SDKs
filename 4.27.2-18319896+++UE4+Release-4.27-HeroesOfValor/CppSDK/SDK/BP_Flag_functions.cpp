#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Flag

#include "Basic.hpp"

#include "BP_Flag_classes.hpp"
#include "BP_Flag_parameters.hpp"


namespace SDK
{

// Function BP_Flag.BP_Flag_C.ExecuteUbergraph_BP_Flag
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Flag_C::ExecuteUbergraph_BP_Flag(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flag_C", "ExecuteUbergraph_BP_Flag");

	Params::BP_Flag_C_ExecuteUbergraph_BP_Flag Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Flag.BP_Flag_C.RefreshFlag
// (BlueprintCallable, BlueprintEvent)

void ABP_Flag_C::RefreshFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flag_C", "RefreshFlag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Flag.BP_Flag_C.ControllingTeamChanged
// (BlueprintCallable, BlueprintEvent)

void ABP_Flag_C::ControllingTeamChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flag_C", "ControllingTeamChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Flag.BP_Flag_C.MC_Capture
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Teams                                 Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Flag_C::MC_Capture(E_Teams Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flag_C", "MC_Capture");

	Params::BP_Flag_C_MC_Capture Parms{};

	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Flag.BP_Flag_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Flag_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flag_C", "ReceiveTick");

	Params::BP_Flag_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Flag.BP_Flag_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Flag_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flag_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Flag.BP_Flag_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Flag_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flag_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Flag.BP_Flag_C.GetCapturingTeam
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsBeingCaptured                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// E_Teams*                                CapturingTeam_0                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Flag_C::GetCapturingTeam(bool* IsBeingCaptured, E_Teams* CapturingTeam_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flag_C", "GetCapturingTeam");

	Params::BP_Flag_C_GetCapturingTeam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsBeingCaptured != nullptr)
		*IsBeingCaptured = Parms.IsBeingCaptured;

	if (CapturingTeam_0 != nullptr)
		*CapturingTeam_0 = Parms.CapturingTeam_0;
}


// Function BP_Flag.BP_Flag_C.GrantScoreToCapturingPawns
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Flag_C::GrantScoreToCapturingPawns()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flag_C", "GrantScoreToCapturingPawns");

	UObject::ProcessEvent(Func, nullptr);
}

}

