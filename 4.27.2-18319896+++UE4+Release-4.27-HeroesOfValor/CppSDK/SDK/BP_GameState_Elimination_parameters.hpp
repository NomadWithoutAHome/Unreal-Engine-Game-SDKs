#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameState_Elimination

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_GameState_Elimination.BP_GameState_Elimination_C.ExecuteUbergraph_BP_GameState_Elimination
// 0x0014 (0x0014 - 0x0000)
struct BP_GameState_Elimination_C_ExecuteUbergraph_BP_GameState_Elimination final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameState_Elimination_C_ExecuteUbergraph_BP_GameState_Elimination) == 0x000004, "Wrong alignment on BP_GameState_Elimination_C_ExecuteUbergraph_BP_GameState_Elimination");
static_assert(sizeof(BP_GameState_Elimination_C_ExecuteUbergraph_BP_GameState_Elimination) == 0x000014, "Wrong size on BP_GameState_Elimination_C_ExecuteUbergraph_BP_GameState_Elimination");
static_assert(offsetof(BP_GameState_Elimination_C_ExecuteUbergraph_BP_GameState_Elimination, EntryPoint) == 0x000000, "Member 'BP_GameState_Elimination_C_ExecuteUbergraph_BP_GameState_Elimination::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GameState_Elimination_C_ExecuteUbergraph_BP_GameState_Elimination, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'BP_GameState_Elimination_C_ExecuteUbergraph_BP_GameState_Elimination::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameState_Elimination_C_ExecuteUbergraph_BP_GameState_Elimination, CallFunc_HasAuthority_ReturnValue) == 0x000005, "Member 'BP_GameState_Elimination_C_ExecuteUbergraph_BP_GameState_Elimination::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Elimination_C_ExecuteUbergraph_BP_GameState_Elimination, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_GameState_Elimination_C_ExecuteUbergraph_BP_GameState_Elimination::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_GameState_Elimination_C_ExecuteUbergraph_BP_GameState_Elimination, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BP_GameState_Elimination_C_ExecuteUbergraph_BP_GameState_Elimination::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameState_Elimination_C_ExecuteUbergraph_BP_GameState_Elimination, Temp_bool_IsClosed_Variable) == 0x000010, "Member 'BP_GameState_Elimination_C_ExecuteUbergraph_BP_GameState_Elimination::Temp_bool_IsClosed_Variable' has a wrong offset!");

// Function BP_GameState_Elimination.BP_GameState_Elimination_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_GameState_Elimination_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameState_Elimination_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_GameState_Elimination_C_ReceiveTick");
static_assert(sizeof(BP_GameState_Elimination_C_ReceiveTick) == 0x000004, "Wrong size on BP_GameState_Elimination_C_ReceiveTick");
static_assert(offsetof(BP_GameState_Elimination_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_GameState_Elimination_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

