#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ScoreboardEntry

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_Units_structs.hpp"


namespace SDK::Params
{

// Function W_ScoreboardEntry.W_ScoreboardEntry_C.ExecuteUbergraph_W_ScoreboardEntry
// 0x0090 (0x0090 - 0x0000)
struct W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0010(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_ByteToFloat_ReturnValue;             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry) == 0x000008, "Wrong alignment on W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry");
static_assert(sizeof(W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry) == 0x000090, "Wrong size on W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry");
static_assert(offsetof(W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry, EntryPoint) == 0x000000, "Member 'W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry, Temp_bool_True_if_break_was_hit_Variable) == 0x000004, "Member 'W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry, Temp_int_Array_Index_Variable) == 0x000008, "Member 'W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry, Temp_bool_IsClosed_Variable) == 0x00000D, "Member 'W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry, Temp_bool_Has_Been_Initd_Variable) == 0x00000E, "Member 'W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry, K2Node_Event_MyGeometry) == 0x000010, "Member 'W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry, K2Node_Event_InDeltaTime) == 0x000048, "Member 'W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry, CallFunc_GetGameState_ReturnValue) == 0x000050, "Member 'W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry, CallFunc_Array_Get_Item) == 0x000058, "Member 'W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry, K2Node_DynamicCast_AsBP_Player_State) == 0x000068, "Member 'W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry::K2Node_DynamicCast_AsBP_Player_State' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry, CallFunc_Conv_ByteToFloat_ReturnValue) == 0x000078, "Member 'W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry::CallFunc_Conv_ByteToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000080, "Member 'W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry, CallFunc_BooleanAND_ReturnValue) == 0x000084, "Member 'W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00008C, "Member 'W_ScoreboardEntry_C_ExecuteUbergraph_W_ScoreboardEntry::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function W_ScoreboardEntry.W_ScoreboardEntry_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_ScoreboardEntry_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScoreboardEntry_C_Tick) == 0x000004, "Wrong alignment on W_ScoreboardEntry_C_Tick");
static_assert(sizeof(W_ScoreboardEntry_C_Tick) == 0x00003C, "Wrong size on W_ScoreboardEntry_C_Tick");
static_assert(offsetof(W_ScoreboardEntry_C_Tick, MyGeometry) == 0x000000, "Member 'W_ScoreboardEntry_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_Tick, InDeltaTime) == 0x000038, "Member 'W_ScoreboardEntry_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_ScoreboardEntry.W_ScoreboardEntry_C.UpdateStats
// 0x0030 (0x0030 - 0x0000)
struct W_ScoreboardEntry_C_UpdateStats final
{
public:
	int32                                         Kills_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Deaths_0;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Score_0;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 UserName_0;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PlayerIndex_0;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSelf_0;                                          // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPlayer_0;                                        // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Units                                       PlayerClass_0;                                     // 0x0026(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Rank_0;                                            // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AssistKills_0;                                     // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScoreboardEntry_C_UpdateStats) == 0x000008, "Wrong alignment on W_ScoreboardEntry_C_UpdateStats");
static_assert(sizeof(W_ScoreboardEntry_C_UpdateStats) == 0x000030, "Wrong size on W_ScoreboardEntry_C_UpdateStats");
static_assert(offsetof(W_ScoreboardEntry_C_UpdateStats, Kills_0) == 0x000000, "Member 'W_ScoreboardEntry_C_UpdateStats::Kills_0' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_UpdateStats, Deaths_0) == 0x000004, "Member 'W_ScoreboardEntry_C_UpdateStats::Deaths_0' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_UpdateStats, Score_0) == 0x000008, "Member 'W_ScoreboardEntry_C_UpdateStats::Score_0' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_UpdateStats, UserName_0) == 0x000010, "Member 'W_ScoreboardEntry_C_UpdateStats::UserName_0' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_UpdateStats, PlayerIndex_0) == 0x000020, "Member 'W_ScoreboardEntry_C_UpdateStats::PlayerIndex_0' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_UpdateStats, IsSelf_0) == 0x000024, "Member 'W_ScoreboardEntry_C_UpdateStats::IsSelf_0' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_UpdateStats, IsPlayer_0) == 0x000025, "Member 'W_ScoreboardEntry_C_UpdateStats::IsPlayer_0' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_UpdateStats, PlayerClass_0) == 0x000026, "Member 'W_ScoreboardEntry_C_UpdateStats::PlayerClass_0' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_UpdateStats, Rank_0) == 0x000028, "Member 'W_ScoreboardEntry_C_UpdateStats::Rank_0' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_UpdateStats, AssistKills_0) == 0x00002C, "Member 'W_ScoreboardEntry_C_UpdateStats::AssistKills_0' has a wrong offset!");

// Function W_ScoreboardEntry.W_ScoreboardEntry_C.GetStats
// 0x0030 (0x0030 - 0x0000)
struct W_ScoreboardEntry_C_GetStats final
{
public:
	int32                                         Kills_0;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Deaths_0;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Score_0;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 UserName_0;                                        // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PlayerIndex_0;                                     // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSelf_0;                                          // 0x0024(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPlayer_0;                                        // 0x0025(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Units                                       PlayerClass_0;                                     // 0x0026(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Rank_0;                                            // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AssistKills_0;                                     // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScoreboardEntry_C_GetStats) == 0x000008, "Wrong alignment on W_ScoreboardEntry_C_GetStats");
static_assert(sizeof(W_ScoreboardEntry_C_GetStats) == 0x000030, "Wrong size on W_ScoreboardEntry_C_GetStats");
static_assert(offsetof(W_ScoreboardEntry_C_GetStats, Kills_0) == 0x000000, "Member 'W_ScoreboardEntry_C_GetStats::Kills_0' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_GetStats, Deaths_0) == 0x000004, "Member 'W_ScoreboardEntry_C_GetStats::Deaths_0' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_GetStats, Score_0) == 0x000008, "Member 'W_ScoreboardEntry_C_GetStats::Score_0' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_GetStats, UserName_0) == 0x000010, "Member 'W_ScoreboardEntry_C_GetStats::UserName_0' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_GetStats, PlayerIndex_0) == 0x000020, "Member 'W_ScoreboardEntry_C_GetStats::PlayerIndex_0' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_GetStats, IsSelf_0) == 0x000024, "Member 'W_ScoreboardEntry_C_GetStats::IsSelf_0' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_GetStats, IsPlayer_0) == 0x000025, "Member 'W_ScoreboardEntry_C_GetStats::IsPlayer_0' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_GetStats, PlayerClass_0) == 0x000026, "Member 'W_ScoreboardEntry_C_GetStats::PlayerClass_0' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_GetStats, Rank_0) == 0x000028, "Member 'W_ScoreboardEntry_C_GetStats::Rank_0' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_GetStats, AssistKills_0) == 0x00002C, "Member 'W_ScoreboardEntry_C_GetStats::AssistKills_0' has a wrong offset!");

// Function W_ScoreboardEntry.W_ScoreboardEntry_C.SetBorderColor
// 0x0010 (0x0010 - 0x0000)
struct W_ScoreboardEntry_C_SetBorderColor final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScoreboardEntry_C_SetBorderColor) == 0x000004, "Wrong alignment on W_ScoreboardEntry_C_SetBorderColor");
static_assert(sizeof(W_ScoreboardEntry_C_SetBorderColor) == 0x000010, "Wrong size on W_ScoreboardEntry_C_SetBorderColor");
static_assert(offsetof(W_ScoreboardEntry_C_SetBorderColor, ReturnValue) == 0x000000, "Member 'W_ScoreboardEntry_C_SetBorderColor::ReturnValue' has a wrong offset!");

// Function W_ScoreboardEntry.W_ScoreboardEntry_C.GetUsername
// 0x0030 (0x0030 - 0x0000)
struct W_ScoreboardEntry_C_GetUsername final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0018)()
};
static_assert(alignof(W_ScoreboardEntry_C_GetUsername) == 0x000008, "Wrong alignment on W_ScoreboardEntry_C_GetUsername");
static_assert(sizeof(W_ScoreboardEntry_C_GetUsername) == 0x000030, "Wrong size on W_ScoreboardEntry_C_GetUsername");
static_assert(offsetof(W_ScoreboardEntry_C_GetUsername, ReturnValue) == 0x000000, "Member 'W_ScoreboardEntry_C_GetUsername::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_GetUsername, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'W_ScoreboardEntry_C_GetUsername::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function W_ScoreboardEntry.W_ScoreboardEntry_C.SetScore
// 0x0030 (0x0030 - 0x0000)
struct W_ScoreboardEntry_C_SetScore final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
};
static_assert(alignof(W_ScoreboardEntry_C_SetScore) == 0x000008, "Wrong alignment on W_ScoreboardEntry_C_SetScore");
static_assert(sizeof(W_ScoreboardEntry_C_SetScore) == 0x000030, "Wrong size on W_ScoreboardEntry_C_SetScore");
static_assert(offsetof(W_ScoreboardEntry_C_SetScore, ReturnValue) == 0x000000, "Member 'W_ScoreboardEntry_C_SetScore::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_SetScore, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'W_ScoreboardEntry_C_SetScore::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function W_ScoreboardEntry.W_ScoreboardEntry_C.SetPlayerClassIcon
// 0x0150 (0x0150 - 0x0000)
struct W_ScoreboardEntry_C_SetPlayerClassIcon final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x0088)(Parm, OutParm, ReturnParm)
	E_Units                                       Temp_byte_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_5;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default;                             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue;         // 0x00C8(0x0088)()
};
static_assert(alignof(W_ScoreboardEntry_C_SetPlayerClassIcon) == 0x000008, "Wrong alignment on W_ScoreboardEntry_C_SetPlayerClassIcon");
static_assert(sizeof(W_ScoreboardEntry_C_SetPlayerClassIcon) == 0x000150, "Wrong size on W_ScoreboardEntry_C_SetPlayerClassIcon");
static_assert(offsetof(W_ScoreboardEntry_C_SetPlayerClassIcon, ReturnValue) == 0x000000, "Member 'W_ScoreboardEntry_C_SetPlayerClassIcon::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_SetPlayerClassIcon, Temp_byte_Variable) == 0x000088, "Member 'W_ScoreboardEntry_C_SetPlayerClassIcon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_SetPlayerClassIcon, Temp_object_Variable) == 0x000090, "Member 'W_ScoreboardEntry_C_SetPlayerClassIcon::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_SetPlayerClassIcon, Temp_object_Variable_1) == 0x000098, "Member 'W_ScoreboardEntry_C_SetPlayerClassIcon::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_SetPlayerClassIcon, Temp_object_Variable_2) == 0x0000A0, "Member 'W_ScoreboardEntry_C_SetPlayerClassIcon::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_SetPlayerClassIcon, Temp_object_Variable_3) == 0x0000A8, "Member 'W_ScoreboardEntry_C_SetPlayerClassIcon::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_SetPlayerClassIcon, Temp_object_Variable_4) == 0x0000B0, "Member 'W_ScoreboardEntry_C_SetPlayerClassIcon::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_SetPlayerClassIcon, Temp_object_Variable_5) == 0x0000B8, "Member 'W_ScoreboardEntry_C_SetPlayerClassIcon::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_SetPlayerClassIcon, K2Node_Select_Default) == 0x0000C0, "Member 'W_ScoreboardEntry_C_SetPlayerClassIcon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_SetPlayerClassIcon, CallFunc_MakeBrushFromTexture_ReturnValue) == 0x0000C8, "Member 'W_ScoreboardEntry_C_SetPlayerClassIcon::CallFunc_MakeBrushFromTexture_ReturnValue' has a wrong offset!");

// Function W_ScoreboardEntry.W_ScoreboardEntry_C.SetPlayerClassIconColor
// 0x0084 (0x0084 - 0x0000)
struct W_ScoreboardEntry_C_SetPlayerClassIconColor final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Units                                       Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScoreboardEntry_C_SetPlayerClassIconColor) == 0x000004, "Wrong alignment on W_ScoreboardEntry_C_SetPlayerClassIconColor");
static_assert(sizeof(W_ScoreboardEntry_C_SetPlayerClassIconColor) == 0x000084, "Wrong size on W_ScoreboardEntry_C_SetPlayerClassIconColor");
static_assert(offsetof(W_ScoreboardEntry_C_SetPlayerClassIconColor, ReturnValue) == 0x000000, "Member 'W_ScoreboardEntry_C_SetPlayerClassIconColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_SetPlayerClassIconColor, Temp_byte_Variable) == 0x000010, "Member 'W_ScoreboardEntry_C_SetPlayerClassIconColor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_SetPlayerClassIconColor, Temp_struct_Variable) == 0x000014, "Member 'W_ScoreboardEntry_C_SetPlayerClassIconColor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_SetPlayerClassIconColor, Temp_struct_Variable_1) == 0x000024, "Member 'W_ScoreboardEntry_C_SetPlayerClassIconColor::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_SetPlayerClassIconColor, Temp_struct_Variable_2) == 0x000034, "Member 'W_ScoreboardEntry_C_SetPlayerClassIconColor::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_SetPlayerClassIconColor, Temp_struct_Variable_3) == 0x000044, "Member 'W_ScoreboardEntry_C_SetPlayerClassIconColor::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_SetPlayerClassIconColor, Temp_struct_Variable_4) == 0x000054, "Member 'W_ScoreboardEntry_C_SetPlayerClassIconColor::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_SetPlayerClassIconColor, Temp_struct_Variable_5) == 0x000064, "Member 'W_ScoreboardEntry_C_SetPlayerClassIconColor::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_SetPlayerClassIconColor, K2Node_Select_Default) == 0x000074, "Member 'W_ScoreboardEntry_C_SetPlayerClassIconColor::K2Node_Select_Default' has a wrong offset!");

// Function W_ScoreboardEntry.W_ScoreboardEntry_C.SetPing
// 0x0030 (0x0030 - 0x0000)
struct W_ScoreboardEntry_C_SetPing final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0018(0x0018)()
};
static_assert(alignof(W_ScoreboardEntry_C_SetPing) == 0x000008, "Wrong alignment on W_ScoreboardEntry_C_SetPing");
static_assert(sizeof(W_ScoreboardEntry_C_SetPing) == 0x000030, "Wrong size on W_ScoreboardEntry_C_SetPing");
static_assert(offsetof(W_ScoreboardEntry_C_SetPing, ReturnValue) == 0x000000, "Member 'W_ScoreboardEntry_C_SetPing::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_SetPing, CallFunc_Conv_FloatToText_ReturnValue) == 0x000018, "Member 'W_ScoreboardEntry_C_SetPing::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

// Function W_ScoreboardEntry.W_ScoreboardEntry_C.SetPingColor
// 0x00D8 (0x00D8 - 0x0000)
struct W_ScoreboardEntry_C_SetPingColor final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0028(0x0028)()
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x009C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x00B0(0x0028)()
};
static_assert(alignof(W_ScoreboardEntry_C_SetPingColor) == 0x000008, "Wrong alignment on W_ScoreboardEntry_C_SetPingColor");
static_assert(sizeof(W_ScoreboardEntry_C_SetPingColor) == 0x0000D8, "Wrong size on W_ScoreboardEntry_C_SetPingColor");
static_assert(offsetof(W_ScoreboardEntry_C_SetPingColor, ReturnValue) == 0x000000, "Member 'W_ScoreboardEntry_C_SetPingColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_SetPingColor, K2Node_MakeStruct_SlateColor) == 0x000028, "Member 'W_ScoreboardEntry_C_SetPingColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_SetPingColor, Temp_bool_Variable) == 0x000050, "Member 'W_ScoreboardEntry_C_SetPingColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_SetPingColor, Temp_struct_Variable) == 0x000054, "Member 'W_ScoreboardEntry_C_SetPingColor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_SetPingColor, Temp_struct_Variable_1) == 0x000064, "Member 'W_ScoreboardEntry_C_SetPingColor::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_SetPingColor, Temp_bool_Variable_1) == 0x000074, "Member 'W_ScoreboardEntry_C_SetPingColor::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_SetPingColor, Temp_struct_Variable_2) == 0x000078, "Member 'W_ScoreboardEntry_C_SetPingColor::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_SetPingColor, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000088, "Member 'W_ScoreboardEntry_C_SetPingColor::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_SetPingColor, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000089, "Member 'W_ScoreboardEntry_C_SetPingColor::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_SetPingColor, K2Node_Select_Default) == 0x00008C, "Member 'W_ScoreboardEntry_C_SetPingColor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_SetPingColor, K2Node_Select_Default_1) == 0x00009C, "Member 'W_ScoreboardEntry_C_SetPingColor::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_ScoreboardEntry_C_SetPingColor, K2Node_MakeStruct_SlateColor_1) == 0x0000B0, "Member 'W_ScoreboardEntry_C_SetPingColor::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

}

