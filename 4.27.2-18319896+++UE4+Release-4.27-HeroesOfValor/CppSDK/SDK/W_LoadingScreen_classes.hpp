#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_LoadingScreen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_LoadingScreen.W_LoadingScreen_C
// 0x0068 (0x02C8 - 0x0260)
class UW_LoadingScreen_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_0;                                           // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_99;                                          // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_240;                                         // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_318;                                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_65;                                      // 0x0288(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_101;                                     // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Loading_Text;                                      // 0x0298(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   MapName;                                           // 0x02B0(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)

public:
	void ExecuteUbergraph_W_LoadingScreen(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_LoadingScreen_C">();
	}
	static class UW_LoadingScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_LoadingScreen_C>();
	}
};
static_assert(alignof(UW_LoadingScreen_C) == 0x000008, "Wrong alignment on UW_LoadingScreen_C");
static_assert(sizeof(UW_LoadingScreen_C) == 0x0002C8, "Wrong size on UW_LoadingScreen_C");
static_assert(offsetof(UW_LoadingScreen_C, UberGraphFrame) == 0x000260, "Member 'UW_LoadingScreen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_LoadingScreen_C, Image_0) == 0x000268, "Member 'UW_LoadingScreen_C::Image_0' has a wrong offset!");
static_assert(offsetof(UW_LoadingScreen_C, Image_99) == 0x000270, "Member 'UW_LoadingScreen_C::Image_99' has a wrong offset!");
static_assert(offsetof(UW_LoadingScreen_C, Image_240) == 0x000278, "Member 'UW_LoadingScreen_C::Image_240' has a wrong offset!");
static_assert(offsetof(UW_LoadingScreen_C, Image_318) == 0x000280, "Member 'UW_LoadingScreen_C::Image_318' has a wrong offset!");
static_assert(offsetof(UW_LoadingScreen_C, TextBlock_65) == 0x000288, "Member 'UW_LoadingScreen_C::TextBlock_65' has a wrong offset!");
static_assert(offsetof(UW_LoadingScreen_C, TextBlock_101) == 0x000290, "Member 'UW_LoadingScreen_C::TextBlock_101' has a wrong offset!");
static_assert(offsetof(UW_LoadingScreen_C, Loading_Text) == 0x000298, "Member 'UW_LoadingScreen_C::Loading_Text' has a wrong offset!");
static_assert(offsetof(UW_LoadingScreen_C, MapName) == 0x0002B0, "Member 'UW_LoadingScreen_C::MapName' has a wrong offset!");

}

