#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameStateBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SteamCore_structs.hpp"
#include "ST_ServerManagerPlayerInfo_structs.hpp"
#include "ST_PlayerStats_structs.hpp"
#include "ST_MapVote_structs.hpp"
#include "E_Teams_structs.hpp"
#include "E_Scenarios_structs.hpp"
#include "E_Units_structs.hpp"
#include "ST_Map_structs.hpp"
#include "ST_Selectable_structs.hpp"
#include "ST_BotName_structs.hpp"
#include "E_VehicleSkinThemes_structs.hpp"
#include "AdvancedSessions_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_GameStateBase.BP_GameStateBase_C.ExecuteUbergraph_BP_GameStateBase
// 0x0660 (0x0660 - 0x0000)
struct BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DecalManager_C*                     CallFunc_FinishSpawningActor_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_4;               // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_KillFeed_C*                          CallFunc_Create_ReturnValue;                       // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_4;                     // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_5;               // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB[0x5];                                       // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_SpawnTransform;                 // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	class UClass*                                 K2Node_CustomEvent_Class;                          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_AIControlled;                   // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Teams                                       K2Node_CustomEvent_Team_1;                         // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_VehicleSkinThemes                           K2Node_CustomEvent_VehicleSkinTheme;               // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10B[0x5];                                      // 0x010B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_EndGameScreen_C*                     CallFunc_Create_ReturnValue_1;                     // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_VehicleBase_C*                      K2Node_DynamicCast_AsBP_Vehicle_Base;              // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_132[0x2];                                      // 0x0132(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetControlledObjectivesFromTeam_ObjectiveCount; // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetControlledObjectivesFromTeam_ObjectiveCount_1; // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Teams                                       K2Node_CustomEvent_Team;                           // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance;             // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_Controller_C*>               CallFunc_GetAllActorsOfClass_OutActors;            // 0x0168(0x0010)(ReferenceParm)
	class ABP_Controller_C*                       CallFunc_Array_Get_Item;                           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance_1;           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_Username;                       // 0x01B0(0x0018)()
	class FText                                   K2Node_CustomEvent_Message;                        // 0x01C8(0x0018)()
	bool                                          K2Node_CustomEvent_SpecialMessage;                 // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Controller_C*                       K2Node_DynamicCast_AsBP_Controller;                // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_6;               // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_203[0x5];                                      // 0x0203(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APawn*>                          CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0208(0x0010)(ReferenceParm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_Array_Get_Item_1;                         // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Controller_C*                       K2Node_DynamicCast_AsBP_Controller_1;              // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MapCam_C*                           K2Node_DynamicCast_AsBP_Map_Cam;                   // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_242[0x2];                                      // 0x0242(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_MapCam_C*>                   CallFunc_GetAllActorsOfClass_OutActors_2;          // 0x0248(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MapCam_C*                           CallFunc_Array_Get_Item_2;                         // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_5;                     // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_PlayerStats                        K2Node_CustomEvent_KillerStats;                    // 0x0270(0x0068)(HasGetValueTypeHash)
	struct FST_PlayerStats                        K2Node_CustomEvent_VictimStats;                    // 0x02D8(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0342(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_343[0x1];                                      // 0x0343(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeamBalance_AlliedCharacters;          // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTeamBalance_AxisCharacters;            // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x034C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D[0x3];                                      // 0x034D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeamBalance_AlliedCharacters_1;        // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTeamBalance_AxisCharacters_1;          // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance_2;           // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0372(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0373(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x0375(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x0376(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesTeamHaveAllObjectives__HasAllObjectives; // 0x0377(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesTeamHaveAllObjectives__HasAllObjectives_1; // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameModeBase_C*                     K2Node_DynamicCast_AsBP_Game_Mode_Base;            // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0398(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_3;                         // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B4[0x4];                                      // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_Map                                CallFunc_GetDataTableRowFromName_OutRow;           // 0x03B8(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0401(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_402[0x6];                                      // 0x0402(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0408(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FST_MapVote                            K2Node_MakeStruct_ST_MapVote;                      // 0x0418(0x0020)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetVotedForMap_Map;                       // 0x0438(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0450(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0460(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0470(0x0018)()
	int32                                         CallFunc_GetSessionSettings_NumConnections;        // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSessionSettings_NumPrivateConnections; // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSessionSettings_bIsLAN;                // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSessionSettings_bIsDedicated;          // 0x0491(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSessionSettings_bAllowInvites;         // 0x0492(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSessionSettings_bAllowJoinInProgress;  // 0x0493(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSessionSettings_bIsAnticheatEnabled;   // 0x0494(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_495[0x3];                                      // 0x0495(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSessionSettings_BuildUniqueID;         // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49C[0x4];                                      // 0x049C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSessionPropertyKeyPair>        CallFunc_GetSessionSettings_ExtraSettings;         // 0x04A0(0x0010)(ReferenceParm)
	EBlueprintResultSwitch                        CallFunc_GetSessionSettings_Result;                // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B1[0x7];                                      // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C1[0x7];                                      // 0x04C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameModeBase_C*                     K2Node_DynamicCast_AsBP_Game_Mode_Base_1;          // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESessionSettingSearchResult                   CallFunc_GetSessionPropertyBool_SearchResult;      // 0x04D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSessionPropertyBool_SettingValue;      // 0x04D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x04D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESessionSettingSearchResult                   CallFunc_GetSessionPropertyString_SearchResult;    // 0x04D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D5[0x3];                                      // 0x04D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSessionPropertyString_SettingValue;    // 0x04D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESessionSettingSearchResult                   CallFunc_GetSessionPropertyString_SearchResult_1;  // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E9[0x7];                                      // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSessionPropertyString_SettingValue_1;  // 0x04F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0501(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_7;               // 0x0502(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_6;                     // 0x0503(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_504[0x4];                                      // 0x0504(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_MapCenter_C*>                CallFunc_GetAllActorsOfClass_OutActors_3;          // 0x0508(0x0010)(ReferenceParm)
	class ABP_MapCenter_C*                        CallFunc_Array_Get_Item_4;                         // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_8;               // 0x0521(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_522[0x6];                                      // 0x0522(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_NewSky_C*>                   CallFunc_GetAllActorsOfClass_OutActors_4;          // 0x0528(0x0010)(ReferenceParm)
	class ABP_NewSky_C*                           CallFunc_Array_Get_Item_5;                         // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_7;                     // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0541(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0542(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_543[0x5];                                      // 0x0543(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlaneBase_C*                        CallFunc_Array_Get_Item_6;                         // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_551[0x3];                                      // 0x0551(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_9;               // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_559[0x3];                                      // 0x0559(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x055C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_8;                     // 0x0564(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x0565(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_566[0x2];                                      // 0x0566(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56C[0x4];                                      // 0x056C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_C*                      K2Node_CustomEvent_PlayerToVoteKick;               // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_VoteKickTimer;                  // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x057C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_5;           // 0x057D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x057E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x057F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0581(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_582[0x2];                                      // 0x0582(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_1;                      // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_9;                     // 0x058C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x058D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Yes;                            // 0x058E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_58F[0x1];                                      // 0x058F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	const class APlayerState*                     K2Node_CustomEvent_PlayerState;                    // 0x0590(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0598(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x05A8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x05C0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0600(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_614[0x4];                                      // 0x0614(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0618(0x0018)()
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_631[0x3];                                      // 0x0631(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0634(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_639[0x3];                                      // 0x0639(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x063C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0644(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0648(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x064C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0650(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0654(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase) == 0x000010, "Wrong alignment on BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase");
static_assert(sizeof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase) == 0x000660, "Wrong size on BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, EntryPoint) == 0x000000, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_FFloor_ReturnValue) == 0x000014, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, Temp_bool_IsClosed_Variable) == 0x00001C, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, Temp_bool_Has_Been_Initd_Variable) == 0x00001D, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, Temp_bool_IsClosed_Variable_1) == 0x000024, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, Temp_bool_Has_Been_Initd_Variable_1) == 0x000025, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, Temp_int_Array_Index_Variable_2) == 0x000028, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_MakeLiteralInt_ReturnValue) == 0x00002C, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000034, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Conv_IntToByte_ReturnValue) == 0x00003C, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetValidValue_ReturnValue) == 0x00003D, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, Temp_int_Loop_Counter_Variable_1) == 0x000044, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00004C, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, Temp_int_Array_Index_Variable_3) == 0x000050, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, Temp_int_Loop_Counter_Variable_2) == 0x000054, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, Temp_int_Loop_Counter_Variable_3) == 0x00005C, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, Temp_bool_IsClosed_Variable_2) == 0x000060, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Add_IntInt_ReturnValue_2) == 0x000064, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, Temp_bool_Has_Been_Initd_Variable_2) == 0x000068, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, Temp_bool_Has_Been_Initd_Variable_3) == 0x000069, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_MakeTransform_ReturnValue) == 0x000070, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_HasAuthority_ReturnValue) == 0x0000A0, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000A8, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000B0, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, Temp_bool_IsClosed_Variable_3) == 0x0000B8, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, Temp_bool_Has_Been_Initd_Variable_4) == 0x0000B9, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::Temp_bool_Has_Been_Initd_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Create_ReturnValue) == 0x0000C0, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_IsValid_ReturnValue) == 0x0000C8, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, Temp_bool_IsClosed_Variable_4) == 0x0000C9, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::Temp_bool_IsClosed_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, Temp_bool_Has_Been_Initd_Variable_5) == 0x0000CA, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::Temp_bool_Has_Been_Initd_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_CustomEvent_SpawnTransform) == 0x0000D0, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_CustomEvent_SpawnTransform' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_CustomEvent_Class) == 0x000100, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_CustomEvent_Class' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_CustomEvent_AIControlled) == 0x000108, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_CustomEvent_AIControlled' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_CustomEvent_Team_1) == 0x000109, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_CustomEvent_Team_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_CustomEvent_VehicleSkinTheme) == 0x00010A, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_CustomEvent_VehicleSkinTheme' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000110, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000118, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Create_ReturnValue_1) == 0x000120, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_DynamicCast_AsBP_Vehicle_Base) == 0x000128, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_DynamicCast_AsBP_Vehicle_Base' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_IsValid_ReturnValue_1) == 0x000131, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_Event_DeltaSeconds) == 0x000134, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_HasAuthority_ReturnValue_1) == 0x000138, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetControlledObjectivesFromTeam_ObjectiveCount) == 0x00013C, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetControlledObjectivesFromTeam_ObjectiveCount' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetControlledObjectivesFromTeam_ObjectiveCount_1) == 0x000140, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetControlledObjectivesFromTeam_ObjectiveCount_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_CustomEvent_Team) == 0x000144, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_CustomEvent_Team' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetGameInstance_ReturnValue) == 0x000148, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_DynamicCast_AsBP_Game_Instance) == 0x000150, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_DynamicCast_AsBP_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_DynamicCast_bSuccess_1) == 0x000158, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00015C, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_FClamp_ReturnValue) == 0x000160, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetAllActorsOfClass_OutActors) == 0x000168, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Array_Get_Item) == 0x000178, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Array_Length_ReturnValue_1) == 0x000180, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Less_IntInt_ReturnValue) == 0x000184, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetGameInstance_ReturnValue_1) == 0x000188, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_DynamicCast_AsBP_Game_Instance_1) == 0x000190, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_DynamicCast_AsBP_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_DynamicCast_bSuccess_2) == 0x000198, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0001A0, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_CustomEvent_Username) == 0x0001B0, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_CustomEvent_Username' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_CustomEvent_Message) == 0x0001C8, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_CustomEvent_Message' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_CustomEvent_SpecialMessage) == 0x0001E0, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_CustomEvent_SpecialMessage' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetPlayerController_ReturnValue) == 0x0001E8, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x0001F0, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_DynamicCast_AsBP_Controller) == 0x0001F8, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_DynamicCast_AsBP_Controller' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_DynamicCast_bSuccess_3) == 0x000200, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000201, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, Temp_bool_Has_Been_Initd_Variable_6) == 0x000202, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::Temp_bool_Has_Been_Initd_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000208, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetPlayerController_ReturnValue_1) == 0x000218, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Array_Get_Item_1) == 0x000220, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_DynamicCast_AsBP_Controller_1) == 0x000228, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_DynamicCast_AsBP_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_DynamicCast_bSuccess_4) == 0x000230, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_DynamicCast_AsBP_Map_Cam) == 0x000238, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_DynamicCast_AsBP_Map_Cam' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_DynamicCast_bSuccess_5) == 0x000240, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_IsValid_ReturnValue_2) == 0x000241, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Array_Length_ReturnValue_2) == 0x000244, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetAllActorsOfClass_OutActors_2) == 0x000248, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetAllActorsOfClass_OutActors_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Less_IntInt_ReturnValue_1) == 0x000258, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Array_Get_Item_2) == 0x000260, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, Temp_bool_IsClosed_Variable_5) == 0x000268, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::Temp_bool_IsClosed_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_CustomEvent_KillerStats) == 0x000270, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_CustomEvent_KillerStats' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_CustomEvent_VictimStats) == 0x0002D8, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_CustomEvent_VictimStats' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000340, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_IsValid_ReturnValue_3) == 0x000341, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_HasAuthority_ReturnValue_2) == 0x000342, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetTeamBalance_AlliedCharacters) == 0x000344, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetTeamBalance_AlliedCharacters' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetTeamBalance_AxisCharacters) == 0x000348, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetTeamBalance_AxisCharacters' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00034C, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetTeamBalance_AlliedCharacters_1) == 0x000350, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetTeamBalance_AlliedCharacters_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetTeamBalance_AxisCharacters_1) == 0x000354, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetTeamBalance_AxisCharacters_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetGameInstance_ReturnValue_2) == 0x000358, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000360, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_DynamicCast_AsBP_Game_Instance_2) == 0x000368, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_DynamicCast_AsBP_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_DynamicCast_bSuccess_6) == 0x000370, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Greater_IntInt_ReturnValue_3) == 0x000371, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000372, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000373, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000374, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x000375, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Greater_IntInt_ReturnValue_4) == 0x000376, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_DoesTeamHaveAllObjectives__HasAllObjectives) == 0x000377, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_DoesTeamHaveAllObjectives__HasAllObjectives' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_DoesTeamHaveAllObjectives__HasAllObjectives_1) == 0x000378, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_DoesTeamHaveAllObjectives__HasAllObjectives_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetGameMode_ReturnValue) == 0x000380, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_DynamicCast_AsBP_Game_Mode_Base) == 0x000388, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_DynamicCast_AsBP_Game_Mode_Base' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_DynamicCast_bSuccess_7) == 0x000390, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000398, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Array_Get_Item_3) == 0x0003A8, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Array_Length_ReturnValue_3) == 0x0003B0, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetDataTableRowFromName_OutRow) == 0x0003B8, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000400, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Less_IntInt_ReturnValue_2) == 0x000401, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Conv_NameToString_ReturnValue) == 0x000408, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_MakeStruct_ST_MapVote) == 0x000418, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_MakeStruct_ST_MapVote' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetVotedForMap_Map) == 0x000438, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetVotedForMap_Map' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Array_Add_ReturnValue) == 0x000448, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Replace_ReturnValue) == 0x000450, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Concat_StrStr_ReturnValue) == 0x000460, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Conv_StringToText_ReturnValue) == 0x000470, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetSessionSettings_NumConnections) == 0x000488, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetSessionSettings_NumConnections' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetSessionSettings_NumPrivateConnections) == 0x00048C, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetSessionSettings_NumPrivateConnections' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetSessionSettings_bIsLAN) == 0x000490, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetSessionSettings_bIsLAN' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetSessionSettings_bIsDedicated) == 0x000491, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetSessionSettings_bIsDedicated' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetSessionSettings_bAllowInvites) == 0x000492, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetSessionSettings_bAllowInvites' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetSessionSettings_bAllowJoinInProgress) == 0x000493, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetSessionSettings_bAllowJoinInProgress' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetSessionSettings_bIsAnticheatEnabled) == 0x000494, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetSessionSettings_bIsAnticheatEnabled' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetSessionSettings_BuildUniqueID) == 0x000498, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetSessionSettings_BuildUniqueID' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetSessionSettings_ExtraSettings) == 0x0004A0, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetSessionSettings_ExtraSettings' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetSessionSettings_Result) == 0x0004B0, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetSessionSettings_Result' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetGameMode_ReturnValue_1) == 0x0004B8, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_SwitchEnum_CmpSuccess) == 0x0004C0, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_DynamicCast_AsBP_Game_Mode_Base_1) == 0x0004C8, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_DynamicCast_AsBP_Game_Mode_Base_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_DynamicCast_bSuccess_8) == 0x0004D0, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetSessionPropertyBool_SearchResult) == 0x0004D1, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetSessionPropertyBool_SearchResult' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetSessionPropertyBool_SettingValue) == 0x0004D2, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetSessionPropertyBool_SettingValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_SwitchEnum_CmpSuccess_1) == 0x0004D3, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetSessionPropertyString_SearchResult) == 0x0004D4, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetSessionPropertyString_SearchResult' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetSessionPropertyString_SettingValue) == 0x0004D8, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetSessionPropertyString_SettingValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetSessionPropertyString_SearchResult_1) == 0x0004E8, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetSessionPropertyString_SearchResult_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetSessionPropertyString_SettingValue_1) == 0x0004F0, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetSessionPropertyString_SettingValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_SwitchEnum_CmpSuccess_2) == 0x000500, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_SwitchEnum_CmpSuccess_3) == 0x000501, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, Temp_bool_Has_Been_Initd_Variable_7) == 0x000502, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::Temp_bool_Has_Been_Initd_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, Temp_bool_IsClosed_Variable_6) == 0x000503, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::Temp_bool_IsClosed_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetAllActorsOfClass_OutActors_3) == 0x000508, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetAllActorsOfClass_OutActors_3' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Array_Get_Item_4) == 0x000518, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_IsValid_ReturnValue_4) == 0x000520, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, Temp_bool_Has_Been_Initd_Variable_8) == 0x000521, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::Temp_bool_Has_Been_Initd_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetAllActorsOfClass_OutActors_4) == 0x000528, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetAllActorsOfClass_OutActors_4' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Array_Get_Item_5) == 0x000538, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, Temp_bool_IsClosed_Variable_7) == 0x000540, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::Temp_bool_IsClosed_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_IsValid_ReturnValue_5) == 0x000541, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_HasAuthority_ReturnValue_3) == 0x000542, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Array_Get_Item_6) == 0x000548, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_IsValid_ReturnValue_6) == 0x000550, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Array_Length_ReturnValue_4) == 0x000554, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, Temp_bool_Has_Been_Initd_Variable_9) == 0x000558, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::Temp_bool_Has_Been_Initd_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x00055C, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Max_ReturnValue) == 0x000560, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, Temp_bool_IsClosed_Variable_8) == 0x000564, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::Temp_bool_IsClosed_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x000565, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Clamp_ReturnValue) == 0x000568, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_CustomEvent_PlayerToVoteKick) == 0x000570, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_CustomEvent_PlayerToVoteKick' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_CustomEvent_VoteKickTimer) == 0x000578, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_CustomEvent_VoteKickTimer' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Less_IntInt_ReturnValue_3) == 0x00057C, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_LessEqual_IntInt_ReturnValue_5) == 0x00057D, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_LessEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Not_PreBool_ReturnValue) == 0x00057E, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Less_IntInt_ReturnValue_4) == 0x00057F, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Not_PreBool_ReturnValue_1) == 0x000580, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_BooleanAND_ReturnValue) == 0x000581, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000584, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Clamp_ReturnValue_1) == 0x000588, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Clamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, Temp_bool_IsClosed_Variable_9) == 0x00058C, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::Temp_bool_IsClosed_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_IsValid_ReturnValue_7) == 0x00058D, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_CustomEvent_Yes) == 0x00058E, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_CustomEvent_Yes' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_CustomEvent_PlayerState) == 0x000590, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_CustomEvent_PlayerState' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_GetPlayerName_ReturnValue) == 0x000598, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0005A8, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_MakeStruct_FormatArgumentData) == 0x0005C0, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, K2Node_MakeArray_Array) == 0x000600, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Array_AddUnique_ReturnValue) == 0x000610, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Format_ReturnValue) == 0x000618, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Array_RemoveItem_ReturnValue) == 0x000630, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000634, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000638, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Array_Length_ReturnValue_5) == 0x00063C, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Array_Length_ReturnValue_6) == 0x000640, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Array_Length_ReturnValue_7) == 0x000644, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000648, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x00064C, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000650, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000654, "Member 'BP_GameStateBase_C_ExecuteUbergraph_BP_GameStateBase::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.CastVote
// 0x0010 (0x0010 - 0x0000)
struct BP_GameStateBase_C_CastVote final
{
public:
	bool                                          Yes;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class APlayerState*                     PlayerState;                                       // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameStateBase_C_CastVote) == 0x000008, "Wrong alignment on BP_GameStateBase_C_CastVote");
static_assert(sizeof(BP_GameStateBase_C_CastVote) == 0x000010, "Wrong size on BP_GameStateBase_C_CastVote");
static_assert(offsetof(BP_GameStateBase_C_CastVote, Yes) == 0x000000, "Member 'BP_GameStateBase_C_CastVote::Yes' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_CastVote, PlayerState) == 0x000008, "Member 'BP_GameStateBase_C_CastVote::PlayerState' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.StartVoteKick
// 0x0010 (0x0010 - 0x0000)
struct BP_GameStateBase_C_StartVoteKick final
{
public:
	class ABP_PlayerState_C*                      PlayerToVoteKick_0;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VoteKickTimer_0;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameStateBase_C_StartVoteKick) == 0x000008, "Wrong alignment on BP_GameStateBase_C_StartVoteKick");
static_assert(sizeof(BP_GameStateBase_C_StartVoteKick) == 0x000010, "Wrong size on BP_GameStateBase_C_StartVoteKick");
static_assert(offsetof(BP_GameStateBase_C_StartVoteKick, PlayerToVoteKick_0) == 0x000000, "Member 'BP_GameStateBase_C_StartVoteKick::PlayerToVoteKick_0' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_StartVoteKick, VoteKickTimer_0) == 0x000008, "Member 'BP_GameStateBase_C_StartVoteKick::VoteKickTimer_0' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.MC_KillFeedAdd
// 0x00D0 (0x00D0 - 0x0000)
struct BP_GameStateBase_C_MC_KillFeedAdd final
{
public:
	struct FST_PlayerStats                        KillerStats;                                       // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FST_PlayerStats                        VictimStats;                                       // 0x0068(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameStateBase_C_MC_KillFeedAdd) == 0x000008, "Wrong alignment on BP_GameStateBase_C_MC_KillFeedAdd");
static_assert(sizeof(BP_GameStateBase_C_MC_KillFeedAdd) == 0x0000D0, "Wrong size on BP_GameStateBase_C_MC_KillFeedAdd");
static_assert(offsetof(BP_GameStateBase_C_MC_KillFeedAdd, KillerStats) == 0x000000, "Member 'BP_GameStateBase_C_MC_KillFeedAdd::KillerStats' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_MC_KillFeedAdd, VictimStats) == 0x000068, "Member 'BP_GameStateBase_C_MC_KillFeedAdd::VictimStats' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.MC_ShareChatMessage
// 0x0038 (0x0038 - 0x0000)
struct BP_GameStateBase_C_MC_ShareChatMessage final
{
public:
	class FText                                   UserName;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Message;                                           // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          SpecialMessage;                                    // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameStateBase_C_MC_ShareChatMessage) == 0x000008, "Wrong alignment on BP_GameStateBase_C_MC_ShareChatMessage");
static_assert(sizeof(BP_GameStateBase_C_MC_ShareChatMessage) == 0x000038, "Wrong size on BP_GameStateBase_C_MC_ShareChatMessage");
static_assert(offsetof(BP_GameStateBase_C_MC_ShareChatMessage, UserName) == 0x000000, "Member 'BP_GameStateBase_C_MC_ShareChatMessage::UserName' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_MC_ShareChatMessage, Message) == 0x000018, "Member 'BP_GameStateBase_C_MC_ShareChatMessage::Message' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_MC_ShareChatMessage, SpecialMessage) == 0x000030, "Member 'BP_GameStateBase_C_MC_ShareChatMessage::SpecialMessage' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.OnKill
// 0x0001 (0x0001 - 0x0000)
struct BP_GameStateBase_C_OnKill final
{
public:
	E_Teams                                       Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameStateBase_C_OnKill) == 0x000001, "Wrong alignment on BP_GameStateBase_C_OnKill");
static_assert(sizeof(BP_GameStateBase_C_OnKill) == 0x000001, "Wrong size on BP_GameStateBase_C_OnKill");
static_assert(offsetof(BP_GameStateBase_C_OnKill, Team) == 0x000000, "Member 'BP_GameStateBase_C_OnKill::Team' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_GameStateBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameStateBase_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_GameStateBase_C_ReceiveTick");
static_assert(sizeof(BP_GameStateBase_C_ReceiveTick) == 0x000004, "Wrong size on BP_GameStateBase_C_ReceiveTick");
static_assert(offsetof(BP_GameStateBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_GameStateBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.RespawnActor
// 0x0040 (0x0040 - 0x0000)
struct BP_GameStateBase_C_RespawnActor final
{
public:
	struct FTransform                             SpawnTransform;                                    // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class UClass*                                 Class_0;                                           // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AIControlled;                                      // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Teams                                       Team;                                              // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_VehicleSkinThemes                           VehicleSkinTheme;                                  // 0x003A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameStateBase_C_RespawnActor) == 0x000010, "Wrong alignment on BP_GameStateBase_C_RespawnActor");
static_assert(sizeof(BP_GameStateBase_C_RespawnActor) == 0x000040, "Wrong size on BP_GameStateBase_C_RespawnActor");
static_assert(offsetof(BP_GameStateBase_C_RespawnActor, SpawnTransform) == 0x000000, "Member 'BP_GameStateBase_C_RespawnActor::SpawnTransform' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RespawnActor, Class_0) == 0x000030, "Member 'BP_GameStateBase_C_RespawnActor::Class_0' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RespawnActor, AIControlled) == 0x000038, "Member 'BP_GameStateBase_C_RespawnActor::AIControlled' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RespawnActor, Team) == 0x000039, "Member 'BP_GameStateBase_C_RespawnActor::Team' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RespawnActor, VehicleSkinTheme) == 0x00003A, "Member 'BP_GameStateBase_C_RespawnActor::VehicleSkinTheme' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.UserConstructionScript
// 0x0020 (0x0020 - 0x0000)
struct BP_GameStateBase_C_UserConstructionScript final
{
public:
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0000(0x0010)(ReferenceParm)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_1;       // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_GameStateBase_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_GameStateBase_C_UserConstructionScript");
static_assert(sizeof(BP_GameStateBase_C_UserConstructionScript) == 0x000020, "Wrong size on BP_GameStateBase_C_UserConstructionScript");
static_assert(offsetof(BP_GameStateBase_C_UserConstructionScript, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000000, "Member 'BP_GameStateBase_C_UserConstructionScript::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_UserConstructionScript, CallFunc_GetDataTableRowNames_OutRowNames_1) == 0x000010, "Member 'BP_GameStateBase_C_UserConstructionScript::CallFunc_GetDataTableRowNames_OutRowNames_1' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.SpawnAICharacter
// 0x0530 (0x0530 - 0x0000)
struct BP_GameStateBase_C_SpawnAICharacter final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Teams                                       Team;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNewCharacter;                                    // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        OldCharacterRef;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Explosive;                                         // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Weapon2;                                           // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Weapon1;                                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 AvailableLongRangeWeapons;                         // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 AvailableExplosives;                               // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 AvailableWeapons;                                  // 0x0040(0x0010)(Edit, BlueprintVisible)
	E_Units                                       Class_0;                                           // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 NameToUse;                                         // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FName>                           ShuffledNames;                                     // 0x0068(0x0010)(Edit, BlueprintVisible)
	class UDataTable*                             Temp_object_Variable;                              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Flag_C*                             CallFunc_GetRandomTeamFlag_Flag;                   // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetRandomSpawnPoint_SpawnLocation;        // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetRandomSpawnPoint_SpawnRotation;        // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_VehicleBase_C*                      CallFunc_GetRandomSpawnPoint_VehicleToEnterAfterSpawn; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x00C0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_1;                            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_2;                            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Units                                       Temp_byte_Variable;                                // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Teams                                       Temp_byte_Variable_1;                              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_Select_Default;                             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Units                                       Temp_byte_Variable_2;                              // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Units                                       Temp_byte_Variable_3;                              // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Units                                       Temp_byte_Variable_4;                              // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Random_OutItem;                     // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x017E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17F[0x1];                                      // 0x017F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Random_OutItem_1;                   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex_1;                  // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0190(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_Selectable                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x01A8(0x00E0)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0292(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_293[0x1];                                      // 0x0293(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Temp_name_Variable;                                // 0x02A0(0x0010)(ReferenceParm)
	E_Teams                                       Temp_byte_Variable_5;                              // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x3];                                      // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_5;                               // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_Select_Default_1;                           // 0x02B8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Random_OutItem_2;                   // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex_2;                  // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutItem_3;                   // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex_3;                  // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Teams                                       Temp_byte_Variable_6;                              // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x3];                                      // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_2;                           // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E1[0x3];                                      // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x02E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_BotName                            CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x02F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_2;           // 0x0302(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_303[0x5];                                      // 0x0303(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_1;       // 0x0308(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_Selectable                         CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0328(0x00E0)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409[0x3];                                      // 0x0409(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_3;                         // 0x040C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_Selectable                         CallFunc_GetDataTableRowFromName_OutRow_3;         // 0x0418(0x00E0)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_3;    // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x04F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x04FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x04FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x04FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0501(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0502(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_503[0x1];                                      // 0x0503(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0504(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x050C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x050D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50E[0x2];                                      // 0x050E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_6;                               // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Units                                       K2Node_Select_Default_3;                           // 0x051C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51D[0x3];                                      // 0x051D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_8;                               // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Units                                       K2Node_Select_Default_4;                           // 0x0524(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_525[0x3];                                      // 0x0525(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_5;                           // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameStateBase_C_SpawnAICharacter) == 0x000010, "Wrong alignment on BP_GameStateBase_C_SpawnAICharacter");
static_assert(sizeof(BP_GameStateBase_C_SpawnAICharacter) == 0x000530, "Wrong size on BP_GameStateBase_C_SpawnAICharacter");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Amount) == 0x000000, "Member 'BP_GameStateBase_C_SpawnAICharacter::Amount' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Team) == 0x000004, "Member 'BP_GameStateBase_C_SpawnAICharacter::Team' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, IsNewCharacter) == 0x000005, "Member 'BP_GameStateBase_C_SpawnAICharacter::IsNewCharacter' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, OldCharacterRef) == 0x000008, "Member 'BP_GameStateBase_C_SpawnAICharacter::OldCharacterRef' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Explosive) == 0x000010, "Member 'BP_GameStateBase_C_SpawnAICharacter::Explosive' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Weapon2) == 0x000014, "Member 'BP_GameStateBase_C_SpawnAICharacter::Weapon2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Weapon1) == 0x000018, "Member 'BP_GameStateBase_C_SpawnAICharacter::Weapon1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, AvailableLongRangeWeapons) == 0x000020, "Member 'BP_GameStateBase_C_SpawnAICharacter::AvailableLongRangeWeapons' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, AvailableExplosives) == 0x000030, "Member 'BP_GameStateBase_C_SpawnAICharacter::AvailableExplosives' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, AvailableWeapons) == 0x000040, "Member 'BP_GameStateBase_C_SpawnAICharacter::AvailableWeapons' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Class_0) == 0x000050, "Member 'BP_GameStateBase_C_SpawnAICharacter::Class_0' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, NameToUse) == 0x000058, "Member 'BP_GameStateBase_C_SpawnAICharacter::NameToUse' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, ShuffledNames) == 0x000068, "Member 'BP_GameStateBase_C_SpawnAICharacter::ShuffledNames' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Temp_object_Variable) == 0x000078, "Member 'BP_GameStateBase_C_SpawnAICharacter::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_GetRandomTeamFlag_Flag) == 0x000080, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_GetRandomTeamFlag_Flag' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, K2Node_SwitchEnum_CmpSuccess) == 0x000088, "Member 'BP_GameStateBase_C_SpawnAICharacter::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_GetRandomSpawnPoint_SpawnLocation) == 0x00008C, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_GetRandomSpawnPoint_SpawnLocation' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_GetRandomSpawnPoint_SpawnRotation) == 0x000098, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_GetRandomSpawnPoint_SpawnRotation' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_GetRandomSpawnPoint_VehicleToEnterAfterSpawn) == 0x0000A8, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_GetRandomSpawnPoint_VehicleToEnterAfterSpawn' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B0, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x0000C0, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Temp_int_Array_Index_Variable) == 0x0000F0, "Member 'BP_GameStateBase_C_SpawnAICharacter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000F8, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_FinishSpawningActor_ReturnValue) == 0x000100, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Temp_object_Variable_1) == 0x000108, "Member 'BP_GameStateBase_C_SpawnAICharacter::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_IsValid_ReturnValue) == 0x000110, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Temp_int_Loop_Counter_Variable) == 0x000114, "Member 'BP_GameStateBase_C_SpawnAICharacter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Add_IntInt_ReturnValue) == 0x000118, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Temp_int_Array_Index_Variable_1) == 0x00011C, "Member 'BP_GameStateBase_C_SpawnAICharacter::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Temp_object_Variable_2) == 0x000120, "Member 'BP_GameStateBase_C_SpawnAICharacter::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Temp_int_Variable) == 0x000128, "Member 'BP_GameStateBase_C_SpawnAICharacter::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Temp_int_Variable_1) == 0x00012C, "Member 'BP_GameStateBase_C_SpawnAICharacter::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Temp_byte_Variable) == 0x000130, "Member 'BP_GameStateBase_C_SpawnAICharacter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Temp_int_Loop_Counter_Variable_1) == 0x000134, "Member 'BP_GameStateBase_C_SpawnAICharacter::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Temp_byte_Variable_1) == 0x000138, "Member 'BP_GameStateBase_C_SpawnAICharacter::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Add_IntInt_ReturnValue_1) == 0x00013C, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, K2Node_Select_Default) == 0x000140, "Member 'BP_GameStateBase_C_SpawnAICharacter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Temp_int_Loop_Counter_Variable_2) == 0x000148, "Member 'BP_GameStateBase_C_SpawnAICharacter::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Add_IntInt_ReturnValue_2) == 0x00014C, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Temp_int_Array_Index_Variable_2) == 0x000150, "Member 'BP_GameStateBase_C_SpawnAICharacter::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Temp_byte_Variable_2) == 0x000154, "Member 'BP_GameStateBase_C_SpawnAICharacter::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Temp_int_Variable_2) == 0x000158, "Member 'BP_GameStateBase_C_SpawnAICharacter::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00015C, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Add_IntInt_ReturnValue_3) == 0x000160, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Temp_byte_Variable_3) == 0x000164, "Member 'BP_GameStateBase_C_SpawnAICharacter::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Temp_int_Variable_3) == 0x000168, "Member 'BP_GameStateBase_C_SpawnAICharacter::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Array_Add_ReturnValue) == 0x00016C, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Temp_byte_Variable_4) == 0x000170, "Member 'BP_GameStateBase_C_SpawnAICharacter::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Array_Random_OutItem) == 0x000174, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Array_Random_OutIndex) == 0x000178, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00017C, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Temp_bool_Variable) == 0x00017D, "Member 'BP_GameStateBase_C_SpawnAICharacter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00017E, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Array_Random_OutItem_1) == 0x000180, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Array_Random_OutItem_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Array_Random_OutIndex_1) == 0x000184, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Array_Random_OutIndex_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Array_Add_ReturnValue_1) == 0x000188, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000190, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Array_Get_Item) == 0x0001A0, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001A8, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000288, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Array_Length_ReturnValue) == 0x00028C, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Less_IntInt_ReturnValue) == 0x000290, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Array_Contains_ReturnValue) == 0x000291, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000292, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Temp_int_Variable_4) == 0x000294, "Member 'BP_GameStateBase_C_SpawnAICharacter::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Add_IntInt_ReturnValue_4) == 0x000298, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Add_IntInt_ReturnValue_5) == 0x00029C, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Temp_name_Variable) == 0x0002A0, "Member 'BP_GameStateBase_C_SpawnAICharacter::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Temp_byte_Variable_5) == 0x0002B0, "Member 'BP_GameStateBase_C_SpawnAICharacter::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Temp_int_Variable_5) == 0x0002B4, "Member 'BP_GameStateBase_C_SpawnAICharacter::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, K2Node_Select_Default_1) == 0x0002B8, "Member 'BP_GameStateBase_C_SpawnAICharacter::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Array_Random_OutItem_2) == 0x0002C8, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Array_Random_OutItem_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Array_Random_OutIndex_2) == 0x0002CC, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Array_Random_OutIndex_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Array_Random_OutItem_3) == 0x0002D0, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Array_Random_OutItem_3' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Array_Random_OutIndex_3) == 0x0002D4, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Array_Random_OutIndex_3' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Temp_byte_Variable_6) == 0x0002D8, "Member 'BP_GameStateBase_C_SpawnAICharacter::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, K2Node_Select_Default_2) == 0x0002DC, "Member 'BP_GameStateBase_C_SpawnAICharacter::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Array_RemoveItem_ReturnValue) == 0x0002E0, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Array_Get_Item_1) == 0x0002E4, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0002F0, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000300, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000301, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Array_RemoveItem_ReturnValue_2) == 0x000302, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Array_RemoveItem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_GetDataTableRowNames_OutRowNames_1) == 0x000308, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_GetDataTableRowNames_OutRowNames_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Array_Get_Item_2) == 0x000318, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Array_Add_ReturnValue_2) == 0x000320, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000328, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x000408, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Array_Get_Item_3) == 0x00040C, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_GetDataTableRowFromName_OutRow_3) == 0x000418, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_GetDataTableRowFromName_OutRow_3' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_GetDataTableRowFromName_ReturnValue_3) == 0x0004F8, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_GetDataTableRowFromName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, K2Node_SwitchEnum_CmpSuccess_1) == 0x0004F9, "Member 'BP_GameStateBase_C_SpawnAICharacter::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Array_Contains_ReturnValue_1) == 0x0004FA, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0004FB, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Array_Length_ReturnValue_1) == 0x0004FC, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Array_Contains_ReturnValue_2) == 0x000500, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Less_IntInt_ReturnValue_1) == 0x000501, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000502, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Array_Length_ReturnValue_2) == 0x000504, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000508, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_Less_IntInt_ReturnValue_2) == 0x00050C, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00050D, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Temp_int_Variable_6) == 0x000510, "Member 'BP_GameStateBase_C_SpawnAICharacter::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x000514, "Member 'BP_GameStateBase_C_SpawnAICharacter::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Temp_int_Variable_7) == 0x000518, "Member 'BP_GameStateBase_C_SpawnAICharacter::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, K2Node_Select_Default_3) == 0x00051C, "Member 'BP_GameStateBase_C_SpawnAICharacter::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, Temp_int_Variable_8) == 0x000520, "Member 'BP_GameStateBase_C_SpawnAICharacter::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, K2Node_Select_Default_4) == 0x000524, "Member 'BP_GameStateBase_C_SpawnAICharacter::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnAICharacter, K2Node_Select_Default_5) == 0x000528, "Member 'BP_GameStateBase_C_SpawnAICharacter::K2Node_Select_Default_5' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.RegisterCharacter
// 0x00A0 (0x00A0 - 0x0000)
struct BP_GameStateBase_C_RegisterCharacter final
{
public:
	class ABP_Character_C*                        Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Teams                                       Team;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnDataComponent_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_PlayerStats                        K2Node_MakeStruct_ST_PlayerStats;                  // 0x0030(0x0068)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameStateBase_C_RegisterCharacter) == 0x000008, "Wrong alignment on BP_GameStateBase_C_RegisterCharacter");
static_assert(sizeof(BP_GameStateBase_C_RegisterCharacter) == 0x0000A0, "Wrong size on BP_GameStateBase_C_RegisterCharacter");
static_assert(offsetof(BP_GameStateBase_C_RegisterCharacter, Character) == 0x000000, "Member 'BP_GameStateBase_C_RegisterCharacter::Character' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RegisterCharacter, Team) == 0x000008, "Member 'BP_GameStateBase_C_RegisterCharacter::Team' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RegisterCharacter, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_GameStateBase_C_RegisterCharacter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RegisterCharacter, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_GameStateBase_C_RegisterCharacter::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RegisterCharacter, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_GameStateBase_C_RegisterCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RegisterCharacter, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_GameStateBase_C_RegisterCharacter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RegisterCharacter, CallFunc_IsValid_ReturnValue_2) == 0x00001A, "Member 'BP_GameStateBase_C_RegisterCharacter::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RegisterCharacter, CallFunc_Not_PreBool_ReturnValue) == 0x00001B, "Member 'BP_GameStateBase_C_RegisterCharacter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RegisterCharacter, K2Node_DynamicCast_AsBP_Player_State) == 0x000020, "Member 'BP_GameStateBase_C_RegisterCharacter::K2Node_DynamicCast_AsBP_Player_State' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RegisterCharacter, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_GameStateBase_C_RegisterCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RegisterCharacter, K2Node_MakeStruct_ST_PlayerStats) == 0x000030, "Member 'BP_GameStateBase_C_RegisterCharacter::K2Node_MakeStruct_ST_PlayerStats' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RegisterCharacter, CallFunc_Array_Add_ReturnValue) == 0x000098, "Member 'BP_GameStateBase_C_RegisterCharacter::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.UnregisterCharacter
// 0x00D8 (0x00D8 - 0x0000)
struct BP_GameStateBase_C_UnregisterCharacter final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_PlayerStats                        CallFunc_Array_Get_Item;                           // 0x0008(0x0068)(HasGetValueTypeHash)
	struct FST_PlayerStats                        K2Node_SetFieldsInStruct_StructOut;                // 0x0070(0x0068)(HasGetValueTypeHash)
};
static_assert(alignof(BP_GameStateBase_C_UnregisterCharacter) == 0x000008, "Wrong alignment on BP_GameStateBase_C_UnregisterCharacter");
static_assert(sizeof(BP_GameStateBase_C_UnregisterCharacter) == 0x0000D8, "Wrong size on BP_GameStateBase_C_UnregisterCharacter");
static_assert(offsetof(BP_GameStateBase_C_UnregisterCharacter, PlayerIndex) == 0x000000, "Member 'BP_GameStateBase_C_UnregisterCharacter::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_UnregisterCharacter, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_GameStateBase_C_UnregisterCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_UnregisterCharacter, K2Node_SetFieldsInStruct_StructOut) == 0x000070, "Member 'BP_GameStateBase_C_UnregisterCharacter::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.RegisterObjective
// 0x0010 (0x0010 - 0x0000)
struct BP_GameStateBase_C_RegisterObjective final
{
public:
	const class ABP_ObjectiveBase_C*              Objective;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameStateBase_C_RegisterObjective) == 0x000008, "Wrong alignment on BP_GameStateBase_C_RegisterObjective");
static_assert(sizeof(BP_GameStateBase_C_RegisterObjective) == 0x000010, "Wrong size on BP_GameStateBase_C_RegisterObjective");
static_assert(offsetof(BP_GameStateBase_C_RegisterObjective, Objective) == 0x000000, "Member 'BP_GameStateBase_C_RegisterObjective::Objective' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RegisterObjective, CallFunc_Array_Add_ReturnValue) == 0x000008, "Member 'BP_GameStateBase_C_RegisterObjective::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.GetControlledObjectivesFromTeam
// 0x0038 (0x0038 - 0x0000)
struct BP_GameStateBase_C_GetControlledObjectivesFromTeam final
{
public:
	E_Teams                                       Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectiveCount;                                    // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ControlledObjectivesTemp;                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ObjectiveBase_C*                    CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameStateBase_C_GetControlledObjectivesFromTeam) == 0x000008, "Wrong alignment on BP_GameStateBase_C_GetControlledObjectivesFromTeam");
static_assert(sizeof(BP_GameStateBase_C_GetControlledObjectivesFromTeam) == 0x000038, "Wrong size on BP_GameStateBase_C_GetControlledObjectivesFromTeam");
static_assert(offsetof(BP_GameStateBase_C_GetControlledObjectivesFromTeam, Team) == 0x000000, "Member 'BP_GameStateBase_C_GetControlledObjectivesFromTeam::Team' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetControlledObjectivesFromTeam, ObjectiveCount) == 0x000004, "Member 'BP_GameStateBase_C_GetControlledObjectivesFromTeam::ObjectiveCount' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetControlledObjectivesFromTeam, ControlledObjectivesTemp) == 0x000008, "Member 'BP_GameStateBase_C_GetControlledObjectivesFromTeam::ControlledObjectivesTemp' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetControlledObjectivesFromTeam, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_GameStateBase_C_GetControlledObjectivesFromTeam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetControlledObjectivesFromTeam, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_GameStateBase_C_GetControlledObjectivesFromTeam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetControlledObjectivesFromTeam, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_GameStateBase_C_GetControlledObjectivesFromTeam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetControlledObjectivesFromTeam, Temp_int_Variable) == 0x000018, "Member 'BP_GameStateBase_C_GetControlledObjectivesFromTeam::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetControlledObjectivesFromTeam, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_GameStateBase_C_GetControlledObjectivesFromTeam::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetControlledObjectivesFromTeam, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_GameStateBase_C_GetControlledObjectivesFromTeam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetControlledObjectivesFromTeam, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_GameStateBase_C_GetControlledObjectivesFromTeam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetControlledObjectivesFromTeam, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_GameStateBase_C_GetControlledObjectivesFromTeam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetControlledObjectivesFromTeam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000031, "Member 'BP_GameStateBase_C_GetControlledObjectivesFromTeam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.EndGame
// 0x00B0 (0x00B0 - 0x0000)
struct BP_GameStateBase_C_EndGame final
{
public:
	E_Teams                                       VictoriousTeam_0;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_PlayerStats                        CallFunc_Array_Get_Item_1;                         // 0x0028(0x0068)(HasGetValueTypeHash)
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckIfOnCommunityBanList_OnList;         // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameStateBase_C_EndGame) == 0x000008, "Wrong alignment on BP_GameStateBase_C_EndGame");
static_assert(sizeof(BP_GameStateBase_C_EndGame) == 0x0000B0, "Wrong size on BP_GameStateBase_C_EndGame");
static_assert(offsetof(BP_GameStateBase_C_EndGame, VictoriousTeam_0) == 0x000000, "Member 'BP_GameStateBase_C_EndGame::VictoriousTeam_0' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_EndGame, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_GameStateBase_C_EndGame::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_EndGame, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_GameStateBase_C_EndGame::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_EndGame, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_GameStateBase_C_EndGame::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_EndGame, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'BP_GameStateBase_C_EndGame::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_EndGame, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BP_GameStateBase_C_EndGame::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_EndGame, CallFunc_HasAuthority_ReturnValue) == 0x000018, "Member 'BP_GameStateBase_C_EndGame::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_EndGame, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'BP_GameStateBase_C_EndGame::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_EndGame, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_GameStateBase_C_EndGame::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_EndGame, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'BP_GameStateBase_C_EndGame::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_EndGame, K2Node_DynamicCast_AsBP_Player_State) == 0x000090, "Member 'BP_GameStateBase_C_EndGame::K2Node_DynamicCast_AsBP_Player_State' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_EndGame, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'BP_GameStateBase_C_EndGame::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_EndGame, CallFunc_CheckIfOnCommunityBanList_OnList) == 0x000099, "Member 'BP_GameStateBase_C_EndGame::CallFunc_CheckIfOnCommunityBanList_OnList' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_EndGame, CallFunc_Array_Length_ReturnValue) == 0x00009C, "Member 'BP_GameStateBase_C_EndGame::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_EndGame, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_GameStateBase_C_EndGame::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_EndGame, CallFunc_Less_IntInt_ReturnValue) == 0x0000A1, "Member 'BP_GameStateBase_C_EndGame::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_EndGame, CallFunc_Array_Length_ReturnValue_1) == 0x0000A4, "Member 'BP_GameStateBase_C_EndGame::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_EndGame, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A8, "Member 'BP_GameStateBase_C_EndGame::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.AddAliveCharacter
// 0x0018 (0x0018 - 0x0000)
struct BP_GameStateBase_C_AddAliveCharacter final
{
public:
	const class ABP_Character_C*                  Character;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Teams                                       Team;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameStateBase_C_AddAliveCharacter) == 0x000008, "Wrong alignment on BP_GameStateBase_C_AddAliveCharacter");
static_assert(sizeof(BP_GameStateBase_C_AddAliveCharacter) == 0x000018, "Wrong size on BP_GameStateBase_C_AddAliveCharacter");
static_assert(offsetof(BP_GameStateBase_C_AddAliveCharacter, Character) == 0x000000, "Member 'BP_GameStateBase_C_AddAliveCharacter::Character' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddAliveCharacter, Team) == 0x000008, "Member 'BP_GameStateBase_C_AddAliveCharacter::Team' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddAliveCharacter, K2Node_SwitchEnum_CmpSuccess) == 0x000009, "Member 'BP_GameStateBase_C_AddAliveCharacter::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddAliveCharacter, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'BP_GameStateBase_C_AddAliveCharacter::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddAliveCharacter, CallFunc_Array_Add_ReturnValue_1) == 0x000010, "Member 'BP_GameStateBase_C_AddAliveCharacter::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.RemoveAliveCharacter
// 0x0010 (0x0010 - 0x0000)
struct BP_GameStateBase_C_RemoveAliveCharacter final
{
public:
	const class ABP_Character_C*                  Character;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Teams                                       Team;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameStateBase_C_RemoveAliveCharacter) == 0x000008, "Wrong alignment on BP_GameStateBase_C_RemoveAliveCharacter");
static_assert(sizeof(BP_GameStateBase_C_RemoveAliveCharacter) == 0x000010, "Wrong size on BP_GameStateBase_C_RemoveAliveCharacter");
static_assert(offsetof(BP_GameStateBase_C_RemoveAliveCharacter, Character) == 0x000000, "Member 'BP_GameStateBase_C_RemoveAliveCharacter::Character' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveAliveCharacter, Team) == 0x000008, "Member 'BP_GameStateBase_C_RemoveAliveCharacter::Team' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveAliveCharacter, K2Node_SwitchEnum_CmpSuccess) == 0x000009, "Member 'BP_GameStateBase_C_RemoveAliveCharacter::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveAliveCharacter, CallFunc_Array_RemoveItem_ReturnValue) == 0x00000A, "Member 'BP_GameStateBase_C_RemoveAliveCharacter::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveAliveCharacter, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x00000B, "Member 'BP_GameStateBase_C_RemoveAliveCharacter::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.AddPlayerKill
// 0x0238 (0x0238 - 0x0000)
struct BP_GameStateBase_C_AddPlayerKill final
{
public:
	int32                                         KillerPlayerIndex;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VictimPlayerIndex;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AIVehicle;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AIVehicleName;                                     // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	E_Teams                                       AIVehicleTeam;                                     // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAssistKill;                                      // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_PlayerStats                        K2Node_MakeStruct_ST_PlayerStats;                  // 0x0028(0x0068)(HasGetValueTypeHash)
	struct FST_PlayerStats                        CallFunc_Array_Get_Item;                           // 0x0090(0x0068)(HasGetValueTypeHash)
	struct FST_PlayerStats                        CallFunc_Array_Get_Item_1;                         // 0x00F8(0x0068)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_PlayerStats                        K2Node_SetFieldsInStruct_StructOut;                // 0x0168(0x0068)(HasGetValueTypeHash)
	struct FST_PlayerStats                        K2Node_SetFieldsInStruct_StructOut_1;              // 0x01D0(0x0068)(HasGetValueTypeHash)
};
static_assert(alignof(BP_GameStateBase_C_AddPlayerKill) == 0x000008, "Wrong alignment on BP_GameStateBase_C_AddPlayerKill");
static_assert(sizeof(BP_GameStateBase_C_AddPlayerKill) == 0x000238, "Wrong size on BP_GameStateBase_C_AddPlayerKill");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerKill, KillerPlayerIndex) == 0x000000, "Member 'BP_GameStateBase_C_AddPlayerKill::KillerPlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerKill, VictimPlayerIndex) == 0x000004, "Member 'BP_GameStateBase_C_AddPlayerKill::VictimPlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerKill, AIVehicle) == 0x000008, "Member 'BP_GameStateBase_C_AddPlayerKill::AIVehicle' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerKill, AIVehicleName) == 0x000010, "Member 'BP_GameStateBase_C_AddPlayerKill::AIVehicleName' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerKill, AIVehicleTeam) == 0x000020, "Member 'BP_GameStateBase_C_AddPlayerKill::AIVehicleTeam' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerKill, IsAssistKill) == 0x000021, "Member 'BP_GameStateBase_C_AddPlayerKill::IsAssistKill' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerKill, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000022, "Member 'BP_GameStateBase_C_AddPlayerKill::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerKill, K2Node_MakeStruct_ST_PlayerStats) == 0x000028, "Member 'BP_GameStateBase_C_AddPlayerKill::K2Node_MakeStruct_ST_PlayerStats' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerKill, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_GameStateBase_C_AddPlayerKill::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerKill, CallFunc_Array_Get_Item_1) == 0x0000F8, "Member 'BP_GameStateBase_C_AddPlayerKill::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerKill, CallFunc_Add_IntInt_ReturnValue) == 0x000160, "Member 'BP_GameStateBase_C_AddPlayerKill::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerKill, CallFunc_Add_IntInt_ReturnValue_1) == 0x000164, "Member 'BP_GameStateBase_C_AddPlayerKill::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerKill, K2Node_SetFieldsInStruct_StructOut) == 0x000168, "Member 'BP_GameStateBase_C_AddPlayerKill::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerKill, K2Node_SetFieldsInStruct_StructOut_1) == 0x0001D0, "Member 'BP_GameStateBase_C_AddPlayerKill::K2Node_SetFieldsInStruct_StructOut_1' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.AddPlayerDeath
// 0x00E0 (0x00E0 - 0x0000)
struct BP_GameStateBase_C_AddPlayerDeath final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_PlayerStats                        CallFunc_Array_Get_Item;                           // 0x0008(0x0068)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_PlayerStats                        K2Node_SetFieldsInStruct_StructOut;                // 0x0078(0x0068)(HasGetValueTypeHash)
};
static_assert(alignof(BP_GameStateBase_C_AddPlayerDeath) == 0x000008, "Wrong alignment on BP_GameStateBase_C_AddPlayerDeath");
static_assert(sizeof(BP_GameStateBase_C_AddPlayerDeath) == 0x0000E0, "Wrong size on BP_GameStateBase_C_AddPlayerDeath");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerDeath, PlayerIndex) == 0x000000, "Member 'BP_GameStateBase_C_AddPlayerDeath::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerDeath, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_GameStateBase_C_AddPlayerDeath::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerDeath, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_GameStateBase_C_AddPlayerDeath::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerDeath, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BP_GameStateBase_C_AddPlayerDeath::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerDeath, K2Node_SetFieldsInStruct_StructOut) == 0x000078, "Member 'BP_GameStateBase_C_AddPlayerDeath::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.AddPlayerScore
// 0x0158 (0x0158 - 0x0000)
struct BP_GameStateBase_C_AddPlayerScore final
{
public:
	int32                                         ScoreAmount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerIndex;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Units                                       IfVehicle_WhatType_;                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MultipliedScore;                                   // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Units                                       Class_0;                                           // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_PlayerStats                        PlayerStatsForIndex;                               // 0x0018(0x0068)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_PlayerStats                        CallFunc_Array_Get_Item;                           // 0x00A0(0x0068)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_13;                // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_14;                // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_15;                // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_16;                // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_17;                // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_18;                // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameStateBase_C_AddPlayerScore) == 0x000008, "Wrong alignment on BP_GameStateBase_C_AddPlayerScore");
static_assert(sizeof(BP_GameStateBase_C_AddPlayerScore) == 0x000158, "Wrong size on BP_GameStateBase_C_AddPlayerScore");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, ScoreAmount) == 0x000000, "Member 'BP_GameStateBase_C_AddPlayerScore::ScoreAmount' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, PlayerIndex) == 0x000004, "Member 'BP_GameStateBase_C_AddPlayerScore::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, IfVehicle_WhatType_) == 0x000008, "Member 'BP_GameStateBase_C_AddPlayerScore::IfVehicle_WhatType_' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, MultipliedScore) == 0x00000C, "Member 'BP_GameStateBase_C_AddPlayerScore::MultipliedScore' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, Class_0) == 0x000010, "Member 'BP_GameStateBase_C_AddPlayerScore::Class_0' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, PlayerStatsForIndex) == 0x000018, "Member 'BP_GameStateBase_C_AddPlayerScore::PlayerStatsForIndex' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000080, "Member 'BP_GameStateBase_C_AddPlayerScore::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000084, "Member 'BP_GameStateBase_C_AddPlayerScore::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000088, "Member 'BP_GameStateBase_C_AddPlayerScore::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, CallFunc_FTrunc_ReturnValue) == 0x00008C, "Member 'BP_GameStateBase_C_AddPlayerScore::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, K2Node_SwitchEnum_CmpSuccess) == 0x000090, "Member 'BP_GameStateBase_C_AddPlayerScore::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, CallFunc_Clamp_ReturnValue) == 0x000094, "Member 'BP_GameStateBase_C_AddPlayerScore::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, K2Node_SwitchEnum_CmpSuccess_1) == 0x000098, "Member 'BP_GameStateBase_C_AddPlayerScore::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BP_GameStateBase_C_AddPlayerScore::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, CallFunc_Add_IntInt_ReturnValue) == 0x000108, "Member 'BP_GameStateBase_C_AddPlayerScore::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, CallFunc_Add_IntInt_ReturnValue_1) == 0x00010C, "Member 'BP_GameStateBase_C_AddPlayerScore::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, CallFunc_Add_IntInt_ReturnValue_2) == 0x000110, "Member 'BP_GameStateBase_C_AddPlayerScore::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, CallFunc_Add_IntInt_ReturnValue_3) == 0x000114, "Member 'BP_GameStateBase_C_AddPlayerScore::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, CallFunc_Add_IntInt_ReturnValue_4) == 0x000118, "Member 'BP_GameStateBase_C_AddPlayerScore::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, CallFunc_Add_IntInt_ReturnValue_5) == 0x00011C, "Member 'BP_GameStateBase_C_AddPlayerScore::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, CallFunc_Add_IntInt_ReturnValue_6) == 0x000120, "Member 'BP_GameStateBase_C_AddPlayerScore::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, CallFunc_Add_IntInt_ReturnValue_7) == 0x000124, "Member 'BP_GameStateBase_C_AddPlayerScore::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, CallFunc_Add_IntInt_ReturnValue_8) == 0x000128, "Member 'BP_GameStateBase_C_AddPlayerScore::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, CallFunc_Add_IntInt_ReturnValue_9) == 0x00012C, "Member 'BP_GameStateBase_C_AddPlayerScore::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, CallFunc_Add_IntInt_ReturnValue_10) == 0x000130, "Member 'BP_GameStateBase_C_AddPlayerScore::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, CallFunc_Add_IntInt_ReturnValue_11) == 0x000134, "Member 'BP_GameStateBase_C_AddPlayerScore::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, CallFunc_Add_IntInt_ReturnValue_12) == 0x000138, "Member 'BP_GameStateBase_C_AddPlayerScore::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, CallFunc_Add_IntInt_ReturnValue_13) == 0x00013C, "Member 'BP_GameStateBase_C_AddPlayerScore::CallFunc_Add_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, CallFunc_Add_IntInt_ReturnValue_14) == 0x000140, "Member 'BP_GameStateBase_C_AddPlayerScore::CallFunc_Add_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, CallFunc_Add_IntInt_ReturnValue_15) == 0x000144, "Member 'BP_GameStateBase_C_AddPlayerScore::CallFunc_Add_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, CallFunc_Add_IntInt_ReturnValue_16) == 0x000148, "Member 'BP_GameStateBase_C_AddPlayerScore::CallFunc_Add_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, K2Node_SwitchEnum_CmpSuccess_2) == 0x00014C, "Member 'BP_GameStateBase_C_AddPlayerScore::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, CallFunc_Add_IntInt_ReturnValue_17) == 0x000150, "Member 'BP_GameStateBase_C_AddPlayerScore::CallFunc_Add_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerScore, CallFunc_Add_IntInt_ReturnValue_18) == 0x000154, "Member 'BP_GameStateBase_C_AddPlayerScore::CallFunc_Add_IntInt_ReturnValue_18' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.UpdatePlayerTeam
// 0x00D8 (0x00D8 - 0x0000)
struct BP_GameStateBase_C_UpdatePlayerTeam final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Teams                                       Team;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_PlayerStats                        CallFunc_Array_Get_Item;                           // 0x0008(0x0068)(HasGetValueTypeHash)
	struct FST_PlayerStats                        K2Node_SetFieldsInStruct_StructOut;                // 0x0070(0x0068)(HasGetValueTypeHash)
};
static_assert(alignof(BP_GameStateBase_C_UpdatePlayerTeam) == 0x000008, "Wrong alignment on BP_GameStateBase_C_UpdatePlayerTeam");
static_assert(sizeof(BP_GameStateBase_C_UpdatePlayerTeam) == 0x0000D8, "Wrong size on BP_GameStateBase_C_UpdatePlayerTeam");
static_assert(offsetof(BP_GameStateBase_C_UpdatePlayerTeam, PlayerIndex) == 0x000000, "Member 'BP_GameStateBase_C_UpdatePlayerTeam::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_UpdatePlayerTeam, Team) == 0x000004, "Member 'BP_GameStateBase_C_UpdatePlayerTeam::Team' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_UpdatePlayerTeam, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_GameStateBase_C_UpdatePlayerTeam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_UpdatePlayerTeam, K2Node_SetFieldsInStruct_StructOut) == 0x000070, "Member 'BP_GameStateBase_C_UpdatePlayerTeam::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.GetTeamBalance
// 0x00A0 (0x00A0 - 0x0000)
struct BP_GameStateBase_C_GetTeamBalance final
{
public:
	int32                                         AlliedCharacters;                                  // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AxisCharacters;                                    // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AxisPlayers;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AlliedPlayers;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_PlayerStats                        CallFunc_Array_Get_Item;                           // 0x0030(0x0068)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameStateBase_C_GetTeamBalance) == 0x000008, "Wrong alignment on BP_GameStateBase_C_GetTeamBalance");
static_assert(sizeof(BP_GameStateBase_C_GetTeamBalance) == 0x0000A0, "Wrong size on BP_GameStateBase_C_GetTeamBalance");
static_assert(offsetof(BP_GameStateBase_C_GetTeamBalance, AlliedCharacters) == 0x000000, "Member 'BP_GameStateBase_C_GetTeamBalance::AlliedCharacters' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetTeamBalance, AxisCharacters) == 0x000004, "Member 'BP_GameStateBase_C_GetTeamBalance::AxisCharacters' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetTeamBalance, AxisPlayers) == 0x000008, "Member 'BP_GameStateBase_C_GetTeamBalance::AxisPlayers' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetTeamBalance, AlliedPlayers) == 0x00000C, "Member 'BP_GameStateBase_C_GetTeamBalance::AlliedPlayers' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetTeamBalance, Temp_int_Variable) == 0x000010, "Member 'BP_GameStateBase_C_GetTeamBalance::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetTeamBalance, Temp_int_Variable_1) == 0x000014, "Member 'BP_GameStateBase_C_GetTeamBalance::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetTeamBalance, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_GameStateBase_C_GetTeamBalance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetTeamBalance, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_GameStateBase_C_GetTeamBalance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetTeamBalance, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_GameStateBase_C_GetTeamBalance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetTeamBalance, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'BP_GameStateBase_C_GetTeamBalance::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetTeamBalance, CallFunc_Add_IntInt_ReturnValue_2) == 0x000028, "Member 'BP_GameStateBase_C_GetTeamBalance::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetTeamBalance, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_GameStateBase_C_GetTeamBalance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetTeamBalance, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'BP_GameStateBase_C_GetTeamBalance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetTeamBalance, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'BP_GameStateBase_C_GetTeamBalance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetTeamBalance, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00009D, "Member 'BP_GameStateBase_C_GetTeamBalance::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.RemoveLowestScoreBotFromTeam
// 0x00D0 (0x00D0 - 0x0000)
struct BP_GameStateBase_C_RemoveLowestScoreBotFromTeam final
{
public:
	E_Teams                                       Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayerIndex;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LowestScore;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_Character_C*>                ArrayToUse;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_PlayerStats                        CallFunc_Array_Get_Item;                           // 0x0038(0x0068)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_Character_C*>                CallFunc_GetAllActorsOfClass_OutActors;            // 0x00B0(0x0010)(ReferenceParm)
	class ABP_Character_C*                        CallFunc_Array_Get_Item_1;                         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameStateBase_C_RemoveLowestScoreBotFromTeam) == 0x000008, "Wrong alignment on BP_GameStateBase_C_RemoveLowestScoreBotFromTeam");
static_assert(sizeof(BP_GameStateBase_C_RemoveLowestScoreBotFromTeam) == 0x0000D0, "Wrong size on BP_GameStateBase_C_RemoveLowestScoreBotFromTeam");
static_assert(offsetof(BP_GameStateBase_C_RemoveLowestScoreBotFromTeam, Team) == 0x000000, "Member 'BP_GameStateBase_C_RemoveLowestScoreBotFromTeam::Team' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveLowestScoreBotFromTeam, PlayerIndex) == 0x000004, "Member 'BP_GameStateBase_C_RemoveLowestScoreBotFromTeam::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveLowestScoreBotFromTeam, LowestScore) == 0x000008, "Member 'BP_GameStateBase_C_RemoveLowestScoreBotFromTeam::LowestScore' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveLowestScoreBotFromTeam, ArrayToUse) == 0x000010, "Member 'BP_GameStateBase_C_RemoveLowestScoreBotFromTeam::ArrayToUse' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveLowestScoreBotFromTeam, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_GameStateBase_C_RemoveLowestScoreBotFromTeam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveLowestScoreBotFromTeam, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_GameStateBase_C_RemoveLowestScoreBotFromTeam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveLowestScoreBotFromTeam, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_GameStateBase_C_RemoveLowestScoreBotFromTeam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveLowestScoreBotFromTeam, Temp_int_Loop_Counter_Variable_1) == 0x00002C, "Member 'BP_GameStateBase_C_RemoveLowestScoreBotFromTeam::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveLowestScoreBotFromTeam, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_GameStateBase_C_RemoveLowestScoreBotFromTeam::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveLowestScoreBotFromTeam, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'BP_GameStateBase_C_RemoveLowestScoreBotFromTeam::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveLowestScoreBotFromTeam, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_GameStateBase_C_RemoveLowestScoreBotFromTeam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveLowestScoreBotFromTeam, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BP_GameStateBase_C_RemoveLowestScoreBotFromTeam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveLowestScoreBotFromTeam, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_GameStateBase_C_RemoveLowestScoreBotFromTeam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveLowestScoreBotFromTeam, CallFunc_Not_PreBool_ReturnValue) == 0x0000A5, "Member 'BP_GameStateBase_C_RemoveLowestScoreBotFromTeam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveLowestScoreBotFromTeam, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000A6, "Member 'BP_GameStateBase_C_RemoveLowestScoreBotFromTeam::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveLowestScoreBotFromTeam, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000A7, "Member 'BP_GameStateBase_C_RemoveLowestScoreBotFromTeam::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveLowestScoreBotFromTeam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A8, "Member 'BP_GameStateBase_C_RemoveLowestScoreBotFromTeam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveLowestScoreBotFromTeam, CallFunc_BooleanAND_ReturnValue) == 0x0000A9, "Member 'BP_GameStateBase_C_RemoveLowestScoreBotFromTeam::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveLowestScoreBotFromTeam, CallFunc_BooleanAND_ReturnValue_1) == 0x0000AA, "Member 'BP_GameStateBase_C_RemoveLowestScoreBotFromTeam::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveLowestScoreBotFromTeam, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000AB, "Member 'BP_GameStateBase_C_RemoveLowestScoreBotFromTeam::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveLowestScoreBotFromTeam, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000B0, "Member 'BP_GameStateBase_C_RemoveLowestScoreBotFromTeam::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveLowestScoreBotFromTeam, CallFunc_Array_Get_Item_1) == 0x0000C0, "Member 'BP_GameStateBase_C_RemoveLowestScoreBotFromTeam::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveLowestScoreBotFromTeam, CallFunc_Array_Length_ReturnValue_1) == 0x0000C8, "Member 'BP_GameStateBase_C_RemoveLowestScoreBotFromTeam::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveLowestScoreBotFromTeam, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000CC, "Member 'BP_GameStateBase_C_RemoveLowestScoreBotFromTeam::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveLowestScoreBotFromTeam, CallFunc_IsValid_ReturnValue) == 0x0000CD, "Member 'BP_GameStateBase_C_RemoveLowestScoreBotFromTeam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveLowestScoreBotFromTeam, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000CE, "Member 'BP_GameStateBase_C_RemoveLowestScoreBotFromTeam::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.GetRandomAvailableFlag
// 0x0068 (0x0068 - 0x0000)
struct BP_GameStateBase_C_GetRandomAvailableFlag final
{
public:
	E_Teams                                       Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Flag_C*                             Flag;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_Flag_C*>                     AvailableFlags;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Flag_C*                             CallFunc_Array_Random_OutItem;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_Flag_C*>                     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0040(0x0010)(ReferenceParm)
	class ABP_Flag_C*                             CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameStateBase_C_GetRandomAvailableFlag) == 0x000008, "Wrong alignment on BP_GameStateBase_C_GetRandomAvailableFlag");
static_assert(sizeof(BP_GameStateBase_C_GetRandomAvailableFlag) == 0x000068, "Wrong size on BP_GameStateBase_C_GetRandomAvailableFlag");
static_assert(offsetof(BP_GameStateBase_C_GetRandomAvailableFlag, Team) == 0x000000, "Member 'BP_GameStateBase_C_GetRandomAvailableFlag::Team' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetRandomAvailableFlag, Flag) == 0x000008, "Member 'BP_GameStateBase_C_GetRandomAvailableFlag::Flag' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetRandomAvailableFlag, AvailableFlags) == 0x000010, "Member 'BP_GameStateBase_C_GetRandomAvailableFlag::AvailableFlags' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetRandomAvailableFlag, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_GameStateBase_C_GetRandomAvailableFlag::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetRandomAvailableFlag, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_GameStateBase_C_GetRandomAvailableFlag::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetRandomAvailableFlag, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_GameStateBase_C_GetRandomAvailableFlag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetRandomAvailableFlag, CallFunc_Array_Random_OutItem) == 0x000030, "Member 'BP_GameStateBase_C_GetRandomAvailableFlag::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetRandomAvailableFlag, CallFunc_Array_Random_OutIndex) == 0x000038, "Member 'BP_GameStateBase_C_GetRandomAvailableFlag::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetRandomAvailableFlag, CallFunc_GetAllActorsOfClass_OutActors) == 0x000040, "Member 'BP_GameStateBase_C_GetRandomAvailableFlag::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetRandomAvailableFlag, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_GameStateBase_C_GetRandomAvailableFlag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetRandomAvailableFlag, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_GameStateBase_C_GetRandomAvailableFlag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetRandomAvailableFlag, CallFunc_Array_Add_ReturnValue) == 0x00005C, "Member 'BP_GameStateBase_C_GetRandomAvailableFlag::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetRandomAvailableFlag, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_GameStateBase_C_GetRandomAvailableFlag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetRandomAvailableFlag, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000061, "Member 'BP_GameStateBase_C_GetRandomAvailableFlag::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.SetScenario
// 0x0080 (0x0080 - 0x0000)
struct BP_GameStateBase_C_SetScenario final
{
public:
	E_Scenarios                                   Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_Map                                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0020(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameStateBase_C_SetScenario) == 0x000008, "Wrong alignment on BP_GameStateBase_C_SetScenario");
static_assert(sizeof(BP_GameStateBase_C_SetScenario) == 0x000080, "Wrong size on BP_GameStateBase_C_SetScenario");
static_assert(offsetof(BP_GameStateBase_C_SetScenario, Temp_byte_Variable) == 0x000000, "Member 'BP_GameStateBase_C_SetScenario::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SetScenario, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000008, "Member 'BP_GameStateBase_C_SetScenario::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SetScenario, CallFunc_Conv_StringToName_ReturnValue) == 0x000018, "Member 'BP_GameStateBase_C_SetScenario::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SetScenario, CallFunc_GetDataTableRowFromName_OutRow) == 0x000020, "Member 'BP_GameStateBase_C_SetScenario::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SetScenario, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000068, "Member 'BP_GameStateBase_C_SetScenario::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SetScenario, K2Node_Select_Default) == 0x000070, "Member 'BP_GameStateBase_C_SetScenario::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SetScenario, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000078, "Member 'BP_GameStateBase_C_SetScenario::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.DoesTeamHaveAllObjectives?
// 0x0028 (0x0028 - 0x0000)
struct BP_GameStateBase_C_DoesTeamHaveAllObjectives_ final
{
public:
	E_Teams                                       Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasAllObjectives;                                  // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ObjectiveFoundThatIsNotWonYet;                     // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ObjectiveBase_C*                    CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameStateBase_C_DoesTeamHaveAllObjectives_) == 0x000008, "Wrong alignment on BP_GameStateBase_C_DoesTeamHaveAllObjectives_");
static_assert(sizeof(BP_GameStateBase_C_DoesTeamHaveAllObjectives_) == 0x000028, "Wrong size on BP_GameStateBase_C_DoesTeamHaveAllObjectives_");
static_assert(offsetof(BP_GameStateBase_C_DoesTeamHaveAllObjectives_, Team) == 0x000000, "Member 'BP_GameStateBase_C_DoesTeamHaveAllObjectives_::Team' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_DoesTeamHaveAllObjectives_, HasAllObjectives) == 0x000001, "Member 'BP_GameStateBase_C_DoesTeamHaveAllObjectives_::HasAllObjectives' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_DoesTeamHaveAllObjectives_, ObjectiveFoundThatIsNotWonYet) == 0x000002, "Member 'BP_GameStateBase_C_DoesTeamHaveAllObjectives_::ObjectiveFoundThatIsNotWonYet' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_DoesTeamHaveAllObjectives_, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_GameStateBase_C_DoesTeamHaveAllObjectives_::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_DoesTeamHaveAllObjectives_, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_GameStateBase_C_DoesTeamHaveAllObjectives_::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_DoesTeamHaveAllObjectives_, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_GameStateBase_C_DoesTeamHaveAllObjectives_::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_DoesTeamHaveAllObjectives_, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_GameStateBase_C_DoesTeamHaveAllObjectives_::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_DoesTeamHaveAllObjectives_, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_GameStateBase_C_DoesTeamHaveAllObjectives_::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_DoesTeamHaveAllObjectives_, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_GameStateBase_C_DoesTeamHaveAllObjectives_::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_DoesTeamHaveAllObjectives_, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_GameStateBase_C_DoesTeamHaveAllObjectives_::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_DoesTeamHaveAllObjectives_, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000025, "Member 'BP_GameStateBase_C_DoesTeamHaveAllObjectives_::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.UpdatePlayerClass
// 0x00D8 (0x00D8 - 0x0000)
struct BP_GameStateBase_C_UpdatePlayerClass final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Units                                       PlayerClass;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_PlayerStats                        CallFunc_Array_Get_Item;                           // 0x0008(0x0068)(HasGetValueTypeHash)
	struct FST_PlayerStats                        K2Node_SetFieldsInStruct_StructOut;                // 0x0070(0x0068)(HasGetValueTypeHash)
};
static_assert(alignof(BP_GameStateBase_C_UpdatePlayerClass) == 0x000008, "Wrong alignment on BP_GameStateBase_C_UpdatePlayerClass");
static_assert(sizeof(BP_GameStateBase_C_UpdatePlayerClass) == 0x0000D8, "Wrong size on BP_GameStateBase_C_UpdatePlayerClass");
static_assert(offsetof(BP_GameStateBase_C_UpdatePlayerClass, PlayerIndex) == 0x000000, "Member 'BP_GameStateBase_C_UpdatePlayerClass::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_UpdatePlayerClass, PlayerClass) == 0x000004, "Member 'BP_GameStateBase_C_UpdatePlayerClass::PlayerClass' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_UpdatePlayerClass, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_GameStateBase_C_UpdatePlayerClass::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_UpdatePlayerClass, K2Node_SetFieldsInStruct_StructOut) == 0x000070, "Member 'BP_GameStateBase_C_UpdatePlayerClass::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.GetPlayerWithHighestScore
// 0x0088 (0x0088 - 0x0000)
struct BP_GameStateBase_C_GetPlayerWithHighestScore final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HighestScoreTemp;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HighestScoringPlayerIndex;                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_PlayerStats                        CallFunc_Array_Get_Item;                           // 0x0018(0x0068)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameStateBase_C_GetPlayerWithHighestScore) == 0x000008, "Wrong alignment on BP_GameStateBase_C_GetPlayerWithHighestScore");
static_assert(sizeof(BP_GameStateBase_C_GetPlayerWithHighestScore) == 0x000088, "Wrong size on BP_GameStateBase_C_GetPlayerWithHighestScore");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithHighestScore, PlayerIndex) == 0x000000, "Member 'BP_GameStateBase_C_GetPlayerWithHighestScore::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithHighestScore, HighestScoreTemp) == 0x000004, "Member 'BP_GameStateBase_C_GetPlayerWithHighestScore::HighestScoreTemp' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithHighestScore, HighestScoringPlayerIndex) == 0x000008, "Member 'BP_GameStateBase_C_GetPlayerWithHighestScore::HighestScoringPlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithHighestScore, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_GameStateBase_C_GetPlayerWithHighestScore::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithHighestScore, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_GameStateBase_C_GetPlayerWithHighestScore::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithHighestScore, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_GameStateBase_C_GetPlayerWithHighestScore::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithHighestScore, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_GameStateBase_C_GetPlayerWithHighestScore::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithHighestScore, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_GameStateBase_C_GetPlayerWithHighestScore::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithHighestScore, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'BP_GameStateBase_C_GetPlayerWithHighestScore::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithHighestScore, CallFunc_Greater_IntInt_ReturnValue) == 0x000085, "Member 'BP_GameStateBase_C_GetPlayerWithHighestScore::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.GetPlayerWithMostKills
// 0x0088 (0x0088 - 0x0000)
struct BP_GameStateBase_C_GetPlayerWithMostKills final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MostKillsTemp;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MostKillsPlayerIndex;                              // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_PlayerStats                        CallFunc_Array_Get_Item;                           // 0x0018(0x0068)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameStateBase_C_GetPlayerWithMostKills) == 0x000008, "Wrong alignment on BP_GameStateBase_C_GetPlayerWithMostKills");
static_assert(sizeof(BP_GameStateBase_C_GetPlayerWithMostKills) == 0x000088, "Wrong size on BP_GameStateBase_C_GetPlayerWithMostKills");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostKills, PlayerIndex) == 0x000000, "Member 'BP_GameStateBase_C_GetPlayerWithMostKills::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostKills, MostKillsTemp) == 0x000004, "Member 'BP_GameStateBase_C_GetPlayerWithMostKills::MostKillsTemp' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostKills, MostKillsPlayerIndex) == 0x000008, "Member 'BP_GameStateBase_C_GetPlayerWithMostKills::MostKillsPlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostKills, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_GameStateBase_C_GetPlayerWithMostKills::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostKills, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_GameStateBase_C_GetPlayerWithMostKills::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostKills, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_GameStateBase_C_GetPlayerWithMostKills::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostKills, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_GameStateBase_C_GetPlayerWithMostKills::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostKills, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_GameStateBase_C_GetPlayerWithMostKills::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostKills, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'BP_GameStateBase_C_GetPlayerWithMostKills::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostKills, CallFunc_Greater_IntInt_ReturnValue) == 0x000085, "Member 'BP_GameStateBase_C_GetPlayerWithMostKills::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.GetPlayerWithMostTankScore
// 0x0098 (0x0098 - 0x0000)
struct BP_GameStateBase_C_GetPlayerWithMostTankScore final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoScore;                                           // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MostTankScoreTemp;                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MostTankScorePlayerIndex;                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_PlayerStats                        CallFunc_Array_Get_Item;                           // 0x0020(0x0068)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameStateBase_C_GetPlayerWithMostTankScore) == 0x000008, "Wrong alignment on BP_GameStateBase_C_GetPlayerWithMostTankScore");
static_assert(sizeof(BP_GameStateBase_C_GetPlayerWithMostTankScore) == 0x000098, "Wrong size on BP_GameStateBase_C_GetPlayerWithMostTankScore");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostTankScore, PlayerIndex) == 0x000000, "Member 'BP_GameStateBase_C_GetPlayerWithMostTankScore::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostTankScore, NoScore) == 0x000004, "Member 'BP_GameStateBase_C_GetPlayerWithMostTankScore::NoScore' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostTankScore, MostTankScoreTemp) == 0x000008, "Member 'BP_GameStateBase_C_GetPlayerWithMostTankScore::MostTankScoreTemp' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostTankScore, MostTankScorePlayerIndex) == 0x00000C, "Member 'BP_GameStateBase_C_GetPlayerWithMostTankScore::MostTankScorePlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostTankScore, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_GameStateBase_C_GetPlayerWithMostTankScore::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostTankScore, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_GameStateBase_C_GetPlayerWithMostTankScore::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostTankScore, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_GameStateBase_C_GetPlayerWithMostTankScore::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostTankScore, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_GameStateBase_C_GetPlayerWithMostTankScore::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostTankScore, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_GameStateBase_C_GetPlayerWithMostTankScore::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostTankScore, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_GameStateBase_C_GetPlayerWithMostTankScore::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostTankScore, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'BP_GameStateBase_C_GetPlayerWithMostTankScore::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostTankScore, CallFunc_Add_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_GameStateBase_C_GetPlayerWithMostTankScore::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostTankScore, CallFunc_Greater_IntInt_ReturnValue) == 0x000094, "Member 'BP_GameStateBase_C_GetPlayerWithMostTankScore::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.GetPlayerWithMostPlaneScore
// 0x0098 (0x0098 - 0x0000)
struct BP_GameStateBase_C_GetPlayerWithMostPlaneScore final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoScore;                                           // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MostPlaneScoreTemp;                                // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MostPlaneScorePlayerIndex;                         // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_PlayerStats                        CallFunc_Array_Get_Item;                           // 0x0020(0x0068)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameStateBase_C_GetPlayerWithMostPlaneScore) == 0x000008, "Wrong alignment on BP_GameStateBase_C_GetPlayerWithMostPlaneScore");
static_assert(sizeof(BP_GameStateBase_C_GetPlayerWithMostPlaneScore) == 0x000098, "Wrong size on BP_GameStateBase_C_GetPlayerWithMostPlaneScore");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostPlaneScore, PlayerIndex) == 0x000000, "Member 'BP_GameStateBase_C_GetPlayerWithMostPlaneScore::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostPlaneScore, NoScore) == 0x000004, "Member 'BP_GameStateBase_C_GetPlayerWithMostPlaneScore::NoScore' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostPlaneScore, MostPlaneScoreTemp) == 0x000008, "Member 'BP_GameStateBase_C_GetPlayerWithMostPlaneScore::MostPlaneScoreTemp' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostPlaneScore, MostPlaneScorePlayerIndex) == 0x00000C, "Member 'BP_GameStateBase_C_GetPlayerWithMostPlaneScore::MostPlaneScorePlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostPlaneScore, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_GameStateBase_C_GetPlayerWithMostPlaneScore::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostPlaneScore, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_GameStateBase_C_GetPlayerWithMostPlaneScore::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostPlaneScore, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_GameStateBase_C_GetPlayerWithMostPlaneScore::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostPlaneScore, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_GameStateBase_C_GetPlayerWithMostPlaneScore::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostPlaneScore, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_GameStateBase_C_GetPlayerWithMostPlaneScore::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostPlaneScore, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_GameStateBase_C_GetPlayerWithMostPlaneScore::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostPlaneScore, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'BP_GameStateBase_C_GetPlayerWithMostPlaneScore::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostPlaneScore, CallFunc_Add_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_GameStateBase_C_GetPlayerWithMostPlaneScore::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithMostPlaneScore, CallFunc_Greater_IntInt_ReturnValue) == 0x000094, "Member 'BP_GameStateBase_C_GetPlayerWithMostPlaneScore::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.GetVotedForMap
// 0x0098 (0x0098 - 0x0000)
struct BP_GameStateBase_C_GetVotedForMap final
{
public:
	class FString                                 Map;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 HighestVotedMap;                                   // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         MaxVoteAmount;                                     // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_MapVote                            CallFunc_Array_Random_OutItem;                     // 0x0030(0x0020)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FST_MapVote                            CallFunc_Array_Get_Item;                           // 0x0068(0x0020)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameStateBase_C_GetVotedForMap) == 0x000008, "Wrong alignment on BP_GameStateBase_C_GetVotedForMap");
static_assert(sizeof(BP_GameStateBase_C_GetVotedForMap) == 0x000098, "Wrong size on BP_GameStateBase_C_GetVotedForMap");
static_assert(offsetof(BP_GameStateBase_C_GetVotedForMap, Map) == 0x000000, "Member 'BP_GameStateBase_C_GetVotedForMap::Map' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetVotedForMap, HighestVotedMap) == 0x000010, "Member 'BP_GameStateBase_C_GetVotedForMap::HighestVotedMap' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetVotedForMap, MaxVoteAmount) == 0x000020, "Member 'BP_GameStateBase_C_GetVotedForMap::MaxVoteAmount' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetVotedForMap, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_GameStateBase_C_GetVotedForMap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetVotedForMap, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_GameStateBase_C_GetVotedForMap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetVotedForMap, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_GameStateBase_C_GetVotedForMap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetVotedForMap, CallFunc_Array_Random_OutItem) == 0x000030, "Member 'BP_GameStateBase_C_GetVotedForMap::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetVotedForMap, CallFunc_Array_Random_OutIndex) == 0x000050, "Member 'BP_GameStateBase_C_GetVotedForMap::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetVotedForMap, CallFunc_Greater_IntInt_ReturnValue) == 0x000054, "Member 'BP_GameStateBase_C_GetVotedForMap::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetVotedForMap, CallFunc_SelectString_ReturnValue) == 0x000058, "Member 'BP_GameStateBase_C_GetVotedForMap::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetVotedForMap, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_GameStateBase_C_GetVotedForMap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetVotedForMap, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_GameStateBase_C_GetVotedForMap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetVotedForMap, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'BP_GameStateBase_C_GetVotedForMap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetVotedForMap, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'BP_GameStateBase_C_GetVotedForMap::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetVotedForMap, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000094, "Member 'BP_GameStateBase_C_GetVotedForMap::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.AddMapVote
// 0x0110 (0x0110 - 0x0000)
struct BP_GameStateBase_C_AddMapVote final
{
public:
	class FString                                 Map;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 VoterName;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FST_MapVote>                    MapVotesTemp;                                      // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         VotersTemp2;                                       // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         VotersTemp;                                        // 0x0040(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_MapVote                            CallFunc_Array_Get_Item;                           // 0x0070(0x0020)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_MapVote                            K2Node_SetFieldsInStruct_StructOut;                // 0x0098(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB[0x1];                                       // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_MapVote                            CallFunc_Array_Get_Item_1;                         // 0x00C0(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_MapVote                            K2Node_SetFieldsInStruct_StructOut_1;              // 0x00E8(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameStateBase_C_AddMapVote) == 0x000008, "Wrong alignment on BP_GameStateBase_C_AddMapVote");
static_assert(sizeof(BP_GameStateBase_C_AddMapVote) == 0x000110, "Wrong size on BP_GameStateBase_C_AddMapVote");
static_assert(offsetof(BP_GameStateBase_C_AddMapVote, Map) == 0x000000, "Member 'BP_GameStateBase_C_AddMapVote::Map' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddMapVote, VoterName) == 0x000010, "Member 'BP_GameStateBase_C_AddMapVote::VoterName' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddMapVote, MapVotesTemp) == 0x000020, "Member 'BP_GameStateBase_C_AddMapVote::MapVotesTemp' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddMapVote, VotersTemp2) == 0x000030, "Member 'BP_GameStateBase_C_AddMapVote::VotersTemp2' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddMapVote, VotersTemp) == 0x000040, "Member 'BP_GameStateBase_C_AddMapVote::VotersTemp' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddMapVote, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_GameStateBase_C_AddMapVote::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddMapVote, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BP_GameStateBase_C_AddMapVote::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddMapVote, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'BP_GameStateBase_C_AddMapVote::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddMapVote, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_GameStateBase_C_AddMapVote::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddMapVote, Temp_int_Loop_Counter_Variable_1) == 0x000060, "Member 'BP_GameStateBase_C_AddMapVote::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddMapVote, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'BP_GameStateBase_C_AddMapVote::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddMapVote, Temp_int_Array_Index_Variable_1) == 0x000068, "Member 'BP_GameStateBase_C_AddMapVote::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddMapVote, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_GameStateBase_C_AddMapVote::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddMapVote, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BP_GameStateBase_C_AddMapVote::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddMapVote, K2Node_SetFieldsInStruct_StructOut) == 0x000098, "Member 'BP_GameStateBase_C_AddMapVote::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddMapVote, CallFunc_Less_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_GameStateBase_C_AddMapVote::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddMapVote, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000B9, "Member 'BP_GameStateBase_C_AddMapVote::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddMapVote, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000BA, "Member 'BP_GameStateBase_C_AddMapVote::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddMapVote, CallFunc_Array_Length_ReturnValue_1) == 0x0000BC, "Member 'BP_GameStateBase_C_AddMapVote::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddMapVote, CallFunc_Array_Get_Item_1) == 0x0000C0, "Member 'BP_GameStateBase_C_AddMapVote::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddMapVote, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E0, "Member 'BP_GameStateBase_C_AddMapVote::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddMapVote, K2Node_SetFieldsInStruct_StructOut_1) == 0x0000E8, "Member 'BP_GameStateBase_C_AddMapVote::K2Node_SetFieldsInStruct_StructOut_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddMapVote, CallFunc_Array_Contains_ReturnValue) == 0x000108, "Member 'BP_GameStateBase_C_AddMapVote::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.GetVotesForMap
// 0x0058 (0x0058 - 0x0000)
struct BP_GameStateBase_C_GetVotesForMap final
{
public:
	class FString                                 Map;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         MapVotes_0;                                        // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_MapVote                            CallFunc_Array_Get_Item;                           // 0x0028(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameStateBase_C_GetVotesForMap) == 0x000008, "Wrong alignment on BP_GameStateBase_C_GetVotesForMap");
static_assert(sizeof(BP_GameStateBase_C_GetVotesForMap) == 0x000058, "Wrong size on BP_GameStateBase_C_GetVotesForMap");
static_assert(offsetof(BP_GameStateBase_C_GetVotesForMap, Map) == 0x000000, "Member 'BP_GameStateBase_C_GetVotesForMap::Map' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetVotesForMap, MapVotes_0) == 0x000010, "Member 'BP_GameStateBase_C_GetVotesForMap::MapVotes_0' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetVotesForMap, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_GameStateBase_C_GetVotesForMap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetVotesForMap, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_GameStateBase_C_GetVotesForMap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetVotesForMap, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_GameStateBase_C_GetVotesForMap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetVotesForMap, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_GameStateBase_C_GetVotesForMap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetVotesForMap, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_GameStateBase_C_GetVotesForMap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetVotesForMap, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_GameStateBase_C_GetVotesForMap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetVotesForMap, CallFunc_Array_Length_ReturnValue_1) == 0x00004C, "Member 'BP_GameStateBase_C_GetVotesForMap::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetVotesForMap, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000050, "Member 'BP_GameStateBase_C_GetVotesForMap::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.PermaRemove AIControlled Vehicles
// 0x0038 (0x0038 - 0x0000)
struct BP_GameStateBase_C_PermaRemove_AIControlled_Vehicles final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_VehicleBase_C*>              CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_VehicleBase_C*                      CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameStateBase_C_PermaRemove_AIControlled_Vehicles) == 0x000008, "Wrong alignment on BP_GameStateBase_C_PermaRemove_AIControlled_Vehicles");
static_assert(sizeof(BP_GameStateBase_C_PermaRemove_AIControlled_Vehicles) == 0x000038, "Wrong size on BP_GameStateBase_C_PermaRemove_AIControlled_Vehicles");
static_assert(offsetof(BP_GameStateBase_C_PermaRemove_AIControlled_Vehicles, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_GameStateBase_C_PermaRemove_AIControlled_Vehicles::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_PermaRemove_AIControlled_Vehicles, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_GameStateBase_C_PermaRemove_AIControlled_Vehicles::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_PermaRemove_AIControlled_Vehicles, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_GameStateBase_C_PermaRemove_AIControlled_Vehicles::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_PermaRemove_AIControlled_Vehicles, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'BP_GameStateBase_C_PermaRemove_AIControlled_Vehicles::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_PermaRemove_AIControlled_Vehicles, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_GameStateBase_C_PermaRemove_AIControlled_Vehicles::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_PermaRemove_AIControlled_Vehicles, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_GameStateBase_C_PermaRemove_AIControlled_Vehicles::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_PermaRemove_AIControlled_Vehicles, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_GameStateBase_C_PermaRemove_AIControlled_Vehicles::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.GetPlayerWithHighestHealScore
// 0x0090 (0x0090 - 0x0000)
struct BP_GameStateBase_C_GetPlayerWithHighestHealScore final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoScore;                                           // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HighestHealingScoreTemp;                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HighestScoringPlayerIndex;                         // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_PlayerStats                        CallFunc_Array_Get_Item;                           // 0x0020(0x0068)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameStateBase_C_GetPlayerWithHighestHealScore) == 0x000008, "Wrong alignment on BP_GameStateBase_C_GetPlayerWithHighestHealScore");
static_assert(sizeof(BP_GameStateBase_C_GetPlayerWithHighestHealScore) == 0x000090, "Wrong size on BP_GameStateBase_C_GetPlayerWithHighestHealScore");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithHighestHealScore, PlayerIndex) == 0x000000, "Member 'BP_GameStateBase_C_GetPlayerWithHighestHealScore::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithHighestHealScore, NoScore) == 0x000004, "Member 'BP_GameStateBase_C_GetPlayerWithHighestHealScore::NoScore' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithHighestHealScore, HighestHealingScoreTemp) == 0x000008, "Member 'BP_GameStateBase_C_GetPlayerWithHighestHealScore::HighestHealingScoreTemp' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithHighestHealScore, HighestScoringPlayerIndex) == 0x00000C, "Member 'BP_GameStateBase_C_GetPlayerWithHighestHealScore::HighestScoringPlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithHighestHealScore, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_GameStateBase_C_GetPlayerWithHighestHealScore::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithHighestHealScore, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_GameStateBase_C_GetPlayerWithHighestHealScore::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithHighestHealScore, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_GameStateBase_C_GetPlayerWithHighestHealScore::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithHighestHealScore, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_GameStateBase_C_GetPlayerWithHighestHealScore::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithHighestHealScore, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_GameStateBase_C_GetPlayerWithHighestHealScore::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithHighestHealScore, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_GameStateBase_C_GetPlayerWithHighestHealScore::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithHighestHealScore, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'BP_GameStateBase_C_GetPlayerWithHighestHealScore::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetPlayerWithHighestHealScore, CallFunc_Greater_IntInt_ReturnValue) == 0x00008D, "Member 'BP_GameStateBase_C_GetPlayerWithHighestHealScore::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.IncreaseEventToken
// 0x00E0 (0x00E0 - 0x0000)
struct BP_GameStateBase_C_IncreaseEventToken final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_PlayerStats                        CallFunc_Array_Get_Item;                           // 0x0008(0x0068)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_PlayerStats                        K2Node_SetFieldsInStruct_StructOut;                // 0x0078(0x0068)(HasGetValueTypeHash)
};
static_assert(alignof(BP_GameStateBase_C_IncreaseEventToken) == 0x000008, "Wrong alignment on BP_GameStateBase_C_IncreaseEventToken");
static_assert(sizeof(BP_GameStateBase_C_IncreaseEventToken) == 0x0000E0, "Wrong size on BP_GameStateBase_C_IncreaseEventToken");
static_assert(offsetof(BP_GameStateBase_C_IncreaseEventToken, PlayerIndex) == 0x000000, "Member 'BP_GameStateBase_C_IncreaseEventToken::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_IncreaseEventToken, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_GameStateBase_C_IncreaseEventToken::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_IncreaseEventToken, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BP_GameStateBase_C_IncreaseEventToken::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_IncreaseEventToken, K2Node_SetFieldsInStruct_StructOut) == 0x000078, "Member 'BP_GameStateBase_C_IncreaseEventToken::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.GetNextScenario
// 0x0003 (0x0003 - 0x0000)
struct BP_GameStateBase_C_GetNextScenario final
{
public:
	E_Scenarios                                   CurrentScenario;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Scenarios                                   NextScenario;                                      // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameStateBase_C_GetNextScenario) == 0x000001, "Wrong alignment on BP_GameStateBase_C_GetNextScenario");
static_assert(sizeof(BP_GameStateBase_C_GetNextScenario) == 0x000003, "Wrong size on BP_GameStateBase_C_GetNextScenario");
static_assert(offsetof(BP_GameStateBase_C_GetNextScenario, CurrentScenario) == 0x000000, "Member 'BP_GameStateBase_C_GetNextScenario::CurrentScenario' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetNextScenario, NextScenario) == 0x000001, "Member 'BP_GameStateBase_C_GetNextScenario::NextScenario' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_GetNextScenario, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'BP_GameStateBase_C_GetNextScenario::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.SpawnLandingCraft
// 0x0050 (0x0050 - 0x0000)
struct BP_GameStateBase_C_SpawnLandingCraft final
{
public:
	struct FTransform                             SpawnTransform;                                    // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          AI_Controlled;                                     // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Teams                                       Team;                                              // 0x0031(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LandingCraft_C*                     LandingCraft;                                      // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_LandingCraft_C*                     CallFunc_FinishSpawningActor_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameStateBase_C_SpawnLandingCraft) == 0x000010, "Wrong alignment on BP_GameStateBase_C_SpawnLandingCraft");
static_assert(sizeof(BP_GameStateBase_C_SpawnLandingCraft) == 0x000050, "Wrong size on BP_GameStateBase_C_SpawnLandingCraft");
static_assert(offsetof(BP_GameStateBase_C_SpawnLandingCraft, SpawnTransform) == 0x000000, "Member 'BP_GameStateBase_C_SpawnLandingCraft::SpawnTransform' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnLandingCraft, AI_Controlled) == 0x000030, "Member 'BP_GameStateBase_C_SpawnLandingCraft::AI_Controlled' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnLandingCraft, Team) == 0x000031, "Member 'BP_GameStateBase_C_SpawnLandingCraft::Team' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnLandingCraft, LandingCraft) == 0x000038, "Member 'BP_GameStateBase_C_SpawnLandingCraft::LandingCraft' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnLandingCraft, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000040, "Member 'BP_GameStateBase_C_SpawnLandingCraft::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SpawnLandingCraft, CallFunc_FinishSpawningActor_ReturnValue) == 0x000048, "Member 'BP_GameStateBase_C_SpawnLandingCraft::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.AddSpectator
// 0x0010 (0x0010 - 0x0000)
struct BP_GameStateBase_C_AddSpectator final
{
public:
	const class ABP_PlayerState_C*                PlayerState;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameStateBase_C_AddSpectator) == 0x000008, "Wrong alignment on BP_GameStateBase_C_AddSpectator");
static_assert(sizeof(BP_GameStateBase_C_AddSpectator) == 0x000010, "Wrong size on BP_GameStateBase_C_AddSpectator");
static_assert(offsetof(BP_GameStateBase_C_AddSpectator, PlayerState) == 0x000000, "Member 'BP_GameStateBase_C_AddSpectator::PlayerState' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddSpectator, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_GameStateBase_C_AddSpectator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddSpectator, CallFunc_Array_AddUnique_ReturnValue) == 0x00000C, "Member 'BP_GameStateBase_C_AddSpectator::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.RemoveSpectator
// 0x0010 (0x0010 - 0x0000)
struct BP_GameStateBase_C_RemoveSpectator final
{
public:
	const class ABP_PlayerState_C*                PlayerState;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameStateBase_C_RemoveSpectator) == 0x000008, "Wrong alignment on BP_GameStateBase_C_RemoveSpectator");
static_assert(sizeof(BP_GameStateBase_C_RemoveSpectator) == 0x000010, "Wrong size on BP_GameStateBase_C_RemoveSpectator");
static_assert(offsetof(BP_GameStateBase_C_RemoveSpectator, PlayerState) == 0x000000, "Member 'BP_GameStateBase_C_RemoveSpectator::PlayerState' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveSpectator, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_GameStateBase_C_RemoveSpectator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RemoveSpectator, CallFunc_Array_RemoveItem_ReturnValue) == 0x000009, "Member 'BP_GameStateBase_C_RemoveSpectator::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.RegisterNewPlane
// 0x0010 (0x0010 - 0x0000)
struct BP_GameStateBase_C_RegisterNewPlane final
{
public:
	class ABP_PlaneBase_C*                        Plane;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameStateBase_C_RegisterNewPlane) == 0x000008, "Wrong alignment on BP_GameStateBase_C_RegisterNewPlane");
static_assert(sizeof(BP_GameStateBase_C_RegisterNewPlane) == 0x000010, "Wrong size on BP_GameStateBase_C_RegisterNewPlane");
static_assert(offsetof(BP_GameStateBase_C_RegisterNewPlane, Plane) == 0x000000, "Member 'BP_GameStateBase_C_RegisterNewPlane::Plane' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_RegisterNewPlane, CallFunc_Array_AddUnique_ReturnValue) == 0x000008, "Member 'BP_GameStateBase_C_RegisterNewPlane::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.SetPlayerAliveStatus
// 0x00D8 (0x00D8 - 0x0000)
struct BP_GameStateBase_C_SetPlayerAliveStatus final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAlive;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_PlayerStats                        CallFunc_Array_Get_Item;                           // 0x0008(0x0068)(HasGetValueTypeHash)
	struct FST_PlayerStats                        K2Node_SetFieldsInStruct_StructOut;                // 0x0070(0x0068)(HasGetValueTypeHash)
};
static_assert(alignof(BP_GameStateBase_C_SetPlayerAliveStatus) == 0x000008, "Wrong alignment on BP_GameStateBase_C_SetPlayerAliveStatus");
static_assert(sizeof(BP_GameStateBase_C_SetPlayerAliveStatus) == 0x0000D8, "Wrong size on BP_GameStateBase_C_SetPlayerAliveStatus");
static_assert(offsetof(BP_GameStateBase_C_SetPlayerAliveStatus, PlayerIndex) == 0x000000, "Member 'BP_GameStateBase_C_SetPlayerAliveStatus::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SetPlayerAliveStatus, IsAlive) == 0x000004, "Member 'BP_GameStateBase_C_SetPlayerAliveStatus::IsAlive' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SetPlayerAliveStatus, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000005, "Member 'BP_GameStateBase_C_SetPlayerAliveStatus::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SetPlayerAliveStatus, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_GameStateBase_C_SetPlayerAliveStatus::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_SetPlayerAliveStatus, K2Node_SetFieldsInStruct_StructOut) == 0x000070, "Member 'BP_GameStateBase_C_SetPlayerAliveStatus::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.AddPlayerHealScore
// 0x00E8 (0x00E8 - 0x0000)
struct BP_GameStateBase_C_AddPlayerHealScore final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HealScoreToAdd;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_PlayerStats                        CallFunc_Array_Get_Item;                           // 0x0010(0x0068)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_PlayerStats                        K2Node_SetFieldsInStruct_StructOut;                // 0x0080(0x0068)(HasGetValueTypeHash)
};
static_assert(alignof(BP_GameStateBase_C_AddPlayerHealScore) == 0x000008, "Wrong alignment on BP_GameStateBase_C_AddPlayerHealScore");
static_assert(sizeof(BP_GameStateBase_C_AddPlayerHealScore) == 0x0000E8, "Wrong size on BP_GameStateBase_C_AddPlayerHealScore");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerHealScore, PlayerIndex) == 0x000000, "Member 'BP_GameStateBase_C_AddPlayerHealScore::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerHealScore, HealScoreToAdd) == 0x000004, "Member 'BP_GameStateBase_C_AddPlayerHealScore::HealScoreToAdd' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerHealScore, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_GameStateBase_C_AddPlayerHealScore::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerHealScore, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_GameStateBase_C_AddPlayerHealScore::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerHealScore, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'BP_GameStateBase_C_AddPlayerHealScore::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_AddPlayerHealScore, K2Node_SetFieldsInStruct_StructOut) == 0x000080, "Member 'BP_GameStateBase_C_AddPlayerHealScore::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.TempBanPlayer
// 0x0060 (0x0060 - 0x0000)
struct BP_GameStateBase_C_TempBanPlayer final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSteamID                               CallFunc_GetSteamIdFromPlayerState_ReturnValue;    // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerControllerFromPlayerState_PlayerController; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BreakSteamID_ReturnValue;                 // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_KickPlayer_ReturnValue;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameStateBase_C_TempBanPlayer) == 0x000008, "Wrong alignment on BP_GameStateBase_C_TempBanPlayer");
static_assert(sizeof(BP_GameStateBase_C_TempBanPlayer) == 0x000060, "Wrong size on BP_GameStateBase_C_TempBanPlayer");
static_assert(offsetof(BP_GameStateBase_C_TempBanPlayer, PlayerState) == 0x000000, "Member 'BP_GameStateBase_C_TempBanPlayer::PlayerState' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_TempBanPlayer, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'BP_GameStateBase_C_TempBanPlayer::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_TempBanPlayer, K2Node_DynamicCast_AsBP_Player_State) == 0x000010, "Member 'BP_GameStateBase_C_TempBanPlayer::K2Node_DynamicCast_AsBP_Player_State' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_TempBanPlayer, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GameStateBase_C_TempBanPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_TempBanPlayer, K2Node_DynamicCast_AsBP_Game_Instance) == 0x000020, "Member 'BP_GameStateBase_C_TempBanPlayer::K2Node_DynamicCast_AsBP_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_TempBanPlayer, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_GameStateBase_C_TempBanPlayer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_TempBanPlayer, CallFunc_GetSteamIdFromPlayerState_ReturnValue) == 0x000030, "Member 'BP_GameStateBase_C_TempBanPlayer::CallFunc_GetSteamIdFromPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_TempBanPlayer, CallFunc_GetPlayerControllerFromPlayerState_PlayerController) == 0x000038, "Member 'BP_GameStateBase_C_TempBanPlayer::CallFunc_GetPlayerControllerFromPlayerState_PlayerController' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_TempBanPlayer, CallFunc_BreakSteamID_ReturnValue) == 0x000040, "Member 'BP_GameStateBase_C_TempBanPlayer::CallFunc_BreakSteamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_TempBanPlayer, CallFunc_KickPlayer_ReturnValue) == 0x000050, "Member 'BP_GameStateBase_C_TempBanPlayer::CallFunc_KickPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_TempBanPlayer, CallFunc_Array_AddUnique_ReturnValue) == 0x000054, "Member 'BP_GameStateBase_C_TempBanPlayer::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_TempBanPlayer, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_GameStateBase_C_TempBanPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.PermaBanPlayer
// 0x0080 (0x0080 - 0x0000)
struct BP_GameStateBase_C_PermaBanPlayer final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSteamID                               CallFunc_GetSteamIdFromPlayerState_ReturnValue;    // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BreakSteamID_ReturnValue;                 // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FST_ServerManagerPlayerInfo            K2Node_MakeStruct_ST_ServerManagerPlayerInfo;      // 0x0058(0x0020)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameStateBase_C_PermaBanPlayer) == 0x000008, "Wrong alignment on BP_GameStateBase_C_PermaBanPlayer");
static_assert(sizeof(BP_GameStateBase_C_PermaBanPlayer) == 0x000080, "Wrong size on BP_GameStateBase_C_PermaBanPlayer");
static_assert(offsetof(BP_GameStateBase_C_PermaBanPlayer, PlayerState) == 0x000000, "Member 'BP_GameStateBase_C_PermaBanPlayer::PlayerState' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_PermaBanPlayer, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'BP_GameStateBase_C_PermaBanPlayer::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_PermaBanPlayer, K2Node_DynamicCast_AsBP_Player_State) == 0x000010, "Member 'BP_GameStateBase_C_PermaBanPlayer::K2Node_DynamicCast_AsBP_Player_State' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_PermaBanPlayer, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GameStateBase_C_PermaBanPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_PermaBanPlayer, K2Node_DynamicCast_AsBP_Game_Instance) == 0x000020, "Member 'BP_GameStateBase_C_PermaBanPlayer::K2Node_DynamicCast_AsBP_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_PermaBanPlayer, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_GameStateBase_C_PermaBanPlayer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_PermaBanPlayer, CallFunc_GetPlayerName_ReturnValue) == 0x000030, "Member 'BP_GameStateBase_C_PermaBanPlayer::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_PermaBanPlayer, CallFunc_GetSteamIdFromPlayerState_ReturnValue) == 0x000040, "Member 'BP_GameStateBase_C_PermaBanPlayer::CallFunc_GetSteamIdFromPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_PermaBanPlayer, CallFunc_BreakSteamID_ReturnValue) == 0x000048, "Member 'BP_GameStateBase_C_PermaBanPlayer::CallFunc_BreakSteamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_PermaBanPlayer, K2Node_MakeStruct_ST_ServerManagerPlayerInfo) == 0x000058, "Member 'BP_GameStateBase_C_PermaBanPlayer::K2Node_MakeStruct_ST_ServerManagerPlayerInfo' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_PermaBanPlayer, CallFunc_Array_Add_ReturnValue) == 0x000078, "Member 'BP_GameStateBase_C_PermaBanPlayer::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_GameStateBase.BP_GameStateBase_C.CleanUpSpectatorReferenceArray
// 0x0028 (0x0028 - 0x0000)
struct BP_GameStateBase_C_CleanUpSpectatorReferenceArray final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_C*                      CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameStateBase_C_CleanUpSpectatorReferenceArray) == 0x000008, "Wrong alignment on BP_GameStateBase_C_CleanUpSpectatorReferenceArray");
static_assert(sizeof(BP_GameStateBase_C_CleanUpSpectatorReferenceArray) == 0x000028, "Wrong size on BP_GameStateBase_C_CleanUpSpectatorReferenceArray");
static_assert(offsetof(BP_GameStateBase_C_CleanUpSpectatorReferenceArray, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_GameStateBase_C_CleanUpSpectatorReferenceArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_CleanUpSpectatorReferenceArray, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'BP_GameStateBase_C_CleanUpSpectatorReferenceArray::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_CleanUpSpectatorReferenceArray, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_GameStateBase_C_CleanUpSpectatorReferenceArray::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_CleanUpSpectatorReferenceArray, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_GameStateBase_C_CleanUpSpectatorReferenceArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_CleanUpSpectatorReferenceArray, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_GameStateBase_C_CleanUpSpectatorReferenceArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_CleanUpSpectatorReferenceArray, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_GameStateBase_C_CleanUpSpectatorReferenceArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_CleanUpSpectatorReferenceArray, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_GameStateBase_C_CleanUpSpectatorReferenceArray::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_CleanUpSpectatorReferenceArray, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_GameStateBase_C_CleanUpSpectatorReferenceArray::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameStateBase_C_CleanUpSpectatorReferenceArray, CallFunc_Max_ReturnValue) == 0x000024, "Member 'BP_GameStateBase_C_CleanUpSpectatorReferenceArray::CallFunc_Max_ReturnValue' has a wrong offset!");

}

