#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_SpecialActionStack

#include "Basic.hpp"

#include "W_SpecialActionStack_classes.hpp"
#include "W_SpecialActionStack_parameters.hpp"


namespace SDK
{

// Function W_SpecialActionStack.W_SpecialActionStack_C.ExecuteUbergraph_W_SpecialActionStack
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_SpecialActionStack_C::ExecuteUbergraph_W_SpecialActionStack(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_SpecialActionStack_C", "ExecuteUbergraph_W_SpecialActionStack");

	Params::W_SpecialActionStack_C_ExecuteUbergraph_W_SpecialActionStack Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_SpecialActionStack.W_SpecialActionStack_C.AddNotification
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FLinearColor&              Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      KilledPlayerUsername                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_SpecialActionStack_C::AddNotification(const class FText& Message, const struct FLinearColor& Color, class FName Tag, const class FText& KilledPlayerUsername)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_SpecialActionStack_C", "AddNotification");

	Params::W_SpecialActionStack_C_AddNotification Parms{};

	Parms.Message = std::move(Message);
	Parms.Color = std::move(Color);
	Parms.Tag = Tag;
	Parms.KilledPlayerUsername = std::move(KilledPlayerUsername);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_SpecialActionStack.W_SpecialActionStack_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_SpecialActionStack_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_SpecialActionStack_C", "Tick");

	Params::W_SpecialActionStack_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_SpecialActionStack.W_SpecialActionStack_C.CheckIfNotificationAlreadyExists
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      Message                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FLinearColor&              Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      KilledPlayerUsername                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// bool*                                   AlreadyExistsAndReplayed                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_SpecialActionStack_C::CheckIfNotificationAlreadyExists(const class FText& Message, const struct FLinearColor& Color, class FName Tag, const class FText& KilledPlayerUsername, bool* AlreadyExistsAndReplayed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_SpecialActionStack_C", "CheckIfNotificationAlreadyExists");

	Params::W_SpecialActionStack_C_CheckIfNotificationAlreadyExists Parms{};

	Parms.Message = std::move(Message);
	Parms.Color = std::move(Color);
	Parms.Tag = Tag;
	Parms.KilledPlayerUsername = std::move(KilledPlayerUsername);

	UObject::ProcessEvent(Func, &Parms);

	if (AlreadyExistsAndReplayed != nullptr)
		*AlreadyExistsAndReplayed = Parms.AlreadyExistsAndReplayed;
}


// Function W_SpecialActionStack.W_SpecialActionStack_C.AddEntry
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPanelWidget*                     HorBox                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FST_Notification&          Notification                                           (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UW_SpecialActionStack_C::AddEntry(class UPanelWidget* HorBox, const struct FST_Notification& Notification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_SpecialActionStack_C", "AddEntry");

	Params::W_SpecialActionStack_C_AddEntry Parms{};

	Parms.HorBox = HorBox;
	Parms.Notification = std::move(Notification);

	UObject::ProcessEvent(Func, &Parms);
}

}

