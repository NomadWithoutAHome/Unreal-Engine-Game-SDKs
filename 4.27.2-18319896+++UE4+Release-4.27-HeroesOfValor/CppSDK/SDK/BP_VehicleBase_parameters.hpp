#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VehicleBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "E_Teams_structs.hpp"
#include "InputCore_structs.hpp"
#include "E_DamageTypes_structs.hpp"
#include "E_Units_structs.hpp"
#include "ST_PlayerStats_structs.hpp"


namespace SDK::Params
{

// Function BP_VehicleBase.BP_VehicleBase_C.ExecuteUbergraph_BP_VehicleBase
// 0x0B80 (0x0B80 - 0x0000)
struct BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_8;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_9;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_1;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_10;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_11;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_2;                            // 0x0060(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_3;                            // 0x0080(0x0010)(ConstParm, ReferenceParm)
	struct FKey                                   Temp_struct_Variable;                              // 0x0090(0x0018)(HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x00B0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_12;                            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x00E8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x0108(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x012E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12F[0x1];                                      // 0x012F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Controller_C*                       K2Node_DynamicCast_AsBP_Controller;                // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_DamageAmount;                         // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_DamageHitLocation;                    // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_DamageDirection;                      // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_AttackerPawn;                         // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Event_Debuff;                               // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DamageTypes                                 K2Node_Event_DamageType;                           // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerIndex;                          // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsCriticalHit;                        // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IgnoreTeamProtection;                 // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_182[0x6];                                      // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_SpecialKillMessage;                   // 0x0188(0x0018)()
	bool                                          K2Node_Event_ShouldBreakInvisibility;              // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsPiercingDamage;                     // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Units                                       CallFunc_Get_PlayerUnitType_UnitType;              // 0x01A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Teams                                       CallFunc_GetPawnData_Team;                         // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A5[0x3];                                      // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPawnData_PlayerIndex;                  // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_PlayerStats                        CallFunc_GetPawnData_PlayerStats;                  // 0x01B0(0x0068)(HasGetValueTypeHash)
	class UPawnDataComponent_C*                   CallFunc_GetPawnData_PawnDataComponent;            // 0x0218(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State;              // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x3];                                      // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State_1;            // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlaneBase_C*                        K2Node_DynamicCast_AsBP_Plane_Base;                // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_258[0x8];                                      // 0x0258(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0260(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Delay;                          // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_CustomEvent_AttackerPawn;                   // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State_2;            // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1[0x3];                                      // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_DamageLocation;                 // 0x02D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_DamageDirection;                // 0x02E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_DamageAmount_1;                 // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DamageTypes                                 K2Node_CustomEvent_DamageType;                     // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_DamageLocationRelative;         // 0x02F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DamageTypes                                 Temp_byte_Variable;                                // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_NewController;                        // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_4;                            // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_OldController;                        // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_5;                            // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x033C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_6;                            // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EngageEnemy_Engaging;                     // 0x0351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_352[0x2];                                      // 0x0352(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0354(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0360(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_DamageAmount;                   // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_AttackerLocation;               // 0x0378(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x0384(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x039C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x039D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39E[0x2];                                      // 0x039E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AStaticMeshActor*>               CallFunc_GetAllActorsOfClassWithTag_OutActors;     // 0x03A0(0x0010)(ReferenceParm)
	class UParticleSystem*                        Temp_object_Variable_7;                            // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AStaticMeshActor*                       CallFunc_Array_Get_Item;                           // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C1[0x3];                                      // 0x03C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x03C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerControlled_ReturnValue;           // 0x03DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DD[0x3];                                      // 0x03DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base_1;         // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F1[0x3];                                      // 0x03F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x03FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x03FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Repairing;                      // 0x03FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FF[0x1];                                      // 0x03FF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_404[0x4];                                      // 0x0404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0408(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_1;                      // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0418(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0428(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0434(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0435(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_436[0x2];                                      // 0x0436(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable_8;                            // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerControlled_ReturnValue_1;         // 0x0441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0442(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_443[0x1];                                      // 0x0443(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlaneBase_C*                        K2Node_CustomEvent_Plane;                          // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x045C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerControlled_ReturnValue_2;         // 0x045D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45E[0x2];                                      // 0x045E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_6;        // 0x0460(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C[0x4];                                      // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable_9;                            // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Amount;                         // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C[0x4];                                      // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_10;                           // 0x0480(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0490(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0519(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x051A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51B[0x1];                                      // 0x051B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x051C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0524(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0530(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x053C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0548(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_554[0x4];                                      // 0x0554(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0568(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0580(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0584(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0590(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C[0x4];                                      // 0x059C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_VehicleRepairZone_C*                K2Node_DynamicCast_AsBP_Vehicle_Repair_Zone;       // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPawnControlled_ReturnValue;             // 0x05A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x05AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AB[0x1];                                      // 0x05AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Impulse_2;                      // 0x05AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_SpinImpulse_2;                  // 0x05B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_SpinLocation_2;                 // 0x05C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_11;                           // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_12;                           // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue_1;    // 0x05E0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_2;                         // 0x05F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x05FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x05FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x05FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5FF[0x1];                                      // 0x05FF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable_13;                           // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_14;                           // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_15;                           // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerControlled_ReturnValue_3;         // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_619[0x3];                                      // 0x0619(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Impulse_1;                      // 0x061C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_SpinImpulse_1;                  // 0x0628(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_SpinLocation_1;                 // 0x0634(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Impulse;                        // 0x0640(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_SpinImpulse;                    // 0x064C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_SpinLocation;                   // 0x0658(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DamageTypes                                 Temp_byte_Variable_1;                              // 0x0664(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0665(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x0666(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0667(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0668(0x0010)(ConstParm, ReferenceParm)
	float                                         Temp_float_Variable_13;                            // 0x0678(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x067C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0688(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_7;        // 0x0690(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x069C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x06A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x06B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x06C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6CC[0x4];                                      // 0x06CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_SphereTraceMultiForObjects_OutHits;       // 0x06D0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMultiForObjects_ReturnValue;   // 0x06E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E1[0x3];                                      // 0x06E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item_3;                         // 0x06E4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x076C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0771(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_772[0x2];                                      // 0x0772(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0774(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0778(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x077C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0788(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0794(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x07A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7AC[0x4];                                      // 0x07AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x07C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x07C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x07D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x07D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x07D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x07DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x07E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x07F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F5[0x3];                                      // 0x07F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_VehicleBase_C*                      K2Node_DynamicCast_AsBP_Vehicle_Base;              // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0800(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_801[0x3];                                      // 0x0801(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_8;        // 0x0804(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x0811(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_812[0x2];                                      // 0x0812(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_14;                            // 0x0814(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_15;                            // 0x0818(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x081C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81D[0x3];                                      // 0x081D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_16;                            // 0x0820(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0824(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0830(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0840(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0850(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0868(0x0018)()
	float                                         Temp_float_Variable_17;                            // 0x0880(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_884[0x4];                                      // 0x0884(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0888(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x08C8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0908(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0918(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0930(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetExitLocation_ExitLocation;             // 0x0940(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x094C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94D[0x3];                                      // 0x094D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0950(0x0030)(IsPlainOldData, NoDestructor)
	class UParticleSystem*                        K2Node_Select_Default;                             // 0x0980(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0988(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_994[0x4];                                      // 0x0994(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select_Default_1;                           // 0x0998(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DamageTypes                                 Temp_byte_Variable_2;                              // 0x09A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A1[0x3];                                      // 0x09A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_2;                           // 0x09A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x09A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x09AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x09B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C4[0x4];                                      // 0x09C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x09C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x09D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D1[0xF];                                      // 0x09D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x09E0(0x0030)(IsPlainOldData, NoDestructor)
	class FText                                   K2Node_Select_Default_4;                           // 0x0A10(0x0018)()
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0A28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Username_C*                         CallFunc_FinishSpawningActor_ReturnValue;          // 0x0A30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0A38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0A39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0A3A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3B[0x1];                                      // 0x0A3B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_5;                           // 0x0A3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0A40(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x0A4C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x0AD4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x0AD5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x0AD6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD7[0x1];                                      // 0x0AD7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x0AD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x0ADC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x0AE0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x0AEC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x0AF8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x0B04(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x0B10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x0B18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x0B20(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x0B28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x0B30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x0B34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x0B38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x0B3C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x0B48(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B54[0x4];                                      // 0x0B54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue_1;       // 0x0B58(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_6;                           // 0x0B60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0B64(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B65[0x3];                                      // 0x0B65(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0B68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0B6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_2;                      // 0x0B70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0B74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_3;                      // 0x0B78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase) == 0x000010, "Wrong alignment on BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase");
static_assert(sizeof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase) == 0x000B80, "Wrong size on BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, EntryPoint) == 0x000000, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_float_Variable) == 0x000010, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_float_Variable_1) == 0x000014, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_float_Variable_2) == 0x000018, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_float_Variable_3) == 0x00001C, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_float_Variable_4) == 0x000020, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_float_Variable_5) == 0x000024, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_float_Variable_6) == 0x000028, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_float_Variable_7) == 0x00002C, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_float_Variable_8) == 0x000030, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_float_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_float_Variable_9) == 0x000034, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_float_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_bool_Variable) == 0x000038, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_object_Variable) == 0x000040, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_object_Variable_1) == 0x000048, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_bool_Variable_1) == 0x000050, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_float_Variable_10) == 0x000054, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_float_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_float_Variable_11) == 0x000058, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_float_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_object_Variable_2) == 0x000060, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_HasAuthority_ReturnValue) == 0x00007C, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_object_Variable_3) == 0x000080, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_struct_Variable) == 0x000090, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_bool_IsClosed_Variable) == 0x0000A8, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_InputActionEvent_Key) == 0x0000B0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_HasAuthority_ReturnValue_1) == 0x0000C8, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_int_Loop_Counter_Variable_1) == 0x0000CC, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_bool_True_if_break_was_hit_Variable) == 0x0000D4, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_int_Array_Index_Variable_1) == 0x0000D8, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Not_PreBool_ReturnValue) == 0x0000DC, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_float_Variable_12) == 0x0000E0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_float_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_InputActionEvent_Key_1) == 0x0000E8, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_HasAuthority_ReturnValue_2) == 0x000100, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_InputActionEvent_Key_2) == 0x000108, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_int_Loop_Counter_Variable_2) == 0x000120, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Add_IntInt_ReturnValue_2) == 0x000124, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_int_Array_Index_Variable_2) == 0x000128, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_HasAuthority_ReturnValue_3) == 0x00012C, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_bool_IsClosed_Variable_1) == 0x00012D, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_bool_Has_Been_Initd_Variable) == 0x00012E, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_Event_DeltaSeconds) == 0x000130, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_GetPlayerController_ReturnValue) == 0x000138, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_DynamicCast_AsBP_Controller) == 0x000140, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_DynamicCast_AsBP_Controller' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_DynamicCast_bSuccess) == 0x000148, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_Event_DamageAmount) == 0x00014C, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_Event_DamageAmount' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_Event_DamageHitLocation) == 0x000150, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_Event_DamageHitLocation' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_Event_DamageDirection) == 0x00015C, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_Event_DamageDirection' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_Event_AttackerPawn) == 0x000168, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_Event_AttackerPawn' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_Event_Debuff) == 0x000170, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_Event_Debuff' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_Event_DamageType) == 0x000178, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_Event_PlayerIndex) == 0x00017C, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_Event_PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_Event_IsCriticalHit) == 0x000180, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_Event_IsCriticalHit' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_Event_IgnoreTeamProtection) == 0x000181, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_Event_IgnoreTeamProtection' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_Event_SpecialKillMessage) == 0x000188, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_Event_SpecialKillMessage' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_Event_ShouldBreakInvisibility) == 0x0001A0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_Event_ShouldBreakInvisibility' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_Event_IsPiercingDamage) == 0x0001A1, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_Event_IsPiercingDamage' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_IsValid_ReturnValue) == 0x0001A2, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Get_PlayerUnitType_UnitType) == 0x0001A3, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Get_PlayerUnitType_UnitType' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_GetPawnData_Team) == 0x0001A4, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_GetPawnData_Team' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_GetPawnData_PlayerIndex) == 0x0001A8, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_GetPawnData_PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_GetPawnData_PlayerStats) == 0x0001B0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_GetPawnData_PlayerStats' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_GetPawnData_PawnDataComponent) == 0x000218, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_GetPawnData_PawnDataComponent' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_DynamicCast_AsBP_Player_State) == 0x000220, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_DynamicCast_AsBP_Player_State' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_DynamicCast_bSuccess_1) == 0x000228, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00022C, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_DynamicCast_AsBP_Player_State_1) == 0x000238, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_DynamicCast_AsBP_Player_State_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_DynamicCast_bSuccess_2) == 0x000240, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_DynamicCast_AsBP_Plane_Base) == 0x000248, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_DynamicCast_AsBP_Plane_Base' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_DynamicCast_bSuccess_3) == 0x000250, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000254, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_GetTransform_ReturnValue) == 0x000260, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_GetGameState_ReturnValue) == 0x000290, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x000298, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_DynamicCast_bSuccess_4) == 0x0002A0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_GetObjectClass_ReturnValue) == 0x0002A8, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_CustomEvent_Delay) == 0x0002B0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_CustomEvent_Delay' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_CustomEvent_AttackerPawn) == 0x0002B8, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_CustomEvent_AttackerPawn' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_IsValid_ReturnValue_1) == 0x0002C0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_DynamicCast_AsBP_Player_State_2) == 0x0002C8, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_DynamicCast_AsBP_Player_State_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_DynamicCast_bSuccess_5) == 0x0002D0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_CustomEvent_DamageLocation) == 0x0002D4, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_CustomEvent_DamageLocation' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_CustomEvent_DamageDirection) == 0x0002E0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_CustomEvent_DamageDirection' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_CustomEvent_DamageAmount_1) == 0x0002EC, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_CustomEvent_DamageAmount_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_CustomEvent_DamageType) == 0x0002F0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_CustomEvent_DamageLocationRelative) == 0x0002F4, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_CustomEvent_DamageLocationRelative' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_byte_Variable) == 0x000300, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_Event_NewController) == 0x000308, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_object_Variable_4) == 0x000310, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000318, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_Event_OldController) == 0x000320, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_Event_OldController' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_object_Variable_5) == 0x000328, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000330, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00033C, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_object_Variable_6) == 0x000348, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_IsValid_ReturnValue_2) == 0x000350, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_EngageEnemy_Engaging) == 0x000351, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_EngageEnemy_Engaging' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000354, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Add_VectorVector_ReturnValue) == 0x000360, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Add_IntInt_ReturnValue_3) == 0x00036C, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Clamp_ReturnValue) == 0x000370, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_CustomEvent_DamageAmount) == 0x000374, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_CustomEvent_DamageAmount' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_CustomEvent_AttackerLocation) == 0x000378, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_CustomEvent_AttackerLocation' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x000384, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakVector_X) == 0x000390, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakVector_Y) == 0x000394, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakVector_Z) == 0x000398, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_bool_Has_Been_Initd_Variable_1) == 0x00039C, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Less_FloatFloat_ReturnValue) == 0x00039D, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_GetAllActorsOfClassWithTag_OutActors) == 0x0003A0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_GetAllActorsOfClassWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_object_Variable_7) == 0x0003B0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Array_Get_Item) == 0x0003B8, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_IsValid_ReturnValue_3) == 0x0003C0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x0003C4, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakVector_X_1) == 0x0003D0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakVector_Y_1) == 0x0003D4, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakVector_Z_1) == 0x0003D8, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_IsPlayerControlled_ReturnValue) == 0x0003DC, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_IsPlayerControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_GetGameState_ReturnValue_1) == 0x0003E0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_DynamicCast_AsBP_Game_State_Base_1) == 0x0003E8, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_DynamicCast_AsBP_Game_State_Base_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_DynamicCast_bSuccess_6) == 0x0003F0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0003F4, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Add_FloatFloat_ReturnValue) == 0x0003F8, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0003FC, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0003FD, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_CustomEvent_Repairing) == 0x0003FE, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_CustomEvent_Repairing' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Add_IntInt_ReturnValue_4) == 0x000400, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000408, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Clamp_ReturnValue_1) == 0x000410, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Clamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000418, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Array_Get_Item_1) == 0x000428, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Array_Length_ReturnValue) == 0x000430, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Less_IntInt_ReturnValue) == 0x000434, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_bool_IsClosed_Variable_2) == 0x000435, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_object_Variable_8) == 0x000438, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_IsLocallyControlled_ReturnValue) == 0x000440, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_IsPlayerControlled_ReturnValue_1) == 0x000441, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_IsPlayerControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BooleanAND_ReturnValue) == 0x000442, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000444, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000448, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_CustomEvent_Plane) == 0x000450, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_CustomEvent_Plane' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000458, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x00045C, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_IsPlayerControlled_ReturnValue_2) == 0x00045D, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_IsPlayerControlled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_K2_GetActorLocation_ReturnValue_6) == 0x000460, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_K2_GetActorLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_object_Variable_9) == 0x000470, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_CustomEvent_Amount) == 0x000478, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_CustomEvent_Amount' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_object_Variable_10) == 0x000480, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_LineTraceSingle_OutHit) == 0x000490, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_LineTraceSingle_ReturnValue) == 0x000518, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_bBlockingHit) == 0x000519, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_bInitialOverlap) == 0x00051A, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_Time) == 0x00051C, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_Distance) == 0x000520, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_Location) == 0x000524, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_ImpactPoint) == 0x000530, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_Normal) == 0x00053C, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_ImpactNormal) == 0x000548, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_PhysMat) == 0x000558, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_HitActor) == 0x000560, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_HitComponent) == 0x000568, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_HitBoneName) == 0x000570, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_HitItem) == 0x000578, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_ElementIndex) == 0x00057C, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_FaceIndex) == 0x000580, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_TraceStart) == 0x000584, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_TraceEnd) == 0x000590, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_DynamicCast_AsBP_Vehicle_Repair_Zone) == 0x0005A0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_DynamicCast_AsBP_Vehicle_Repair_Zone' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_DynamicCast_bSuccess_7) == 0x0005A8, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_IsPawnControlled_ReturnValue) == 0x0005A9, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_IsPawnControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0005AA, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_CustomEvent_Impulse_2) == 0x0005AC, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_CustomEvent_Impulse_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_CustomEvent_SpinImpulse_2) == 0x0005B8, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_CustomEvent_SpinImpulse_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_CustomEvent_SpinLocation_2) == 0x0005C4, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_CustomEvent_SpinLocation_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_object_Variable_11) == 0x0005D0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_object_Variable_12) == 0x0005D8, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_K2_GetComponentsByClass_ReturnValue_1) == 0x0005E0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_K2_GetComponentsByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Array_Get_Item_2) == 0x0005F0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Array_Length_ReturnValue_1) == 0x0005F8, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x0005FC, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Less_IntInt_ReturnValue_1) == 0x0005FD, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BooleanAND_ReturnValue_1) == 0x0005FE, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_object_Variable_13) == 0x000600, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_object_Variable_14) == 0x000608, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_object_Variable_15) == 0x000610, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_IsPlayerControlled_ReturnValue_3) == 0x000618, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_IsPlayerControlled_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_CustomEvent_Impulse_1) == 0x00061C, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_CustomEvent_Impulse_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_CustomEvent_SpinImpulse_1) == 0x000628, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_CustomEvent_SpinImpulse_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_CustomEvent_SpinLocation_1) == 0x000634, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_CustomEvent_SpinLocation_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_CustomEvent_Impulse) == 0x000640, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_CustomEvent_Impulse' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_CustomEvent_SpinImpulse) == 0x00064C, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_CustomEvent_SpinImpulse' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_CustomEvent_SpinLocation) == 0x000658, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_CustomEvent_SpinLocation' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_byte_Variable_1) == 0x000664, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_bool_Has_Been_Initd_Variable_2) == 0x000665, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_HasAuthority_ReturnValue_4) == 0x000666, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000667, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_MakeArray_Array) == 0x000668, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_float_Variable_13) == 0x000678, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_float_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_CustomEvent_Location) == 0x00067C, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000688, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_K2_GetActorLocation_ReturnValue_7) == 0x000690, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_K2_GetActorLocation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakTransform_Location) == 0x00069C, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakTransform_Rotation) == 0x0006A8, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakTransform_Scale) == 0x0006B4, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0006C0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_SphereTraceMultiForObjects_OutHits) == 0x0006D0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_SphereTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_SphereTraceMultiForObjects_ReturnValue) == 0x0006E0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_SphereTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Array_Get_Item_3) == 0x0006E4, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Array_Length_ReturnValue_2) == 0x00076C, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000770, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000771, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_Time_1) == 0x000774, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_Distance_1) == 0x000778, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_Location_1) == 0x00077C, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000788, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_Normal_1) == 0x000794, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0007A0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_PhysMat_1) == 0x0007B0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_HitActor_1) == 0x0007B8, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_HitComponent_1) == 0x0007C0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_HitBoneName_1) == 0x0007C8, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_HitItem_1) == 0x0007D0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_ElementIndex_1) == 0x0007D4, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_FaceIndex_1) == 0x0007D8, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_TraceStart_1) == 0x0007DC, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_TraceEnd_1) == 0x0007E8, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Less_IntInt_ReturnValue_2) == 0x0007F4, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_DynamicCast_AsBP_Vehicle_Base) == 0x0007F8, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_DynamicCast_AsBP_Vehicle_Base' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_DynamicCast_bSuccess_8) == 0x000800, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_K2_GetActorLocation_ReturnValue_8) == 0x000804, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_K2_GetActorLocation_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BooleanAND_ReturnValue_2) == 0x000810, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_bool_Has_Been_Initd_Variable_3) == 0x000811, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_float_Variable_14) == 0x000814, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_float_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_float_Variable_15) == 0x000818, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_float_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_bool_IsClosed_Variable_3) == 0x00081C, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_float_Variable_16) == 0x000820, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_float_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000824, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_GetPlayerName_ReturnValue) == 0x000830, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000840, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Conv_StringToText_ReturnValue) == 0x000850, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000868, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_float_Variable_17) == 0x000880, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_float_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_MakeStruct_FormatArgumentData) == 0x000888, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_MakeStruct_FormatArgumentData_1) == 0x0008C8, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_MakeArray_Array_1) == 0x000908, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Format_ReturnValue) == 0x000918, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Conv_TextToString_ReturnValue) == 0x000930, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_GetExitLocation_ExitLocation) == 0x000940, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_GetExitLocation_ExitLocation' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00094C, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000950, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_Select_Default) == 0x000980, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_InverseTransformLocation_ReturnValue) == 0x000988, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_Select_Default_1) == 0x000998, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_byte_Variable_2) == 0x0009A0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_Select_Default_2) == 0x0009A4, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_Select_Default_3) == 0x0009A8, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Conv_FloatToVector_ReturnValue) == 0x0009AC, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0009B8, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x0009C8, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_bool_Variable_2) == 0x0009D0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x0009E0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_Select_Default_4) == 0x000A10, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000A28, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_FinishSpawningActor_ReturnValue) == 0x000A30, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BooleanOR_ReturnValue) == 0x000A38, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, Temp_bool_Variable_3) == 0x000A39, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000A3A, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_Select_Default_5) == 0x000A3C, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000A40, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_LineTraceSingle_OutHit_1) == 0x000A4C, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_LineTraceSingle_ReturnValue_1) == 0x000AD4, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_bBlockingHit_2) == 0x000AD5, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x000AD6, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_Time_2) == 0x000AD8, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_Distance_2) == 0x000ADC, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_Location_2) == 0x000AE0, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_ImpactPoint_2) == 0x000AEC, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_Normal_2) == 0x000AF8, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_ImpactNormal_2) == 0x000B04, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_PhysMat_2) == 0x000B10, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_HitActor_2) == 0x000B18, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_HitComponent_2) == 0x000B20, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_HitBoneName_2) == 0x000B28, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_HitItem_2) == 0x000B30, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_ElementIndex_2) == 0x000B34, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_FaceIndex_2) == 0x000B38, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_TraceStart_2) == 0x000B3C, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_BreakHitResult_TraceEnd_2) == 0x000B48, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_SpawnEmitterAttached_ReturnValue_1) == 0x000B58, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_SpawnEmitterAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, K2Node_Select_Default_6) == 0x000B60, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000B64, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000B68, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_FTrunc_ReturnValue) == 0x000B6C, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Clamp_ReturnValue_2) == 0x000B70, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Clamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Subtract_IntInt_ReturnValue) == 0x000B74, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase, CallFunc_Clamp_ReturnValue_3) == 0x000B78, "Member 'BP_VehicleBase_C_ExecuteUbergraph_BP_VehicleBase::CallFunc_Clamp_ReturnValue_3' has a wrong offset!");

// Function BP_VehicleBase.BP_VehicleBase_C.MC_WreckageDestroy
// 0x000C (0x000C - 0x0000)
struct BP_VehicleBase_C_MC_WreckageDestroy final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleBase_C_MC_WreckageDestroy) == 0x000004, "Wrong alignment on BP_VehicleBase_C_MC_WreckageDestroy");
static_assert(sizeof(BP_VehicleBase_C_MC_WreckageDestroy) == 0x00000C, "Wrong size on BP_VehicleBase_C_MC_WreckageDestroy");
static_assert(offsetof(BP_VehicleBase_C_MC_WreckageDestroy, Location) == 0x000000, "Member 'BP_VehicleBase_C_MC_WreckageDestroy::Location' has a wrong offset!");

// Function BP_VehicleBase.BP_VehicleBase_C.AddPushForce
// 0x0024 (0x0024 - 0x0000)
struct BP_VehicleBase_C_AddPushForce final
{
public:
	struct FVector                                Impulse;                                           // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpinImpulse;                                       // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpinLocation;                                      // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleBase_C_AddPushForce) == 0x000004, "Wrong alignment on BP_VehicleBase_C_AddPushForce");
static_assert(sizeof(BP_VehicleBase_C_AddPushForce) == 0x000024, "Wrong size on BP_VehicleBase_C_AddPushForce");
static_assert(offsetof(BP_VehicleBase_C_AddPushForce, Impulse) == 0x000000, "Member 'BP_VehicleBase_C_AddPushForce::Impulse' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_AddPushForce, SpinImpulse) == 0x00000C, "Member 'BP_VehicleBase_C_AddPushForce::SpinImpulse' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_AddPushForce, SpinLocation) == 0x000018, "Member 'BP_VehicleBase_C_AddPushForce::SpinLocation' has a wrong offset!");

// Function BP_VehicleBase.BP_VehicleBase_C.OC_AddPushForce
// 0x0024 (0x0024 - 0x0000)
struct BP_VehicleBase_C_OC_AddPushForce final
{
public:
	struct FVector                                Impulse;                                           // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpinImpulse;                                       // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpinLocation;                                      // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleBase_C_OC_AddPushForce) == 0x000004, "Wrong alignment on BP_VehicleBase_C_OC_AddPushForce");
static_assert(sizeof(BP_VehicleBase_C_OC_AddPushForce) == 0x000024, "Wrong size on BP_VehicleBase_C_OC_AddPushForce");
static_assert(offsetof(BP_VehicleBase_C_OC_AddPushForce, Impulse) == 0x000000, "Member 'BP_VehicleBase_C_OC_AddPushForce::Impulse' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_OC_AddPushForce, SpinImpulse) == 0x00000C, "Member 'BP_VehicleBase_C_OC_AddPushForce::SpinImpulse' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_OC_AddPushForce, SpinLocation) == 0x000018, "Member 'BP_VehicleBase_C_OC_AddPushForce::SpinLocation' has a wrong offset!");

// Function BP_VehicleBase.BP_VehicleBase_C.S_AddPushForce
// 0x0024 (0x0024 - 0x0000)
struct BP_VehicleBase_C_S_AddPushForce final
{
public:
	struct FVector                                Impulse;                                           // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpinImpulse;                                       // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpinLocation;                                      // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleBase_C_S_AddPushForce) == 0x000004, "Wrong alignment on BP_VehicleBase_C_S_AddPushForce");
static_assert(sizeof(BP_VehicleBase_C_S_AddPushForce) == 0x000024, "Wrong size on BP_VehicleBase_C_S_AddPushForce");
static_assert(offsetof(BP_VehicleBase_C_S_AddPushForce, Impulse) == 0x000000, "Member 'BP_VehicleBase_C_S_AddPushForce::Impulse' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_S_AddPushForce, SpinImpulse) == 0x00000C, "Member 'BP_VehicleBase_C_S_AddPushForce::SpinImpulse' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_S_AddPushForce, SpinLocation) == 0x000018, "Member 'BP_VehicleBase_C_S_AddPushForce::SpinLocation' has a wrong offset!");

// Function BP_VehicleBase.BP_VehicleBase_C.S_DamageSelf
// 0x0004 (0x0004 - 0x0000)
struct BP_VehicleBase_C_S_DamageSelf final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleBase_C_S_DamageSelf) == 0x000004, "Wrong alignment on BP_VehicleBase_C_S_DamageSelf");
static_assert(sizeof(BP_VehicleBase_C_S_DamageSelf) == 0x000004, "Wrong size on BP_VehicleBase_C_S_DamageSelf");
static_assert(offsetof(BP_VehicleBase_C_S_DamageSelf, Amount) == 0x000000, "Member 'BP_VehicleBase_C_S_DamageSelf::Amount' has a wrong offset!");

// Function BP_VehicleBase.BP_VehicleBase_C.DamagedByPlane(Server)
// 0x0008 (0x0008 - 0x0000)
struct BP_VehicleBase_C_DamagedByPlane_Server_ final
{
public:
	class ABP_PlaneBase_C*                        Plane;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleBase_C_DamagedByPlane_Server_) == 0x000008, "Wrong alignment on BP_VehicleBase_C_DamagedByPlane_Server_");
static_assert(sizeof(BP_VehicleBase_C_DamagedByPlane_Server_) == 0x000008, "Wrong size on BP_VehicleBase_C_DamagedByPlane_Server_");
static_assert(offsetof(BP_VehicleBase_C_DamagedByPlane_Server_, Plane) == 0x000000, "Member 'BP_VehicleBase_C_DamagedByPlane_Server_::Plane' has a wrong offset!");

// Function BP_VehicleBase.BP_VehicleBase_C.S_SetRepairing
// 0x0001 (0x0001 - 0x0000)
struct BP_VehicleBase_C_S_SetRepairing final
{
public:
	bool                                          Repairing_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VehicleBase_C_S_SetRepairing) == 0x000001, "Wrong alignment on BP_VehicleBase_C_S_SetRepairing");
static_assert(sizeof(BP_VehicleBase_C_S_SetRepairing) == 0x000001, "Wrong size on BP_VehicleBase_C_S_SetRepairing");
static_assert(offsetof(BP_VehicleBase_C_S_SetRepairing, Repairing_0) == 0x000000, "Member 'BP_VehicleBase_C_S_SetRepairing::Repairing_0' has a wrong offset!");

// Function BP_VehicleBase.BP_VehicleBase_C.OC_Damaged
// 0x0010 (0x0010 - 0x0000)
struct BP_VehicleBase_C_OC_Damaged final
{
public:
	int32                                         DamageAmount;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AttackerLocation;                                  // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleBase_C_OC_Damaged) == 0x000004, "Wrong alignment on BP_VehicleBase_C_OC_Damaged");
static_assert(sizeof(BP_VehicleBase_C_OC_Damaged) == 0x000010, "Wrong size on BP_VehicleBase_C_OC_Damaged");
static_assert(offsetof(BP_VehicleBase_C_OC_Damaged, DamageAmount) == 0x000000, "Member 'BP_VehicleBase_C_OC_Damaged::DamageAmount' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_OC_Damaged, AttackerLocation) == 0x000004, "Member 'BP_VehicleBase_C_OC_Damaged::AttackerLocation' has a wrong offset!");

// Function BP_VehicleBase.BP_VehicleBase_C.ReceiveUnpossessed
// 0x0008 (0x0008 - 0x0000)
struct BP_VehicleBase_C_ReceiveUnpossessed final
{
public:
	class AController*                            OldController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleBase_C_ReceiveUnpossessed) == 0x000008, "Wrong alignment on BP_VehicleBase_C_ReceiveUnpossessed");
static_assert(sizeof(BP_VehicleBase_C_ReceiveUnpossessed) == 0x000008, "Wrong size on BP_VehicleBase_C_ReceiveUnpossessed");
static_assert(offsetof(BP_VehicleBase_C_ReceiveUnpossessed, OldController) == 0x000000, "Member 'BP_VehicleBase_C_ReceiveUnpossessed::OldController' has a wrong offset!");

// Function BP_VehicleBase.BP_VehicleBase_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct BP_VehicleBase_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleBase_C_ReceivePossessed) == 0x000008, "Wrong alignment on BP_VehicleBase_C_ReceivePossessed");
static_assert(sizeof(BP_VehicleBase_C_ReceivePossessed) == 0x000008, "Wrong size on BP_VehicleBase_C_ReceivePossessed");
static_assert(offsetof(BP_VehicleBase_C_ReceivePossessed, NewController) == 0x000000, "Member 'BP_VehicleBase_C_ReceivePossessed::NewController' has a wrong offset!");

// Function BP_VehicleBase.BP_VehicleBase_C.MC_Damaged
// 0x002C (0x002C - 0x0000)
struct BP_VehicleBase_C_MC_Damaged final
{
public:
	struct FVector                                DamageLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DamageDirection;                                   // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageAmount;                                      // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DamageTypes                                 DamageType;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                DamageLocationRelative;                            // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleBase_C_MC_Damaged) == 0x000004, "Wrong alignment on BP_VehicleBase_C_MC_Damaged");
static_assert(sizeof(BP_VehicleBase_C_MC_Damaged) == 0x00002C, "Wrong size on BP_VehicleBase_C_MC_Damaged");
static_assert(offsetof(BP_VehicleBase_C_MC_Damaged, DamageLocation) == 0x000000, "Member 'BP_VehicleBase_C_MC_Damaged::DamageLocation' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_MC_Damaged, DamageDirection) == 0x00000C, "Member 'BP_VehicleBase_C_MC_Damaged::DamageDirection' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_MC_Damaged, DamageAmount) == 0x000018, "Member 'BP_VehicleBase_C_MC_Damaged::DamageAmount' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_MC_Damaged, DamageType) == 0x00001C, "Member 'BP_VehicleBase_C_MC_Damaged::DamageType' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_MC_Damaged, DamageLocationRelative) == 0x000020, "Member 'BP_VehicleBase_C_MC_Damaged::DamageLocationRelative' has a wrong offset!");

// Function BP_VehicleBase.BP_VehicleBase_C.S_RemoveVehicle
// 0x0010 (0x0010 - 0x0000)
struct BP_VehicleBase_C_S_RemoveVehicle final
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  AttackerPawn;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleBase_C_S_RemoveVehicle) == 0x000008, "Wrong alignment on BP_VehicleBase_C_S_RemoveVehicle");
static_assert(sizeof(BP_VehicleBase_C_S_RemoveVehicle) == 0x000010, "Wrong size on BP_VehicleBase_C_S_RemoveVehicle");
static_assert(offsetof(BP_VehicleBase_C_S_RemoveVehicle, Delay) == 0x000000, "Member 'BP_VehicleBase_C_S_RemoveVehicle::Delay' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_S_RemoveVehicle, AttackerPawn) == 0x000008, "Member 'BP_VehicleBase_C_S_RemoveVehicle::AttackerPawn' has a wrong offset!");

// Function BP_VehicleBase.BP_VehicleBase_C.ApplyDamage
// 0x0060 (0x0060 - 0x0000)
struct BP_VehicleBase_C_ApplyDamage final
{
public:
	int32                                         DamageAmount;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DamageHitLocation;                                 // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DamageDirection;                                   // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  AttackerPawn;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Debuff;                                            // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DamageTypes                                 DamageType;                                        // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayerIndex;                                       // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCriticalHit;                                     // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreTeamProtection;                              // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   SpecialKillMessage;                                // 0x0040(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          ShouldBreakInvisibility;                           // 0x0058(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPiercingDamage;                                  // 0x0059(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VehicleBase_C_ApplyDamage) == 0x000008, "Wrong alignment on BP_VehicleBase_C_ApplyDamage");
static_assert(sizeof(BP_VehicleBase_C_ApplyDamage) == 0x000060, "Wrong size on BP_VehicleBase_C_ApplyDamage");
static_assert(offsetof(BP_VehicleBase_C_ApplyDamage, DamageAmount) == 0x000000, "Member 'BP_VehicleBase_C_ApplyDamage::DamageAmount' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ApplyDamage, DamageHitLocation) == 0x000004, "Member 'BP_VehicleBase_C_ApplyDamage::DamageHitLocation' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ApplyDamage, DamageDirection) == 0x000010, "Member 'BP_VehicleBase_C_ApplyDamage::DamageDirection' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ApplyDamage, AttackerPawn) == 0x000020, "Member 'BP_VehicleBase_C_ApplyDamage::AttackerPawn' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ApplyDamage, Debuff) == 0x000028, "Member 'BP_VehicleBase_C_ApplyDamage::Debuff' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ApplyDamage, DamageType) == 0x000030, "Member 'BP_VehicleBase_C_ApplyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ApplyDamage, PlayerIndex) == 0x000034, "Member 'BP_VehicleBase_C_ApplyDamage::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ApplyDamage, IsCriticalHit) == 0x000038, "Member 'BP_VehicleBase_C_ApplyDamage::IsCriticalHit' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ApplyDamage, IgnoreTeamProtection) == 0x000039, "Member 'BP_VehicleBase_C_ApplyDamage::IgnoreTeamProtection' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ApplyDamage, SpecialKillMessage) == 0x000040, "Member 'BP_VehicleBase_C_ApplyDamage::SpecialKillMessage' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ApplyDamage, ShouldBreakInvisibility) == 0x000058, "Member 'BP_VehicleBase_C_ApplyDamage::ShouldBreakInvisibility' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_ApplyDamage, IsPiercingDamage) == 0x000059, "Member 'BP_VehicleBase_C_ApplyDamage::IsPiercingDamage' has a wrong offset!");

// Function BP_VehicleBase.BP_VehicleBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_VehicleBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleBase_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_VehicleBase_C_ReceiveTick");
static_assert(sizeof(BP_VehicleBase_C_ReceiveTick) == 0x000004, "Wrong size on BP_VehicleBase_C_ReceiveTick");
static_assert(offsetof(BP_VehicleBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_VehicleBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_VehicleBase.BP_VehicleBase_C.InpActEvt_Repair_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_VehicleBase_C_InpActEvt_Repair_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleBase_C_InpActEvt_Repair_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_VehicleBase_C_InpActEvt_Repair_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_VehicleBase_C_InpActEvt_Repair_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_VehicleBase_C_InpActEvt_Repair_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_VehicleBase_C_InpActEvt_Repair_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_VehicleBase_C_InpActEvt_Repair_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_VehicleBase.BP_VehicleBase_C.InpActEvt_Repair_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_VehicleBase_C_InpActEvt_Repair_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleBase_C_InpActEvt_Repair_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on BP_VehicleBase_C_InpActEvt_Repair_K2Node_InputActionEvent_1");
static_assert(sizeof(BP_VehicleBase_C_InpActEvt_Repair_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on BP_VehicleBase_C_InpActEvt_Repair_K2Node_InputActionEvent_1");
static_assert(offsetof(BP_VehicleBase_C_InpActEvt_Repair_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'BP_VehicleBase_C_InpActEvt_Repair_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function BP_VehicleBase.BP_VehicleBase_C.InpActEvt_Interact_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_VehicleBase_C_InpActEvt_Interact_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleBase_C_InpActEvt_Interact_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on BP_VehicleBase_C_InpActEvt_Interact_K2Node_InputActionEvent_2");
static_assert(sizeof(BP_VehicleBase_C_InpActEvt_Interact_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on BP_VehicleBase_C_InpActEvt_Interact_K2Node_InputActionEvent_2");
static_assert(offsetof(BP_VehicleBase_C_InpActEvt_Interact_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'BP_VehicleBase_C_InpActEvt_Interact_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function BP_VehicleBase.BP_VehicleBase_C.GetVehicleHealthInformation
// 0x0018 (0x0018 - 0x0000)
struct BP_VehicleBase_C_GetVehicleHealthInformation final
{
public:
	float                                         CurrentHealthPercentage;                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentHealthAmount;                               // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxHealth;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleBase_C_GetVehicleHealthInformation) == 0x000004, "Wrong alignment on BP_VehicleBase_C_GetVehicleHealthInformation");
static_assert(sizeof(BP_VehicleBase_C_GetVehicleHealthInformation) == 0x000018, "Wrong size on BP_VehicleBase_C_GetVehicleHealthInformation");
static_assert(offsetof(BP_VehicleBase_C_GetVehicleHealthInformation, CurrentHealthPercentage) == 0x000000, "Member 'BP_VehicleBase_C_GetVehicleHealthInformation::CurrentHealthPercentage' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetVehicleHealthInformation, CurrentHealthAmount) == 0x000004, "Member 'BP_VehicleBase_C_GetVehicleHealthInformation::CurrentHealthAmount' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetVehicleHealthInformation, MaxHealth) == 0x000008, "Member 'BP_VehicleBase_C_GetVehicleHealthInformation::MaxHealth' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetVehicleHealthInformation, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'BP_VehicleBase_C_GetVehicleHealthInformation::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetVehicleHealthInformation, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000010, "Member 'BP_VehicleBase_C_GetVehicleHealthInformation::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetVehicleHealthInformation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_VehicleBase_C_GetVehicleHealthInformation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_VehicleBase.BP_VehicleBase_C.EnableAIController
// 0x0001 (0x0001 - 0x0000)
struct BP_VehicleBase_C_EnableAIController final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VehicleBase_C_EnableAIController) == 0x000001, "Wrong alignment on BP_VehicleBase_C_EnableAIController");
static_assert(sizeof(BP_VehicleBase_C_EnableAIController) == 0x000001, "Wrong size on BP_VehicleBase_C_EnableAIController");
static_assert(offsetof(BP_VehicleBase_C_EnableAIController, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_VehicleBase_C_EnableAIController::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function BP_VehicleBase.BP_VehicleBase_C.DamageSelf
// 0x0010 (0x0010 - 0x0000)
struct BP_VehicleBase_C_DamageSelf final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleBase_C_DamageSelf) == 0x000004, "Wrong alignment on BP_VehicleBase_C_DamageSelf");
static_assert(sizeof(BP_VehicleBase_C_DamageSelf) == 0x000010, "Wrong size on BP_VehicleBase_C_DamageSelf");
static_assert(offsetof(BP_VehicleBase_C_DamageSelf, Amount) == 0x000000, "Member 'BP_VehicleBase_C_DamageSelf::Amount' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_DamageSelf, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_VehicleBase_C_DamageSelf::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_DamageSelf, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'BP_VehicleBase_C_DamageSelf::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_DamageSelf, CallFunc_Clamp_ReturnValue) == 0x00000C, "Member 'BP_VehicleBase_C_DamageSelf::CallFunc_Clamp_ReturnValue' has a wrong offset!");

// Function BP_VehicleBase.BP_VehicleBase_C.IsOwnVehicle?
// 0x0003 (0x0003 - 0x0000)
struct BP_VehicleBase_C_IsOwnVehicle_ final
{
public:
	bool                                          OwnVehicle;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VehicleBase_C_IsOwnVehicle_) == 0x000001, "Wrong alignment on BP_VehicleBase_C_IsOwnVehicle_");
static_assert(sizeof(BP_VehicleBase_C_IsOwnVehicle_) == 0x000003, "Wrong size on BP_VehicleBase_C_IsOwnVehicle_");
static_assert(offsetof(BP_VehicleBase_C_IsOwnVehicle_, OwnVehicle) == 0x000000, "Member 'BP_VehicleBase_C_IsOwnVehicle_::OwnVehicle' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_IsOwnVehicle_, CallFunc_IsLocallyControlled_ReturnValue) == 0x000001, "Member 'BP_VehicleBase_C_IsOwnVehicle_::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_IsOwnVehicle_, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'BP_VehicleBase_C_IsOwnVehicle_::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_VehicleBase.BP_VehicleBase_C.GetPhysicsMesh
// 0x0040 (0x0040 - 0x0000)
struct BP_VehicleBase_C_GetPhysicsMesh final
{
public:
	class UStaticMeshComponent*                   Array_Element;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleBase_C_GetPhysicsMesh) == 0x000008, "Wrong alignment on BP_VehicleBase_C_GetPhysicsMesh");
static_assert(sizeof(BP_VehicleBase_C_GetPhysicsMesh) == 0x000040, "Wrong size on BP_VehicleBase_C_GetPhysicsMesh");
static_assert(offsetof(BP_VehicleBase_C_GetPhysicsMesh, Array_Element) == 0x000000, "Member 'BP_VehicleBase_C_GetPhysicsMesh::Array_Element' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetPhysicsMesh, Temp_bool_True_if_break_was_hit_Variable) == 0x000008, "Member 'BP_VehicleBase_C_GetPhysicsMesh::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetPhysicsMesh, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_VehicleBase_C_GetPhysicsMesh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetPhysicsMesh, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_VehicleBase_C_GetPhysicsMesh::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetPhysicsMesh, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_VehicleBase_C_GetPhysicsMesh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetPhysicsMesh, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000018, "Member 'BP_VehicleBase_C_GetPhysicsMesh::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetPhysicsMesh, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_VehicleBase_C_GetPhysicsMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetPhysicsMesh, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_VehicleBase_C_GetPhysicsMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetPhysicsMesh, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_VehicleBase_C_GetPhysicsMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetPhysicsMesh, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000035, "Member 'BP_VehicleBase_C_GetPhysicsMesh::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetPhysicsMesh, CallFunc_BooleanAND_ReturnValue) == 0x000036, "Member 'BP_VehicleBase_C_GetPhysicsMesh::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetPhysicsMesh, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_VehicleBase_C_GetPhysicsMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_VehicleBase.BP_VehicleBase_C.GetFreeSeats
// 0x0078 (0x0078 - 0x0000)
struct BP_VehicleBase_C_GetFreeSeats final
{
public:
	E_Teams                                       OwnTeam;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_VehicleSeat_C*>              FreeSeats;                                         // 0x0008(0x0010)(Parm, OutParm)
	bool                                          hasEnemyInSeat;                                    // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          EnemyInSeatFound;                                  // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_VehicleSeat_C*>              FreeSeatsTemp;                                     // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UChildActorComponent*>           CallFunc_GetComponentsByTag_ReturnValue;           // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UChildActorComponent*                   CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_VehicleSeat_C*                      K2Node_DynamicCast_AsBP_Vehicle_Seat;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VehicleBase_C_GetFreeSeats) == 0x000008, "Wrong alignment on BP_VehicleBase_C_GetFreeSeats");
static_assert(sizeof(BP_VehicleBase_C_GetFreeSeats) == 0x000078, "Wrong size on BP_VehicleBase_C_GetFreeSeats");
static_assert(offsetof(BP_VehicleBase_C_GetFreeSeats, OwnTeam) == 0x000000, "Member 'BP_VehicleBase_C_GetFreeSeats::OwnTeam' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetFreeSeats, FreeSeats) == 0x000008, "Member 'BP_VehicleBase_C_GetFreeSeats::FreeSeats' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetFreeSeats, hasEnemyInSeat) == 0x000018, "Member 'BP_VehicleBase_C_GetFreeSeats::hasEnemyInSeat' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetFreeSeats, EnemyInSeatFound) == 0x000019, "Member 'BP_VehicleBase_C_GetFreeSeats::EnemyInSeatFound' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetFreeSeats, FreeSeatsTemp) == 0x000020, "Member 'BP_VehicleBase_C_GetFreeSeats::FreeSeatsTemp' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetFreeSeats, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_VehicleBase_C_GetFreeSeats::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetFreeSeats, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_VehicleBase_C_GetFreeSeats::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetFreeSeats, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_VehicleBase_C_GetFreeSeats::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetFreeSeats, CallFunc_GetComponentsByTag_ReturnValue) == 0x000040, "Member 'BP_VehicleBase_C_GetFreeSeats::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetFreeSeats, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_VehicleBase_C_GetFreeSeats::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetFreeSeats, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_VehicleBase_C_GetFreeSeats::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetFreeSeats, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'BP_VehicleBase_C_GetFreeSeats::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetFreeSeats, K2Node_DynamicCast_AsBP_Vehicle_Seat) == 0x000060, "Member 'BP_VehicleBase_C_GetFreeSeats::K2Node_DynamicCast_AsBP_Vehicle_Seat' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetFreeSeats, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_VehicleBase_C_GetFreeSeats::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetFreeSeats, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'BP_VehicleBase_C_GetFreeSeats::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetFreeSeats, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_VehicleBase_C_GetFreeSeats::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetFreeSeats, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000071, "Member 'BP_VehicleBase_C_GetFreeSeats::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetFreeSeats, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000072, "Member 'BP_VehicleBase_C_GetFreeSeats::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function BP_VehicleBase.BP_VehicleBase_C.GetExitLocation
// 0x0190 (0x0190 - 0x0000)
struct BP_VehicleBase_C_GetExitLocation final
{
public:
	struct FVector                                ExitLocation;                                      // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0020(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0078(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x0104(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VehicleBase_C_GetExitLocation) == 0x000008, "Wrong alignment on BP_VehicleBase_C_GetExitLocation");
static_assert(sizeof(BP_VehicleBase_C_GetExitLocation) == 0x000190, "Wrong size on BP_VehicleBase_C_GetExitLocation");
static_assert(offsetof(BP_VehicleBase_C_GetExitLocation, ExitLocation) == 0x000000, "Member 'BP_VehicleBase_C_GetExitLocation::ExitLocation' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetExitLocation, Temp_object_Variable) == 0x000010, "Member 'BP_VehicleBase_C_GetExitLocation::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetExitLocation, Temp_object_Variable_1) == 0x000020, "Member 'BP_VehicleBase_C_GetExitLocation::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetExitLocation, CallFunc_GetRightVector_ReturnValue) == 0x000030, "Member 'BP_VehicleBase_C_GetExitLocation::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetExitLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00003C, "Member 'BP_VehicleBase_C_GetExitLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetExitLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000048, "Member 'BP_VehicleBase_C_GetExitLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetExitLocation, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000054, "Member 'BP_VehicleBase_C_GetExitLocation::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetExitLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000060, "Member 'BP_VehicleBase_C_GetExitLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetExitLocation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x00006C, "Member 'BP_VehicleBase_C_GetExitLocation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetExitLocation, CallFunc_LineTraceSingle_OutHit) == 0x000078, "Member 'BP_VehicleBase_C_GetExitLocation::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetExitLocation, CallFunc_LineTraceSingle_ReturnValue) == 0x000100, "Member 'BP_VehicleBase_C_GetExitLocation::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetExitLocation, CallFunc_LineTraceSingle_OutHit_1) == 0x000104, "Member 'BP_VehicleBase_C_GetExitLocation::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleBase_C_GetExitLocation, CallFunc_LineTraceSingle_ReturnValue_1) == 0x00018C, "Member 'BP_VehicleBase_C_GetExitLocation::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");

}

