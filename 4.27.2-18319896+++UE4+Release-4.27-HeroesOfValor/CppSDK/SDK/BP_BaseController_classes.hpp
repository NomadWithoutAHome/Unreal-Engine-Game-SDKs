#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BaseController

#include "Basic.hpp"

#include "SteamCore_structs.hpp"
#include "E_ChestTypes_structs.hpp"
#include "Engine_structs.hpp"
#include "ClientAuthoritativeCharacterSystem_classes.hpp"
#include "ST_EventProgress_structs.hpp"
#include "ST_UnitProgress_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BaseController.BP_BaseController_C
// 0x00A0 (0x0610 - 0x0570)
class ABP_BaseController_C : public AClientAuthoritativePlayerController
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0570(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          RecordProfile;                                     // 0x0578(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          StatsReady;                                        // 0x0579(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bSteamInventoryReady;                              // 0x057A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57B[0x5];                                      // 0x057B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FST_UnitProgress>               UnitProgress;                                      // 0x0580(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void()>              StatsRefreshed;                                    // 0x0590(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<struct FSteamItemDetails>              SteamInventory;                                    // 0x05A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FSteamItemDetails>              LatestItems;                                       // 0x05B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FST_EventProgress                      EventProgess;                                      // 0x05C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSteamInventoryResult                  LatestInventoryHandle;                             // 0x05C4(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              SteamInventoryRefreshed;                           // 0x05C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         Token_Pumpkins;                                    // 0x05D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DC[0x4];                                      // 0x05DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(E_ChestTypes ChestType)> ChestCrafted;                             // 0x05E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UW_SteamProcessingPopup_C*              SteamProcessPopupRef;                              // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              ChestOpened;                                       // 0x05F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class APostProcessVolume*                     PostProcessVolume;                                 // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_BaseController(int32 EntryPoint);
	void RefreshInventoryFromResult(const struct FSteamInventoryResult& Result);
	void RefreshCachedSteamInventory();
	void OpenChest(int32 Generator, int32 ChestID);
	void CraftChest(int32 Bundle, int32 MaterialID, int32 MaterialQuantity, E_ChestTypes ChestType);
	void GrantPlaytestRewards();
	void OC_TriggerItemDrop();
	void RequestStats();
	void RefreshStats();
	void ReceiveBeginPlay();
	void OnCallback_207D6D57481796AD36860BBA2C36B494(const class FString& Data, bool bWasSuccessful);
	void InpActEvt_I_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void Get_Stacked_Item_ID_Amount(int32 ItemId, int32* Amount);
	void GetItemInstanceID(int32 ID, struct FSteamItemInstanceID* Instance_ID);
	void UpdateInventoryWithLatestResult(TArray<struct FSteamItemDetails>& Result);
	void ShowSteamProcessPopup(const class FText& Message);
	void InitOptions();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BaseController_C">();
	}
	static class ABP_BaseController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BaseController_C>();
	}
};
static_assert(alignof(ABP_BaseController_C) == 0x000008, "Wrong alignment on ABP_BaseController_C");
static_assert(sizeof(ABP_BaseController_C) == 0x000610, "Wrong size on ABP_BaseController_C");
static_assert(offsetof(ABP_BaseController_C, UberGraphFrame) == 0x000570, "Member 'ABP_BaseController_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BaseController_C, RecordProfile) == 0x000578, "Member 'ABP_BaseController_C::RecordProfile' has a wrong offset!");
static_assert(offsetof(ABP_BaseController_C, StatsReady) == 0x000579, "Member 'ABP_BaseController_C::StatsReady' has a wrong offset!");
static_assert(offsetof(ABP_BaseController_C, bSteamInventoryReady) == 0x00057A, "Member 'ABP_BaseController_C::bSteamInventoryReady' has a wrong offset!");
static_assert(offsetof(ABP_BaseController_C, UnitProgress) == 0x000580, "Member 'ABP_BaseController_C::UnitProgress' has a wrong offset!");
static_assert(offsetof(ABP_BaseController_C, StatsRefreshed) == 0x000590, "Member 'ABP_BaseController_C::StatsRefreshed' has a wrong offset!");
static_assert(offsetof(ABP_BaseController_C, SteamInventory) == 0x0005A0, "Member 'ABP_BaseController_C::SteamInventory' has a wrong offset!");
static_assert(offsetof(ABP_BaseController_C, LatestItems) == 0x0005B0, "Member 'ABP_BaseController_C::LatestItems' has a wrong offset!");
static_assert(offsetof(ABP_BaseController_C, EventProgess) == 0x0005C0, "Member 'ABP_BaseController_C::EventProgess' has a wrong offset!");
static_assert(offsetof(ABP_BaseController_C, LatestInventoryHandle) == 0x0005C4, "Member 'ABP_BaseController_C::LatestInventoryHandle' has a wrong offset!");
static_assert(offsetof(ABP_BaseController_C, SteamInventoryRefreshed) == 0x0005C8, "Member 'ABP_BaseController_C::SteamInventoryRefreshed' has a wrong offset!");
static_assert(offsetof(ABP_BaseController_C, Token_Pumpkins) == 0x0005D8, "Member 'ABP_BaseController_C::Token_Pumpkins' has a wrong offset!");
static_assert(offsetof(ABP_BaseController_C, ChestCrafted) == 0x0005E0, "Member 'ABP_BaseController_C::ChestCrafted' has a wrong offset!");
static_assert(offsetof(ABP_BaseController_C, SteamProcessPopupRef) == 0x0005F0, "Member 'ABP_BaseController_C::SteamProcessPopupRef' has a wrong offset!");
static_assert(offsetof(ABP_BaseController_C, ChestOpened) == 0x0005F8, "Member 'ABP_BaseController_C::ChestOpened' has a wrong offset!");
static_assert(offsetof(ABP_BaseController_C, PostProcessVolume) == 0x000608, "Member 'ABP_BaseController_C::PostProcessVolume' has a wrong offset!");

}

