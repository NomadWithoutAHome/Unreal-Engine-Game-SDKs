#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_LoadingScreen

#include "Basic.hpp"

#include "ST_Map_structs.hpp"


namespace SDK::Params
{

// Function W_LoadingScreen.W_LoadingScreen_C.ExecuteUbergraph_W_LoadingScreen
// 0x0080 (0x0080 - 0x0000)
struct W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_Map                                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen) == 0x000008, "Wrong alignment on W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen");
static_assert(sizeof(W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen) == 0x000080, "Wrong size on W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen");
static_assert(offsetof(W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen, EntryPoint) == 0x000000, "Member 'W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen, K2Node_Event_IsDesignTime) == 0x000004, "Member 'W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen, CallFunc_Conv_TextToString_ReturnValue) == 0x000008, "Member 'W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen, CallFunc_Replace_ReturnValue) == 0x000018, "Member 'W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen, CallFunc_Conv_StringToName_ReturnValue) == 0x000028, "Member 'W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000078, "Member 'W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function W_LoadingScreen.W_LoadingScreen_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_LoadingScreen_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_LoadingScreen_C_PreConstruct) == 0x000001, "Wrong alignment on W_LoadingScreen_C_PreConstruct");
static_assert(sizeof(W_LoadingScreen_C_PreConstruct) == 0x000001, "Wrong size on W_LoadingScreen_C_PreConstruct");
static_assert(offsetof(W_LoadingScreen_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_LoadingScreen_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

