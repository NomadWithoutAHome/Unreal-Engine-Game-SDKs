#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FreeCam

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_FreeCam.BP_FreeCam_C.ExecuteUbergraph_BP_FreeCam
// 0x0580 (0x0580 - 0x0000)
struct BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_6;                        // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_5;                        // 0x0020(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x0038(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_4;                        // 0x0050(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_3;                        // 0x0068(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_1;                            // 0x0080(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x0098(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x00B0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x00C8(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0xC];                                       // 0x00E4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorRelativeTransform_SweepHitResult; // 0x0120(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FKey                                   Temp_struct_Variable_2;                            // 0x01A8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_7;                        // 0x01C0(0x0018)(HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_8;                        // 0x01E0(0x0018)(HasGetValueTypeHash)
	float                                         K2Node_InputAxisKeyEvent_AxisValue_1;              // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisKeyEvent_AxisValue;                // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_3;                            // 0x0230(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0248(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0254(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0260(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue_1;        // 0x026C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_9;                        // 0x0278(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x029C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x02AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x02B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x02C4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x034C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D[0x3];                                      // 0x034D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0350(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_1;     // 0x0360(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_1;        // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9[0x3];                                      // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x03EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x03F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0404(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0410(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_2;     // 0x041C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_2;        // 0x04A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A5[0x3];                                      // 0x04A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_3;     // 0x04A8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_3;        // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_531[0x7];                                      // 0x0531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_10;                       // 0x0538(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x055C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0564(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_1;                  // 0x0568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x056C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0571(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0572(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam) == 0x000010, "Wrong alignment on BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam");
static_assert(sizeof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam) == 0x000580, "Wrong size on BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, EntryPoint) == 0x000000, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, K2Node_InputKeyEvent_Key_6) == 0x000008, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::K2Node_InputKeyEvent_Key_6' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, K2Node_InputKeyEvent_Key_5) == 0x000020, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::K2Node_InputKeyEvent_Key_5' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, Temp_struct_Variable) == 0x000038, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, K2Node_InputKeyEvent_Key_4) == 0x000050, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::K2Node_InputKeyEvent_Key_4' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, K2Node_InputKeyEvent_Key_3) == 0x000068, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::K2Node_InputKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, Temp_struct_Variable_1) == 0x000080, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, K2Node_InputKeyEvent_Key_2) == 0x000098, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, K2Node_InputKeyEvent_Key_1) == 0x0000B0, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, K2Node_InputKeyEvent_Key) == 0x0000C8, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000E0, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_MakeTransform_ReturnValue) == 0x0000F0, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_K2_SetActorRelativeTransform_SweepHitResult) == 0x000120, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_K2_SetActorRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, Temp_struct_Variable_2) == 0x0001A8, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, K2Node_InputKeyEvent_Key_7) == 0x0001C0, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::K2Node_InputKeyEvent_Key_7' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, K2Node_Event_DeltaSeconds) == 0x0001D8, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, K2Node_InputKeyEvent_Key_8) == 0x0001E0, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::K2Node_InputKeyEvent_Key_8' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, K2Node_InputAxisKeyEvent_AxisValue_1) == 0x0001F8, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::K2Node_InputAxisKeyEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, K2Node_InputAxisKeyEvent_AxisValue) == 0x0001FC, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::K2Node_InputAxisKeyEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_GetActorForwardVector_ReturnValue) == 0x000200, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00020C, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000218, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000224, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, Temp_struct_Variable_3) == 0x000230, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000248, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_GetActorRightVector_ReturnValue) == 0x000254, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000260, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_GetActorRightVector_ReturnValue_1) == 0x00026C, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_GetActorRightVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, K2Node_InputKeyEvent_Key_9) == 0x000278, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::K2Node_InputKeyEvent_Key_9' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_Add_FloatFloat_ReturnValue) == 0x000290, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_FClamp_ReturnValue) == 0x000294, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000298, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00029C, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0002A8, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_Add_VectorVector_ReturnValue) == 0x0002AC, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0002B8, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0002C4, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_K2_SetActorLocation_ReturnValue) == 0x00034C, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000350, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00035C, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_K2_SetActorLocation_SweepHitResult_1) == 0x000360, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_K2_SetActorLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_K2_SetActorLocation_ReturnValue_1) == 0x0003E8, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_K2_SetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0003EC, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x0003F8, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000404, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000410, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_K2_SetActorLocation_SweepHitResult_2) == 0x00041C, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_K2_SetActorLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_K2_SetActorLocation_ReturnValue_2) == 0x0004A4, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_K2_SetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_K2_SetActorLocation_SweepHitResult_3) == 0x0004A8, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_K2_SetActorLocation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_K2_SetActorLocation_ReturnValue_3) == 0x000530, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_K2_SetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, K2Node_InputKeyEvent_Key_10) == 0x000538, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::K2Node_InputKeyEvent_Key_10' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000550, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_FClamp_ReturnValue_1) == 0x000554, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000558, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_FInterpTo_ReturnValue) == 0x00055C, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_SelectFloat_ReturnValue) == 0x000560, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000564, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_FInterpTo_ReturnValue_1) == 0x000568, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_SelectFloat_ReturnValue_1) == 0x00056C, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_IsValid_ReturnValue) == 0x000570, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_IsValid_ReturnValue_1) == 0x000571, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam, CallFunc_IsValid_ReturnValue_2) == 0x000572, "Member 'BP_FreeCam_C_ExecuteUbergraph_BP_FreeCam::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_FreeCam.BP_FreeCam_C.InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent_1
// 0x0004 (0x0004 - 0x0000)
struct BP_FreeCam_C_InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent_1 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeCam_C_InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent_1) == 0x000004, "Wrong alignment on BP_FreeCam_C_InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent_1");
static_assert(sizeof(BP_FreeCam_C_InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent_1) == 0x000004, "Wrong size on BP_FreeCam_C_InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent_1");
static_assert(offsetof(BP_FreeCam_C_InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent_1, AxisValue) == 0x000000, "Member 'BP_FreeCam_C_InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent_1::AxisValue' has a wrong offset!");

// Function BP_FreeCam.BP_FreeCam_C.InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent_0
// 0x0004 (0x0004 - 0x0000)
struct BP_FreeCam_C_InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent_0 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeCam_C_InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent_0) == 0x000004, "Wrong alignment on BP_FreeCam_C_InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent_0");
static_assert(sizeof(BP_FreeCam_C_InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent_0) == 0x000004, "Wrong size on BP_FreeCam_C_InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent_0");
static_assert(offsetof(BP_FreeCam_C_InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent_0, AxisValue) == 0x000000, "Member 'BP_FreeCam_C_InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent_0::AxisValue' has a wrong offset!");

// Function BP_FreeCam.BP_FreeCam_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_FreeCam_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeCam_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_FreeCam_C_ReceiveTick");
static_assert(sizeof(BP_FreeCam_C_ReceiveTick) == 0x000004, "Wrong size on BP_FreeCam_C_ReceiveTick");
static_assert(offsetof(BP_FreeCam_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_FreeCam_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_FreeCam.BP_FreeCam_C.InpActEvt_SpaceBar_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_FreeCam_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeCam_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on BP_FreeCam_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_0");
static_assert(sizeof(BP_FreeCam_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on BP_FreeCam_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_0");
static_assert(offsetof(BP_FreeCam_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'BP_FreeCam_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function BP_FreeCam.BP_FreeCam_C.InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_FreeCam_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeCam_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on BP_FreeCam_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1");
static_assert(sizeof(BP_FreeCam_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on BP_FreeCam_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1");
static_assert(offsetof(BP_FreeCam_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'BP_FreeCam_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function BP_FreeCam.BP_FreeCam_C.InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_FreeCam_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeCam_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on BP_FreeCam_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_2");
static_assert(sizeof(BP_FreeCam_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on BP_FreeCam_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_2");
static_assert(offsetof(BP_FreeCam_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'BP_FreeCam_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function BP_FreeCam.BP_FreeCam_C.InpActEvt_D_K2Node_InputKeyEvent_3
// 0x0018 (0x0018 - 0x0000)
struct BP_FreeCam_C_InpActEvt_D_K2Node_InputKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeCam_C_InpActEvt_D_K2Node_InputKeyEvent_3) == 0x000008, "Wrong alignment on BP_FreeCam_C_InpActEvt_D_K2Node_InputKeyEvent_3");
static_assert(sizeof(BP_FreeCam_C_InpActEvt_D_K2Node_InputKeyEvent_3) == 0x000018, "Wrong size on BP_FreeCam_C_InpActEvt_D_K2Node_InputKeyEvent_3");
static_assert(offsetof(BP_FreeCam_C_InpActEvt_D_K2Node_InputKeyEvent_3, Key) == 0x000000, "Member 'BP_FreeCam_C_InpActEvt_D_K2Node_InputKeyEvent_3::Key' has a wrong offset!");

// Function BP_FreeCam.BP_FreeCam_C.InpActEvt_D_K2Node_InputKeyEvent_4
// 0x0018 (0x0018 - 0x0000)
struct BP_FreeCam_C_InpActEvt_D_K2Node_InputKeyEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeCam_C_InpActEvt_D_K2Node_InputKeyEvent_4) == 0x000008, "Wrong alignment on BP_FreeCam_C_InpActEvt_D_K2Node_InputKeyEvent_4");
static_assert(sizeof(BP_FreeCam_C_InpActEvt_D_K2Node_InputKeyEvent_4) == 0x000018, "Wrong size on BP_FreeCam_C_InpActEvt_D_K2Node_InputKeyEvent_4");
static_assert(offsetof(BP_FreeCam_C_InpActEvt_D_K2Node_InputKeyEvent_4, Key) == 0x000000, "Member 'BP_FreeCam_C_InpActEvt_D_K2Node_InputKeyEvent_4::Key' has a wrong offset!");

// Function BP_FreeCam.BP_FreeCam_C.InpActEvt_A_K2Node_InputKeyEvent_5
// 0x0018 (0x0018 - 0x0000)
struct BP_FreeCam_C_InpActEvt_A_K2Node_InputKeyEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeCam_C_InpActEvt_A_K2Node_InputKeyEvent_5) == 0x000008, "Wrong alignment on BP_FreeCam_C_InpActEvt_A_K2Node_InputKeyEvent_5");
static_assert(sizeof(BP_FreeCam_C_InpActEvt_A_K2Node_InputKeyEvent_5) == 0x000018, "Wrong size on BP_FreeCam_C_InpActEvt_A_K2Node_InputKeyEvent_5");
static_assert(offsetof(BP_FreeCam_C_InpActEvt_A_K2Node_InputKeyEvent_5, Key) == 0x000000, "Member 'BP_FreeCam_C_InpActEvt_A_K2Node_InputKeyEvent_5::Key' has a wrong offset!");

// Function BP_FreeCam.BP_FreeCam_C.InpActEvt_A_K2Node_InputKeyEvent_6
// 0x0018 (0x0018 - 0x0000)
struct BP_FreeCam_C_InpActEvt_A_K2Node_InputKeyEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeCam_C_InpActEvt_A_K2Node_InputKeyEvent_6) == 0x000008, "Wrong alignment on BP_FreeCam_C_InpActEvt_A_K2Node_InputKeyEvent_6");
static_assert(sizeof(BP_FreeCam_C_InpActEvt_A_K2Node_InputKeyEvent_6) == 0x000018, "Wrong size on BP_FreeCam_C_InpActEvt_A_K2Node_InputKeyEvent_6");
static_assert(offsetof(BP_FreeCam_C_InpActEvt_A_K2Node_InputKeyEvent_6, Key) == 0x000000, "Member 'BP_FreeCam_C_InpActEvt_A_K2Node_InputKeyEvent_6::Key' has a wrong offset!");

// Function BP_FreeCam.BP_FreeCam_C.InpActEvt_S_K2Node_InputKeyEvent_7
// 0x0018 (0x0018 - 0x0000)
struct BP_FreeCam_C_InpActEvt_S_K2Node_InputKeyEvent_7 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeCam_C_InpActEvt_S_K2Node_InputKeyEvent_7) == 0x000008, "Wrong alignment on BP_FreeCam_C_InpActEvt_S_K2Node_InputKeyEvent_7");
static_assert(sizeof(BP_FreeCam_C_InpActEvt_S_K2Node_InputKeyEvent_7) == 0x000018, "Wrong size on BP_FreeCam_C_InpActEvt_S_K2Node_InputKeyEvent_7");
static_assert(offsetof(BP_FreeCam_C_InpActEvt_S_K2Node_InputKeyEvent_7, Key) == 0x000000, "Member 'BP_FreeCam_C_InpActEvt_S_K2Node_InputKeyEvent_7::Key' has a wrong offset!");

// Function BP_FreeCam.BP_FreeCam_C.InpActEvt_S_K2Node_InputKeyEvent_8
// 0x0018 (0x0018 - 0x0000)
struct BP_FreeCam_C_InpActEvt_S_K2Node_InputKeyEvent_8 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeCam_C_InpActEvt_S_K2Node_InputKeyEvent_8) == 0x000008, "Wrong alignment on BP_FreeCam_C_InpActEvt_S_K2Node_InputKeyEvent_8");
static_assert(sizeof(BP_FreeCam_C_InpActEvt_S_K2Node_InputKeyEvent_8) == 0x000018, "Wrong size on BP_FreeCam_C_InpActEvt_S_K2Node_InputKeyEvent_8");
static_assert(offsetof(BP_FreeCam_C_InpActEvt_S_K2Node_InputKeyEvent_8, Key) == 0x000000, "Member 'BP_FreeCam_C_InpActEvt_S_K2Node_InputKeyEvent_8::Key' has a wrong offset!");

// Function BP_FreeCam.BP_FreeCam_C.InpActEvt_W_K2Node_InputKeyEvent_9
// 0x0018 (0x0018 - 0x0000)
struct BP_FreeCam_C_InpActEvt_W_K2Node_InputKeyEvent_9 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeCam_C_InpActEvt_W_K2Node_InputKeyEvent_9) == 0x000008, "Wrong alignment on BP_FreeCam_C_InpActEvt_W_K2Node_InputKeyEvent_9");
static_assert(sizeof(BP_FreeCam_C_InpActEvt_W_K2Node_InputKeyEvent_9) == 0x000018, "Wrong size on BP_FreeCam_C_InpActEvt_W_K2Node_InputKeyEvent_9");
static_assert(offsetof(BP_FreeCam_C_InpActEvt_W_K2Node_InputKeyEvent_9, Key) == 0x000000, "Member 'BP_FreeCam_C_InpActEvt_W_K2Node_InputKeyEvent_9::Key' has a wrong offset!");

// Function BP_FreeCam.BP_FreeCam_C.InpActEvt_W_K2Node_InputKeyEvent_10
// 0x0018 (0x0018 - 0x0000)
struct BP_FreeCam_C_InpActEvt_W_K2Node_InputKeyEvent_10 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeCam_C_InpActEvt_W_K2Node_InputKeyEvent_10) == 0x000008, "Wrong alignment on BP_FreeCam_C_InpActEvt_W_K2Node_InputKeyEvent_10");
static_assert(sizeof(BP_FreeCam_C_InpActEvt_W_K2Node_InputKeyEvent_10) == 0x000018, "Wrong size on BP_FreeCam_C_InpActEvt_W_K2Node_InputKeyEvent_10");
static_assert(offsetof(BP_FreeCam_C_InpActEvt_W_K2Node_InputKeyEvent_10, Key) == 0x000000, "Member 'BP_FreeCam_C_InpActEvt_W_K2Node_InputKeyEvent_10::Key' has a wrong offset!");

}

