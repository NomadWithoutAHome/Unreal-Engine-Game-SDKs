#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ClientAuthoritativeCharacterSystem

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "GameplayAbilities_classes.hpp"
#include "ClientAuthoritativeCharacterSystem_structs.hpp"


namespace SDK
{

// Class ClientAuthoritativeCharacterSystem.ClientAuthoritativeCharacterMovementComponent
// 0x0060 (0x0B50 - 0x0AF0)
class UClientAuthoritativeCharacterMovementComponent final : public UCharacterMovementComponent
{
public:
	uint8                                         Pad_AF0[0x8];                                      // 0x0AF0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FClientAuthoritativeMoveData           ServerLatestMoveData;                              // 0x0AF8(0x0050)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B48[0x8];                                      // 0x0B48(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ClientAuthoritativeCharacterMovementComponent">();
	}
	static class UClientAuthoritativeCharacterMovementComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UClientAuthoritativeCharacterMovementComponent>();
	}
};
static_assert(alignof(UClientAuthoritativeCharacterMovementComponent) == 0x000010, "Wrong alignment on UClientAuthoritativeCharacterMovementComponent");
static_assert(sizeof(UClientAuthoritativeCharacterMovementComponent) == 0x000B50, "Wrong size on UClientAuthoritativeCharacterMovementComponent");
static_assert(offsetof(UClientAuthoritativeCharacterMovementComponent, ServerLatestMoveData) == 0x000AF8, "Member 'UClientAuthoritativeCharacterMovementComponent::ServerLatestMoveData' has a wrong offset!");

// Class ClientAuthoritativeCharacterSystem.ClientAuthoritativeAbilityTask
// 0x0018 (0x00D0 - 0x00B8)
class UClientAuthoritativeAbilityTask final : public UAbilityTask_ApplyRootMotion_Base
{
public:
	TMulticastInlineDelegate<void()>              OnFinish;                                          // 0x00B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ClientAuthoritativeAbilityTask">();
	}
	static class UClientAuthoritativeAbilityTask* GetDefaultObj()
	{
		return GetDefaultObjImpl<UClientAuthoritativeAbilityTask>();
	}
};
static_assert(alignof(UClientAuthoritativeAbilityTask) == 0x000008, "Wrong alignment on UClientAuthoritativeAbilityTask");
static_assert(sizeof(UClientAuthoritativeAbilityTask) == 0x0000D0, "Wrong size on UClientAuthoritativeAbilityTask");
static_assert(offsetof(UClientAuthoritativeAbilityTask, OnFinish) == 0x0000B8, "Member 'UClientAuthoritativeAbilityTask::OnFinish' has a wrong offset!");

// Class ClientAuthoritativeCharacterSystem.ClientAuthoritativePlayerController
// 0x0000 (0x0570 - 0x0570)
class AClientAuthoritativePlayerController : public APlayerController
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ClientAuthoritativePlayerController">();
	}
	static class AClientAuthoritativePlayerController* GetDefaultObj()
	{
		return GetDefaultObjImpl<AClientAuthoritativePlayerController>();
	}
};
static_assert(alignof(AClientAuthoritativePlayerController) == 0x000008, "Wrong alignment on AClientAuthoritativePlayerController");
static_assert(sizeof(AClientAuthoritativePlayerController) == 0x000570, "Wrong size on AClientAuthoritativePlayerController");

// Class ClientAuthoritativeCharacterSystem.ClientAuthoritativeCharacter
// 0x0000 (0x04C0 - 0x04C0)
class AClientAuthoritativeCharacter : public ACharacter
{
public:
	bool                                          bHasOverrideRootMotion;                            // 0x04B8(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4B9[0x7];                                      // 0x04B9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ClientAuthoritativeMove(const struct FClientAuthoritativeMoveData& MoveData);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ClientAuthoritativeCharacter">();
	}
	static class AClientAuthoritativeCharacter* GetDefaultObj()
	{
		return GetDefaultObjImpl<AClientAuthoritativeCharacter>();
	}
};
static_assert(alignof(AClientAuthoritativeCharacter) == 0x000010, "Wrong alignment on AClientAuthoritativeCharacter");
static_assert(sizeof(AClientAuthoritativeCharacter) == 0x0004C0, "Wrong size on AClientAuthoritativeCharacter");
static_assert(offsetof(AClientAuthoritativeCharacter, bHasOverrideRootMotion) == 0x0004B8, "Member 'AClientAuthoritativeCharacter::bHasOverrideRootMotion' has a wrong offset!");

}

