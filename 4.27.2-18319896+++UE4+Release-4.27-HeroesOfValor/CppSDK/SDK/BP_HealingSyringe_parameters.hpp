#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HealingSyringe

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_HealingSyringe.BP_HealingSyringe_C.ExecuteUbergraph_BP_HealingSyringe
// 0x04A0 (0x04A0 - 0x0000)
struct BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HealLocation_1;                 // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        K2Node_CustomEvent_Character_1;                    // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HealLocation;                   // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        K2Node_CustomEvent_Character;                      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SyringeInjector_C*                  CallFunc_FinishSpawningActor_ReturnValue;          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfOwnerOfThisWeapon_IsOwner;         // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0128(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue_1;       // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character_1;               // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_RemainingAmmo;                  // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue_2;       // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character_2;               // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue_1;         // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Loaded;                         // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue_3;       // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character_3;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18B[0x5];                                      // 0x018B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0190(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x01C0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_248[0x8];                                      // 0x0248(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0250(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x3];                                      // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_1; // 0x0284(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0x3];                                      // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x031A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31B[0x5];                                      // 0x031B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue_2;         // 0x0320(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32D[0x3];                                      // 0x032D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue_4;       // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_2;                          // 0x0338(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FHitResult>                     CallFunc_SphereTraceMultiForObjects_OutHits;       // 0x0348(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMultiForObjects_ReturnValue;   // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359[0x3];                                      // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x035C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x03E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3EA[0x2];                                      // 0x03EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x03F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0400(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x040C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0418(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424[0x4];                                      // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0438(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0454(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0460(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x046C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46D[0x3];                                      // 0x046D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character_4;               // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0479(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47A[0x6];                                      // 0x047A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BuffDebuffBase_C*                   CallFunc_Array_Get_Item_1;                         // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x048C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x048D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x048E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x048F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x0491(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0492(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0493(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0494(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0495(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0496(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe) == 0x000010, "Wrong alignment on BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe");
static_assert(sizeof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe) == 0x0004A0, "Wrong size on BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, EntryPoint) == 0x000000, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, Temp_bool_Has_Been_Initd_Variable_1) == 0x000019, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, Temp_bool_IsClosed_Variable_1) == 0x00001A, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, K2Node_Event_DeltaSeconds) == 0x000028, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_GetAttachParentActor_ReturnValue) == 0x000030, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, K2Node_DynamicCast_AsBP_Character) == 0x000038, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, K2Node_MakeArray_Array) == 0x000048, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_GetForwardVector_ReturnValue) == 0x000058, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000064, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000070, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, Temp_bool_Has_Been_Initd_Variable_2) == 0x00007C, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_Add_VectorVector_ReturnValue) == 0x000080, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, K2Node_CustomEvent_HealLocation_1) == 0x00008C, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::K2Node_CustomEvent_HealLocation_1' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, K2Node_CustomEvent_Character_1) == 0x000098, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::K2Node_CustomEvent_Character_1' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, K2Node_CustomEvent_HealLocation) == 0x0000A0, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::K2Node_CustomEvent_HealLocation' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, K2Node_CustomEvent_Character) == 0x0000B0, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_GetPlayerController_ReturnValue) == 0x0000B8, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0000C0, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x0000C8, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0000D0, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000100, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_GetForwardVector_ReturnValue_1) == 0x000108, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_FinishSpawningActor_ReturnValue) == 0x000118, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_CheckIfOwnerOfThisWeapon_IsOwner) == 0x000120, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_CheckIfOwnerOfThisWeapon_IsOwner' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, K2Node_MakeArray_Array_1) == 0x000128, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_GetAttachParentActor_ReturnValue_1) == 0x000138, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_GetAttachParentActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, K2Node_DynamicCast_AsBP_Character_1) == 0x000140, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::K2Node_DynamicCast_AsBP_Character_1' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, K2Node_DynamicCast_bSuccess_1) == 0x000148, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, K2Node_CustomEvent_RemainingAmmo) == 0x00014C, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::K2Node_CustomEvent_RemainingAmmo' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_GetAttachParentActor_ReturnValue_2) == 0x000150, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_GetAttachParentActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, K2Node_DynamicCast_AsBP_Character_2) == 0x000158, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::K2Node_DynamicCast_AsBP_Character_2' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, K2Node_DynamicCast_bSuccess_2) == 0x000160, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_SpawnSoundAttached_ReturnValue_1) == 0x000168, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_SpawnSoundAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, K2Node_CustomEvent_Loaded) == 0x000170, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_Add_FloatFloat_ReturnValue) == 0x000174, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_GetAttachParentActor_ReturnValue_3) == 0x000178, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_GetAttachParentActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, K2Node_DynamicCast_AsBP_Character_3) == 0x000180, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::K2Node_DynamicCast_AsBP_Character_3' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, K2Node_DynamicCast_bSuccess_3) == 0x000188, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000189, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x00018A, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_MakeTransform_ReturnValue) == 0x000190, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x0001C0, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_MakeTransform_ReturnValue_1) == 0x000250, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, Temp_bool_Has_Been_Initd_Variable_3) == 0x000280, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_K2_SetRelativeTransform_SweepHitResult_1) == 0x000284, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_K2_SetRelativeTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00030C, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000310, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000314, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000318, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000319, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x00031A, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_SpawnSoundAttached_ReturnValue_2) == 0x000320, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_SpawnSoundAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_Subtract_IntInt_ReturnValue) == 0x000328, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, Temp_bool_IsClosed_Variable_2) == 0x00032C, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_GetAttachParentActor_ReturnValue_4) == 0x000330, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_GetAttachParentActor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, K2Node_MakeArray_Array_2) == 0x000338, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_SphereTraceMultiForObjects_OutHits) == 0x000348, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_SphereTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_SphereTraceMultiForObjects_ReturnValue) == 0x000358, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_SphereTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_Array_Get_Item) == 0x00035C, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_Array_Length_ReturnValue) == 0x0003E4, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_BreakHitResult_bBlockingHit) == 0x0003E8, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_BreakHitResult_bInitialOverlap) == 0x0003E9, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_BreakHitResult_Time) == 0x0003EC, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_BreakHitResult_Distance) == 0x0003F0, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_BreakHitResult_Location) == 0x0003F4, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_BreakHitResult_ImpactPoint) == 0x000400, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_BreakHitResult_Normal) == 0x00040C, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_BreakHitResult_ImpactNormal) == 0x000418, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_BreakHitResult_PhysMat) == 0x000428, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_BreakHitResult_HitActor) == 0x000430, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_BreakHitResult_HitComponent) == 0x000438, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_BreakHitResult_HitBoneName) == 0x000440, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_BreakHitResult_HitItem) == 0x000448, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_BreakHitResult_ElementIndex) == 0x00044C, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_BreakHitResult_FaceIndex) == 0x000450, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_BreakHitResult_TraceStart) == 0x000454, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_BreakHitResult_TraceEnd) == 0x000460, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_Less_IntInt_ReturnValue) == 0x00046C, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, K2Node_DynamicCast_AsBP_Character_4) == 0x000470, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::K2Node_DynamicCast_AsBP_Character_4' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, K2Node_DynamicCast_bSuccess_4) == 0x000478, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_BooleanAND_ReturnValue) == 0x000479, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_Array_Get_Item_1) == 0x000480, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_Array_Length_ReturnValue_1) == 0x000488, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_Less_IntInt_ReturnValue_1) == 0x00048C, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_Greater_IntInt_ReturnValue) == 0x00048D, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00048E, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_Less_IntInt_ReturnValue_2) == 0x00048F, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_IsValid_ReturnValue) == 0x000490, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, Temp_bool_IsClosed_Variable_3) == 0x000491, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_Less_IntInt_ReturnValue_3) == 0x000492, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000493, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000494, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000495, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000496, "Member 'BP_HealingSyringe_C_ExecuteUbergraph_BP_HealingSyringe::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_HealingSyringe.BP_HealingSyringe_C.S_SetLoadedState
// 0x0001 (0x0001 - 0x0000)
struct BP_HealingSyringe_C_S_SetLoadedState final
{
public:
	bool                                          Loaded_0;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HealingSyringe_C_S_SetLoadedState) == 0x000001, "Wrong alignment on BP_HealingSyringe_C_S_SetLoadedState");
static_assert(sizeof(BP_HealingSyringe_C_S_SetLoadedState) == 0x000001, "Wrong size on BP_HealingSyringe_C_S_SetLoadedState");
static_assert(offsetof(BP_HealingSyringe_C_S_SetLoadedState, Loaded_0) == 0x000000, "Member 'BP_HealingSyringe_C_S_SetLoadedState::Loaded_0' has a wrong offset!");

// Function BP_HealingSyringe.BP_HealingSyringe_C.LaunchInjector
// 0x0004 (0x0004 - 0x0000)
struct BP_HealingSyringe_C_LaunchInjector final
{
public:
	int32                                         RemainingAmmo;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HealingSyringe_C_LaunchInjector) == 0x000004, "Wrong alignment on BP_HealingSyringe_C_LaunchInjector");
static_assert(sizeof(BP_HealingSyringe_C_LaunchInjector) == 0x000004, "Wrong size on BP_HealingSyringe_C_LaunchInjector");
static_assert(offsetof(BP_HealingSyringe_C_LaunchInjector, RemainingAmmo) == 0x000000, "Member 'BP_HealingSyringe_C_LaunchInjector::RemainingAmmo' has a wrong offset!");

// Function BP_HealingSyringe.BP_HealingSyringe_C.MC_HealEffects
// 0x0018 (0x0018 - 0x0000)
struct BP_HealingSyringe_C_MC_HealEffects final
{
public:
	struct FVector                                HealLocation;                                      // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        Character;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HealingSyringe_C_MC_HealEffects) == 0x000008, "Wrong alignment on BP_HealingSyringe_C_MC_HealEffects");
static_assert(sizeof(BP_HealingSyringe_C_MC_HealEffects) == 0x000018, "Wrong size on BP_HealingSyringe_C_MC_HealEffects");
static_assert(offsetof(BP_HealingSyringe_C_MC_HealEffects, HealLocation) == 0x000000, "Member 'BP_HealingSyringe_C_MC_HealEffects::HealLocation' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_MC_HealEffects, Character) == 0x000010, "Member 'BP_HealingSyringe_C_MC_HealEffects::Character' has a wrong offset!");

// Function BP_HealingSyringe.BP_HealingSyringe_C.S_HealEffects
// 0x0018 (0x0018 - 0x0000)
struct BP_HealingSyringe_C_S_HealEffects final
{
public:
	struct FVector                                HealLocation;                                      // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        Character;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HealingSyringe_C_S_HealEffects) == 0x000008, "Wrong alignment on BP_HealingSyringe_C_S_HealEffects");
static_assert(sizeof(BP_HealingSyringe_C_S_HealEffects) == 0x000018, "Wrong size on BP_HealingSyringe_C_S_HealEffects");
static_assert(offsetof(BP_HealingSyringe_C_S_HealEffects, HealLocation) == 0x000000, "Member 'BP_HealingSyringe_C_S_HealEffects::HealLocation' has a wrong offset!");
static_assert(offsetof(BP_HealingSyringe_C_S_HealEffects, Character) == 0x000010, "Member 'BP_HealingSyringe_C_S_HealEffects::Character' has a wrong offset!");

// Function BP_HealingSyringe.BP_HealingSyringe_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_HealingSyringe_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HealingSyringe_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_HealingSyringe_C_ReceiveTick");
static_assert(sizeof(BP_HealingSyringe_C_ReceiveTick) == 0x000004, "Wrong size on BP_HealingSyringe_C_ReceiveTick");
static_assert(offsetof(BP_HealingSyringe_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_HealingSyringe_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

