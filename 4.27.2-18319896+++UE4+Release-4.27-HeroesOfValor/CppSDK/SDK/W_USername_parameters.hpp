#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_USername

#include "Basic.hpp"

#include "ST_Options_structs.hpp"
#include "UMG_structs.hpp"
#include "ST_PlayerStats_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function W_USername.W_Username_C.ExecuteUbergraph_W_Username
// 0x0178 (0x0178 - 0x0000)
struct W_Username_C_ExecuteUbergraph_W_Username final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFontOutlineSettings                   K2Node_MakeStruct_FontOutlineSettings;             // 0x0060(0x0020)(NoDestructor, HasGetValueTypeHash)
	struct FFontOutlineSettings                   K2Node_MakeStruct_FontOutlineSettings_1;           // 0x0080(0x0020)(NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x00A0(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo_1;                 // 0x00F8(0x0058)(HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTruePawnLocation_PawnLocation;         // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPawnAIControlled__IsAIControlled;       // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Username_C_ExecuteUbergraph_W_Username) == 0x000008, "Wrong alignment on W_Username_C_ExecuteUbergraph_W_Username");
static_assert(sizeof(W_Username_C_ExecuteUbergraph_W_Username) == 0x000178, "Wrong size on W_Username_C_ExecuteUbergraph_W_Username");
static_assert(offsetof(W_Username_C_ExecuteUbergraph_W_Username, EntryPoint) == 0x000000, "Member 'W_Username_C_ExecuteUbergraph_W_Username::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Username_C_ExecuteUbergraph_W_Username, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'W_Username_C_ExecuteUbergraph_W_Username::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_ExecuteUbergraph_W_Username, Temp_bool_IsClosed_Variable) == 0x000005, "Member 'W_Username_C_ExecuteUbergraph_W_Username::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(W_Username_C_ExecuteUbergraph_W_Username, Temp_bool_Has_Been_Initd_Variable) == 0x000006, "Member 'W_Username_C_ExecuteUbergraph_W_Username::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(W_Username_C_ExecuteUbergraph_W_Username, Temp_bool_Has_Been_Initd_Variable_1) == 0x000007, "Member 'W_Username_C_ExecuteUbergraph_W_Username::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Username_C_ExecuteUbergraph_W_Username, K2Node_Event_MyGeometry) == 0x000008, "Member 'W_Username_C_ExecuteUbergraph_W_Username::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_Username_C_ExecuteUbergraph_W_Username, K2Node_Event_InDeltaTime) == 0x000040, "Member 'W_Username_C_ExecuteUbergraph_W_Username::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_Username_C_ExecuteUbergraph_W_Username, CallFunc_GetPlayerController_ReturnValue) == 0x000048, "Member 'W_Username_C_ExecuteUbergraph_W_Username::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_ExecuteUbergraph_W_Username, CallFunc_GetCameraLocation_ReturnValue) == 0x000050, "Member 'W_Username_C_ExecuteUbergraph_W_Username::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_ExecuteUbergraph_W_Username, Temp_bool_IsClosed_Variable_1) == 0x00005C, "Member 'W_Username_C_ExecuteUbergraph_W_Username::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Username_C_ExecuteUbergraph_W_Username, K2Node_MakeStruct_FontOutlineSettings) == 0x000060, "Member 'W_Username_C_ExecuteUbergraph_W_Username::K2Node_MakeStruct_FontOutlineSettings' has a wrong offset!");
static_assert(offsetof(W_Username_C_ExecuteUbergraph_W_Username, K2Node_MakeStruct_FontOutlineSettings_1) == 0x000080, "Member 'W_Username_C_ExecuteUbergraph_W_Username::K2Node_MakeStruct_FontOutlineSettings_1' has a wrong offset!");
static_assert(offsetof(W_Username_C_ExecuteUbergraph_W_Username, K2Node_MakeStruct_SlateFontInfo) == 0x0000A0, "Member 'W_Username_C_ExecuteUbergraph_W_Username::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(W_Username_C_ExecuteUbergraph_W_Username, K2Node_MakeStruct_SlateFontInfo_1) == 0x0000F8, "Member 'W_Username_C_ExecuteUbergraph_W_Username::K2Node_MakeStruct_SlateFontInfo_1' has a wrong offset!");
static_assert(offsetof(W_Username_C_ExecuteUbergraph_W_Username, CallFunc_GetTruePawnLocation_PawnLocation) == 0x000150, "Member 'W_Username_C_ExecuteUbergraph_W_Username::CallFunc_GetTruePawnLocation_PawnLocation' has a wrong offset!");
static_assert(offsetof(W_Username_C_ExecuteUbergraph_W_Username, CallFunc_IsPawnAIControlled__IsAIControlled) == 0x00015C, "Member 'W_Username_C_ExecuteUbergraph_W_Username::CallFunc_IsPawnAIControlled__IsAIControlled' has a wrong offset!");
static_assert(offsetof(W_Username_C_ExecuteUbergraph_W_Username, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000160, "Member 'W_Username_C_ExecuteUbergraph_W_Username::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_ExecuteUbergraph_W_Username, CallFunc_VSize_ReturnValue) == 0x00016C, "Member 'W_Username_C_ExecuteUbergraph_W_Username::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_ExecuteUbergraph_W_Username, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000170, "Member 'W_Username_C_ExecuteUbergraph_W_Username::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function W_USername.W_Username_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_Username_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Username_C_Tick) == 0x000004, "Wrong alignment on W_Username_C_Tick");
static_assert(sizeof(W_Username_C_Tick) == 0x00003C, "Wrong size on W_Username_C_Tick");
static_assert(offsetof(W_Username_C_Tick, MyGeometry) == 0x000000, "Member 'W_Username_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_Username_C_Tick, InDeltaTime) == 0x000038, "Member 'W_Username_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_USername.W_Username_C.ShowFullName
// 0x0001 (0x0001 - 0x0000)
struct W_Username_C_ShowFullName final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Username_C_ShowFullName) == 0x000001, "Wrong alignment on W_Username_C_ShowFullName");
static_assert(sizeof(W_Username_C_ShowFullName) == 0x000001, "Wrong size on W_Username_C_ShowFullName");
static_assert(offsetof(W_Username_C_ShowFullName, ReturnValue) == 0x000000, "Member 'W_Username_C_ShowFullName::ReturnValue' has a wrong offset!");

// Function W_USername.W_Username_C.SetUserName
// 0x00B8 (0x00B8 - 0x0000)
struct W_Username_C_SetUserName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FString                                 CallFunc_GetPawnUsername_Username;                 // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0018)()
};
static_assert(alignof(W_Username_C_SetUserName) == 0x000008, "Wrong alignment on W_Username_C_SetUserName");
static_assert(sizeof(W_Username_C_SetUserName) == 0x0000B8, "Wrong size on W_Username_C_SetUserName");
static_assert(offsetof(W_Username_C_SetUserName, ReturnValue) == 0x000000, "Member 'W_Username_C_SetUserName::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetUserName, CallFunc_GetPawnUsername_Username) == 0x000018, "Member 'W_Username_C_SetUserName::CallFunc_GetPawnUsername_Username' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetUserName, CallFunc_GetSubstring_ReturnValue) == 0x000028, "Member 'W_Username_C_SetUserName::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetUserName, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'W_Username_C_SetUserName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetUserName, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'W_Username_C_SetUserName::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetUserName, K2Node_MakeArray_Array) == 0x000090, "Member 'W_Username_C_SetUserName::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetUserName, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'W_Username_C_SetUserName::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function W_USername.W_Username_C.SetNameColor
// 0x00F0 (0x00F0 - 0x0000)
struct W_Username_C_SetNameColor final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsPawnAIControlled__IsAIControlled;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0040(0x0028)()
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0078(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x00A0(0x0028)()
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MapCam_C*                           K2Node_DynamicCast_AsBP_Map_Cam;                   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Username_C_SetNameColor) == 0x000008, "Wrong alignment on W_Username_C_SetNameColor");
static_assert(sizeof(W_Username_C_SetNameColor) == 0x0000F0, "Wrong size on W_Username_C_SetNameColor");
static_assert(offsetof(W_Username_C_SetNameColor, ReturnValue) == 0x000000, "Member 'W_Username_C_SetNameColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetNameColor, CallFunc_IsPawnAIControlled__IsAIControlled) == 0x000028, "Member 'W_Username_C_SetNameColor::CallFunc_IsPawnAIControlled__IsAIControlled' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetNameColor, CallFunc_SelectColor_ReturnValue) == 0x00002C, "Member 'W_Username_C_SetNameColor::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetNameColor, K2Node_MakeStruct_SlateColor) == 0x000040, "Member 'W_Username_C_SetNameColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetNameColor, CallFunc_SelectColor_ReturnValue_1) == 0x000068, "Member 'W_Username_C_SetNameColor::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetNameColor, K2Node_MakeStruct_SlateColor_1) == 0x000078, "Member 'W_Username_C_SetNameColor::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetNameColor, K2Node_MakeStruct_SlateColor_2) == 0x0000A0, "Member 'W_Username_C_SetNameColor::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetNameColor, CallFunc_GetPlayerController_ReturnValue) == 0x0000C8, "Member 'W_Username_C_SetNameColor::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetNameColor, CallFunc_IsValid_ReturnValue) == 0x0000D0, "Member 'W_Username_C_SetNameColor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetNameColor, CallFunc_K2_GetPawn_ReturnValue) == 0x0000D8, "Member 'W_Username_C_SetNameColor::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetNameColor, K2Node_DynamicCast_AsBP_Map_Cam) == 0x0000E0, "Member 'W_Username_C_SetNameColor::K2Node_DynamicCast_AsBP_Map_Cam' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetNameColor, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'W_Username_C_SetNameColor::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_USername.W_Username_C.SetTitleColor
// 0x00F0 (0x00F0 - 0x0000)
struct W_Username_C_SetTitleColor final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0028(0x0028)()
	bool                                          CallFunc_IsPawnAIControlled__IsAIControlled;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0078(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x00A0(0x0028)()
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MapCam_C*                           K2Node_DynamicCast_AsBP_Map_Cam;                   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Username_C_SetTitleColor) == 0x000008, "Wrong alignment on W_Username_C_SetTitleColor");
static_assert(sizeof(W_Username_C_SetTitleColor) == 0x0000F0, "Wrong size on W_Username_C_SetTitleColor");
static_assert(offsetof(W_Username_C_SetTitleColor, ReturnValue) == 0x000000, "Member 'W_Username_C_SetTitleColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetTitleColor, K2Node_MakeStruct_SlateColor) == 0x000028, "Member 'W_Username_C_SetTitleColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetTitleColor, CallFunc_IsPawnAIControlled__IsAIControlled) == 0x000050, "Member 'W_Username_C_SetTitleColor::CallFunc_IsPawnAIControlled__IsAIControlled' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetTitleColor, CallFunc_SelectColor_ReturnValue) == 0x000054, "Member 'W_Username_C_SetTitleColor::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetTitleColor, CallFunc_SelectColor_ReturnValue_1) == 0x000064, "Member 'W_Username_C_SetTitleColor::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetTitleColor, K2Node_MakeStruct_SlateColor_1) == 0x000078, "Member 'W_Username_C_SetTitleColor::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetTitleColor, K2Node_MakeStruct_SlateColor_2) == 0x0000A0, "Member 'W_Username_C_SetTitleColor::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetTitleColor, CallFunc_GetPlayerController_ReturnValue) == 0x0000C8, "Member 'W_Username_C_SetTitleColor::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetTitleColor, CallFunc_K2_GetPawn_ReturnValue) == 0x0000D0, "Member 'W_Username_C_SetTitleColor::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetTitleColor, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'W_Username_C_SetTitleColor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetTitleColor, K2Node_DynamicCast_AsBP_Map_Cam) == 0x0000E0, "Member 'W_Username_C_SetTitleColor::K2Node_DynamicCast_AsBP_Map_Cam' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetTitleColor, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'W_Username_C_SetTitleColor::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_USername.W_Username_C.ShowDot
// 0x0001 (0x0001 - 0x0000)
struct W_Username_C_ShowDot final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Username_C_ShowDot) == 0x000001, "Wrong alignment on W_Username_C_ShowDot");
static_assert(sizeof(W_Username_C_ShowDot) == 0x000001, "Wrong size on W_Username_C_ShowDot");
static_assert(offsetof(W_Username_C_ShowDot, ReturnValue) == 0x000000, "Member 'W_Username_C_ShowDot::ReturnValue' has a wrong offset!");

// Function W_USername.W_Username_C.ShowBorder
// 0x0038 (0x0038 - 0x0000)
struct W_Username_C_ShowBorder final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MapCam_C*                           K2Node_DynamicCast_AsBP_Map_Cam;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Username_C_ShowBorder) == 0x000008, "Wrong alignment on W_Username_C_ShowBorder");
static_assert(sizeof(W_Username_C_ShowBorder) == 0x000038, "Wrong size on W_Username_C_ShowBorder");
static_assert(offsetof(W_Username_C_ShowBorder, ReturnValue) == 0x000000, "Member 'W_Username_C_ShowBorder::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_ShowBorder, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'W_Username_C_ShowBorder::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_ShowBorder, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'W_Username_C_ShowBorder::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_ShowBorder, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'W_Username_C_ShowBorder::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_ShowBorder, K2Node_DynamicCast_AsBP_Map_Cam) == 0x000028, "Member 'W_Username_C_ShowBorder::K2Node_DynamicCast_AsBP_Map_Cam' has a wrong offset!");
static_assert(offsetof(W_Username_C_ShowBorder, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'W_Username_C_ShowBorder::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_USername.W_Username_C.SetHP
// 0x001C (0x001C - 0x0000)
struct W_Username_C_SetHP final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPawnHealthInfo_CurrentHP;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPawnHealthInfo_MaxHP;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Username_C_SetHP) == 0x000004, "Wrong alignment on W_Username_C_SetHP");
static_assert(sizeof(W_Username_C_SetHP) == 0x00001C, "Wrong size on W_Username_C_SetHP");
static_assert(offsetof(W_Username_C_SetHP, ReturnValue) == 0x000000, "Member 'W_Username_C_SetHP::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetHP, CallFunc_GetPawnHealthInfo_CurrentHP) == 0x000004, "Member 'W_Username_C_SetHP::CallFunc_GetPawnHealthInfo_CurrentHP' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetHP, CallFunc_GetPawnHealthInfo_MaxHP) == 0x000008, "Member 'W_Username_C_SetHP::CallFunc_GetPawnHealthInfo_MaxHP' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetHP, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'W_Username_C_SetHP::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetHP, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000010, "Member 'W_Username_C_SetHP::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetHP, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'W_Username_C_SetHP::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetHP, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'W_Username_C_SetHP::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function W_USername.W_Username_C.HPColor
// 0x0044 (0x0044 - 0x0000)
struct W_Username_C_HPColor final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPawnHealthInfo_CurrentHP;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPawnHealthInfo_MaxHP;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Username_C_HPColor) == 0x000004, "Wrong alignment on W_Username_C_HPColor");
static_assert(sizeof(W_Username_C_HPColor) == 0x000044, "Wrong size on W_Username_C_HPColor");
static_assert(offsetof(W_Username_C_HPColor, ReturnValue) == 0x000000, "Member 'W_Username_C_HPColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_HPColor, CallFunc_GetPawnHealthInfo_CurrentHP) == 0x000010, "Member 'W_Username_C_HPColor::CallFunc_GetPawnHealthInfo_CurrentHP' has a wrong offset!");
static_assert(offsetof(W_Username_C_HPColor, CallFunc_GetPawnHealthInfo_MaxHP) == 0x000014, "Member 'W_Username_C_HPColor::CallFunc_GetPawnHealthInfo_MaxHP' has a wrong offset!");
static_assert(offsetof(W_Username_C_HPColor, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000018, "Member 'W_Username_C_HPColor::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_HPColor, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00001C, "Member 'W_Username_C_HPColor::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Username_C_HPColor, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'W_Username_C_HPColor::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_HPColor, CallFunc_LinearColorLerp_ReturnValue) == 0x000024, "Member 'W_Username_C_HPColor::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_HPColor, K2Node_MakeStruct_LinearColor) == 0x000034, "Member 'W_Username_C_HPColor::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function W_USername.W_Username_C.ShowHUD
// 0x0058 (0x0058 - 0x0000)
struct W_Username_C_ShowHUD final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfPawnIsAlive_Alive;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Controller_C*                       K2Node_DynamicCast_AsBP_Controller;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_FreeCam_C*                          K2Node_DynamicCast_AsBP_Free_Cam;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Username_C_ShowHUD) == 0x000008, "Wrong alignment on W_Username_C_ShowHUD");
static_assert(sizeof(W_Username_C_ShowHUD) == 0x000058, "Wrong size on W_Username_C_ShowHUD");
static_assert(offsetof(W_Username_C_ShowHUD, ReturnValue) == 0x000000, "Member 'W_Username_C_ShowHUD::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_ShowHUD, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'W_Username_C_ShowHUD::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_ShowHUD, CallFunc_CheckIfPawnIsAlive_Alive) == 0x000010, "Member 'W_Username_C_ShowHUD::CallFunc_CheckIfPawnIsAlive_Alive' has a wrong offset!");
static_assert(offsetof(W_Username_C_ShowHUD, K2Node_DynamicCast_AsBP_Controller) == 0x000018, "Member 'W_Username_C_ShowHUD::K2Node_DynamicCast_AsBP_Controller' has a wrong offset!");
static_assert(offsetof(W_Username_C_ShowHUD, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'W_Username_C_ShowHUD::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Username_C_ShowHUD, CallFunc_K2_GetPawn_ReturnValue) == 0x000028, "Member 'W_Username_C_ShowHUD::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_ShowHUD, K2Node_DynamicCast_AsBP_Free_Cam) == 0x000030, "Member 'W_Username_C_ShowHUD::K2Node_DynamicCast_AsBP_Free_Cam' has a wrong offset!");
static_assert(offsetof(W_Username_C_ShowHUD, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'W_Username_C_ShowHUD::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_Username_C_ShowHUD, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'W_Username_C_ShowHUD::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_ShowHUD, CallFunc_GetGameInstance_ReturnValue) == 0x000040, "Member 'W_Username_C_ShowHUD::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_ShowHUD, K2Node_DynamicCast_AsBP_Game_Instance) == 0x000048, "Member 'W_Username_C_ShowHUD::K2Node_DynamicCast_AsBP_Game_Instance' has a wrong offset!");
static_assert(offsetof(W_Username_C_ShowHUD, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'W_Username_C_ShowHUD::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function W_USername.W_Username_C.ShowHPBar
// 0x0001 (0x0001 - 0x0000)
struct W_Username_C_ShowHPBar final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Username_C_ShowHPBar) == 0x000001, "Wrong alignment on W_Username_C_ShowHPBar");
static_assert(sizeof(W_Username_C_ShowHPBar) == 0x000001, "Wrong size on W_Username_C_ShowHPBar");
static_assert(offsetof(W_Username_C_ShowHPBar, ReturnValue) == 0x000000, "Member 'W_Username_C_ShowHPBar::ReturnValue' has a wrong offset!");

// Function W_USername.W_Username_C.SetTitle
// 0x0198 (0x0198 - 0x0000)
struct W_Username_C_SetTitle final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0038(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_Options                            CallFunc_GetOptions_Options;                       // 0x0058(0x0070)(HasGetValueTypeHash)
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00D8(0x0018)()
	struct FST_PlayerStats                        CallFunc_GetPlayerStats_Stats;                     // 0x00F0(0x0068)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerRankTitle_Rank;                  // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0168(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0180(0x0018)()
};
static_assert(alignof(W_Username_C_SetTitle) == 0x000008, "Wrong alignment on W_Username_C_SetTitle");
static_assert(sizeof(W_Username_C_SetTitle) == 0x000198, "Wrong size on W_Username_C_SetTitle");
static_assert(offsetof(W_Username_C_SetTitle, ReturnValue) == 0x000000, "Member 'W_Username_C_SetTitle::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetTitle, Temp_bool_Variable) == 0x000018, "Member 'W_Username_C_SetTitle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetTitle, Temp_text_Variable) == 0x000020, "Member 'W_Username_C_SetTitle::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetTitle, Temp_text_Variable_1) == 0x000038, "Member 'W_Username_C_SetTitle::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetTitle, Temp_bool_Variable_1) == 0x000050, "Member 'W_Username_C_SetTitle::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetTitle, CallFunc_GetOptions_Options) == 0x000058, "Member 'W_Username_C_SetTitle::CallFunc_GetOptions_Options' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetTitle, K2Node_DynamicCast_AsBP_Character) == 0x0000C8, "Member 'W_Username_C_SetTitle::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetTitle, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'W_Username_C_SetTitle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetTitle, K2Node_Select_Default) == 0x0000D8, "Member 'W_Username_C_SetTitle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetTitle, CallFunc_GetPlayerStats_Stats) == 0x0000F0, "Member 'W_Username_C_SetTitle::CallFunc_GetPlayerStats_Stats' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetTitle, CallFunc_GetPlayerRankTitle_Rank) == 0x000158, "Member 'W_Username_C_SetTitle::CallFunc_GetPlayerRankTitle_Rank' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetTitle, CallFunc_Conv_StringToText_ReturnValue) == 0x000168, "Member 'W_Username_C_SetTitle::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_SetTitle, K2Node_Select_Default_1) == 0x000180, "Member 'W_Username_C_SetTitle::K2Node_Select_Default_1' has a wrong offset!");

// Function W_USername.W_Username_C.IsPawnAIControlled?
// 0x0028 (0x0028 - 0x0000)
struct W_Username_C_IsPawnAIControlled_ final
{
public:
	bool                                          IsAIControlled;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_VehicleBase_C*                      K2Node_DynamicCast_AsBP_Vehicle_Base;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Username_C_IsPawnAIControlled_) == 0x000008, "Wrong alignment on W_Username_C_IsPawnAIControlled_");
static_assert(sizeof(W_Username_C_IsPawnAIControlled_) == 0x000028, "Wrong size on W_Username_C_IsPawnAIControlled_");
static_assert(offsetof(W_Username_C_IsPawnAIControlled_, IsAIControlled) == 0x000000, "Member 'W_Username_C_IsPawnAIControlled_::IsAIControlled' has a wrong offset!");
static_assert(offsetof(W_Username_C_IsPawnAIControlled_, K2Node_DynamicCast_AsBP_Character) == 0x000008, "Member 'W_Username_C_IsPawnAIControlled_::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(W_Username_C_IsPawnAIControlled_, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'W_Username_C_IsPawnAIControlled_::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Username_C_IsPawnAIControlled_, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'W_Username_C_IsPawnAIControlled_::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_IsPawnAIControlled_, K2Node_DynamicCast_AsBP_Vehicle_Base) == 0x000018, "Member 'W_Username_C_IsPawnAIControlled_::K2Node_DynamicCast_AsBP_Vehicle_Base' has a wrong offset!");
static_assert(offsetof(W_Username_C_IsPawnAIControlled_, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'W_Username_C_IsPawnAIControlled_::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function W_USername.W_Username_C.GetPawnUsername
// 0x00C8 (0x00C8 - 0x0000)
struct W_Username_C_GetPawnUsername final
{
public:
	class FString                                 UserName;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	struct FST_Options                            CallFunc_GetOptions_Options;                       // 0x0010(0x0070)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_VehicleBase_C*                      K2Node_DynamicCast_AsBP_Vehicle_Base;              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Username_C_GetPawnUsername) == 0x000008, "Wrong alignment on W_Username_C_GetPawnUsername");
static_assert(sizeof(W_Username_C_GetPawnUsername) == 0x0000C8, "Wrong size on W_Username_C_GetPawnUsername");
static_assert(offsetof(W_Username_C_GetPawnUsername, UserName) == 0x000000, "Member 'W_Username_C_GetPawnUsername::UserName' has a wrong offset!");
static_assert(offsetof(W_Username_C_GetPawnUsername, CallFunc_GetOptions_Options) == 0x000010, "Member 'W_Username_C_GetPawnUsername::CallFunc_GetOptions_Options' has a wrong offset!");
static_assert(offsetof(W_Username_C_GetPawnUsername, Temp_bool_Variable) == 0x000080, "Member 'W_Username_C_GetPawnUsername::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Username_C_GetPawnUsername, K2Node_DynamicCast_AsBP_Character) == 0x000088, "Member 'W_Username_C_GetPawnUsername::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(W_Username_C_GetPawnUsername, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'W_Username_C_GetPawnUsername::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Username_C_GetPawnUsername, CallFunc_IsValid_ReturnValue) == 0x000091, "Member 'W_Username_C_GetPawnUsername::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_GetPawnUsername, K2Node_DynamicCast_AsBP_Vehicle_Base) == 0x000098, "Member 'W_Username_C_GetPawnUsername::K2Node_DynamicCast_AsBP_Vehicle_Base' has a wrong offset!");
static_assert(offsetof(W_Username_C_GetPawnUsername, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'W_Username_C_GetPawnUsername::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_Username_C_GetPawnUsername, CallFunc_Replace_ReturnValue) == 0x0000A8, "Member 'W_Username_C_GetPawnUsername::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_GetPawnUsername, K2Node_Select_Default) == 0x0000B8, "Member 'W_Username_C_GetPawnUsername::K2Node_Select_Default' has a wrong offset!");

// Function W_USername.W_Username_C.GetPawnHealthInfo
// 0x0030 (0x0030 - 0x0000)
struct W_Username_C_GetPawnHealthInfo final
{
public:
	int32                                         CurrentHP;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxHP;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_VehicleBase_C*                      K2Node_DynamicCast_AsBP_Vehicle_Base;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetVehicleHealthInformation_CurrentHealthPercentage; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVehicleHealthInformation_CurrentHealthAmount; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVehicleHealthInformation_MaxHealth;    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Username_C_GetPawnHealthInfo) == 0x000008, "Wrong alignment on W_Username_C_GetPawnHealthInfo");
static_assert(sizeof(W_Username_C_GetPawnHealthInfo) == 0x000030, "Wrong size on W_Username_C_GetPawnHealthInfo");
static_assert(offsetof(W_Username_C_GetPawnHealthInfo, CurrentHP) == 0x000000, "Member 'W_Username_C_GetPawnHealthInfo::CurrentHP' has a wrong offset!");
static_assert(offsetof(W_Username_C_GetPawnHealthInfo, MaxHP) == 0x000004, "Member 'W_Username_C_GetPawnHealthInfo::MaxHP' has a wrong offset!");
static_assert(offsetof(W_Username_C_GetPawnHealthInfo, K2Node_DynamicCast_AsBP_Character) == 0x000008, "Member 'W_Username_C_GetPawnHealthInfo::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(W_Username_C_GetPawnHealthInfo, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'W_Username_C_GetPawnHealthInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Username_C_GetPawnHealthInfo, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'W_Username_C_GetPawnHealthInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Username_C_GetPawnHealthInfo, K2Node_DynamicCast_AsBP_Vehicle_Base) == 0x000018, "Member 'W_Username_C_GetPawnHealthInfo::K2Node_DynamicCast_AsBP_Vehicle_Base' has a wrong offset!");
static_assert(offsetof(W_Username_C_GetPawnHealthInfo, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'W_Username_C_GetPawnHealthInfo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_Username_C_GetPawnHealthInfo, CallFunc_GetVehicleHealthInformation_CurrentHealthPercentage) == 0x000024, "Member 'W_Username_C_GetPawnHealthInfo::CallFunc_GetVehicleHealthInformation_CurrentHealthPercentage' has a wrong offset!");
static_assert(offsetof(W_Username_C_GetPawnHealthInfo, CallFunc_GetVehicleHealthInformation_CurrentHealthAmount) == 0x000028, "Member 'W_Username_C_GetPawnHealthInfo::CallFunc_GetVehicleHealthInformation_CurrentHealthAmount' has a wrong offset!");
static_assert(offsetof(W_Username_C_GetPawnHealthInfo, CallFunc_GetVehicleHealthInformation_MaxHealth) == 0x00002C, "Member 'W_Username_C_GetPawnHealthInfo::CallFunc_GetVehicleHealthInformation_MaxHealth' has a wrong offset!");

}

