#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_LeaderboardsEntry

#include "Basic.hpp"

#include "SteamCore_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function W_LeaderboardsEntry.W_LeaderboardsEntry_C.ExecuteUbergraph_W_LeaderboardsEntry
// 0x0068 (0x0068 - 0x0000)
struct W_LeaderboardsEntry_C_ExecuteUbergraph_W_LeaderboardsEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSteamID                               CallFunc_GetSteamID_ReturnValue;                   // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0014(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetFriendPersonaName_ReturnValue;         // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Equal_ReturnValue;                        // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_LeaderboardsEntry_C_ExecuteUbergraph_W_LeaderboardsEntry) == 0x000008, "Wrong alignment on W_LeaderboardsEntry_C_ExecuteUbergraph_W_LeaderboardsEntry");
static_assert(sizeof(W_LeaderboardsEntry_C_ExecuteUbergraph_W_LeaderboardsEntry) == 0x000068, "Wrong size on W_LeaderboardsEntry_C_ExecuteUbergraph_W_LeaderboardsEntry");
static_assert(offsetof(W_LeaderboardsEntry_C_ExecuteUbergraph_W_LeaderboardsEntry, EntryPoint) == 0x000000, "Member 'W_LeaderboardsEntry_C_ExecuteUbergraph_W_LeaderboardsEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_LeaderboardsEntry_C_ExecuteUbergraph_W_LeaderboardsEntry, CallFunc_GetSteamID_ReturnValue) == 0x000008, "Member 'W_LeaderboardsEntry_C_ExecuteUbergraph_W_LeaderboardsEntry::CallFunc_GetSteamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LeaderboardsEntry_C_ExecuteUbergraph_W_LeaderboardsEntry, Temp_bool_Has_Been_Initd_Variable) == 0x000010, "Member 'W_LeaderboardsEntry_C_ExecuteUbergraph_W_LeaderboardsEntry::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(W_LeaderboardsEntry_C_ExecuteUbergraph_W_LeaderboardsEntry, Temp_bool_IsClosed_Variable) == 0x000011, "Member 'W_LeaderboardsEntry_C_ExecuteUbergraph_W_LeaderboardsEntry::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(W_LeaderboardsEntry_C_ExecuteUbergraph_W_LeaderboardsEntry, K2Node_Event_MyGeometry) == 0x000014, "Member 'W_LeaderboardsEntry_C_ExecuteUbergraph_W_LeaderboardsEntry::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_LeaderboardsEntry_C_ExecuteUbergraph_W_LeaderboardsEntry, K2Node_Event_InDeltaTime) == 0x00004C, "Member 'W_LeaderboardsEntry_C_ExecuteUbergraph_W_LeaderboardsEntry::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_LeaderboardsEntry_C_ExecuteUbergraph_W_LeaderboardsEntry, CallFunc_GetFriendPersonaName_ReturnValue) == 0x000050, "Member 'W_LeaderboardsEntry_C_ExecuteUbergraph_W_LeaderboardsEntry::CallFunc_GetFriendPersonaName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LeaderboardsEntry_C_ExecuteUbergraph_W_LeaderboardsEntry, CallFunc_IsEmpty_ReturnValue) == 0x000060, "Member 'W_LeaderboardsEntry_C_ExecuteUbergraph_W_LeaderboardsEntry::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LeaderboardsEntry_C_ExecuteUbergraph_W_LeaderboardsEntry, CallFunc_Equal_ReturnValue) == 0x000061, "Member 'W_LeaderboardsEntry_C_ExecuteUbergraph_W_LeaderboardsEntry::CallFunc_Equal_ReturnValue' has a wrong offset!");

// Function W_LeaderboardsEntry.W_LeaderboardsEntry_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_LeaderboardsEntry_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LeaderboardsEntry_C_Tick) == 0x000004, "Wrong alignment on W_LeaderboardsEntry_C_Tick");
static_assert(sizeof(W_LeaderboardsEntry_C_Tick) == 0x00003C, "Wrong size on W_LeaderboardsEntry_C_Tick");
static_assert(offsetof(W_LeaderboardsEntry_C_Tick, MyGeometry) == 0x000000, "Member 'W_LeaderboardsEntry_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_LeaderboardsEntry_C_Tick, InDeltaTime) == 0x000038, "Member 'W_LeaderboardsEntry_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_LeaderboardsEntry.W_LeaderboardsEntry_C.GetText_0
// 0x0080 (0x0080 - 0x0000)
struct W_LeaderboardsEntry_C_GetText_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0068(0x0018)()
};
static_assert(alignof(W_LeaderboardsEntry_C_GetText_0) == 0x000008, "Wrong alignment on W_LeaderboardsEntry_C_GetText_0");
static_assert(sizeof(W_LeaderboardsEntry_C_GetText_0) == 0x000080, "Wrong size on W_LeaderboardsEntry_C_GetText_0");
static_assert(offsetof(W_LeaderboardsEntry_C_GetText_0, ReturnValue) == 0x000000, "Member 'W_LeaderboardsEntry_C_GetText_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LeaderboardsEntry_C_GetText_0, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'W_LeaderboardsEntry_C_GetText_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_LeaderboardsEntry_C_GetText_0, K2Node_MakeArray_Array) == 0x000058, "Member 'W_LeaderboardsEntry_C_GetText_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_LeaderboardsEntry_C_GetText_0, CallFunc_Format_ReturnValue) == 0x000068, "Member 'W_LeaderboardsEntry_C_GetText_0::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function W_LeaderboardsEntry.W_LeaderboardsEntry_C.SetBgColor
// 0x0044 (0x0044 - 0x0000)
struct W_LeaderboardsEntry_C_SetBgColor final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LeaderboardsEntry_C_SetBgColor) == 0x000004, "Wrong alignment on W_LeaderboardsEntry_C_SetBgColor");
static_assert(sizeof(W_LeaderboardsEntry_C_SetBgColor) == 0x000044, "Wrong size on W_LeaderboardsEntry_C_SetBgColor");
static_assert(offsetof(W_LeaderboardsEntry_C_SetBgColor, ReturnValue) == 0x000000, "Member 'W_LeaderboardsEntry_C_SetBgColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LeaderboardsEntry_C_SetBgColor, Temp_bool_Variable) == 0x000010, "Member 'W_LeaderboardsEntry_C_SetBgColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_LeaderboardsEntry_C_SetBgColor, Temp_struct_Variable) == 0x000014, "Member 'W_LeaderboardsEntry_C_SetBgColor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_LeaderboardsEntry_C_SetBgColor, Temp_struct_Variable_1) == 0x000024, "Member 'W_LeaderboardsEntry_C_SetBgColor::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LeaderboardsEntry_C_SetBgColor, K2Node_Select_Default) == 0x000034, "Member 'W_LeaderboardsEntry_C_SetBgColor::K2Node_Select_Default' has a wrong offset!");

}

