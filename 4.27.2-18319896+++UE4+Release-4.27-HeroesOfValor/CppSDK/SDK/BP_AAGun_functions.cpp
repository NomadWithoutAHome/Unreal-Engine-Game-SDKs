#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AAGun

#include "Basic.hpp"

#include "BP_AAGun_classes.hpp"
#include "BP_AAGun_parameters.hpp"


namespace SDK
{

// Function BP_AAGun.BP_AAGun_C.ExecuteUbergraph_BP_AAGun
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AAGun_C::ExecuteUbergraph_BP_AAGun(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AAGun_C", "ExecuteUbergraph_BP_AAGun");

	Params::BP_AAGun_C_ExecuteUbergraph_BP_AAGun Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AAGun.BP_AAGun_C.MC_SetMoveSound
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AAGun_C::MC_SetMoveSound(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AAGun_C", "MC_SetMoveSound");

	Params::BP_AAGun_C_MC_SetMoveSound Parms{};

	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AAGun.BP_AAGun_C.S_SetMoveSound
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AAGun_C::S_SetMoveSound(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AAGun_C", "S_SetMoveSound");

	Params::BP_AAGun_C_S_SetMoveSound Parms{};

	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AAGun.BP_AAGun_C.BarrelRetractAnimation
// (BlueprintCallable, BlueprintEvent)

void ABP_AAGun_C::BarrelRetractAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AAGun_C", "BarrelRetractAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AAGun.BP_AAGun_C.MC_FireAAGun
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   StartLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   maxTravelDistance                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AAGun_C::MC_FireAAGun(const struct FVector& StartLocation, const struct FVector& Direction, float maxTravelDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AAGun_C", "MC_FireAAGun");

	Params::BP_AAGun_C_MC_FireAAGun Parms{};

	Parms.StartLocation = std::move(StartLocation);
	Parms.Direction = std::move(Direction);
	Parms.maxTravelDistance = maxTravelDistance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AAGun.BP_AAGun_C.S_FireAAGun
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   StartLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   maxTravelDistance                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AAGun_C::S_FireAAGun(const struct FVector& StartLocation, const struct FVector& Direction, float maxTravelDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AAGun_C", "S_FireAAGun");

	Params::BP_AAGun_C_S_FireAAGun Parms{};

	Parms.StartLocation = std::move(StartLocation);
	Parms.Direction = std::move(Direction);
	Parms.maxTravelDistance = maxTravelDistance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AAGun.BP_AAGun_C.S_ShareRotation
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Pitch                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Yaw                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AAGun_C::S_ShareRotation(float Pitch, float Yaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AAGun_C", "S_ShareRotation");

	Params::BP_AAGun_C_S_ShareRotation Parms{};

	Parms.Pitch = Pitch;
	Parms.Yaw = Yaw;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AAGun.BP_AAGun_C.FireAAGun
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   StartLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   maxTravelDistance                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AAGun_C::FireAAGun(const struct FVector& StartLocation, const struct FVector& Direction, float maxTravelDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AAGun_C", "FireAAGun");

	Params::BP_AAGun_C_FireAAGun Parms{};

	Parms.StartLocation = std::move(StartLocation);
	Parms.Direction = std::move(Direction);
	Parms.maxTravelDistance = maxTravelDistance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AAGun.BP_AAGun_C.InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent_1
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AAGun_C::InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent_1(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AAGun_C", "InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent_1");

	Params::BP_AAGun_C_InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent_1 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AAGun.BP_AAGun_C.InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent_0
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AAGun_C::InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent_0(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AAGun_C", "InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent_0");

	Params::BP_AAGun_C_InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent_0 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AAGun.BP_AAGun_C.InpActEvt_RightMouseButton_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_AAGun_C::InpActEvt_RightMouseButton_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AAGun_C", "InpActEvt_RightMouseButton_K2Node_InputKeyEvent_0");

	Params::BP_AAGun_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AAGun.BP_AAGun_C.InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_AAGun_C::InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AAGun_C", "InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1");

	Params::BP_AAGun_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AAGun.BP_AAGun_C.InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_AAGun_C::InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AAGun_C", "InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2");

	Params::BP_AAGun_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AAGun.BP_AAGun_C.InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_AAGun_C::InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AAGun_C", "InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3");

	Params::BP_AAGun_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AAGun.BP_AAGun_C.BarrelRetract__UpdateFunc
// (BlueprintEvent)

void ABP_AAGun_C::BarrelRetract__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AAGun_C", "BarrelRetract__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AAGun.BP_AAGun_C.BarrelRetract__FinishedFunc
// (BlueprintEvent)

void ABP_AAGun_C::BarrelRetract__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AAGun_C", "BarrelRetract__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AAGun.BP_AAGun_C.GetAutomaticPlaneDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float*                                  Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AAGun_C::GetAutomaticPlaneDistance(float* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AAGun_C", "GetAutomaticPlaneDistance");

	Params::BP_AAGun_C_GetAutomaticPlaneDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function BP_AAGun.BP_AAGun_C.IsPossessedEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_AAGun_C::IsPossessedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AAGun_C", "IsPossessedEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AAGun.BP_AAGun_C.DestroyedRepNotify
// (BlueprintCallable, BlueprintEvent)

void ABP_AAGun_C::DestroyedRepNotify()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AAGun_C", "DestroyedRepNotify");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AAGun.BP_AAGun_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AAGun_C::ReceiveTick(float DeltaSeconds_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AAGun_C", "ReceiveTick");

	Params::BP_AAGun_C_ReceiveTick Parms{};

	Parms.DeltaSeconds_0 = DeltaSeconds_0;

	UObject::ProcessEvent(Func, &Parms);
}

}

