#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PowderKegProjectile

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "E_DamageTypes_structs.hpp"


namespace SDK::Params
{

// Function BP_PowderKegProjectile.BP_PowderKegProjectile_C.ExecuteUbergraph_BP_PowderKegProjectile
// 0x0080 (0x0080 - 0x0000)
struct BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_DamageAmount;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_DamageHitLocation;                    // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_DamageDirection;                      // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_AttackerPawn;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Event_Debuff;                               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DamageTypes                                 K2Node_Event_DamageType;                           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerIndex;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsCriticalHit;                        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IgnoreTeamProtection;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_SpecialKillMessage;                   // 0x0048(0x0018)()
	bool                                          K2Node_Event_ShouldBreakInvisibility;              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsPiercingDamage;                     // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile) == 0x000008, "Wrong alignment on BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile");
static_assert(sizeof(BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile) == 0x000080, "Wrong size on BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile");
static_assert(offsetof(BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile, EntryPoint) == 0x000000, "Member 'BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile, K2Node_Event_DamageAmount) == 0x000008, "Member 'BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile::K2Node_Event_DamageAmount' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile, K2Node_Event_DamageHitLocation) == 0x00000C, "Member 'BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile::K2Node_Event_DamageHitLocation' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile, K2Node_Event_DamageDirection) == 0x000018, "Member 'BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile::K2Node_Event_DamageDirection' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile, K2Node_Event_AttackerPawn) == 0x000028, "Member 'BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile::K2Node_Event_AttackerPawn' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile, K2Node_Event_Debuff) == 0x000030, "Member 'BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile::K2Node_Event_Debuff' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile, K2Node_Event_DamageType) == 0x000038, "Member 'BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile, K2Node_Event_PlayerIndex) == 0x00003C, "Member 'BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile::K2Node_Event_PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile, K2Node_Event_IsCriticalHit) == 0x000040, "Member 'BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile::K2Node_Event_IsCriticalHit' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile, K2Node_Event_IgnoreTeamProtection) == 0x000041, "Member 'BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile::K2Node_Event_IgnoreTeamProtection' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile, K2Node_Event_SpecialKillMessage) == 0x000048, "Member 'BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile::K2Node_Event_SpecialKillMessage' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile, K2Node_Event_ShouldBreakInvisibility) == 0x000060, "Member 'BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile::K2Node_Event_ShouldBreakInvisibility' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile, K2Node_Event_IsPiercingDamage) == 0x000061, "Member 'BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile::K2Node_Event_IsPiercingDamage' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile, CallFunc_HasAuthority_ReturnValue) == 0x000062, "Member 'BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile, Temp_bool_Has_Been_Initd_Variable) == 0x000063, "Member 'BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile, K2Node_CustomEvent_Location) == 0x000064, "Member 'BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000070, "Member 'BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile, Temp_bool_IsClosed_Variable) == 0x000079, "Member 'BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile, CallFunc_IsValid_ReturnValue_1) == 0x00007A, "Member 'BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile, CallFunc_IsValid_ReturnValue_2) == 0x00007B, "Member 'BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00007C, "Member 'BP_PowderKegProjectile_C_ExecuteUbergraph_BP_PowderKegProjectile::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_PowderKegProjectile.BP_PowderKegProjectile_C.MC_HitEffect
// 0x000C (0x000C - 0x0000)
struct BP_PowderKegProjectile_C_MC_HitEffect final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PowderKegProjectile_C_MC_HitEffect) == 0x000004, "Wrong alignment on BP_PowderKegProjectile_C_MC_HitEffect");
static_assert(sizeof(BP_PowderKegProjectile_C_MC_HitEffect) == 0x00000C, "Wrong size on BP_PowderKegProjectile_C_MC_HitEffect");
static_assert(offsetof(BP_PowderKegProjectile_C_MC_HitEffect, Location) == 0x000000, "Member 'BP_PowderKegProjectile_C_MC_HitEffect::Location' has a wrong offset!");

// Function BP_PowderKegProjectile.BP_PowderKegProjectile_C.ApplyDamage
// 0x0060 (0x0060 - 0x0000)
struct BP_PowderKegProjectile_C_ApplyDamage final
{
public:
	int32                                         DamageAmount_0;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DamageHitLocation;                                 // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DamageDirection;                                   // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  AttackerPawn;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Debuff;                                            // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DamageTypes                                 DamageType;                                        // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayerIndex;                                       // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCriticalHit;                                     // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreTeamProtection;                              // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   SpecialKillMessage_0;                              // 0x0040(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          ShouldBreakInvisibility;                           // 0x0058(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPiercingDamage_0;                                // 0x0059(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PowderKegProjectile_C_ApplyDamage) == 0x000008, "Wrong alignment on BP_PowderKegProjectile_C_ApplyDamage");
static_assert(sizeof(BP_PowderKegProjectile_C_ApplyDamage) == 0x000060, "Wrong size on BP_PowderKegProjectile_C_ApplyDamage");
static_assert(offsetof(BP_PowderKegProjectile_C_ApplyDamage, DamageAmount_0) == 0x000000, "Member 'BP_PowderKegProjectile_C_ApplyDamage::DamageAmount_0' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ApplyDamage, DamageHitLocation) == 0x000004, "Member 'BP_PowderKegProjectile_C_ApplyDamage::DamageHitLocation' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ApplyDamage, DamageDirection) == 0x000010, "Member 'BP_PowderKegProjectile_C_ApplyDamage::DamageDirection' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ApplyDamage, AttackerPawn) == 0x000020, "Member 'BP_PowderKegProjectile_C_ApplyDamage::AttackerPawn' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ApplyDamage, Debuff) == 0x000028, "Member 'BP_PowderKegProjectile_C_ApplyDamage::Debuff' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ApplyDamage, DamageType) == 0x000030, "Member 'BP_PowderKegProjectile_C_ApplyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ApplyDamage, PlayerIndex) == 0x000034, "Member 'BP_PowderKegProjectile_C_ApplyDamage::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ApplyDamage, IsCriticalHit) == 0x000038, "Member 'BP_PowderKegProjectile_C_ApplyDamage::IsCriticalHit' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ApplyDamage, IgnoreTeamProtection) == 0x000039, "Member 'BP_PowderKegProjectile_C_ApplyDamage::IgnoreTeamProtection' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ApplyDamage, SpecialKillMessage_0) == 0x000040, "Member 'BP_PowderKegProjectile_C_ApplyDamage::SpecialKillMessage_0' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ApplyDamage, ShouldBreakInvisibility) == 0x000058, "Member 'BP_PowderKegProjectile_C_ApplyDamage::ShouldBreakInvisibility' has a wrong offset!");
static_assert(offsetof(BP_PowderKegProjectile_C_ApplyDamage, IsPiercingDamage_0) == 0x000059, "Member 'BP_PowderKegProjectile_C_ApplyDamage::IsPiercingDamage_0' has a wrong offset!");

}

