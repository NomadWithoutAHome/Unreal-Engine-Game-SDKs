#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Combobox

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_Combobox.W_Combobox_C.ExecuteUbergraph_W_Combobox
// 0x0058 (0x0058 - 0x0000)
struct W_Combobox_C_ExecuteUbergraph_W_Combobox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_ComponentBoundEvent_SelectedItem;           // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_ComponentBoundEvent_SelectionType;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Combobox_C_ExecuteUbergraph_W_Combobox) == 0x000008, "Wrong alignment on W_Combobox_C_ExecuteUbergraph_W_Combobox");
static_assert(sizeof(W_Combobox_C_ExecuteUbergraph_W_Combobox) == 0x000058, "Wrong size on W_Combobox_C_ExecuteUbergraph_W_Combobox");
static_assert(offsetof(W_Combobox_C_ExecuteUbergraph_W_Combobox, EntryPoint) == 0x000000, "Member 'W_Combobox_C_ExecuteUbergraph_W_Combobox::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Combobox_C_ExecuteUbergraph_W_Combobox, Temp_int_Array_Index_Variable) == 0x000004, "Member 'W_Combobox_C_ExecuteUbergraph_W_Combobox::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Combobox_C_ExecuteUbergraph_W_Combobox, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'W_Combobox_C_ExecuteUbergraph_W_Combobox::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Combobox_C_ExecuteUbergraph_W_Combobox, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'W_Combobox_C_ExecuteUbergraph_W_Combobox::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Combobox_C_ExecuteUbergraph_W_Combobox, K2Node_Event_IsDesignTime) == 0x000010, "Member 'W_Combobox_C_ExecuteUbergraph_W_Combobox::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_Combobox_C_ExecuteUbergraph_W_Combobox, CallFunc_Array_Get_Item) == 0x000018, "Member 'W_Combobox_C_ExecuteUbergraph_W_Combobox::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Combobox_C_ExecuteUbergraph_W_Combobox, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'W_Combobox_C_ExecuteUbergraph_W_Combobox::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_Combobox_C_ExecuteUbergraph_W_Combobox, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'W_Combobox_C_ExecuteUbergraph_W_Combobox::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Combobox_C_ExecuteUbergraph_W_Combobox, K2Node_ComponentBoundEvent_SelectedItem) == 0x000040, "Member 'W_Combobox_C_ExecuteUbergraph_W_Combobox::K2Node_ComponentBoundEvent_SelectedItem' has a wrong offset!");
static_assert(offsetof(W_Combobox_C_ExecuteUbergraph_W_Combobox, K2Node_ComponentBoundEvent_SelectionType) == 0x000050, "Member 'W_Combobox_C_ExecuteUbergraph_W_Combobox::K2Node_ComponentBoundEvent_SelectionType' has a wrong offset!");
static_assert(offsetof(W_Combobox_C_ExecuteUbergraph_W_Combobox, CallFunc_Less_IntInt_ReturnValue) == 0x000051, "Member 'W_Combobox_C_ExecuteUbergraph_W_Combobox::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Combobox_C_ExecuteUbergraph_W_Combobox, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000052, "Member 'W_Combobox_C_ExecuteUbergraph_W_Combobox::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function W_Combobox.W_Combobox_C.BndEvt__W_Combobox_ComboBoxString_74_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct W_Combobox_C_BndEvt__W_Combobox_ComboBoxString_74_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Combobox_C_BndEvt__W_Combobox_ComboBoxString_74_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on W_Combobox_C_BndEvt__W_Combobox_ComboBoxString_74_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature");
static_assert(sizeof(W_Combobox_C_BndEvt__W_Combobox_ComboBoxString_74_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature) == 0x000018, "Wrong size on W_Combobox_C_BndEvt__W_Combobox_ComboBoxString_74_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature");
static_assert(offsetof(W_Combobox_C_BndEvt__W_Combobox_ComboBoxString_74_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature, SelectedItem) == 0x000000, "Member 'W_Combobox_C_BndEvt__W_Combobox_ComboBoxString_74_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature::SelectedItem' has a wrong offset!");
static_assert(offsetof(W_Combobox_C_BndEvt__W_Combobox_ComboBoxString_74_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature, SelectionType) == 0x000010, "Member 'W_Combobox_C_BndEvt__W_Combobox_ComboBoxString_74_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature::SelectionType' has a wrong offset!");

// Function W_Combobox.W_Combobox_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_Combobox_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Combobox_C_PreConstruct) == 0x000001, "Wrong alignment on W_Combobox_C_PreConstruct");
static_assert(sizeof(W_Combobox_C_PreConstruct) == 0x000001, "Wrong size on W_Combobox_C_PreConstruct");
static_assert(offsetof(W_Combobox_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_Combobox_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

