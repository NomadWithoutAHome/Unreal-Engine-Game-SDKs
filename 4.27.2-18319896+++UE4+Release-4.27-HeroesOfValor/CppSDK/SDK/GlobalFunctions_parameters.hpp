#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GlobalFunctions

#include "Basic.hpp"

#include "SteamCore_structs.hpp"
#include "ST_CharacterCustomization_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ST_HairColor_structs.hpp"
#include "E_Teams_structs.hpp"
#include "ST_SelectedCosmeticItems_structs.hpp"
#include "Engine_structs.hpp"
#include "E_Units_structs.hpp"
#include "ST_UnitProgress_structs.hpp"
#include "ST_Unlockable_structs.hpp"
#include "ST_CharacterFaceCustomizationItem_structs.hpp"
#include "ST_Options_structs.hpp"
#include "ST_PlayerStats_structs.hpp"
#include "E_UnlockableCategories_structs.hpp"
#include "E_DamageTypes_structs.hpp"


namespace SDK::Params
{

// Function GlobalFunctions.GlobalFunctions_C.Get PlayerUnitType
// 0x00A8 (0x00A8 - 0x0000)
struct GlobalFunctions_C_Get_PlayerUnitType final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Units                                       UnitType;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Teams                                       CallFunc_GetPawnData_Team;                         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPawnData_PlayerIndex;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_PlayerStats                        CallFunc_GetPawnData_PlayerStats;                  // 0x0018(0x0068)(HasGetValueTypeHash)
	class UPawnDataComponent_C*                   CallFunc_GetPawnData_PawnDataComponent;            // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlaneBase_C*                        K2Node_DynamicCast_AsBP_Plane_Base;                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_TankBase_C*                         K2Node_DynamicCast_AsBP_Tank_Base;                 // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GlobalFunctions_C_Get_PlayerUnitType) == 0x000008, "Wrong alignment on GlobalFunctions_C_Get_PlayerUnitType");
static_assert(sizeof(GlobalFunctions_C_Get_PlayerUnitType) == 0x0000A8, "Wrong size on GlobalFunctions_C_Get_PlayerUnitType");
static_assert(offsetof(GlobalFunctions_C_Get_PlayerUnitType, Pawn) == 0x000000, "Member 'GlobalFunctions_C_Get_PlayerUnitType::Pawn' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Get_PlayerUnitType, __WorldContext) == 0x000008, "Member 'GlobalFunctions_C_Get_PlayerUnitType::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Get_PlayerUnitType, UnitType) == 0x000010, "Member 'GlobalFunctions_C_Get_PlayerUnitType::UnitType' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Get_PlayerUnitType, CallFunc_GetPawnData_Team) == 0x000011, "Member 'GlobalFunctions_C_Get_PlayerUnitType::CallFunc_GetPawnData_Team' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Get_PlayerUnitType, CallFunc_GetPawnData_PlayerIndex) == 0x000014, "Member 'GlobalFunctions_C_Get_PlayerUnitType::CallFunc_GetPawnData_PlayerIndex' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Get_PlayerUnitType, CallFunc_GetPawnData_PlayerStats) == 0x000018, "Member 'GlobalFunctions_C_Get_PlayerUnitType::CallFunc_GetPawnData_PlayerStats' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Get_PlayerUnitType, CallFunc_GetPawnData_PawnDataComponent) == 0x000080, "Member 'GlobalFunctions_C_Get_PlayerUnitType::CallFunc_GetPawnData_PawnDataComponent' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Get_PlayerUnitType, K2Node_DynamicCast_AsBP_Plane_Base) == 0x000088, "Member 'GlobalFunctions_C_Get_PlayerUnitType::K2Node_DynamicCast_AsBP_Plane_Base' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Get_PlayerUnitType, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'GlobalFunctions_C_Get_PlayerUnitType::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Get_PlayerUnitType, K2Node_DynamicCast_AsBP_Tank_Base) == 0x000098, "Member 'GlobalFunctions_C_Get_PlayerUnitType::K2Node_DynamicCast_AsBP_Tank_Base' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Get_PlayerUnitType, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'GlobalFunctions_C_Get_PlayerUnitType::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.GetRandomSpawnPoint
// 0x0360 (0x0360 - 0x0000)
struct GlobalFunctions_C_GetRandomSpawnPoint final
{
public:
	class ABP_Flag_C*                             Flag;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAI;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpawnLocation;                                     // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               SpawnRotation;                                     // 0x0024(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_VehicleBase_C*                      VehicleToEnterAfterSpawn;                          // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerStart_SpawnPoint_C*>   AvailableSpawnpoints;                              // 0x0038(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class ABP_PlayerStart_SpawnPoint_C*           ChosenSpawnPoint;                                  // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerStart_SpawnPoint_C*>   TeamSpawns;                                        // 0x0050(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_LandingCraft_C*>             CallFunc_GetAllActorsOfClass_OutActors;            // 0x0068(0x0010)(ReferenceParm)
	class ABP_LandingCraft_C*                     CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UCapsuleComponent*>              CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x00A0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UCapsuleComponent*                      CallFunc_Array_Random_OutItem;                     // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorFloat_ReturnValue;         // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerStart_SpawnPoint_C*>   CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x00F8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_1;       // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetUnscaledSphereRadius_ReturnValue;      // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0190(0x0010)(ConstParm, ReferenceParm)
	class ABP_PlayerStart_SpawnPoint_C*           CallFunc_Array_Get_Item_1;                         // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x01A8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_242[0x2];                                      // 0x0242(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x024C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0264(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0290(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x02D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x02DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x02F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FD[0x3];                                      // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x0310(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LandingCraft_C*                     CallFunc_SpawnLandingCraft_LandingCraft;           // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerStart_SpawnPoint_C*           CallFunc_Array_Random_OutItem_1;                   // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex_1;                  // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GlobalFunctions_C_GetRandomSpawnPoint) == 0x000010, "Wrong alignment on GlobalFunctions_C_GetRandomSpawnPoint");
static_assert(sizeof(GlobalFunctions_C_GetRandomSpawnPoint) == 0x000360, "Wrong size on GlobalFunctions_C_GetRandomSpawnPoint");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, Flag) == 0x000000, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::Flag' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, IsAI) == 0x000008, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::IsAI' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, __WorldContext) == 0x000010, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, SpawnLocation) == 0x000018, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::SpawnLocation' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, SpawnRotation) == 0x000024, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::SpawnRotation' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, VehicleToEnterAfterSpawn) == 0x000030, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::VehicleToEnterAfterSpawn' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, AvailableSpawnpoints) == 0x000038, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::AvailableSpawnpoints' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, ChosenSpawnPoint) == 0x000048, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::ChosenSpawnPoint' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, TeamSpawns) == 0x000050, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::TeamSpawns' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, Temp_int_Array_Index_Variable) == 0x000060, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_GetAllActorsOfClass_OutActors) == 0x000068, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_Array_Get_Item) == 0x000078, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_GetActorForwardVector_ReturnValue) == 0x000084, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000090, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x0000A0, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_Array_Random_OutItem) == 0x0000B0, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_Array_Random_OutIndex) == 0x0000B8, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_Less_IntInt_ReturnValue) == 0x0000BC, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000C0, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_GetGameState_ReturnValue) == 0x0000D0, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_Subtract_VectorFloat_ReturnValue) == 0x0000D8, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_Subtract_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x0000E8, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x0000F8, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_Array_Length_ReturnValue_1) == 0x000108, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_GetActorRightVector_ReturnValue) == 0x00010C, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000118, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000124, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_Conv_VectorToRotator_ReturnValue_1) == 0x000130, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_Conv_VectorToRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00013C, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, K2Node_SwitchEnum_CmpSuccess) == 0x000148, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_GetUnscaledSphereRadius_ReturnValue) == 0x00014C, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_GetUnscaledSphereRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000150, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x00015C, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000168, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_Add_VectorVector_ReturnValue) == 0x000174, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, Temp_int_Loop_Counter_Variable) == 0x000180, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_Less_IntInt_ReturnValue_1) == 0x000184, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_Add_IntInt_ReturnValue) == 0x000188, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, Temp_int_Array_Index_Variable_1) == 0x00018C, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, Temp_object_Variable) == 0x000190, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_Array_Get_Item_1) == 0x0001A0, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_LineTraceSingle_OutHit) == 0x0001A8, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_LineTraceSingle_ReturnValue) == 0x000230, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000234, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_BreakHitResult_bBlockingHit) == 0x000240, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_BreakHitResult_bInitialOverlap) == 0x000241, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_BreakHitResult_Time) == 0x000244, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_BreakHitResult_Distance) == 0x000248, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_BreakHitResult_Location) == 0x00024C, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_BreakHitResult_ImpactPoint) == 0x000258, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_BreakHitResult_Normal) == 0x000264, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_BreakHitResult_ImpactNormal) == 0x000270, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_BreakHitResult_PhysMat) == 0x000280, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_BreakHitResult_HitActor) == 0x000288, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_BreakHitResult_HitComponent) == 0x000290, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_BreakHitResult_HitBoneName) == 0x000298, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_BreakHitResult_HitItem) == 0x0002A0, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_BreakHitResult_ElementIndex) == 0x0002A4, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_BreakHitResult_FaceIndex) == 0x0002A8, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_BreakHitResult_TraceStart) == 0x0002AC, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_BreakHitResult_TraceEnd) == 0x0002B8, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_Vector_Distance_ReturnValue) == 0x0002C4, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_Less_FloatFloat_ReturnValue) == 0x0002C8, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_RandomFloatInRange_ReturnValue) == 0x0002CC, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0002D0, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0002DC, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, Temp_int_Loop_Counter_Variable_1) == 0x0002E8, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0002EC, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0002F0, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_Less_IntInt_ReturnValue_2) == 0x0002FC, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000300, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x000310, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_Add_IntInt_ReturnValue_1) == 0x000340, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_SpawnLandingCraft_LandingCraft) == 0x000348, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_SpawnLandingCraft_LandingCraft' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_Array_Random_OutItem_1) == 0x000350, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_Array_Random_OutItem_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_Array_Random_OutIndex_1) == 0x000358, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_Array_Random_OutIndex_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomSpawnPoint, CallFunc_Array_Add_ReturnValue) == 0x00035C, "Member 'GlobalFunctions_C_GetRandomSpawnPoint::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.GetProjectileFireDirection
// 0x0430 (0x0430 - 0x0000)
struct GlobalFunctions_C_GetProjectileFireDirection final
{
public:
	class UArrowComponent*                        ProjectileStart;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraLocation;                                    // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraDirection;                                   // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0020(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                ActorLocation;                                     // 0x0030(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseSimpleDirection;                                // 0x003C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FinalDirection;                                    // 0x0048(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0054(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInstantHit;                                      // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             InstantHit;                                        // 0x005C(0x0088)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                ProjectileStartLocation;                           // 0x00E4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0138(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0160(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x01EC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0275(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0276(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_277[0x1];                                      // 0x0277(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x028C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x02F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_2;                 // 0x0300(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_2;            // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x038A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38B[0x1];                                      // 0x038B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0394(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x03A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x03AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x03B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C4[0x4];                                      // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x03D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x03F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0400(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x040C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_421[0x3];                                      // 0x0421(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0424(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GlobalFunctions_C_GetProjectileFireDirection) == 0x000008, "Wrong alignment on GlobalFunctions_C_GetProjectileFireDirection");
static_assert(sizeof(GlobalFunctions_C_GetProjectileFireDirection) == 0x000430, "Wrong size on GlobalFunctions_C_GetProjectileFireDirection");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, ProjectileStart) == 0x000000, "Member 'GlobalFunctions_C_GetProjectileFireDirection::ProjectileStart' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CameraLocation) == 0x000008, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CameraLocation' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CameraDirection) == 0x000014, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CameraDirection' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, ActorsToIgnore) == 0x000020, "Member 'GlobalFunctions_C_GetProjectileFireDirection::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, ActorLocation) == 0x000030, "Member 'GlobalFunctions_C_GetProjectileFireDirection::ActorLocation' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, UseSimpleDirection) == 0x00003C, "Member 'GlobalFunctions_C_GetProjectileFireDirection::UseSimpleDirection' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, __WorldContext) == 0x000040, "Member 'GlobalFunctions_C_GetProjectileFireDirection::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, FinalDirection) == 0x000048, "Member 'GlobalFunctions_C_GetProjectileFireDirection::FinalDirection' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, Distance) == 0x000054, "Member 'GlobalFunctions_C_GetProjectileFireDirection::Distance' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, IsInstantHit) == 0x000058, "Member 'GlobalFunctions_C_GetProjectileFireDirection::IsInstantHit' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, InstantHit) == 0x00005C, "Member 'GlobalFunctions_C_GetProjectileFireDirection::InstantHit' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, ProjectileStartLocation) == 0x0000E4, "Member 'GlobalFunctions_C_GetProjectileFireDirection::ProjectileStartLocation' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000F0, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000FC, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_Add_VectorVector_ReturnValue) == 0x000108, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_GetUpVector_ReturnValue) == 0x000114, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakVector_X) == 0x000120, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakVector_Y) == 0x000124, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakVector_Z) == 0x000128, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00012C, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, Temp_object_Variable) == 0x000138, "Member 'GlobalFunctions_C_GetProjectileFireDirection::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000148, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000154, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_LineTraceSingle_OutHit) == 0x000160, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_LineTraceSingle_ReturnValue) == 0x0001E8, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_LineTraceSingle_OutHit_1) == 0x0001EC, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_LineTraceSingle_ReturnValue_1) == 0x000274, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_bBlockingHit) == 0x000275, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_bInitialOverlap) == 0x000276, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_Time) == 0x000278, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_Distance) == 0x00027C, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_Location) == 0x000280, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_ImpactPoint) == 0x00028C, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_Normal) == 0x000298, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_ImpactNormal) == 0x0002A4, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_PhysMat) == 0x0002B0, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_HitActor) == 0x0002B8, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_HitComponent) == 0x0002C0, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_HitBoneName) == 0x0002C8, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_HitItem) == 0x0002D0, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_ElementIndex) == 0x0002D4, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_FaceIndex) == 0x0002D8, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_TraceStart) == 0x0002DC, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_TraceEnd) == 0x0002E8, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0002F4, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_LineTraceSingle_OutHit_2) == 0x000300, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_LineTraceSingle_OutHit_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_LineTraceSingle_ReturnValue_2) == 0x000388, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_LineTraceSingle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000389, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x00038A, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_Time_1) == 0x00038C, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_Distance_1) == 0x000390, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_Location_1) == 0x000394, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0003A0, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_Normal_1) == 0x0003AC, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0003B8, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_PhysMat_1) == 0x0003C8, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_HitActor_1) == 0x0003D0, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_HitComponent_1) == 0x0003D8, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_HitBoneName_1) == 0x0003E0, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_HitItem_1) == 0x0003E8, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_ElementIndex_1) == 0x0003EC, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_FaceIndex_1) == 0x0003F0, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_TraceStart_1) == 0x0003F4, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_BreakHitResult_TraceEnd_1) == 0x000400, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x00040C, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_Vector_Distance_ReturnValue) == 0x000418, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_VSize_ReturnValue) == 0x00041C, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000420, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetProjectileFireDirection, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000424, "Member 'GlobalFunctions_C_GetProjectileFireDirection::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.GetCosmeticItemIndex
// 0x02D0 (0x02D0 - 0x0000)
struct GlobalFunctions_C_GetCosmeticItemIndex final
{
public:
	struct FST_Unlockable                         Item;                                              // 0x0000(0x0148)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0148(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemIndex;                                         // 0x0150(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0160(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0174(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_Unlockable                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0180(0x0148)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Identical_ReturnValue;              // 0x02CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x02CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GlobalFunctions_C_GetCosmeticItemIndex) == 0x000008, "Wrong alignment on GlobalFunctions_C_GetCosmeticItemIndex");
static_assert(sizeof(GlobalFunctions_C_GetCosmeticItemIndex) == 0x0002D0, "Wrong size on GlobalFunctions_C_GetCosmeticItemIndex");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemIndex, Item) == 0x000000, "Member 'GlobalFunctions_C_GetCosmeticItemIndex::Item' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemIndex, __WorldContext) == 0x000148, "Member 'GlobalFunctions_C_GetCosmeticItemIndex::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemIndex, ItemIndex) == 0x000150, "Member 'GlobalFunctions_C_GetCosmeticItemIndex::ItemIndex' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemIndex, Temp_int_Array_Index_Variable) == 0x000154, "Member 'GlobalFunctions_C_GetCosmeticItemIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemIndex, Temp_int_Loop_Counter_Variable) == 0x000158, "Member 'GlobalFunctions_C_GetCosmeticItemIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemIndex, CallFunc_Add_IntInt_ReturnValue) == 0x00015C, "Member 'GlobalFunctions_C_GetCosmeticItemIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemIndex, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000160, "Member 'GlobalFunctions_C_GetCosmeticItemIndex::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemIndex, CallFunc_Array_Length_ReturnValue) == 0x000170, "Member 'GlobalFunctions_C_GetCosmeticItemIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemIndex, CallFunc_Array_Get_Item) == 0x000174, "Member 'GlobalFunctions_C_GetCosmeticItemIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemIndex, CallFunc_Less_IntInt_ReturnValue) == 0x00017C, "Member 'GlobalFunctions_C_GetCosmeticItemIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemIndex, CallFunc_GetDataTableRowFromName_OutRow) == 0x000180, "Member 'GlobalFunctions_C_GetCosmeticItemIndex::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemIndex, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0002C8, "Member 'GlobalFunctions_C_GetCosmeticItemIndex::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemIndex, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002C9, "Member 'GlobalFunctions_C_GetCosmeticItemIndex::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemIndex, CallFunc_Array_Identical_ReturnValue) == 0x0002CA, "Member 'GlobalFunctions_C_GetCosmeticItemIndex::CallFunc_Array_Identical_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemIndex, CallFunc_EqualEqual_TextText_ReturnValue) == 0x0002CB, "Member 'GlobalFunctions_C_GetCosmeticItemIndex::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemIndex, CallFunc_BooleanAND_ReturnValue) == 0x0002CC, "Member 'GlobalFunctions_C_GetCosmeticItemIndex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemIndex, CallFunc_BooleanAND_ReturnValue_1) == 0x0002CD, "Member 'GlobalFunctions_C_GetCosmeticItemIndex::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.IsItemUnlocked?
// 0x0018 (0x0018 - 0x0000)
struct GlobalFunctions_C_IsItemUnlocked_ final
{
public:
	E_UnlockableCategories                        Category;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ItemIndex;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Unlocked;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GlobalFunctions_C_IsItemUnlocked_) == 0x000008, "Wrong alignment on GlobalFunctions_C_IsItemUnlocked_");
static_assert(sizeof(GlobalFunctions_C_IsItemUnlocked_) == 0x000018, "Wrong size on GlobalFunctions_C_IsItemUnlocked_");
static_assert(offsetof(GlobalFunctions_C_IsItemUnlocked_, Category) == 0x000000, "Member 'GlobalFunctions_C_IsItemUnlocked_::Category' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_IsItemUnlocked_, ItemIndex) == 0x000004, "Member 'GlobalFunctions_C_IsItemUnlocked_::ItemIndex' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_IsItemUnlocked_, __WorldContext) == 0x000008, "Member 'GlobalFunctions_C_IsItemUnlocked_::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_IsItemUnlocked_, Unlocked) == 0x000010, "Member 'GlobalFunctions_C_IsItemUnlocked_::Unlocked' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.GetCosmeticItemDatatable
// 0x00B0 (0x00B0 - 0x0000)
struct GlobalFunctions_C_GetCosmeticItemDatatable final
{
public:
	E_UnlockableCategories                        Category;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             NewParam;                                          // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UnlockableCategories                        Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_2;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_4;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_5;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_6;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_7;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_8;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_9;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_10;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_11;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_12;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_13;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_14;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_15;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_16;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_Select_Default;                             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GlobalFunctions_C_GetCosmeticItemDatatable) == 0x000008, "Wrong alignment on GlobalFunctions_C_GetCosmeticItemDatatable");
static_assert(sizeof(GlobalFunctions_C_GetCosmeticItemDatatable) == 0x0000B0, "Wrong size on GlobalFunctions_C_GetCosmeticItemDatatable");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemDatatable, Category) == 0x000000, "Member 'GlobalFunctions_C_GetCosmeticItemDatatable::Category' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemDatatable, __WorldContext) == 0x000008, "Member 'GlobalFunctions_C_GetCosmeticItemDatatable::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemDatatable, NewParam) == 0x000010, "Member 'GlobalFunctions_C_GetCosmeticItemDatatable::NewParam' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemDatatable, Temp_byte_Variable) == 0x000018, "Member 'GlobalFunctions_C_GetCosmeticItemDatatable::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemDatatable, Temp_object_Variable) == 0x000020, "Member 'GlobalFunctions_C_GetCosmeticItemDatatable::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemDatatable, Temp_object_Variable_1) == 0x000028, "Member 'GlobalFunctions_C_GetCosmeticItemDatatable::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemDatatable, Temp_object_Variable_2) == 0x000030, "Member 'GlobalFunctions_C_GetCosmeticItemDatatable::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemDatatable, Temp_object_Variable_3) == 0x000038, "Member 'GlobalFunctions_C_GetCosmeticItemDatatable::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemDatatable, Temp_object_Variable_4) == 0x000040, "Member 'GlobalFunctions_C_GetCosmeticItemDatatable::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemDatatable, Temp_object_Variable_5) == 0x000048, "Member 'GlobalFunctions_C_GetCosmeticItemDatatable::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemDatatable, Temp_object_Variable_6) == 0x000050, "Member 'GlobalFunctions_C_GetCosmeticItemDatatable::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemDatatable, Temp_object_Variable_7) == 0x000058, "Member 'GlobalFunctions_C_GetCosmeticItemDatatable::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemDatatable, Temp_object_Variable_8) == 0x000060, "Member 'GlobalFunctions_C_GetCosmeticItemDatatable::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemDatatable, Temp_object_Variable_9) == 0x000068, "Member 'GlobalFunctions_C_GetCosmeticItemDatatable::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemDatatable, Temp_object_Variable_10) == 0x000070, "Member 'GlobalFunctions_C_GetCosmeticItemDatatable::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemDatatable, Temp_object_Variable_11) == 0x000078, "Member 'GlobalFunctions_C_GetCosmeticItemDatatable::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemDatatable, Temp_object_Variable_12) == 0x000080, "Member 'GlobalFunctions_C_GetCosmeticItemDatatable::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemDatatable, Temp_object_Variable_13) == 0x000088, "Member 'GlobalFunctions_C_GetCosmeticItemDatatable::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemDatatable, Temp_object_Variable_14) == 0x000090, "Member 'GlobalFunctions_C_GetCosmeticItemDatatable::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemDatatable, Temp_object_Variable_15) == 0x000098, "Member 'GlobalFunctions_C_GetCosmeticItemDatatable::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemDatatable, Temp_object_Variable_16) == 0x0000A0, "Member 'GlobalFunctions_C_GetCosmeticItemDatatable::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemDatatable, K2Node_Select_Default) == 0x0000A8, "Member 'GlobalFunctions_C_GetCosmeticItemDatatable::K2Node_Select_Default' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.DisplayDamageNumber
// 0x00A8 (0x00A8 - 0x0000)
struct GlobalFunctions_C_DisplayDamageNumber final
{
public:
	struct FVector                                WorldPosition;                                     // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageAmount;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CriticalHit_;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 HitActor;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLow;                                             // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_DamageTypes                                 DamageType;                                        // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpawnLocation;                                     // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_WorldDamageNumber_C*                 CallFunc_Create_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Controller_C*                       K2Node_DynamicCast_AsBP_Controller;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_ProjectWorldToScreen_ScreenPosition;      // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldToScreen_ReturnValue;         // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GlobalFunctions_C_DisplayDamageNumber) == 0x000008, "Wrong alignment on GlobalFunctions_C_DisplayDamageNumber");
static_assert(sizeof(GlobalFunctions_C_DisplayDamageNumber) == 0x0000A8, "Wrong size on GlobalFunctions_C_DisplayDamageNumber");
static_assert(offsetof(GlobalFunctions_C_DisplayDamageNumber, WorldPosition) == 0x000000, "Member 'GlobalFunctions_C_DisplayDamageNumber::WorldPosition' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_DisplayDamageNumber, DamageAmount) == 0x00000C, "Member 'GlobalFunctions_C_DisplayDamageNumber::DamageAmount' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_DisplayDamageNumber, CriticalHit_) == 0x000010, "Member 'GlobalFunctions_C_DisplayDamageNumber::CriticalHit_' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_DisplayDamageNumber, HitActor) == 0x000018, "Member 'GlobalFunctions_C_DisplayDamageNumber::HitActor' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_DisplayDamageNumber, IsLow) == 0x000020, "Member 'GlobalFunctions_C_DisplayDamageNumber::IsLow' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_DisplayDamageNumber, DamageType) == 0x000021, "Member 'GlobalFunctions_C_DisplayDamageNumber::DamageType' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_DisplayDamageNumber, __WorldContext) == 0x000028, "Member 'GlobalFunctions_C_DisplayDamageNumber::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_DisplayDamageNumber, SpawnLocation) == 0x000030, "Member 'GlobalFunctions_C_DisplayDamageNumber::SpawnLocation' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_DisplayDamageNumber, CallFunc_Create_ReturnValue) == 0x000040, "Member 'GlobalFunctions_C_DisplayDamageNumber::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_DisplayDamageNumber, CallFunc_GetPlayerController_ReturnValue) == 0x000048, "Member 'GlobalFunctions_C_DisplayDamageNumber::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_DisplayDamageNumber, K2Node_DynamicCast_AsBP_Controller) == 0x000050, "Member 'GlobalFunctions_C_DisplayDamageNumber::K2Node_DynamicCast_AsBP_Controller' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_DisplayDamageNumber, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'GlobalFunctions_C_DisplayDamageNumber::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_DisplayDamageNumber, CallFunc_GetPlayerController_ReturnValue_1) == 0x000060, "Member 'GlobalFunctions_C_DisplayDamageNumber::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_DisplayDamageNumber, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000068, "Member 'GlobalFunctions_C_DisplayDamageNumber::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_DisplayDamageNumber, CallFunc_ProjectWorldToScreen_ScreenPosition) == 0x00006C, "Member 'GlobalFunctions_C_DisplayDamageNumber::CallFunc_ProjectWorldToScreen_ScreenPosition' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_DisplayDamageNumber, CallFunc_ProjectWorldToScreen_ReturnValue) == 0x000074, "Member 'GlobalFunctions_C_DisplayDamageNumber::CallFunc_ProjectWorldToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_DisplayDamageNumber, K2Node_DynamicCast_AsBP_Character) == 0x000078, "Member 'GlobalFunctions_C_DisplayDamageNumber::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_DisplayDamageNumber, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'GlobalFunctions_C_DisplayDamageNumber::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_DisplayDamageNumber, CallFunc_GetActorBounds_Origin) == 0x000084, "Member 'GlobalFunctions_C_DisplayDamageNumber::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_DisplayDamageNumber, CallFunc_GetActorBounds_BoxExtent) == 0x000090, "Member 'GlobalFunctions_C_DisplayDamageNumber::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_DisplayDamageNumber, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00009C, "Member 'GlobalFunctions_C_DisplayDamageNumber::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.GetPawnData
// 0x0120 (0x0120 - 0x0000)
struct GlobalFunctions_C_GetPawnData final
{
public:
	class AActor*                                 PawnActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Teams                                       Team;                                              // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayerIndex;                                       // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_PlayerStats                        PlayerStats;                                       // 0x0018(0x0068)(Parm, OutParm, HasGetValueTypeHash)
	class UPawnDataComponent_C*                   PawnDataComponent;                                 // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnDataComponent_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_PlayerStats                        CallFunc_Array_Get_Item;                           // 0x00B8(0x0068)(HasGetValueTypeHash)
};
static_assert(alignof(GlobalFunctions_C_GetPawnData) == 0x000008, "Wrong alignment on GlobalFunctions_C_GetPawnData");
static_assert(sizeof(GlobalFunctions_C_GetPawnData) == 0x000120, "Wrong size on GlobalFunctions_C_GetPawnData");
static_assert(offsetof(GlobalFunctions_C_GetPawnData, PawnActor) == 0x000000, "Member 'GlobalFunctions_C_GetPawnData::PawnActor' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPawnData, __WorldContext) == 0x000008, "Member 'GlobalFunctions_C_GetPawnData::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPawnData, Team) == 0x000010, "Member 'GlobalFunctions_C_GetPawnData::Team' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPawnData, PlayerIndex) == 0x000014, "Member 'GlobalFunctions_C_GetPawnData::PlayerIndex' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPawnData, PlayerStats) == 0x000018, "Member 'GlobalFunctions_C_GetPawnData::PlayerStats' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPawnData, PawnDataComponent) == 0x000080, "Member 'GlobalFunctions_C_GetPawnData::PawnDataComponent' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPawnData, CallFunc_GetGameState_ReturnValue) == 0x000088, "Member 'GlobalFunctions_C_GetPawnData::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPawnData, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'GlobalFunctions_C_GetPawnData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPawnData, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x000098, "Member 'GlobalFunctions_C_GetPawnData::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPawnData, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'GlobalFunctions_C_GetPawnData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPawnData, CallFunc_GetComponentByClass_ReturnValue) == 0x0000A8, "Member 'GlobalFunctions_C_GetPawnData::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPawnData, CallFunc_IsValid_ReturnValue_1) == 0x0000B0, "Member 'GlobalFunctions_C_GetPawnData::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPawnData, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'GlobalFunctions_C_GetPawnData::CallFunc_Array_Get_Item' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.EnterUIModus
// 0x0010 (0x0010 - 0x0000)
struct GlobalFunctions_C_EnterUIModus final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GlobalFunctions_C_EnterUIModus) == 0x000008, "Wrong alignment on GlobalFunctions_C_EnterUIModus");
static_assert(sizeof(GlobalFunctions_C_EnterUIModus) == 0x000010, "Wrong size on GlobalFunctions_C_EnterUIModus");
static_assert(offsetof(GlobalFunctions_C_EnterUIModus, __WorldContext) == 0x000000, "Member 'GlobalFunctions_C_EnterUIModus::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_EnterUIModus, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'GlobalFunctions_C_EnterUIModus::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.EnterGameModus
// 0x0010 (0x0010 - 0x0000)
struct GlobalFunctions_C_EnterGameModus final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GlobalFunctions_C_EnterGameModus) == 0x000008, "Wrong alignment on GlobalFunctions_C_EnterGameModus");
static_assert(sizeof(GlobalFunctions_C_EnterGameModus) == 0x000010, "Wrong size on GlobalFunctions_C_EnterGameModus");
static_assert(offsetof(GlobalFunctions_C_EnterGameModus, __WorldContext) == 0x000000, "Member 'GlobalFunctions_C_EnterGameModus::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_EnterGameModus, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'GlobalFunctions_C_EnterGameModus::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.InflictDamage
// 0x00B8 (0x00B8 - 0x0000)
struct GlobalFunctions_C_InflictDamage final
{
public:
	const class AActor*                           HitActor;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageAmount;                                      // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DamageTypes                                 DamageType;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         AlreadyHitActors;                                  // 0x0020(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          FromServer;                                        // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                DamageDirection;                                   // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  AttackerPawn;                                      // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 BuffDebuff;                                        // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerIndex_Attacker_;                             // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreTeamProtection;                              // 0x0054(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   SpecialKillMessage;                                // 0x0058(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          ShouldBreakInvisibility;                           // 0x0070(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsCriticalHit;                                     // 0x0071(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPiercingDamage;                                  // 0x0072(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CriticalHit;                                       // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IApplyDamage_C>        K2Node_DynamicCast_AsApply_Damage;                 // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Controller_C*                       K2Node_DynamicCast_AsBP_Controller;                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GlobalFunctions_C_InflictDamage) == 0x000008, "Wrong alignment on GlobalFunctions_C_InflictDamage");
static_assert(sizeof(GlobalFunctions_C_InflictDamage) == 0x0000B8, "Wrong size on GlobalFunctions_C_InflictDamage");
static_assert(offsetof(GlobalFunctions_C_InflictDamage, HitActor) == 0x000000, "Member 'GlobalFunctions_C_InflictDamage::HitActor' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictDamage, HitLocation) == 0x000008, "Member 'GlobalFunctions_C_InflictDamage::HitLocation' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictDamage, DamageAmount) == 0x000014, "Member 'GlobalFunctions_C_InflictDamage::DamageAmount' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictDamage, DamageType) == 0x000018, "Member 'GlobalFunctions_C_InflictDamage::DamageType' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictDamage, AlreadyHitActors) == 0x000020, "Member 'GlobalFunctions_C_InflictDamage::AlreadyHitActors' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictDamage, FromServer) == 0x000030, "Member 'GlobalFunctions_C_InflictDamage::FromServer' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictDamage, DamageDirection) == 0x000034, "Member 'GlobalFunctions_C_InflictDamage::DamageDirection' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictDamage, AttackerPawn) == 0x000040, "Member 'GlobalFunctions_C_InflictDamage::AttackerPawn' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictDamage, BuffDebuff) == 0x000048, "Member 'GlobalFunctions_C_InflictDamage::BuffDebuff' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictDamage, PlayerIndex_Attacker_) == 0x000050, "Member 'GlobalFunctions_C_InflictDamage::PlayerIndex_Attacker_' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictDamage, IgnoreTeamProtection) == 0x000054, "Member 'GlobalFunctions_C_InflictDamage::IgnoreTeamProtection' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictDamage, SpecialKillMessage) == 0x000058, "Member 'GlobalFunctions_C_InflictDamage::SpecialKillMessage' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictDamage, ShouldBreakInvisibility) == 0x000070, "Member 'GlobalFunctions_C_InflictDamage::ShouldBreakInvisibility' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictDamage, IsCriticalHit) == 0x000071, "Member 'GlobalFunctions_C_InflictDamage::IsCriticalHit' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictDamage, IsPiercingDamage) == 0x000072, "Member 'GlobalFunctions_C_InflictDamage::IsPiercingDamage' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictDamage, __WorldContext) == 0x000078, "Member 'GlobalFunctions_C_InflictDamage::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictDamage, CriticalHit) == 0x000080, "Member 'GlobalFunctions_C_InflictDamage::CriticalHit' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictDamage, K2Node_DynamicCast_AsApply_Damage) == 0x000088, "Member 'GlobalFunctions_C_InflictDamage::K2Node_DynamicCast_AsApply_Damage' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictDamage, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'GlobalFunctions_C_InflictDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictDamage, CallFunc_GetPlayerController_ReturnValue) == 0x0000A0, "Member 'GlobalFunctions_C_InflictDamage::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictDamage, K2Node_DynamicCast_AsBP_Controller) == 0x0000A8, "Member 'GlobalFunctions_C_InflictDamage::K2Node_DynamicCast_AsBP_Controller' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictDamage, K2Node_DynamicCast_bSuccess_1) == 0x0000B0, "Member 'GlobalFunctions_C_InflictDamage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictDamage, CallFunc_IsValid_ReturnValue) == 0x0000B1, "Member 'GlobalFunctions_C_InflictDamage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictDamage, CallFunc_Array_Contains_ReturnValue) == 0x0000B2, "Member 'GlobalFunctions_C_InflictDamage::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.InflictAOEDamage
// 0x0468 (0x0468 - 0x0000)
struct GlobalFunctions_C_InflictAOEDamage final
{
public:
	struct FVector                                AOELocation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AOERadius;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DamageTypes                                 DamageType;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         AlreadyHitActors;                                  // 0x0018(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                DamageDirection;                                   // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  AttackerPawn;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 BuffDebuff;                                        // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FromServer;                                        // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DamageAmount;                                      // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayerIndex;                                       // 0x0054(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   SpecialKillMessage;                                // 0x0058(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          EnableLaunch;                                      // 0x0070(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LaunchForce;                                       // 0x0074(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreAOERadius_AlwaysDealFullDMG_;                // 0x0078(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             ExtraHit_optional_;                                // 0x007C(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0108(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     DetectedHits;                                      // 0x0110(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class AActor*>                         ActorIgnoreList;                                   // 0x0120(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     K2Node_MakeArray_Array;                            // 0x0138(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class ABP_Controller_C*                       K2Node_DynamicCast_AsBP_Controller;                // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable;                                // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable_1;                              // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x016E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16F[0x1];                                      // 0x016F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               K2Node_Select_Default;                             // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_SphereTraceMulti_OutHits;                 // 0x0178(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMulti_ReturnValue;             // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18A[0x2];                                      // 0x018A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Teams                                       CallFunc_GetPawnData_Team;                         // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPawnData_PlayerIndex;                  // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_PlayerStats                        CallFunc_GetPawnData_PlayerStats;                  // 0x01A0(0x0068)(HasGetValueTypeHash)
	class UPawnDataComponent_C*                   CallFunc_GetPawnData_PawnDataComponent;            // 0x0208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_212[0x2];                                      // 0x0212(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0214(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A2[0x2];                                      // 0x02A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x030C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_325[0x3];                                      // 0x0325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAOEObstacleHitAmount_DamageAmount_0_1_; // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32D[0x3];                                      // 0x032D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33A[0x2];                                      // 0x033A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Teams                                       CallFunc_GetPawnData_Team_1;                       // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_349[0x3];                                      // 0x0349(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPawnData_PlayerIndex_1;                // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_PlayerStats                        CallFunc_GetPawnData_PlayerStats_1;                // 0x0350(0x0068)(HasGetValueTypeHash)
	class UPawnDataComponent_C*                   CallFunc_GetPawnData_PawnDataComponent_1;          // 0x03B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x03C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x03CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CD[0x3];                                      // 0x03CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x03E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x03F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401[0x3];                                      // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0404(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x041C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0428(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue;              // 0x0434(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue_1;            // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GlobalFunctions_C_InflictAOEDamage) == 0x000008, "Wrong alignment on GlobalFunctions_C_InflictAOEDamage");
static_assert(sizeof(GlobalFunctions_C_InflictAOEDamage) == 0x000468, "Wrong size on GlobalFunctions_C_InflictAOEDamage");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, AOELocation) == 0x000000, "Member 'GlobalFunctions_C_InflictAOEDamage::AOELocation' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, AOERadius) == 0x00000C, "Member 'GlobalFunctions_C_InflictAOEDamage::AOERadius' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, DamageType) == 0x000010, "Member 'GlobalFunctions_C_InflictAOEDamage::DamageType' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, AlreadyHitActors) == 0x000018, "Member 'GlobalFunctions_C_InflictAOEDamage::AlreadyHitActors' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, DamageDirection) == 0x000028, "Member 'GlobalFunctions_C_InflictAOEDamage::DamageDirection' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, AttackerPawn) == 0x000038, "Member 'GlobalFunctions_C_InflictAOEDamage::AttackerPawn' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, BuffDebuff) == 0x000040, "Member 'GlobalFunctions_C_InflictAOEDamage::BuffDebuff' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, FromServer) == 0x000048, "Member 'GlobalFunctions_C_InflictAOEDamage::FromServer' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, DamageAmount) == 0x00004C, "Member 'GlobalFunctions_C_InflictAOEDamage::DamageAmount' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, Debug) == 0x000050, "Member 'GlobalFunctions_C_InflictAOEDamage::Debug' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, PlayerIndex) == 0x000054, "Member 'GlobalFunctions_C_InflictAOEDamage::PlayerIndex' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, SpecialKillMessage) == 0x000058, "Member 'GlobalFunctions_C_InflictAOEDamage::SpecialKillMessage' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, EnableLaunch) == 0x000070, "Member 'GlobalFunctions_C_InflictAOEDamage::EnableLaunch' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, LaunchForce) == 0x000074, "Member 'GlobalFunctions_C_InflictAOEDamage::LaunchForce' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, IgnoreAOERadius_AlwaysDealFullDMG_) == 0x000078, "Member 'GlobalFunctions_C_InflictAOEDamage::IgnoreAOERadius_AlwaysDealFullDMG_' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, ExtraHit_optional_) == 0x00007C, "Member 'GlobalFunctions_C_InflictAOEDamage::ExtraHit_optional_' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, __WorldContext) == 0x000108, "Member 'GlobalFunctions_C_InflictAOEDamage::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, DetectedHits) == 0x000110, "Member 'GlobalFunctions_C_InflictAOEDamage::DetectedHits' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, ActorIgnoreList) == 0x000120, "Member 'GlobalFunctions_C_InflictAOEDamage::ActorIgnoreList' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_GetPlayerController_ReturnValue) == 0x000130, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, K2Node_MakeArray_Array) == 0x000138, "Member 'GlobalFunctions_C_InflictAOEDamage::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, K2Node_DynamicCast_AsBP_Controller) == 0x000148, "Member 'GlobalFunctions_C_InflictAOEDamage::K2Node_DynamicCast_AsBP_Controller' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, K2Node_DynamicCast_bSuccess) == 0x000150, "Member 'GlobalFunctions_C_InflictAOEDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_Add_VectorVector_ReturnValue) == 0x000154, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, Temp_int_Array_Index_Variable) == 0x000160, "Member 'GlobalFunctions_C_InflictAOEDamage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, Temp_int_Loop_Counter_Variable) == 0x000164, "Member 'GlobalFunctions_C_InflictAOEDamage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_Add_IntInt_ReturnValue) == 0x000168, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, Temp_byte_Variable) == 0x00016C, "Member 'GlobalFunctions_C_InflictAOEDamage::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, Temp_byte_Variable_1) == 0x00016D, "Member 'GlobalFunctions_C_InflictAOEDamage::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, Temp_bool_Variable) == 0x00016E, "Member 'GlobalFunctions_C_InflictAOEDamage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, Temp_float_Variable) == 0x000170, "Member 'GlobalFunctions_C_InflictAOEDamage::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, K2Node_Select_Default) == 0x000174, "Member 'GlobalFunctions_C_InflictAOEDamage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_SphereTraceMulti_OutHits) == 0x000178, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_SphereTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_SphereTraceMulti_ReturnValue) == 0x000188, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_SphereTraceMulti_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000189, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00018C, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, Temp_float_Variable_1) == 0x000190, "Member 'GlobalFunctions_C_InflictAOEDamage::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_GetPawnData_Team) == 0x000194, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_GetPawnData_Team' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_GetPawnData_PlayerIndex) == 0x000198, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_GetPawnData_PlayerIndex' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_GetPawnData_PlayerStats) == 0x0001A0, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_GetPawnData_PlayerStats' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_GetPawnData_PawnDataComponent) == 0x000208, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_GetPawnData_PawnDataComponent' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, Temp_bool_Variable_1) == 0x000210, "Member 'GlobalFunctions_C_InflictAOEDamage::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, Temp_bool_Variable_2) == 0x000211, "Member 'GlobalFunctions_C_InflictAOEDamage::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_Array_Get_Item) == 0x000214, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_Array_Length_ReturnValue) == 0x00029C, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_BreakHitResult_bBlockingHit) == 0x0002A0, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_BreakHitResult_bInitialOverlap) == 0x0002A1, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_BreakHitResult_Time) == 0x0002A4, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_BreakHitResult_Distance) == 0x0002A8, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_BreakHitResult_Location) == 0x0002AC, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_BreakHitResult_ImpactPoint) == 0x0002B8, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_BreakHitResult_Normal) == 0x0002C4, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_BreakHitResult_ImpactNormal) == 0x0002D0, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_BreakHitResult_PhysMat) == 0x0002E0, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_BreakHitResult_HitActor) == 0x0002E8, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_BreakHitResult_HitComponent) == 0x0002F0, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_BreakHitResult_HitBoneName) == 0x0002F8, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_BreakHitResult_HitItem) == 0x000300, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_BreakHitResult_ElementIndex) == 0x000304, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_BreakHitResult_FaceIndex) == 0x000308, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_BreakHitResult_TraceStart) == 0x00030C, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_BreakHitResult_TraceEnd) == 0x000318, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_Less_IntInt_ReturnValue) == 0x000324, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_GetAOEObstacleHitAmount_DamageAmount_0_1_) == 0x000328, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_GetAOEObstacleHitAmount_DamageAmount_0_1_' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00032C, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, K2Node_DynamicCast_AsBP_Character) == 0x000330, "Member 'GlobalFunctions_C_InflictAOEDamage::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, K2Node_DynamicCast_bSuccess_1) == 0x000338, "Member 'GlobalFunctions_C_InflictAOEDamage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000339, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, K2Node_Select_Default_1) == 0x00033C, "Member 'GlobalFunctions_C_InflictAOEDamage::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_SelectFloat_ReturnValue) == 0x000340, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000344, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_GetPawnData_Team_1) == 0x000348, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_GetPawnData_Team_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_GetPawnData_PlayerIndex_1) == 0x00034C, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_GetPawnData_PlayerIndex_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_GetPawnData_PlayerStats_1) == 0x000350, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_GetPawnData_PlayerStats_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_GetPawnData_PawnDataComponent_1) == 0x0003B8, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_GetPawnData_PawnDataComponent_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0003C0, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0003CC, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_Vector_Distance_ReturnValue) == 0x0003D0, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_MapRangeClamped_ReturnValue) == 0x0003D4, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0003D8, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0003DC, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0003E0, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0003E4, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_Array_Add_ReturnValue) == 0x0003F0, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_Normal_ReturnValue) == 0x0003F4, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_Array_Contains_ReturnValue) == 0x000400, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000404, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_BreakVector_X) == 0x000410, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_BreakVector_Y) == 0x000414, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_BreakVector_Z) == 0x000418, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_MakeVector_ReturnValue) == 0x00041C, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000428, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_ClampVectorSize_ReturnValue) == 0x000434, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_ClampVectorSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000440, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000444, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_Vector_Distance_ReturnValue_1) == 0x000448, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00044C, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000450, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000454, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_FTrunc_ReturnValue) == 0x000458, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, CallFunc_Clamp_ReturnValue) == 0x00045C, "Member 'GlobalFunctions_C_InflictAOEDamage::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InflictAOEDamage, K2Node_Select_Default_2) == 0x000460, "Member 'GlobalFunctions_C_InflictAOEDamage::K2Node_Select_Default_2' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.GetRandomTeamFlag
// 0x0070 (0x0070 - 0x0000)
struct GlobalFunctions_C_GetRandomTeamFlag final
{
public:
	E_Teams                                       Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Flag_C*                             Flag;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_Flag_C*>                     AvailableFlags;                                    // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ABP_Flag_C*>                     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0028(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Flag_C*                             CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class BP_Rocket_0::ABP_Rocket_C*              K2Node_DynamicCast_AsBP_Rocket;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Flag_C*                             CallFunc_Array_Random_OutItem;                     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GlobalFunctions_C_GetRandomTeamFlag) == 0x000008, "Wrong alignment on GlobalFunctions_C_GetRandomTeamFlag");
static_assert(sizeof(GlobalFunctions_C_GetRandomTeamFlag) == 0x000070, "Wrong size on GlobalFunctions_C_GetRandomTeamFlag");
static_assert(offsetof(GlobalFunctions_C_GetRandomTeamFlag, Team) == 0x000000, "Member 'GlobalFunctions_C_GetRandomTeamFlag::Team' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomTeamFlag, __WorldContext) == 0x000008, "Member 'GlobalFunctions_C_GetRandomTeamFlag::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomTeamFlag, Flag) == 0x000010, "Member 'GlobalFunctions_C_GetRandomTeamFlag::Flag' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomTeamFlag, AvailableFlags) == 0x000018, "Member 'GlobalFunctions_C_GetRandomTeamFlag::AvailableFlags' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomTeamFlag, CallFunc_GetAllActorsOfClass_OutActors) == 0x000028, "Member 'GlobalFunctions_C_GetRandomTeamFlag::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomTeamFlag, Temp_int_Array_Index_Variable) == 0x000038, "Member 'GlobalFunctions_C_GetRandomTeamFlag::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomTeamFlag, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'GlobalFunctions_C_GetRandomTeamFlag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomTeamFlag, CallFunc_Array_Get_Item) == 0x000040, "Member 'GlobalFunctions_C_GetRandomTeamFlag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomTeamFlag, K2Node_DynamicCast_AsBP_Rocket) == 0x000048, "Member 'GlobalFunctions_C_GetRandomTeamFlag::K2Node_DynamicCast_AsBP_Rocket' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomTeamFlag, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'GlobalFunctions_C_GetRandomTeamFlag::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomTeamFlag, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'GlobalFunctions_C_GetRandomTeamFlag::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomTeamFlag, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000058, "Member 'GlobalFunctions_C_GetRandomTeamFlag::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomTeamFlag, CallFunc_Less_IntInt_ReturnValue) == 0x000059, "Member 'GlobalFunctions_C_GetRandomTeamFlag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomTeamFlag, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'GlobalFunctions_C_GetRandomTeamFlag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomTeamFlag, CallFunc_Array_Random_OutItem) == 0x000060, "Member 'GlobalFunctions_C_GetRandomTeamFlag::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomTeamFlag, CallFunc_Array_Random_OutIndex) == 0x000068, "Member 'GlobalFunctions_C_GetRandomTeamFlag::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRandomTeamFlag, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'GlobalFunctions_C_GetRandomTeamFlag::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.GetAllPlayerUnitsProgress
// 0x0030 (0x0030 - 0x0000)
struct GlobalFunctions_C_GetAllPlayerUnitsProgress final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FST_UnitProgress>               UnitProgress;                                      // 0x0008(0x0010)(Parm, OutParm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BaseController_C*                   K2Node_DynamicCast_AsBP_Base_Controller;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GlobalFunctions_C_GetAllPlayerUnitsProgress) == 0x000008, "Wrong alignment on GlobalFunctions_C_GetAllPlayerUnitsProgress");
static_assert(sizeof(GlobalFunctions_C_GetAllPlayerUnitsProgress) == 0x000030, "Wrong size on GlobalFunctions_C_GetAllPlayerUnitsProgress");
static_assert(offsetof(GlobalFunctions_C_GetAllPlayerUnitsProgress, __WorldContext) == 0x000000, "Member 'GlobalFunctions_C_GetAllPlayerUnitsProgress::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAllPlayerUnitsProgress, UnitProgress) == 0x000008, "Member 'GlobalFunctions_C_GetAllPlayerUnitsProgress::UnitProgress' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAllPlayerUnitsProgress, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'GlobalFunctions_C_GetAllPlayerUnitsProgress::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAllPlayerUnitsProgress, K2Node_DynamicCast_AsBP_Base_Controller) == 0x000020, "Member 'GlobalFunctions_C_GetAllPlayerUnitsProgress::K2Node_DynamicCast_AsBP_Base_Controller' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAllPlayerUnitsProgress, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'GlobalFunctions_C_GetAllPlayerUnitsProgress::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.GetPlayerUnitProgress
// 0x0188 (0x0188 - 0x0000)
struct GlobalFunctions_C_GetPlayerUnitProgress final
{
public:
	E_Units                                       Class_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Teams                                       Team;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_UnitProgress                       Progress;                                          // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FST_UnitProgress>               CallFunc_GetAllPlayerUnitsProgress_UnitProgress;   // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_5;                            // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	E_Units                                       Temp_byte_Variable;                                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_6;                            // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_7;                            // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_8;                            // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_9;                            // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_10;                           // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_11;                           // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	E_Teams                                       Temp_byte_Variable_1;                              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_12;                           // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_UnitProgress                       CallFunc_Array_Get_Item;                           // 0x0138(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Units                                       Temp_byte_Variable_2;                              // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_1;                           // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_2;                           // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GlobalFunctions_C_GetPlayerUnitProgress) == 0x000008, "Wrong alignment on GlobalFunctions_C_GetPlayerUnitProgress");
static_assert(sizeof(GlobalFunctions_C_GetPlayerUnitProgress) == 0x000188, "Wrong size on GlobalFunctions_C_GetPlayerUnitProgress");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, Class_0) == 0x000000, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::Class_0' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, Team) == 0x000001, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::Team' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, __WorldContext) == 0x000008, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, Progress) == 0x000010, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::Progress' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, Temp_string_Variable) == 0x000028, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, CallFunc_GetAllPlayerUnitsProgress_UnitProgress) == 0x000038, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::CallFunc_GetAllPlayerUnitsProgress_UnitProgress' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, Temp_string_Variable_1) == 0x000050, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, Temp_string_Variable_2) == 0x000060, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, Temp_string_Variable_3) == 0x000070, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, Temp_string_Variable_4) == 0x000080, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, Temp_string_Variable_5) == 0x000090, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, Temp_byte_Variable) == 0x0000A0, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, Temp_string_Variable_6) == 0x0000A8, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::Temp_string_Variable_6' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, Temp_string_Variable_7) == 0x0000B8, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::Temp_string_Variable_7' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, Temp_string_Variable_8) == 0x0000C8, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::Temp_string_Variable_8' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, Temp_string_Variable_9) == 0x0000D8, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::Temp_string_Variable_9' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, Temp_string_Variable_10) == 0x0000E8, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::Temp_string_Variable_10' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, Temp_string_Variable_11) == 0x0000F8, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::Temp_string_Variable_11' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, Temp_byte_Variable_1) == 0x000108, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, K2Node_Select_Default) == 0x000110, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, Temp_string_Variable_12) == 0x000120, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::Temp_string_Variable_12' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, Temp_int_Array_Index_Variable) == 0x000130, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, Temp_int_Loop_Counter_Variable) == 0x000134, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, CallFunc_Array_Get_Item) == 0x000138, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, CallFunc_Less_IntInt_ReturnValue) == 0x000150, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, CallFunc_Add_IntInt_ReturnValue) == 0x000154, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, Temp_byte_Variable_2) == 0x000158, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, K2Node_Select_Default_1) == 0x000160, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, K2Node_Select_Default_2) == 0x000170, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerUnitProgress, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000180, "Member 'GlobalFunctions_C_GetPlayerUnitProgress::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.ApplyWeaponSkin
// 0x0298 (0x0298 - 0x0000)
struct GlobalFunctions_C_ApplyWeaponSkin final
{
public:
	struct FST_Unlockable                         Cosmetic;                                          // 0x0000(0x0148)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MeshComponent;                                     // 0x0148(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MainlyWoodenWeapon;                                // 0x0150(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0158(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Extra2MID;                                         // 0x0160(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ExtraMID;                                          // 0x0168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               WeaponFlatColorMID;                                // 0x0170(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               WeaponIron_Texture_MID;                            // 0x0178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x018B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18D[0x3];                                      // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x01A0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetMaterialSlotNames_ReturnValue;         // 0x01A8(0x0010)(ReferenceParm)
	bool                                          Temp_bool_Variable_1;                              // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C2[0x6];                                      // 0x01C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetMaterialSlotNames_ReturnValue_1;       // 0x01D8(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x01F0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0205(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0206(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_207[0x1];                                      // 0x0207(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetMaterialSlotNames_ReturnValue_2;       // 0x0208(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_1;                           // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue_1;               // 0x0238(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x024C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_255[0x3];                                      // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue_1;                 // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x025C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue_1;                // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue_2;                 // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27D[0x3];                                      // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue_2;                // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GlobalFunctions_C_ApplyWeaponSkin) == 0x000008, "Wrong alignment on GlobalFunctions_C_ApplyWeaponSkin");
static_assert(sizeof(GlobalFunctions_C_ApplyWeaponSkin) == 0x000298, "Wrong size on GlobalFunctions_C_ApplyWeaponSkin");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, Cosmetic) == 0x000000, "Member 'GlobalFunctions_C_ApplyWeaponSkin::Cosmetic' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, MeshComponent) == 0x000148, "Member 'GlobalFunctions_C_ApplyWeaponSkin::MeshComponent' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, MainlyWoodenWeapon) == 0x000150, "Member 'GlobalFunctions_C_ApplyWeaponSkin::MainlyWoodenWeapon' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, __WorldContext) == 0x000158, "Member 'GlobalFunctions_C_ApplyWeaponSkin::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, Extra2MID) == 0x000160, "Member 'GlobalFunctions_C_ApplyWeaponSkin::Extra2MID' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, ExtraMID) == 0x000168, "Member 'GlobalFunctions_C_ApplyWeaponSkin::ExtraMID' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, WeaponFlatColorMID) == 0x000170, "Member 'GlobalFunctions_C_ApplyWeaponSkin::WeaponFlatColorMID' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, WeaponIron_Texture_MID) == 0x000178, "Member 'GlobalFunctions_C_ApplyWeaponSkin::WeaponIron_Texture_MID' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, Temp_int_Loop_Counter_Variable) == 0x000180, "Member 'GlobalFunctions_C_ApplyWeaponSkin::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_Add_IntInt_ReturnValue) == 0x000184, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_Not_PreBool_ReturnValue) == 0x000188, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_IsValid_ReturnValue) == 0x000189, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00018A, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_Not_PreBool_ReturnValue_1) == 0x00018B, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_BooleanOR_ReturnValue) == 0x00018C, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, Temp_int_Array_Index_Variable) == 0x000190, "Member 'GlobalFunctions_C_ApplyWeaponSkin::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, Temp_int_Loop_Counter_Variable_1) == 0x000194, "Member 'GlobalFunctions_C_ApplyWeaponSkin::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_Add_IntInt_ReturnValue_1) == 0x000198, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, Temp_bool_Variable) == 0x00019C, "Member 'GlobalFunctions_C_ApplyWeaponSkin::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, Temp_name_Variable) == 0x0001A0, "Member 'GlobalFunctions_C_ApplyWeaponSkin::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_GetMaterialSlotNames_ReturnValue) == 0x0001A8, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_GetMaterialSlotNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, Temp_bool_Variable_1) == 0x0001B8, "Member 'GlobalFunctions_C_ApplyWeaponSkin::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, Temp_int_Array_Index_Variable_1) == 0x0001BC, "Member 'GlobalFunctions_C_ApplyWeaponSkin::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_IsValid_ReturnValue_1) == 0x0001C0, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_BooleanAND_ReturnValue) == 0x0001C1, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, K2Node_Select_Default) == 0x0001C8, "Member 'GlobalFunctions_C_ApplyWeaponSkin::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_IsValid_ReturnValue_2) == 0x0001D0, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_GetMaterialSlotNames_ReturnValue_1) == 0x0001D8, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_GetMaterialSlotNames_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_IsValid_ReturnValue_3) == 0x0001E8, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_GetMaterials_ReturnValue) == 0x0001F0, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_Array_Length_ReturnValue) == 0x000200, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_Less_IntInt_ReturnValue) == 0x000204, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_IsValid_ReturnValue_4) == 0x000205, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_IsValid_ReturnValue_5) == 0x000206, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_GetMaterialSlotNames_ReturnValue_2) == 0x000208, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_GetMaterialSlotNames_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_Array_Find_ReturnValue) == 0x000218, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_GetMaterial_ReturnValue) == 0x000220, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000228, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, K2Node_Select_Default_1) == 0x000230, "Member 'GlobalFunctions_C_ApplyWeaponSkin::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_GetMaterials_ReturnValue_1) == 0x000238, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_GetMaterials_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_Array_Length_ReturnValue_1) == 0x000248, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, Temp_name_Variable_1) == 0x00024C, "Member 'GlobalFunctions_C_ApplyWeaponSkin::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_Less_IntInt_ReturnValue_1) == 0x000254, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_Array_Find_ReturnValue_1) == 0x000258, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_Array_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, Temp_name_Variable_2) == 0x00025C, "Member 'GlobalFunctions_C_ApplyWeaponSkin::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_GetMaterial_ReturnValue_1) == 0x000268, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_GetMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000270, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_Array_Find_ReturnValue_2) == 0x000278, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_Array_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00027C, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_GetMaterial_ReturnValue_2) == 0x000280, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_GetMaterial_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000288, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyWeaponSkin, CallFunc_IsValid_ReturnValue_6) == 0x000290, "Member 'GlobalFunctions_C_ApplyWeaponSkin::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.GetCosmeticItemStruct
// 0x02C8 (0x02C8 - 0x0000)
struct GlobalFunctions_C_GetCosmeticItemStruct final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UnlockableCategories                        Category;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_Unlockable                         Item;                                              // 0x0010(0x0148)(Parm, OutParm, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_GetCosmeticItemDatatable_NewParam;        // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0160(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_Unlockable                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0178(0x0148)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GlobalFunctions_C_GetCosmeticItemStruct) == 0x000008, "Wrong alignment on GlobalFunctions_C_GetCosmeticItemStruct");
static_assert(sizeof(GlobalFunctions_C_GetCosmeticItemStruct) == 0x0002C8, "Wrong size on GlobalFunctions_C_GetCosmeticItemStruct");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemStruct, Index_0) == 0x000000, "Member 'GlobalFunctions_C_GetCosmeticItemStruct::Index_0' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemStruct, Category) == 0x000004, "Member 'GlobalFunctions_C_GetCosmeticItemStruct::Category' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemStruct, __WorldContext) == 0x000008, "Member 'GlobalFunctions_C_GetCosmeticItemStruct::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemStruct, Item) == 0x000010, "Member 'GlobalFunctions_C_GetCosmeticItemStruct::Item' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemStruct, CallFunc_GetCosmeticItemDatatable_NewParam) == 0x000158, "Member 'GlobalFunctions_C_GetCosmeticItemStruct::CallFunc_GetCosmeticItemDatatable_NewParam' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemStruct, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000160, "Member 'GlobalFunctions_C_GetCosmeticItemStruct::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemStruct, CallFunc_Array_Get_Item) == 0x000170, "Member 'GlobalFunctions_C_GetCosmeticItemStruct::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemStruct, CallFunc_GetDataTableRowFromName_OutRow) == 0x000178, "Member 'GlobalFunctions_C_GetCosmeticItemStruct::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCosmeticItemStruct, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0002C0, "Member 'GlobalFunctions_C_GetCosmeticItemStruct::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.LevelableUnitsAPICallsList
// 0x0028 (0x0028 - 0x0000)
struct GlobalFunctions_C_LevelableUnitsAPICallsList final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Units;                                             // 0x0008(0x0010)(Parm, OutParm)
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
};
static_assert(alignof(GlobalFunctions_C_LevelableUnitsAPICallsList) == 0x000008, "Wrong alignment on GlobalFunctions_C_LevelableUnitsAPICallsList");
static_assert(sizeof(GlobalFunctions_C_LevelableUnitsAPICallsList) == 0x000028, "Wrong size on GlobalFunctions_C_LevelableUnitsAPICallsList");
static_assert(offsetof(GlobalFunctions_C_LevelableUnitsAPICallsList, __WorldContext) == 0x000000, "Member 'GlobalFunctions_C_LevelableUnitsAPICallsList::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_LevelableUnitsAPICallsList, Units) == 0x000008, "Member 'GlobalFunctions_C_LevelableUnitsAPICallsList::Units' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_LevelableUnitsAPICallsList, K2Node_MakeArray_Array) == 0x000018, "Member 'GlobalFunctions_C_LevelableUnitsAPICallsList::K2Node_MakeArray_Array' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.GetUnitLevel
// 0x0038 (0x0038 - 0x0000)
struct GlobalFunctions_C_GetUnitLevel final
{
public:
	struct FST_UnitProgress                       UnitProgress;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RequiredXPForNextLevel;                            // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentXPAmountProgress;                           // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLevelFromXP_Level;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLevelFromXP_RequiredXPForNextLevel;    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLevelFromXP_CurrentXPAmountProgress;   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GlobalFunctions_C_GetUnitLevel) == 0x000008, "Wrong alignment on GlobalFunctions_C_GetUnitLevel");
static_assert(sizeof(GlobalFunctions_C_GetUnitLevel) == 0x000038, "Wrong size on GlobalFunctions_C_GetUnitLevel");
static_assert(offsetof(GlobalFunctions_C_GetUnitLevel, UnitProgress) == 0x000000, "Member 'GlobalFunctions_C_GetUnitLevel::UnitProgress' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetUnitLevel, __WorldContext) == 0x000018, "Member 'GlobalFunctions_C_GetUnitLevel::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetUnitLevel, Level) == 0x000020, "Member 'GlobalFunctions_C_GetUnitLevel::Level' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetUnitLevel, RequiredXPForNextLevel) == 0x000024, "Member 'GlobalFunctions_C_GetUnitLevel::RequiredXPForNextLevel' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetUnitLevel, CurrentXPAmountProgress) == 0x000028, "Member 'GlobalFunctions_C_GetUnitLevel::CurrentXPAmountProgress' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetUnitLevel, CallFunc_GetLevelFromXP_Level) == 0x00002C, "Member 'GlobalFunctions_C_GetUnitLevel::CallFunc_GetLevelFromXP_Level' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetUnitLevel, CallFunc_GetLevelFromXP_RequiredXPForNextLevel) == 0x000030, "Member 'GlobalFunctions_C_GetUnitLevel::CallFunc_GetLevelFromXP_RequiredXPForNextLevel' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetUnitLevel, CallFunc_GetLevelFromXP_CurrentXPAmountProgress) == 0x000034, "Member 'GlobalFunctions_C_GetUnitLevel::CallFunc_GetLevelFromXP_CurrentXPAmountProgress' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.GetLevelFromXP
// 0x0048 (0x0048 - 0x0000)
struct GlobalFunctions_C_GetLevelFromXP final
{
public:
	int32                                         XPAmount;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RequiredXPForNextLevel;                            // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentXPAmountProgress;                           // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ExpLeft;                                           // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LevelTemp;                                         // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRequiredXPForLevel_ReturnValue;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRequiredXPForLevel_ReturnValue_1;      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GlobalFunctions_C_GetLevelFromXP) == 0x000008, "Wrong alignment on GlobalFunctions_C_GetLevelFromXP");
static_assert(sizeof(GlobalFunctions_C_GetLevelFromXP) == 0x000048, "Wrong size on GlobalFunctions_C_GetLevelFromXP");
static_assert(offsetof(GlobalFunctions_C_GetLevelFromXP, XPAmount) == 0x000000, "Member 'GlobalFunctions_C_GetLevelFromXP::XPAmount' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetLevelFromXP, __WorldContext) == 0x000008, "Member 'GlobalFunctions_C_GetLevelFromXP::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetLevelFromXP, Level) == 0x000010, "Member 'GlobalFunctions_C_GetLevelFromXP::Level' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetLevelFromXP, RequiredXPForNextLevel) == 0x000014, "Member 'GlobalFunctions_C_GetLevelFromXP::RequiredXPForNextLevel' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetLevelFromXP, CurrentXPAmountProgress) == 0x000018, "Member 'GlobalFunctions_C_GetLevelFromXP::CurrentXPAmountProgress' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetLevelFromXP, ExpLeft) == 0x00001C, "Member 'GlobalFunctions_C_GetLevelFromXP::ExpLeft' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetLevelFromXP, LevelTemp) == 0x000020, "Member 'GlobalFunctions_C_GetLevelFromXP::LevelTemp' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetLevelFromXP, CallFunc_Multiply_IntInt_ReturnValue) == 0x000024, "Member 'GlobalFunctions_C_GetLevelFromXP::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetLevelFromXP, CallFunc_GetRequiredXPForLevel_ReturnValue) == 0x000028, "Member 'GlobalFunctions_C_GetLevelFromXP::CallFunc_GetRequiredXPForLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetLevelFromXP, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'GlobalFunctions_C_GetLevelFromXP::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetLevelFromXP, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'GlobalFunctions_C_GetLevelFromXP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetLevelFromXP, CallFunc_GetRequiredXPForLevel_ReturnValue_1) == 0x000034, "Member 'GlobalFunctions_C_GetLevelFromXP::CallFunc_GetRequiredXPForLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetLevelFromXP, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000038, "Member 'GlobalFunctions_C_GetLevelFromXP::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetLevelFromXP, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x00003C, "Member 'GlobalFunctions_C_GetLevelFromXP::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetLevelFromXP, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000040, "Member 'GlobalFunctions_C_GetLevelFromXP::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetLevelFromXP, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'GlobalFunctions_C_GetLevelFromXP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetLevelFromXP, CallFunc_BooleanAND_ReturnValue) == 0x000042, "Member 'GlobalFunctions_C_GetLevelFromXP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.GetPlayerRankTitle
// 0x0260 (0x0260 - 0x0000)
struct GlobalFunctions_C_GetPlayerRankTitle final
{
public:
	int32                                         TotalLevel;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Rank;                                              // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_5;                            // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_6;                            // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_7;                            // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_8;                            // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_9;                            // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_10;                           // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_11;                           // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_12;                           // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_13;                           // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_14;                           // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_15;                           // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_16;                           // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_17;                           // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_18;                           // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_19;                           // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_20;                           // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_21;                           // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_22;                           // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_23;                           // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_24;                           // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_25;                           // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_26;                           // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_27;                           // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_28;                           // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_1;                           // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GlobalFunctions_C_GetPlayerRankTitle) == 0x000008, "Wrong alignment on GlobalFunctions_C_GetPlayerRankTitle");
static_assert(sizeof(GlobalFunctions_C_GetPlayerRankTitle) == 0x000260, "Wrong size on GlobalFunctions_C_GetPlayerRankTitle");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, TotalLevel) == 0x000000, "Member 'GlobalFunctions_C_GetPlayerRankTitle::TotalLevel' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, __WorldContext) == 0x000008, "Member 'GlobalFunctions_C_GetPlayerRankTitle::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Rank) == 0x000010, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Rank' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_int_Variable) == 0x000020, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000024, "Member 'GlobalFunctions_C_GetPlayerRankTitle::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000028, "Member 'GlobalFunctions_C_GetPlayerRankTitle::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00002C, "Member 'GlobalFunctions_C_GetPlayerRankTitle::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, CallFunc_Percent_IntInt_ReturnValue) == 0x000030, "Member 'GlobalFunctions_C_GetPlayerRankTitle::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, CallFunc_FTrunc_ReturnValue) == 0x000034, "Member 'GlobalFunctions_C_GetPlayerRankTitle::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_string_Variable) == 0x000038, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_string_Variable_1) == 0x000048, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_string_Variable_2) == 0x000058, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_string_Variable_3) == 0x000068, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_string_Variable_4) == 0x000078, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_string_Variable_5) == 0x000088, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_string_Variable_6) == 0x000098, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_string_Variable_6' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_string_Variable_7) == 0x0000A8, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_string_Variable_7' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_string_Variable_8) == 0x0000B8, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_string_Variable_8' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_string_Variable_9) == 0x0000C8, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_string_Variable_9' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_string_Variable_10) == 0x0000D8, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_string_Variable_10' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_string_Variable_11) == 0x0000E8, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_string_Variable_11' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_string_Variable_12) == 0x0000F8, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_string_Variable_12' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_string_Variable_13) == 0x000108, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_string_Variable_13' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_string_Variable_14) == 0x000118, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_string_Variable_14' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_string_Variable_15) == 0x000128, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_string_Variable_15' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_string_Variable_16) == 0x000138, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_string_Variable_16' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_string_Variable_17) == 0x000148, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_string_Variable_17' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_string_Variable_18) == 0x000158, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_string_Variable_18' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_int_Variable_1) == 0x000168, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, K2Node_Select_Default) == 0x000170, "Member 'GlobalFunctions_C_GetPlayerRankTitle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_string_Variable_19) == 0x000180, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_string_Variable_19' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_string_Variable_20) == 0x000190, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_string_Variable_20' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_string_Variable_21) == 0x0001A0, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_string_Variable_21' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_string_Variable_22) == 0x0001B0, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_string_Variable_22' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_string_Variable_23) == 0x0001C0, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_string_Variable_23' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_string_Variable_24) == 0x0001D0, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_string_Variable_24' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_string_Variable_25) == 0x0001E0, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_string_Variable_25' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_string_Variable_26) == 0x0001F0, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_string_Variable_26' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_string_Variable_27) == 0x000200, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_string_Variable_27' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, Temp_string_Variable_28) == 0x000210, "Member 'GlobalFunctions_C_GetPlayerRankTitle::Temp_string_Variable_28' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, K2Node_Select_Default_1) == 0x000220, "Member 'GlobalFunctions_C_GetPlayerRankTitle::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, CallFunc_SelectString_ReturnValue) == 0x000230, "Member 'GlobalFunctions_C_GetPlayerRankTitle::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, CallFunc_Concat_StrStr_ReturnValue) == 0x000240, "Member 'GlobalFunctions_C_GetPlayerRankTitle::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRankTitle, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000250, "Member 'GlobalFunctions_C_GetPlayerRankTitle::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.GetPlayerRank
// 0x0060 (0x0060 - 0x0000)
struct GlobalFunctions_C_GetPlayerRank final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerRank;                                        // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalLevel;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FST_UnitProgress>               CallFunc_GetAllPlayerUnitsProgress_UnitProgress;   // 0x0010(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_UnitProgress                       CallFunc_Array_Get_Item;                           // 0x0028(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLevelFromXP_Level;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLevelFromXP_RequiredXPForNextLevel;    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLevelFromXP_CurrentXPAmountProgress;   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GlobalFunctions_C_GetPlayerRank) == 0x000008, "Wrong alignment on GlobalFunctions_C_GetPlayerRank");
static_assert(sizeof(GlobalFunctions_C_GetPlayerRank) == 0x000060, "Wrong size on GlobalFunctions_C_GetPlayerRank");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRank, __WorldContext) == 0x000000, "Member 'GlobalFunctions_C_GetPlayerRank::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRank, PlayerRank) == 0x000008, "Member 'GlobalFunctions_C_GetPlayerRank::PlayerRank' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRank, TotalLevel) == 0x00000C, "Member 'GlobalFunctions_C_GetPlayerRank::TotalLevel' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRank, CallFunc_GetAllPlayerUnitsProgress_UnitProgress) == 0x000010, "Member 'GlobalFunctions_C_GetPlayerRank::CallFunc_GetAllPlayerUnitsProgress_UnitProgress' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRank, Temp_int_Array_Index_Variable) == 0x000020, "Member 'GlobalFunctions_C_GetPlayerRank::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRank, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'GlobalFunctions_C_GetPlayerRank::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRank, CallFunc_Array_Get_Item) == 0x000028, "Member 'GlobalFunctions_C_GetPlayerRank::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRank, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'GlobalFunctions_C_GetPlayerRank::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRank, CallFunc_GetLevelFromXP_Level) == 0x000044, "Member 'GlobalFunctions_C_GetPlayerRank::CallFunc_GetLevelFromXP_Level' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRank, CallFunc_GetLevelFromXP_RequiredXPForNextLevel) == 0x000048, "Member 'GlobalFunctions_C_GetPlayerRank::CallFunc_GetLevelFromXP_RequiredXPForNextLevel' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRank, CallFunc_GetLevelFromXP_CurrentXPAmountProgress) == 0x00004C, "Member 'GlobalFunctions_C_GetPlayerRank::CallFunc_GetLevelFromXP_CurrentXPAmountProgress' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRank, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'GlobalFunctions_C_GetPlayerRank::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRank, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'GlobalFunctions_C_GetPlayerRank::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerRank, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'GlobalFunctions_C_GetPlayerRank::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.GetRequiredXPForLevel
// 0x0040 (0x0040 - 0x0000)
struct GlobalFunctions_C_GetRequiredXPForLevel final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GlobalFunctions_C_GetRequiredXPForLevel) == 0x000008, "Wrong alignment on GlobalFunctions_C_GetRequiredXPForLevel");
static_assert(sizeof(GlobalFunctions_C_GetRequiredXPForLevel) == 0x000040, "Wrong size on GlobalFunctions_C_GetRequiredXPForLevel");
static_assert(offsetof(GlobalFunctions_C_GetRequiredXPForLevel, Level) == 0x000000, "Member 'GlobalFunctions_C_GetRequiredXPForLevel::Level' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRequiredXPForLevel, __WorldContext) == 0x000008, "Member 'GlobalFunctions_C_GetRequiredXPForLevel::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRequiredXPForLevel, ReturnValue) == 0x000010, "Member 'GlobalFunctions_C_GetRequiredXPForLevel::ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRequiredXPForLevel, Temp_bool_Variable) == 0x000014, "Member 'GlobalFunctions_C_GetRequiredXPForLevel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRequiredXPForLevel, CallFunc_Greater_IntInt_ReturnValue) == 0x000015, "Member 'GlobalFunctions_C_GetRequiredXPForLevel::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRequiredXPForLevel, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000016, "Member 'GlobalFunctions_C_GetRequiredXPForLevel::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRequiredXPForLevel, Temp_int_Variable) == 0x000018, "Member 'GlobalFunctions_C_GetRequiredXPForLevel::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRequiredXPForLevel, Temp_bool_Variable_1) == 0x00001C, "Member 'GlobalFunctions_C_GetRequiredXPForLevel::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRequiredXPForLevel, Temp_int_Variable_1) == 0x000020, "Member 'GlobalFunctions_C_GetRequiredXPForLevel::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRequiredXPForLevel, Temp_int_Variable_2) == 0x000024, "Member 'GlobalFunctions_C_GetRequiredXPForLevel::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRequiredXPForLevel, CallFunc_MakeLiteralInt_ReturnValue) == 0x000028, "Member 'GlobalFunctions_C_GetRequiredXPForLevel::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRequiredXPForLevel, K2Node_Select_Default) == 0x00002C, "Member 'GlobalFunctions_C_GetRequiredXPForLevel::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRequiredXPForLevel, CallFunc_Multiply_IntInt_ReturnValue) == 0x000030, "Member 'GlobalFunctions_C_GetRequiredXPForLevel::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRequiredXPForLevel, K2Node_Select_Default_1) == 0x000034, "Member 'GlobalFunctions_C_GetRequiredXPForLevel::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRequiredXPForLevel, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'GlobalFunctions_C_GetRequiredXPForLevel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetRequiredXPForLevel, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x00003C, "Member 'GlobalFunctions_C_GetRequiredXPForLevel::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.GetTotalPlayerScore
// 0x0050 (0x0050 - 0x0000)
struct GlobalFunctions_C_GetTotalPlayerScore final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalScore;                                        // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalXP;                                           // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FST_UnitProgress>               CallFunc_GetAllPlayerUnitsProgress_UnitProgress;   // 0x0010(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_UnitProgress                       CallFunc_Array_Get_Item;                           // 0x0028(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GlobalFunctions_C_GetTotalPlayerScore) == 0x000008, "Wrong alignment on GlobalFunctions_C_GetTotalPlayerScore");
static_assert(sizeof(GlobalFunctions_C_GetTotalPlayerScore) == 0x000050, "Wrong size on GlobalFunctions_C_GetTotalPlayerScore");
static_assert(offsetof(GlobalFunctions_C_GetTotalPlayerScore, __WorldContext) == 0x000000, "Member 'GlobalFunctions_C_GetTotalPlayerScore::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetTotalPlayerScore, TotalScore) == 0x000008, "Member 'GlobalFunctions_C_GetTotalPlayerScore::TotalScore' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetTotalPlayerScore, TotalXP) == 0x00000C, "Member 'GlobalFunctions_C_GetTotalPlayerScore::TotalXP' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetTotalPlayerScore, CallFunc_GetAllPlayerUnitsProgress_UnitProgress) == 0x000010, "Member 'GlobalFunctions_C_GetTotalPlayerScore::CallFunc_GetAllPlayerUnitsProgress_UnitProgress' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetTotalPlayerScore, Temp_int_Array_Index_Variable) == 0x000020, "Member 'GlobalFunctions_C_GetTotalPlayerScore::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetTotalPlayerScore, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'GlobalFunctions_C_GetTotalPlayerScore::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetTotalPlayerScore, CallFunc_Array_Get_Item) == 0x000028, "Member 'GlobalFunctions_C_GetTotalPlayerScore::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetTotalPlayerScore, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'GlobalFunctions_C_GetTotalPlayerScore::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetTotalPlayerScore, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'GlobalFunctions_C_GetTotalPlayerScore::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetTotalPlayerScore, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'GlobalFunctions_C_GetTotalPlayerScore::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetTotalPlayerScore, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'GlobalFunctions_C_GetTotalPlayerScore::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.GetPlayerStats
// 0x00F8 (0x00F8 - 0x0000)
struct GlobalFunctions_C_GetPlayerStats final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_PlayerStats                        Stats;                                             // 0x0010(0x0068)(Parm, OutParm, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_PlayerStats                        CallFunc_Array_Get_Item;                           // 0x0090(0x0068)(HasGetValueTypeHash)
};
static_assert(alignof(GlobalFunctions_C_GetPlayerStats) == 0x000008, "Wrong alignment on GlobalFunctions_C_GetPlayerStats");
static_assert(sizeof(GlobalFunctions_C_GetPlayerStats) == 0x0000F8, "Wrong size on GlobalFunctions_C_GetPlayerStats");
static_assert(offsetof(GlobalFunctions_C_GetPlayerStats, PlayerIndex) == 0x000000, "Member 'GlobalFunctions_C_GetPlayerStats::PlayerIndex' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerStats, __WorldContext) == 0x000008, "Member 'GlobalFunctions_C_GetPlayerStats::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerStats, Stats) == 0x000010, "Member 'GlobalFunctions_C_GetPlayerStats::Stats' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerStats, CallFunc_GetGameState_ReturnValue) == 0x000078, "Member 'GlobalFunctions_C_GetPlayerStats::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerStats, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x000080, "Member 'GlobalFunctions_C_GetPlayerStats::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerStats, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'GlobalFunctions_C_GetPlayerStats::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerStats, CallFunc_Array_Get_Item) == 0x000090, "Member 'GlobalFunctions_C_GetPlayerStats::CallFunc_Array_Get_Item' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.Global Game Settings
// 0x0018 (0x0018 - 0x0000)
struct GlobalFunctions_C_Global_Game_Settings final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AI_CommandoDetectRange;                            // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GravityAmount;                                     // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Camera_FOV;                                        // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GlobalFunctions_C_Global_Game_Settings) == 0x000008, "Wrong alignment on GlobalFunctions_C_Global_Game_Settings");
static_assert(sizeof(GlobalFunctions_C_Global_Game_Settings) == 0x000018, "Wrong size on GlobalFunctions_C_Global_Game_Settings");
static_assert(offsetof(GlobalFunctions_C_Global_Game_Settings, __WorldContext) == 0x000000, "Member 'GlobalFunctions_C_Global_Game_Settings::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Global_Game_Settings, AI_CommandoDetectRange) == 0x000008, "Member 'GlobalFunctions_C_Global_Game_Settings::AI_CommandoDetectRange' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Global_Game_Settings, GravityAmount) == 0x00000C, "Member 'GlobalFunctions_C_Global_Game_Settings::GravityAmount' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Global_Game_Settings, Camera_FOV) == 0x000010, "Member 'GlobalFunctions_C_Global_Game_Settings::Camera_FOV' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.GetOptions
// 0x0090 (0x0090 - 0x0000)
struct GlobalFunctions_C_GetOptions final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_Options                            Options;                                           // 0x0008(0x0070)(Parm, OutParm, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GlobalFunctions_C_GetOptions) == 0x000008, "Wrong alignment on GlobalFunctions_C_GetOptions");
static_assert(sizeof(GlobalFunctions_C_GetOptions) == 0x000090, "Wrong size on GlobalFunctions_C_GetOptions");
static_assert(offsetof(GlobalFunctions_C_GetOptions, __WorldContext) == 0x000000, "Member 'GlobalFunctions_C_GetOptions::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetOptions, Options) == 0x000008, "Member 'GlobalFunctions_C_GetOptions::Options' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetOptions, CallFunc_GetGameInstance_ReturnValue) == 0x000078, "Member 'GlobalFunctions_C_GetOptions::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetOptions, K2Node_DynamicCast_AsBP_Game_Instance) == 0x000080, "Member 'GlobalFunctions_C_GetOptions::K2Node_DynamicCast_AsBP_Game_Instance' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetOptions, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'GlobalFunctions_C_GetOptions::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.ApplyCharacterCustomization
// 0x1240 (0x1240 - 0x0000)
struct GlobalFunctions_C_ApplyCharacterCustomization final
{
public:
	struct FST_CharacterCustomization             Customization;                                     // 0x0000(0x003C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 FacialHair;                                        // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CharacterMesh;                                     // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Hat;                                               // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   HatExtras;                                         // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Legs;                                              // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   UpperFace;                                         // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Torso;                                             // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LowerFace;                                         // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Back;                                              // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Feet;                                              // 0x0088(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               LegsMID;                                           // 0x0098(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CharacterMID;                                      // 0x00A0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       HatItemMIDs;                                       // 0x00A8(0x0010)(Parm, OutParm)
	TArray<class UMaterialInstanceDynamic*>       TorsoMIDs;                                         // 0x00B8(0x0010)(Parm, OutParm)
	bool                                          LegsThinLegs;                                      // 0x00C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TorsoThinLegs_LongTorsoItem_;                      // 0x00C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TuckLegsIntoShoes;                                 // 0x00CA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ValidTorsoItem;                                    // 0x00CB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               FeetMID;                                           // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       TorsoMIDsTemp;                                     // 0x00D8(0x0010)(Edit, BlueprintVisible)
	TArray<class UMaterialInstanceDynamic*>       HatMIDsTemp;                                       // 0x00E8(0x0010)(Edit, BlueprintVisible)
	class UMaterialInstanceDynamic*               LegMID;                                            // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TorsoCoversLegs;                                   // 0x0100(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OverrideBack;                                      // 0x0101(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OverrideLowerFace;                                 // 0x0102(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OverrideUpperFace;                                 // 0x0103(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OverrideFacialHair;                                // 0x0104(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OverrideFeet;                                      // 0x0105(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OverrideLegs;                                      // 0x0106(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_107[0x1];                                      // 0x0107(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CharacterSkinMat;                                  // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               EyeBrowMat;                                        // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               HairMat;                                           // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Temp_object_Variable;                              // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0170(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_1;       // 0x0188(0x0010)(ReferenceParm)
	struct FST_Unlockable                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0198(0x0148)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E1[0x3];                                      // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x02E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_Unlockable                         CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x02F0(0x0148)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_439[0x3];                                      // 0x0439(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0442(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_443[0x1];                                      // 0x0443(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_449[0x3];                                      // 0x0449(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_451[0x3];                                      // 0x0451(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_3;                         // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_2;       // 0x0460(0x0010)(ReferenceParm)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_3;       // 0x0470(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_4;                         // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_5;                         // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_Unlockable                         CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0490(0x0148)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D9[0x7];                                      // 0x05D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_Unlockable                         CallFunc_GetDataTableRowFromName_OutRow_3;         // 0x05E0(0x0148)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_3;    // 0x0728(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_729[0x3];                                      // 0x0729(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x072C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSkeletalMaterial>              CallFunc_GetMaterials_ReturnValue;                 // 0x0730(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_741[0x7];                                      // 0x0741(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkeletalMaterial                      CallFunc_Array_Get_Item_6;                         // 0x0748(0x0028)(NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x0779(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_2;              // 0x077A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77B[0x5];                                      // 0x077B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_4;       // 0x0780(0x0010)(ReferenceParm)
	class USkeletalMesh*                          Temp_object_Variable_1;                            // 0x0790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_7;                         // 0x0798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_Unlockable                         CallFunc_GetDataTableRowFromName_OutRow_4;         // 0x07A0(0x0148)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_4;    // 0x08E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E9[0x3];                                      // 0x08E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x08EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x08F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F1[0x3];                                      // 0x08F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x08F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x08F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x08F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_3;              // 0x08FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8FB[0x5];                                      // 0x08FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_5;       // 0x0900(0x0010)(ReferenceParm)
	float                                         Temp_float_Variable;                               // 0x0910(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_8;                         // 0x0914(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91C[0x4];                                      // 0x091C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_Unlockable                         CallFunc_GetDataTableRowFromName_OutRow_5;         // 0x0920(0x0148)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_5;    // 0x0A68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A69[0x7];                                      // 0x0A69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_6;       // 0x0A70(0x0010)(ReferenceParm)
	float                                         CallFunc_BreakColor_R;                             // 0x0A80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0A84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0A88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0A8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_9;                         // 0x0A90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0A98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A99[0x7];                                      // 0x0A99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_Unlockable                         CallFunc_GetDataTableRowFromName_OutRow_6;         // 0x0AA0(0x0148)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_6;    // 0x0BE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BE9[0x3];                                      // 0x0BE9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0BEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R_1;                           // 0x0BF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G_1;                           // 0x0BF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B_1;                           // 0x0BF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A_1;                           // 0x0BFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0C00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C01[0x7];                                      // 0x0C01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkeletalMaterial>              CallFunc_GetMaterials_ReturnValue_1;               // 0x0C08(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0C18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C19[0x7];                                      // 0x0C19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkeletalMaterial                      CallFunc_Array_Get_Item_10;                        // 0x0C20(0x0028)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0C48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4C[0x4];                                      // 0x0C4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_3; // 0x0C50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0C58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C59[0x3];                                      // 0x0C59(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0C5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0C60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C61[0x7];                                      // 0x0C61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_7;       // 0x0C68(0x0010)(ReferenceParm)
	float                                         Temp_float_Variable_1;                             // 0x0C78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_11;                        // 0x0C7C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C84[0x4];                                      // 0x0C84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_Unlockable                         CallFunc_GetDataTableRowFromName_OutRow_7;         // 0x0C88(0x0148)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_7;    // 0x0DD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD1[0x3];                                      // 0x0DD1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x0DD4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_4;              // 0x0DD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD9[0x7];                                      // 0x0DD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_8;       // 0x0DE0(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_12;                        // 0x0DF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_Unlockable                         CallFunc_GetDataTableRowFromName_OutRow_8;         // 0x0DF8(0x0148)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_8;    // 0x0F40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F41[0x7];                                      // 0x0F41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_9;       // 0x0F48(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_13;                        // 0x0F58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_CharacterFaceCustomizationItem     CallFunc_GetDataTableRowFromName_OutRow_9;         // 0x0F60(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_9;    // 0x0F80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0F81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F82[0x6];                                      // 0x0F82(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkeletalMaterial>              CallFunc_GetMaterials_ReturnValue_2;               // 0x0F88(0x0010)(ConstParm, ReferenceParm)
	struct FSkeletalMaterial                      CallFunc_Array_Get_Item_14;                        // 0x0F98(0x0028)(NoDestructor)
	class USkeletalMesh*                          K2Node_Select_Default;                             // 0x0FC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0FC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FC9[0x7];                                      // 0x0FC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_4; // 0x0FD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0FD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0FD9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FDA[0x2];                                      // 0x0FDA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x0FDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_10;      // 0x0FE0(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_15;                        // 0x0FF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_Unlockable                         CallFunc_GetDataTableRowFromName_OutRow_10;        // 0x0FF8(0x0148)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_10;   // 0x1140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_5;              // 0x1141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1142[0x6];                                     // 0x1142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStaticMaterial>                CallFunc_GetStaticMaterials_ReturnValue;           // 0x1148(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x1158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1159[0x7];                                     // 0x1159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStaticMaterial                        CallFunc_Array_Get_Item_16;                        // 0x1160(0x0030)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x1190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1194[0x4];                                     // 0x1194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_5; // 0x1198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x11A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A1[0x3];                                     // 0x11A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x11A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_6;              // 0x11A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x11A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11AA[0x6];                                     // 0x11AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_11;      // 0x11B0(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_17;                        // 0x11C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_Select_Default_2;                           // 0x11C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_HairColor                          CallFunc_GetDataTableRowFromName_OutRow_11;        // 0x11D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_11;   // 0x11E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11E1[0x7];                                     // 0x11E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_Select_Default_3;                           // 0x11E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_12;      // 0x11F0(0x0010)(ReferenceParm)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x1200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_18;                        // 0x1210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_CharacterFaceCustomizationItem     CallFunc_GetDataTableRowFromName_OutRow_12;        // 0x1218(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_12;   // 0x1238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GlobalFunctions_C_ApplyCharacterCustomization) == 0x000008, "Wrong alignment on GlobalFunctions_C_ApplyCharacterCustomization");
static_assert(sizeof(GlobalFunctions_C_ApplyCharacterCustomization) == 0x001240, "Wrong size on GlobalFunctions_C_ApplyCharacterCustomization");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, Customization) == 0x000000, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::Customization' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, FacialHair) == 0x000040, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::FacialHair' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CharacterMesh) == 0x000048, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CharacterMesh' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, Hat) == 0x000050, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::Hat' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, HatExtras) == 0x000058, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::HatExtras' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, Legs) == 0x000060, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::Legs' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, UpperFace) == 0x000068, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::UpperFace' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, Torso) == 0x000070, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::Torso' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, LowerFace) == 0x000078, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::LowerFace' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, Back) == 0x000080, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::Back' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, Feet) == 0x000088, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::Feet' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, __WorldContext) == 0x000090, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, LegsMID) == 0x000098, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::LegsMID' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CharacterMID) == 0x0000A0, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CharacterMID' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, HatItemMIDs) == 0x0000A8, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::HatItemMIDs' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, TorsoMIDs) == 0x0000B8, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::TorsoMIDs' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, LegsThinLegs) == 0x0000C8, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::LegsThinLegs' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, TorsoThinLegs_LongTorsoItem_) == 0x0000C9, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::TorsoThinLegs_LongTorsoItem_' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, TuckLegsIntoShoes) == 0x0000CA, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::TuckLegsIntoShoes' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, ValidTorsoItem) == 0x0000CB, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::ValidTorsoItem' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, FeetMID) == 0x0000D0, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::FeetMID' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, TorsoMIDsTemp) == 0x0000D8, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::TorsoMIDsTemp' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, HatMIDsTemp) == 0x0000E8, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::HatMIDsTemp' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, LegMID) == 0x0000F8, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::LegMID' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, TorsoCoversLegs) == 0x000100, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::TorsoCoversLegs' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, OverrideBack) == 0x000101, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::OverrideBack' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, OverrideLowerFace) == 0x000102, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::OverrideLowerFace' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, OverrideUpperFace) == 0x000103, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::OverrideUpperFace' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, OverrideFacialHair) == 0x000104, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::OverrideFacialHair' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, OverrideFeet) == 0x000105, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::OverrideFeet' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, OverrideLegs) == 0x000106, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::OverrideLegs' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CharacterSkinMat) == 0x000108, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CharacterSkinMat' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, EyeBrowMat) == 0x000110, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::EyeBrowMat' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, HairMat) == 0x000118, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::HairMat' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000120, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000128, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, Temp_object_Variable) == 0x000130, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, Temp_int_Loop_Counter_Variable) == 0x000138, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Add_IntInt_ReturnValue) == 0x00013C, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, Temp_int_Array_Index_Variable) == 0x000140, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, Temp_int_Array_Index_Variable_1) == 0x000144, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, Temp_bool_Variable) == 0x000148, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, Temp_int_Loop_Counter_Variable_1) == 0x00014C, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Add_IntInt_ReturnValue_1) == 0x000150, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, Temp_int_Array_Index_Variable_2) == 0x000154, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_BooleanOR_ReturnValue) == 0x000158, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x00015C, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Array_Get_Item) == 0x000160, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Array_Length_ReturnValue) == 0x000168, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Array_Length_ReturnValue_1) == 0x00016C, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000170, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Array_Get_Item_1) == 0x000180, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowNames_OutRowNames_1) == 0x000188, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowNames_OutRowNames_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowFromName_OutRow) == 0x000198, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0002E0, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Array_Get_Item_2) == 0x0002E4, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0002F0, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000438, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00043C, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_IsValid_ReturnValue) == 0x000440, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_IsValid_ReturnValue_1) == 0x000441, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000442, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, Temp_int_Loop_Counter_Variable_2) == 0x000444, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Less_IntInt_ReturnValue) == 0x000448, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Add_IntInt_ReturnValue_2) == 0x00044C, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_IsValid_ReturnValue_2) == 0x000450, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, Temp_int_Array_Index_Variable_3) == 0x000454, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Array_Get_Item_3) == 0x000458, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowNames_OutRowNames_2) == 0x000460, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowNames_OutRowNames_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowNames_OutRowNames_3) == 0x000470, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowNames_OutRowNames_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Array_Get_Item_4) == 0x000480, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Array_Get_Item_5) == 0x000488, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000490, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x0005D8, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowFromName_OutRow_3) == 0x0005E0, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowFromName_OutRow_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowFromName_ReturnValue_3) == 0x000728, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowFromName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00072C, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetMaterials_ReturnValue) == 0x000730, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_IsValid_ReturnValue_3) == 0x000740, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Array_Get_Item_6) == 0x000748, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000770, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_SetStaticMesh_ReturnValue) == 0x000778, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_SetStaticMesh_ReturnValue_1) == 0x000779, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_SetStaticMesh_ReturnValue_2) == 0x00077A, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_SetStaticMesh_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowNames_OutRowNames_4) == 0x000780, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowNames_OutRowNames_4' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, Temp_object_Variable_1) == 0x000790, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Array_Get_Item_7) == 0x000798, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowFromName_OutRow_4) == 0x0007A0, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowFromName_OutRow_4' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowFromName_ReturnValue_4) == 0x0008E8, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowFromName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, Temp_int_Loop_Counter_Variable_3) == 0x0008EC, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Less_IntInt_ReturnValue_1) == 0x0008F0, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Add_IntInt_ReturnValue_3) == 0x0008F4, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, Temp_bool_Variable_1) == 0x0008F8, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_IsValid_ReturnValue_4) == 0x0008F9, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_SetStaticMesh_ReturnValue_3) == 0x0008FA, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_SetStaticMesh_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowNames_OutRowNames_5) == 0x000900, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowNames_OutRowNames_5' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, Temp_float_Variable) == 0x000910, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Array_Get_Item_8) == 0x000914, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowFromName_OutRow_5) == 0x000920, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowFromName_OutRow_5' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowFromName_ReturnValue_5) == 0x000A68, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowFromName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowNames_OutRowNames_6) == 0x000A70, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowNames_OutRowNames_6' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_BreakColor_R) == 0x000A80, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_BreakColor_G) == 0x000A84, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_BreakColor_B) == 0x000A88, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_BreakColor_A) == 0x000A8C, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Array_Get_Item_9) == 0x000A90, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000A98, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowFromName_OutRow_6) == 0x000AA0, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowFromName_OutRow_6' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowFromName_ReturnValue_6) == 0x000BE8, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowFromName_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000BEC, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_BreakColor_R_1) == 0x000BF0, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_BreakColor_R_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_BreakColor_G_1) == 0x000BF4, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_BreakColor_G_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_BreakColor_B_1) == 0x000BF8, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_BreakColor_B_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_BreakColor_A_1) == 0x000BFC, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_BreakColor_A_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000C00, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetMaterials_ReturnValue_1) == 0x000C08, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetMaterials_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_IsValid_ReturnValue_5) == 0x000C18, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Array_Get_Item_10) == 0x000C20, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Array_Length_ReturnValue_2) == 0x000C48, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_CreateDynamicMaterialInstance_ReturnValue_3) == 0x000C50, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_CreateDynamicMaterialInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Less_IntInt_ReturnValue_2) == 0x000C58, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Array_Add_ReturnValue) == 0x000C5C, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_IsValid_ReturnValue_6) == 0x000C60, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowNames_OutRowNames_7) == 0x000C68, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowNames_OutRowNames_7' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, Temp_float_Variable_1) == 0x000C78, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Array_Get_Item_11) == 0x000C7C, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowFromName_OutRow_7) == 0x000C88, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowFromName_OutRow_7' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowFromName_ReturnValue_7) == 0x000DD0, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowFromName_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x000DD4, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_SetStaticMesh_ReturnValue_4) == 0x000DD8, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_SetStaticMesh_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowNames_OutRowNames_8) == 0x000DE0, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowNames_OutRowNames_8' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Array_Get_Item_12) == 0x000DF0, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Array_Get_Item_12' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowFromName_OutRow_8) == 0x000DF8, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowFromName_OutRow_8' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowFromName_ReturnValue_8) == 0x000F40, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowFromName_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowNames_OutRowNames_9) == 0x000F48, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowNames_OutRowNames_9' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Array_Get_Item_13) == 0x000F58, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Array_Get_Item_13' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowFromName_OutRow_9) == 0x000F60, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowFromName_OutRow_9' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowFromName_ReturnValue_9) == 0x000F80, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowFromName_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_IsValid_ReturnValue_7) == 0x000F81, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetMaterials_ReturnValue_2) == 0x000F88, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetMaterials_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Array_Get_Item_14) == 0x000F98, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Array_Get_Item_14' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, K2Node_Select_Default) == 0x000FC0, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_IsValid_ReturnValue_8) == 0x000FC8, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_CreateDynamicMaterialInstance_ReturnValue_4) == 0x000FD0, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_CreateDynamicMaterialInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_IsValid_ReturnValue_9) == 0x000FD8, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, Temp_bool_Variable_2) == 0x000FD9, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, K2Node_Select_Default_1) == 0x000FDC, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowNames_OutRowNames_10) == 0x000FE0, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowNames_OutRowNames_10' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Array_Get_Item_15) == 0x000FF0, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Array_Get_Item_15' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowFromName_OutRow_10) == 0x000FF8, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowFromName_OutRow_10' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowFromName_ReturnValue_10) == 0x001140, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowFromName_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_SetStaticMesh_ReturnValue_5) == 0x001141, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_SetStaticMesh_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetStaticMaterials_ReturnValue) == 0x001148, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetStaticMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_IsValid_ReturnValue_10) == 0x001158, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Array_Get_Item_16) == 0x001160, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Array_Get_Item_16' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Array_Length_ReturnValue_3) == 0x001190, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_CreateDynamicMaterialInstance_ReturnValue_5) == 0x001198, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_CreateDynamicMaterialInstance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Less_IntInt_ReturnValue_3) == 0x0011A0, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Array_Add_ReturnValue_1) == 0x0011A4, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_SetStaticMesh_ReturnValue_6) == 0x0011A8, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_SetStaticMesh_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, Temp_bool_Variable_3) == 0x0011A9, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowNames_OutRowNames_11) == 0x0011B0, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowNames_OutRowNames_11' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Array_Get_Item_17) == 0x0011C0, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Array_Get_Item_17' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, K2Node_Select_Default_2) == 0x0011C8, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowFromName_OutRow_11) == 0x0011D0, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowFromName_OutRow_11' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowFromName_ReturnValue_11) == 0x0011E0, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowFromName_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, K2Node_Select_Default_3) == 0x0011E8, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowNames_OutRowNames_12) == 0x0011F0, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowNames_OutRowNames_12' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x001200, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_Array_Get_Item_18) == 0x001210, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_Array_Get_Item_18' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowFromName_OutRow_12) == 0x001218, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowFromName_OutRow_12' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_ApplyCharacterCustomization, CallFunc_GetDataTableRowFromName_ReturnValue_12) == 0x001238, "Member 'GlobalFunctions_C_ApplyCharacterCustomization::CallFunc_GetDataTableRowFromName_ReturnValue_12' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.GetClassAndTeamUnitIndex
// 0x0060 (0x0060 - 0x0000)
struct GlobalFunctions_C_GetClassAndTeamUnitIndex final
{
public:
	E_Units                                       Class_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Teams                                       Team;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Units                                       Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Units                                       Temp_byte_Variable_1;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Teams                                       Temp_byte_Variable_2;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_12;                              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GlobalFunctions_C_GetClassAndTeamUnitIndex) == 0x000008, "Wrong alignment on GlobalFunctions_C_GetClassAndTeamUnitIndex");
static_assert(sizeof(GlobalFunctions_C_GetClassAndTeamUnitIndex) == 0x000060, "Wrong size on GlobalFunctions_C_GetClassAndTeamUnitIndex");
static_assert(offsetof(GlobalFunctions_C_GetClassAndTeamUnitIndex, Class_0) == 0x000000, "Member 'GlobalFunctions_C_GetClassAndTeamUnitIndex::Class_0' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetClassAndTeamUnitIndex, Team) == 0x000001, "Member 'GlobalFunctions_C_GetClassAndTeamUnitIndex::Team' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetClassAndTeamUnitIndex, __WorldContext) == 0x000008, "Member 'GlobalFunctions_C_GetClassAndTeamUnitIndex::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetClassAndTeamUnitIndex, Index_0) == 0x000010, "Member 'GlobalFunctions_C_GetClassAndTeamUnitIndex::Index_0' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetClassAndTeamUnitIndex, Temp_byte_Variable) == 0x000014, "Member 'GlobalFunctions_C_GetClassAndTeamUnitIndex::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetClassAndTeamUnitIndex, Temp_int_Variable) == 0x000018, "Member 'GlobalFunctions_C_GetClassAndTeamUnitIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetClassAndTeamUnitIndex, Temp_int_Variable_1) == 0x00001C, "Member 'GlobalFunctions_C_GetClassAndTeamUnitIndex::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetClassAndTeamUnitIndex, Temp_int_Variable_2) == 0x000020, "Member 'GlobalFunctions_C_GetClassAndTeamUnitIndex::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetClassAndTeamUnitIndex, Temp_int_Variable_3) == 0x000024, "Member 'GlobalFunctions_C_GetClassAndTeamUnitIndex::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetClassAndTeamUnitIndex, Temp_int_Variable_4) == 0x000028, "Member 'GlobalFunctions_C_GetClassAndTeamUnitIndex::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetClassAndTeamUnitIndex, Temp_int_Variable_5) == 0x00002C, "Member 'GlobalFunctions_C_GetClassAndTeamUnitIndex::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetClassAndTeamUnitIndex, Temp_byte_Variable_1) == 0x000030, "Member 'GlobalFunctions_C_GetClassAndTeamUnitIndex::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetClassAndTeamUnitIndex, K2Node_Select_Default) == 0x000034, "Member 'GlobalFunctions_C_GetClassAndTeamUnitIndex::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetClassAndTeamUnitIndex, Temp_int_Variable_6) == 0x000038, "Member 'GlobalFunctions_C_GetClassAndTeamUnitIndex::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetClassAndTeamUnitIndex, Temp_int_Variable_7) == 0x00003C, "Member 'GlobalFunctions_C_GetClassAndTeamUnitIndex::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetClassAndTeamUnitIndex, Temp_int_Variable_8) == 0x000040, "Member 'GlobalFunctions_C_GetClassAndTeamUnitIndex::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetClassAndTeamUnitIndex, Temp_int_Variable_9) == 0x000044, "Member 'GlobalFunctions_C_GetClassAndTeamUnitIndex::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetClassAndTeamUnitIndex, Temp_int_Variable_10) == 0x000048, "Member 'GlobalFunctions_C_GetClassAndTeamUnitIndex::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetClassAndTeamUnitIndex, Temp_int_Variable_11) == 0x00004C, "Member 'GlobalFunctions_C_GetClassAndTeamUnitIndex::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetClassAndTeamUnitIndex, Temp_byte_Variable_2) == 0x000050, "Member 'GlobalFunctions_C_GetClassAndTeamUnitIndex::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetClassAndTeamUnitIndex, K2Node_Select_Default_1) == 0x000054, "Member 'GlobalFunctions_C_GetClassAndTeamUnitIndex::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetClassAndTeamUnitIndex, Temp_int_Variable_12) == 0x000058, "Member 'GlobalFunctions_C_GetClassAndTeamUnitIndex::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetClassAndTeamUnitIndex, K2Node_Select_Default_2) == 0x00005C, "Member 'GlobalFunctions_C_GetClassAndTeamUnitIndex::K2Node_Select_Default_2' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.IncreaseStat
// 0x00A0 (0x00A0 - 0x0000)
struct GlobalFunctions_C_IncreaseStat final
{
public:
	class FString                                 Stat;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         IncreaseAmount;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStatInt_Data;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStatInt_ReturnValue;                   // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStatInt_ReturnValue;                   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GlobalFunctions_C_IncreaseStat) == 0x000008, "Wrong alignment on GlobalFunctions_C_IncreaseStat");
static_assert(sizeof(GlobalFunctions_C_IncreaseStat) == 0x0000A0, "Wrong size on GlobalFunctions_C_IncreaseStat");
static_assert(offsetof(GlobalFunctions_C_IncreaseStat, Stat) == 0x000000, "Member 'GlobalFunctions_C_IncreaseStat::Stat' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_IncreaseStat, IncreaseAmount) == 0x000010, "Member 'GlobalFunctions_C_IncreaseStat::IncreaseAmount' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_IncreaseStat, __WorldContext) == 0x000018, "Member 'GlobalFunctions_C_IncreaseStat::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_IncreaseStat, Success) == 0x000020, "Member 'GlobalFunctions_C_IncreaseStat::Success' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_IncreaseStat, CallFunc_Conv_IntToString_ReturnValue) == 0x000028, "Member 'GlobalFunctions_C_IncreaseStat::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_IncreaseStat, CallFunc_GetStatInt_Data) == 0x000038, "Member 'GlobalFunctions_C_IncreaseStat::CallFunc_GetStatInt_Data' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_IncreaseStat, CallFunc_GetStatInt_ReturnValue) == 0x00003C, "Member 'GlobalFunctions_C_IncreaseStat::CallFunc_GetStatInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_IncreaseStat, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000040, "Member 'GlobalFunctions_C_IncreaseStat::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_IncreaseStat, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'GlobalFunctions_C_IncreaseStat::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_IncreaseStat, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'GlobalFunctions_C_IncreaseStat::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_IncreaseStat, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000068, "Member 'GlobalFunctions_C_IncreaseStat::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_IncreaseStat, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000078, "Member 'GlobalFunctions_C_IncreaseStat::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_IncreaseStat, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000088, "Member 'GlobalFunctions_C_IncreaseStat::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_IncreaseStat, CallFunc_SetStatInt_ReturnValue) == 0x000098, "Member 'GlobalFunctions_C_IncreaseStat::CallFunc_SetStatInt_ReturnValue' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.GetEventRewardFromScore
// 0x0028 (0x0028 - 0x0000)
struct GlobalFunctions_C_GetEventRewardFromScore final
{
public:
	int32                                         Score;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GlobalFunctions_C_GetEventRewardFromScore) == 0x000008, "Wrong alignment on GlobalFunctions_C_GetEventRewardFromScore");
static_assert(sizeof(GlobalFunctions_C_GetEventRewardFromScore) == 0x000028, "Wrong size on GlobalFunctions_C_GetEventRewardFromScore");
static_assert(offsetof(GlobalFunctions_C_GetEventRewardFromScore, Score) == 0x000000, "Member 'GlobalFunctions_C_GetEventRewardFromScore::Score' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetEventRewardFromScore, __WorldContext) == 0x000008, "Member 'GlobalFunctions_C_GetEventRewardFromScore::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetEventRewardFromScore, Amount) == 0x000010, "Member 'GlobalFunctions_C_GetEventRewardFromScore::Amount' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetEventRewardFromScore, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000014, "Member 'GlobalFunctions_C_GetEventRewardFromScore::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetEventRewardFromScore, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'GlobalFunctions_C_GetEventRewardFromScore::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetEventRewardFromScore, CallFunc_Round_ReturnValue) == 0x00001C, "Member 'GlobalFunctions_C_GetEventRewardFromScore::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetEventRewardFromScore, CallFunc_Clamp_ReturnValue) == 0x000020, "Member 'GlobalFunctions_C_GetEventRewardFromScore::CallFunc_Clamp_ReturnValue' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.GetAOEObstacleHitAmount
// 0x0518 (0x0518 - 0x0000)
struct GlobalFunctions_C_GetAOEObstacleHitAmount final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AOEOriginLocation;                                 // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageAmount_0_1_;                                 // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               DebugMode;                                         // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HeadDmg;                                           // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LeftFootDmg;                                       // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RightFootDmg;                                      // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LeftHandDmg;                                       // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RightHandDmg;                                      // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0040(0x0010)(ConstParm, ReferenceParm)
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0060(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_2;          // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_3;          // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_3;                     // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_2;                            // 0x0160(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_4;          // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_3;                            // 0x0180(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_4;      // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_4;                            // 0x01A0(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Normal_ReturnValue_4;                     // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x01D8(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x01E8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x0278(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_1;       // 0x0288(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_1;  // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_2;                          // 0x0318(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_2;       // 0x0328(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_2;  // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_3;                          // 0x03B8(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_3;       // 0x03C8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_3;  // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_451[0x3];                                      // 0x0451(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_4;                          // 0x0468(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_4;       // 0x047C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_4;  // 0x0504(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_505[0x3];                                      // 0x0505(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x050C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GlobalFunctions_C_GetAOEObstacleHitAmount) == 0x000008, "Wrong alignment on GlobalFunctions_C_GetAOEObstacleHitAmount");
static_assert(sizeof(GlobalFunctions_C_GetAOEObstacleHitAmount) == 0x000518, "Wrong size on GlobalFunctions_C_GetAOEObstacleHitAmount");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, HitActor) == 0x000000, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::HitActor' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, AOEOriginLocation) == 0x000008, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::AOEOriginLocation' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, __WorldContext) == 0x000018, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, DamageAmount_0_1_) == 0x000020, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::DamageAmount_0_1_' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, DebugMode) == 0x000024, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::DebugMode' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, HeadDmg) == 0x000028, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::HeadDmg' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, LeftFootDmg) == 0x00002C, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::LeftFootDmg' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, RightFootDmg) == 0x000030, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::RightFootDmg' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, LeftHandDmg) == 0x000034, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::LeftHandDmg' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, RightHandDmg) == 0x000038, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::RightHandDmg' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, Temp_object_Variable) == 0x000040, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, K2Node_DynamicCast_AsBP_Character) == 0x000050, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, Temp_object_Variable_1) == 0x000060, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_GetSocketLocation_ReturnValue) == 0x000070, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_GetSocketLocation_ReturnValue_1) == 0x00007C, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000088, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000094, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_Normal_ReturnValue) == 0x0000A0, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_Normal_ReturnValue_1) == 0x0000AC, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000B8, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000C4, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D0, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000DC, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_GetSocketLocation_ReturnValue_2) == 0x0000E8, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_GetSocketLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_GetSocketLocation_ReturnValue_3) == 0x0000F4, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_GetSocketLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000100, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x00010C, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_Normal_ReturnValue_2) == 0x000118, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_Normal_ReturnValue_3) == 0x000124, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_Normal_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000130, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x00013C, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000148, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000154, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, Temp_object_Variable_2) == 0x000160, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_GetSocketLocation_ReturnValue_4) == 0x000170, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_GetSocketLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, Temp_object_Variable_3) == 0x000180, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_Subtract_VectorVector_ReturnValue_4) == 0x000190, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_Subtract_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, Temp_object_Variable_4) == 0x0001A0, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_Normal_ReturnValue_4) == 0x0001B0, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_Normal_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x0001BC, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_Add_VectorVector_ReturnValue_4) == 0x0001C8, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, K2Node_MakeArray_Array) == 0x0001D8, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0001E8, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000270, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, K2Node_MakeArray_Array_1) == 0x000278, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_LineTraceSingleForObjects_OutHit_1) == 0x000288, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_LineTraceSingleForObjects_OutHit_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_LineTraceSingleForObjects_ReturnValue_1) == 0x000310, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_LineTraceSingleForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, K2Node_MakeArray_Array_2) == 0x000318, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_LineTraceSingleForObjects_OutHit_2) == 0x000328, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_LineTraceSingleForObjects_OutHit_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_LineTraceSingleForObjects_ReturnValue_2) == 0x0003B0, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_LineTraceSingleForObjects_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, K2Node_MakeArray_Array_3) == 0x0003B8, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_LineTraceSingleForObjects_OutHit_3) == 0x0003C8, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_LineTraceSingleForObjects_OutHit_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_LineTraceSingleForObjects_ReturnValue_3) == 0x000450, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_LineTraceSingleForObjects_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000454, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000458, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_Add_IntInt_ReturnValue) == 0x00045C, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_Add_IntInt_ReturnValue_1) == 0x000460, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_Add_IntInt_ReturnValue_2) == 0x000464, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, K2Node_MakeArray_Array_4) == 0x000468, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_Add_IntInt_ReturnValue_3) == 0x000478, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_LineTraceSingleForObjects_OutHit_4) == 0x00047C, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_LineTraceSingleForObjects_OutHit_4' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_LineTraceSingleForObjects_ReturnValue_4) == 0x000504, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_LineTraceSingleForObjects_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000508, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00050C, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetAOEObstacleHitAmount, CallFunc_FClamp_ReturnValue) == 0x000510, "Member 'GlobalFunctions_C_GetAOEObstacleHitAmount::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.Get Unit Character Customization
// 0x01C8 (0x01C8 - 0x0000)
struct GlobalFunctions_C_Get_Unit_Character_Customization final
{
public:
	struct FST_SelectedCosmeticItems              SelectedCosmeticItems;                             // 0x0000(0x0100)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         UnitIndex;                                         // 0x0100(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0108(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_CharacterCustomization             CharacterCustomization;                            // 0x0110(0x003C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_4;                         // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_5;                         // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_6;                         // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_7;                         // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_8;                         // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_9;                         // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_10;                        // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_11;                        // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_12;                        // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_13;                        // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_14;                        // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_CharacterCustomization             K2Node_MakeStruct_ST_CharacterCustomization;       // 0x0188(0x003C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GlobalFunctions_C_Get_Unit_Character_Customization) == 0x000008, "Wrong alignment on GlobalFunctions_C_Get_Unit_Character_Customization");
static_assert(sizeof(GlobalFunctions_C_Get_Unit_Character_Customization) == 0x0001C8, "Wrong size on GlobalFunctions_C_Get_Unit_Character_Customization");
static_assert(offsetof(GlobalFunctions_C_Get_Unit_Character_Customization, SelectedCosmeticItems) == 0x000000, "Member 'GlobalFunctions_C_Get_Unit_Character_Customization::SelectedCosmeticItems' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Get_Unit_Character_Customization, UnitIndex) == 0x000100, "Member 'GlobalFunctions_C_Get_Unit_Character_Customization::UnitIndex' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Get_Unit_Character_Customization, __WorldContext) == 0x000108, "Member 'GlobalFunctions_C_Get_Unit_Character_Customization::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Get_Unit_Character_Customization, CharacterCustomization) == 0x000110, "Member 'GlobalFunctions_C_Get_Unit_Character_Customization::CharacterCustomization' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Get_Unit_Character_Customization, CallFunc_Array_Get_Item) == 0x00014C, "Member 'GlobalFunctions_C_Get_Unit_Character_Customization::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Get_Unit_Character_Customization, CallFunc_Array_Get_Item_1) == 0x000150, "Member 'GlobalFunctions_C_Get_Unit_Character_Customization::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Get_Unit_Character_Customization, CallFunc_Array_Get_Item_2) == 0x000154, "Member 'GlobalFunctions_C_Get_Unit_Character_Customization::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Get_Unit_Character_Customization, CallFunc_Array_Get_Item_3) == 0x000158, "Member 'GlobalFunctions_C_Get_Unit_Character_Customization::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Get_Unit_Character_Customization, CallFunc_Array_Get_Item_4) == 0x00015C, "Member 'GlobalFunctions_C_Get_Unit_Character_Customization::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Get_Unit_Character_Customization, CallFunc_Array_Get_Item_5) == 0x000160, "Member 'GlobalFunctions_C_Get_Unit_Character_Customization::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Get_Unit_Character_Customization, CallFunc_Array_Get_Item_6) == 0x000164, "Member 'GlobalFunctions_C_Get_Unit_Character_Customization::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Get_Unit_Character_Customization, CallFunc_Array_Get_Item_7) == 0x000168, "Member 'GlobalFunctions_C_Get_Unit_Character_Customization::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Get_Unit_Character_Customization, CallFunc_Array_Get_Item_8) == 0x00016C, "Member 'GlobalFunctions_C_Get_Unit_Character_Customization::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Get_Unit_Character_Customization, CallFunc_Array_Get_Item_9) == 0x000170, "Member 'GlobalFunctions_C_Get_Unit_Character_Customization::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Get_Unit_Character_Customization, CallFunc_Array_Get_Item_10) == 0x000174, "Member 'GlobalFunctions_C_Get_Unit_Character_Customization::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Get_Unit_Character_Customization, CallFunc_Array_Get_Item_11) == 0x000178, "Member 'GlobalFunctions_C_Get_Unit_Character_Customization::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Get_Unit_Character_Customization, CallFunc_Array_Get_Item_12) == 0x00017C, "Member 'GlobalFunctions_C_Get_Unit_Character_Customization::CallFunc_Array_Get_Item_12' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Get_Unit_Character_Customization, CallFunc_Array_Get_Item_13) == 0x000180, "Member 'GlobalFunctions_C_Get_Unit_Character_Customization::CallFunc_Array_Get_Item_13' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Get_Unit_Character_Customization, CallFunc_Array_Get_Item_14) == 0x000184, "Member 'GlobalFunctions_C_Get_Unit_Character_Customization::CallFunc_Array_Get_Item_14' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_Get_Unit_Character_Customization, K2Node_MakeStruct_ST_CharacterCustomization) == 0x000188, "Member 'GlobalFunctions_C_Get_Unit_Character_Customization::K2Node_MakeStruct_ST_CharacterCustomization' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.GetSteamItemUnlockedState
// 0x00A0 (0x00A0 - 0x0000)
struct GlobalFunctions_C_GetSteamItemUnlockedState final
{
public:
	int32                                         ItemIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Unlocked;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Quantity;                                          // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BaseController_C*                   K2Node_DynamicCast_AsBP_Base_Controller;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSteamItemDetails                      CallFunc_Array_Get_Item;                           // 0x0060(0x0020)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetItemDefinitionProperty_Value;          // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemDefinitionProperty_ReturnValue;    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GlobalFunctions_C_GetSteamItemUnlockedState) == 0x000008, "Wrong alignment on GlobalFunctions_C_GetSteamItemUnlockedState");
static_assert(sizeof(GlobalFunctions_C_GetSteamItemUnlockedState) == 0x0000A0, "Wrong size on GlobalFunctions_C_GetSteamItemUnlockedState");
static_assert(offsetof(GlobalFunctions_C_GetSteamItemUnlockedState, ItemIndex) == 0x000000, "Member 'GlobalFunctions_C_GetSteamItemUnlockedState::ItemIndex' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetSteamItemUnlockedState, __WorldContext) == 0x000008, "Member 'GlobalFunctions_C_GetSteamItemUnlockedState::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetSteamItemUnlockedState, Unlocked) == 0x000010, "Member 'GlobalFunctions_C_GetSteamItemUnlockedState::Unlocked' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetSteamItemUnlockedState, Quantity) == 0x000014, "Member 'GlobalFunctions_C_GetSteamItemUnlockedState::Quantity' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetSteamItemUnlockedState, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'GlobalFunctions_C_GetSteamItemUnlockedState::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetSteamItemUnlockedState, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'GlobalFunctions_C_GetSteamItemUnlockedState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetSteamItemUnlockedState, K2Node_DynamicCast_AsBP_Base_Controller) == 0x000028, "Member 'GlobalFunctions_C_GetSteamItemUnlockedState::K2Node_DynamicCast_AsBP_Base_Controller' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetSteamItemUnlockedState, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'GlobalFunctions_C_GetSteamItemUnlockedState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetSteamItemUnlockedState, CallFunc_Conv_IntToString_ReturnValue) == 0x000038, "Member 'GlobalFunctions_C_GetSteamItemUnlockedState::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetSteamItemUnlockedState, Temp_bool_True_if_break_was_hit_Variable) == 0x000048, "Member 'GlobalFunctions_C_GetSteamItemUnlockedState::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetSteamItemUnlockedState, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'GlobalFunctions_C_GetSteamItemUnlockedState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetSteamItemUnlockedState, CallFunc_Not_PreBool_ReturnValue) == 0x000050, "Member 'GlobalFunctions_C_GetSteamItemUnlockedState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetSteamItemUnlockedState, Temp_int_Array_Index_Variable) == 0x000054, "Member 'GlobalFunctions_C_GetSteamItemUnlockedState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetSteamItemUnlockedState, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'GlobalFunctions_C_GetSteamItemUnlockedState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetSteamItemUnlockedState, CallFunc_Array_Get_Item) == 0x000060, "Member 'GlobalFunctions_C_GetSteamItemUnlockedState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetSteamItemUnlockedState, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'GlobalFunctions_C_GetSteamItemUnlockedState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetSteamItemUnlockedState, CallFunc_BooleanAND_ReturnValue) == 0x000081, "Member 'GlobalFunctions_C_GetSteamItemUnlockedState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetSteamItemUnlockedState, CallFunc_GetItemDefinitionProperty_Value) == 0x000088, "Member 'GlobalFunctions_C_GetSteamItemUnlockedState::CallFunc_GetItemDefinitionProperty_Value' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetSteamItemUnlockedState, CallFunc_GetItemDefinitionProperty_ReturnValue) == 0x000098, "Member 'GlobalFunctions_C_GetSteamItemUnlockedState::CallFunc_GetItemDefinitionProperty_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetSteamItemUnlockedState, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000099, "Member 'GlobalFunctions_C_GetSteamItemUnlockedState::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetSteamItemUnlockedState, CallFunc_Add_IntInt_ReturnValue_1) == 0x00009C, "Member 'GlobalFunctions_C_GetSteamItemUnlockedState::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.CheckIfPawnIsAlive
// 0x0038 (0x0038 - 0x0000)
struct GlobalFunctions_C_CheckIfPawnIsAlive final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Alive;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_VehicleBase_C*                      K2Node_DynamicCast_AsBP_Vehicle_Base;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GlobalFunctions_C_CheckIfPawnIsAlive) == 0x000008, "Wrong alignment on GlobalFunctions_C_CheckIfPawnIsAlive");
static_assert(sizeof(GlobalFunctions_C_CheckIfPawnIsAlive) == 0x000038, "Wrong size on GlobalFunctions_C_CheckIfPawnIsAlive");
static_assert(offsetof(GlobalFunctions_C_CheckIfPawnIsAlive, Pawn) == 0x000000, "Member 'GlobalFunctions_C_CheckIfPawnIsAlive::Pawn' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_CheckIfPawnIsAlive, __WorldContext) == 0x000008, "Member 'GlobalFunctions_C_CheckIfPawnIsAlive::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_CheckIfPawnIsAlive, Alive) == 0x000010, "Member 'GlobalFunctions_C_CheckIfPawnIsAlive::Alive' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_CheckIfPawnIsAlive, K2Node_DynamicCast_AsBP_Vehicle_Base) == 0x000018, "Member 'GlobalFunctions_C_CheckIfPawnIsAlive::K2Node_DynamicCast_AsBP_Vehicle_Base' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_CheckIfPawnIsAlive, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GlobalFunctions_C_CheckIfPawnIsAlive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_CheckIfPawnIsAlive, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'GlobalFunctions_C_CheckIfPawnIsAlive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_CheckIfPawnIsAlive, CallFunc_Not_PreBool_ReturnValue) == 0x000022, "Member 'GlobalFunctions_C_CheckIfPawnIsAlive::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_CheckIfPawnIsAlive, K2Node_DynamicCast_AsBP_Character) == 0x000028, "Member 'GlobalFunctions_C_CheckIfPawnIsAlive::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_CheckIfPawnIsAlive, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'GlobalFunctions_C_CheckIfPawnIsAlive::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_CheckIfPawnIsAlive, CallFunc_Not_PreBool_ReturnValue_1) == 0x000031, "Member 'GlobalFunctions_C_CheckIfPawnIsAlive::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.GetMapCenter
// 0x0058 (0x0058 - 0x0000)
struct GlobalFunctions_C_GetMapCenter final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MapCenterLocation;                                 // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GlobalFunctions_C_GetMapCenter) == 0x000008, "Wrong alignment on GlobalFunctions_C_GetMapCenter");
static_assert(sizeof(GlobalFunctions_C_GetMapCenter) == 0x000058, "Wrong size on GlobalFunctions_C_GetMapCenter");
static_assert(offsetof(GlobalFunctions_C_GetMapCenter, __WorldContext) == 0x000000, "Member 'GlobalFunctions_C_GetMapCenter::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetMapCenter, MapCenterLocation) == 0x000008, "Member 'GlobalFunctions_C_GetMapCenter::MapCenterLocation' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetMapCenter, IsValid) == 0x000014, "Member 'GlobalFunctions_C_GetMapCenter::IsValid' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetMapCenter, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'GlobalFunctions_C_GetMapCenter::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetMapCenter, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x000020, "Member 'GlobalFunctions_C_GetMapCenter::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetMapCenter, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'GlobalFunctions_C_GetMapCenter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetMapCenter, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00002C, "Member 'GlobalFunctions_C_GetMapCenter::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetMapCenter, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'GlobalFunctions_C_GetMapCenter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetMapCenter, CallFunc_BreakVector_X) == 0x00003C, "Member 'GlobalFunctions_C_GetMapCenter::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetMapCenter, CallFunc_BreakVector_Y) == 0x000040, "Member 'GlobalFunctions_C_GetMapCenter::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetMapCenter, CallFunc_BreakVector_Z) == 0x000044, "Member 'GlobalFunctions_C_GetMapCenter::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetMapCenter, CallFunc_MakeVector_ReturnValue) == 0x000048, "Member 'GlobalFunctions_C_GetMapCenter::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.GetTruePawnLocation
// 0x0060 (0x0060 - 0x0000)
struct GlobalFunctions_C_GetTruePawnLocation final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PawnLocation;                                      // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_VehicleBase_C*                      K2Node_DynamicCast_AsBP_Vehicle_Base;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GlobalFunctions_C_GetTruePawnLocation) == 0x000008, "Wrong alignment on GlobalFunctions_C_GetTruePawnLocation");
static_assert(sizeof(GlobalFunctions_C_GetTruePawnLocation) == 0x000060, "Wrong size on GlobalFunctions_C_GetTruePawnLocation");
static_assert(offsetof(GlobalFunctions_C_GetTruePawnLocation, Pawn) == 0x000000, "Member 'GlobalFunctions_C_GetTruePawnLocation::Pawn' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetTruePawnLocation, __WorldContext) == 0x000008, "Member 'GlobalFunctions_C_GetTruePawnLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetTruePawnLocation, PawnLocation) == 0x000010, "Member 'GlobalFunctions_C_GetTruePawnLocation::PawnLocation' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetTruePawnLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'GlobalFunctions_C_GetTruePawnLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetTruePawnLocation, K2Node_DynamicCast_AsBP_Character) == 0x000028, "Member 'GlobalFunctions_C_GetTruePawnLocation::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetTruePawnLocation, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'GlobalFunctions_C_GetTruePawnLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetTruePawnLocation, K2Node_DynamicCast_AsBP_Vehicle_Base) == 0x000038, "Member 'GlobalFunctions_C_GetTruePawnLocation::K2Node_DynamicCast_AsBP_Vehicle_Base' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetTruePawnLocation, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'GlobalFunctions_C_GetTruePawnLocation::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetTruePawnLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000044, "Member 'GlobalFunctions_C_GetTruePawnLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetTruePawnLocation, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000050, "Member 'GlobalFunctions_C_GetTruePawnLocation::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetTruePawnLocation, CallFunc_IsValid_ReturnValue) == 0x00005C, "Member 'GlobalFunctions_C_GetTruePawnLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.GetCharacterDamageBuffDebuff
// 0x0050 (0x0050 - 0x0000)
struct GlobalFunctions_C_GetCharacterDamageBuffDebuff final
{
public:
	class ABP_Character_C*                        Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 BuffDebuff;                                        // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_1;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_2;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default_1;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GlobalFunctions_C_GetCharacterDamageBuffDebuff) == 0x000008, "Wrong alignment on GlobalFunctions_C_GetCharacterDamageBuffDebuff");
static_assert(sizeof(GlobalFunctions_C_GetCharacterDamageBuffDebuff) == 0x000050, "Wrong size on GlobalFunctions_C_GetCharacterDamageBuffDebuff");
static_assert(offsetof(GlobalFunctions_C_GetCharacterDamageBuffDebuff, Character) == 0x000000, "Member 'GlobalFunctions_C_GetCharacterDamageBuffDebuff::Character' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCharacterDamageBuffDebuff, __WorldContext) == 0x000008, "Member 'GlobalFunctions_C_GetCharacterDamageBuffDebuff::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCharacterDamageBuffDebuff, BuffDebuff) == 0x000010, "Member 'GlobalFunctions_C_GetCharacterDamageBuffDebuff::BuffDebuff' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCharacterDamageBuffDebuff, Temp_bool_Variable) == 0x000018, "Member 'GlobalFunctions_C_GetCharacterDamageBuffDebuff::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCharacterDamageBuffDebuff, Temp_class_Variable) == 0x000020, "Member 'GlobalFunctions_C_GetCharacterDamageBuffDebuff::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCharacterDamageBuffDebuff, Temp_class_Variable_1) == 0x000028, "Member 'GlobalFunctions_C_GetCharacterDamageBuffDebuff::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCharacterDamageBuffDebuff, Temp_bool_Variable_1) == 0x000030, "Member 'GlobalFunctions_C_GetCharacterDamageBuffDebuff::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCharacterDamageBuffDebuff, K2Node_Select_Default) == 0x000038, "Member 'GlobalFunctions_C_GetCharacterDamageBuffDebuff::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCharacterDamageBuffDebuff, Temp_class_Variable_2) == 0x000040, "Member 'GlobalFunctions_C_GetCharacterDamageBuffDebuff::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetCharacterDamageBuffDebuff, K2Node_Select_Default_1) == 0x000048, "Member 'GlobalFunctions_C_GetCharacterDamageBuffDebuff::K2Node_Select_Default_1' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.InitOptions
// 0x0020 (0x0020 - 0x0000)
struct GlobalFunctions_C_InitOptions final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BaseController_C*                   K2Node_DynamicCast_AsBP_Base_Controller;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GlobalFunctions_C_InitOptions) == 0x000008, "Wrong alignment on GlobalFunctions_C_InitOptions");
static_assert(sizeof(GlobalFunctions_C_InitOptions) == 0x000020, "Wrong size on GlobalFunctions_C_InitOptions");
static_assert(offsetof(GlobalFunctions_C_InitOptions, __WorldContext) == 0x000000, "Member 'GlobalFunctions_C_InitOptions::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InitOptions, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'GlobalFunctions_C_InitOptions::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InitOptions, K2Node_DynamicCast_AsBP_Base_Controller) == 0x000010, "Member 'GlobalFunctions_C_InitOptions::K2Node_DynamicCast_AsBP_Base_Controller' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_InitOptions, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GlobalFunctions_C_InitOptions::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.RemovePlayerFromGame
// 0x0030 (0x0030 - 0x0000)
struct GlobalFunctions_C_RemovePlayerFromGame final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GlobalFunctions_C_RemovePlayerFromGame) == 0x000008, "Wrong alignment on GlobalFunctions_C_RemovePlayerFromGame");
static_assert(sizeof(GlobalFunctions_C_RemovePlayerFromGame) == 0x000030, "Wrong size on GlobalFunctions_C_RemovePlayerFromGame");
static_assert(offsetof(GlobalFunctions_C_RemovePlayerFromGame, PlayerState) == 0x000000, "Member 'GlobalFunctions_C_RemovePlayerFromGame::PlayerState' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_RemovePlayerFromGame, __WorldContext) == 0x000008, "Member 'GlobalFunctions_C_RemovePlayerFromGame::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_RemovePlayerFromGame, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'GlobalFunctions_C_RemovePlayerFromGame::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_RemovePlayerFromGame, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'GlobalFunctions_C_RemovePlayerFromGame::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_RemovePlayerFromGame, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x000020, "Member 'GlobalFunctions_C_RemovePlayerFromGame::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_RemovePlayerFromGame, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'GlobalFunctions_C_RemovePlayerFromGame::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.CheckIfOnCommunityBanList
// 0x0050 (0x0050 - 0x0000)
struct GlobalFunctions_C_CheckIfOnCommunityBanList final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnList;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSteamID                               CallFunc_GetSteamIdFromPlayerState_ReturnValue;    // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ABP_GameModeBase_C*                     K2Node_DynamicCast_AsBP_Game_Mode_Base;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BreakSteamID_ReturnValue;                 // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GlobalFunctions_C_CheckIfOnCommunityBanList) == 0x000008, "Wrong alignment on GlobalFunctions_C_CheckIfOnCommunityBanList");
static_assert(sizeof(GlobalFunctions_C_CheckIfOnCommunityBanList) == 0x000050, "Wrong size on GlobalFunctions_C_CheckIfOnCommunityBanList");
static_assert(offsetof(GlobalFunctions_C_CheckIfOnCommunityBanList, PlayerState) == 0x000000, "Member 'GlobalFunctions_C_CheckIfOnCommunityBanList::PlayerState' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_CheckIfOnCommunityBanList, __WorldContext) == 0x000008, "Member 'GlobalFunctions_C_CheckIfOnCommunityBanList::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_CheckIfOnCommunityBanList, OnList) == 0x000010, "Member 'GlobalFunctions_C_CheckIfOnCommunityBanList::OnList' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_CheckIfOnCommunityBanList, CallFunc_GetGameMode_ReturnValue) == 0x000018, "Member 'GlobalFunctions_C_CheckIfOnCommunityBanList::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_CheckIfOnCommunityBanList, CallFunc_GetSteamIdFromPlayerState_ReturnValue) == 0x000020, "Member 'GlobalFunctions_C_CheckIfOnCommunityBanList::CallFunc_GetSteamIdFromPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_CheckIfOnCommunityBanList, K2Node_DynamicCast_AsBP_Game_Mode_Base) == 0x000028, "Member 'GlobalFunctions_C_CheckIfOnCommunityBanList::K2Node_DynamicCast_AsBP_Game_Mode_Base' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_CheckIfOnCommunityBanList, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'GlobalFunctions_C_CheckIfOnCommunityBanList::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_CheckIfOnCommunityBanList, CallFunc_BreakSteamID_ReturnValue) == 0x000038, "Member 'GlobalFunctions_C_CheckIfOnCommunityBanList::CallFunc_BreakSteamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_CheckIfOnCommunityBanList, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'GlobalFunctions_C_CheckIfOnCommunityBanList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_CheckIfOnCommunityBanList, CallFunc_Array_Contains_ReturnValue) == 0x000049, "Member 'GlobalFunctions_C_CheckIfOnCommunityBanList::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function GlobalFunctions.GlobalFunctions_C.GetPlayerControllerFromPlayerState
// 0x0060 (0x0060 - 0x0000)
struct GlobalFunctions_C_GetPlayerControllerFromPlayerState final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      PlayerController;                                  // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameModeBase_C*                     K2Node_DynamicCast_AsBP_Game_Mode_Base;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GlobalFunctions_C_GetPlayerControllerFromPlayerState) == 0x000008, "Wrong alignment on GlobalFunctions_C_GetPlayerControllerFromPlayerState");
static_assert(sizeof(GlobalFunctions_C_GetPlayerControllerFromPlayerState) == 0x000060, "Wrong size on GlobalFunctions_C_GetPlayerControllerFromPlayerState");
static_assert(offsetof(GlobalFunctions_C_GetPlayerControllerFromPlayerState, PlayerState) == 0x000000, "Member 'GlobalFunctions_C_GetPlayerControllerFromPlayerState::PlayerState' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerControllerFromPlayerState, __WorldContext) == 0x000008, "Member 'GlobalFunctions_C_GetPlayerControllerFromPlayerState::__WorldContext' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerControllerFromPlayerState, PlayerController) == 0x000010, "Member 'GlobalFunctions_C_GetPlayerControllerFromPlayerState::PlayerController' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerControllerFromPlayerState, CallFunc_GetGameMode_ReturnValue) == 0x000018, "Member 'GlobalFunctions_C_GetPlayerControllerFromPlayerState::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerControllerFromPlayerState, Temp_int_Array_Index_Variable) == 0x000020, "Member 'GlobalFunctions_C_GetPlayerControllerFromPlayerState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerControllerFromPlayerState, K2Node_DynamicCast_AsBP_Game_Mode_Base) == 0x000028, "Member 'GlobalFunctions_C_GetPlayerControllerFromPlayerState::K2Node_DynamicCast_AsBP_Game_Mode_Base' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerControllerFromPlayerState, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'GlobalFunctions_C_GetPlayerControllerFromPlayerState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerControllerFromPlayerState, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'GlobalFunctions_C_GetPlayerControllerFromPlayerState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerControllerFromPlayerState, CallFunc_Array_Get_Item) == 0x000038, "Member 'GlobalFunctions_C_GetPlayerControllerFromPlayerState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerControllerFromPlayerState, K2Node_DynamicCast_AsPlayer_Controller) == 0x000040, "Member 'GlobalFunctions_C_GetPlayerControllerFromPlayerState::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerControllerFromPlayerState, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'GlobalFunctions_C_GetPlayerControllerFromPlayerState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerControllerFromPlayerState, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'GlobalFunctions_C_GetPlayerControllerFromPlayerState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerControllerFromPlayerState, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'GlobalFunctions_C_GetPlayerControllerFromPlayerState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerControllerFromPlayerState, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000050, "Member 'GlobalFunctions_C_GetPlayerControllerFromPlayerState::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerControllerFromPlayerState, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'GlobalFunctions_C_GetPlayerControllerFromPlayerState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GlobalFunctions_C_GetPlayerControllerFromPlayerState, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'GlobalFunctions_C_GetPlayerControllerFromPlayerState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

