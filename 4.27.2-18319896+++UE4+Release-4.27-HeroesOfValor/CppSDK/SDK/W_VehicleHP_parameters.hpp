#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_VehicleHP

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_VehicleHP.W_VehicleHP_C.ExecuteUbergraph_W_VehicleHP
// 0x0098 (0x0098 - 0x0000)
struct W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Controller_C*                       K2Node_DynamicCast_AsBP_Controller;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_VehicleBase_C*                      K2Node_DynamicCast_AsBP_Vehicle_Base;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetVehicleHealthInformation_CurrentHealthPercentage; // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVehicleHealthInformation_CurrentHealthAmount; // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVehicleHealthInformation_MaxHealth;    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP) == 0x000008, "Wrong alignment on W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP");
static_assert(sizeof(W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP) == 0x000098, "Wrong size on W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP");
static_assert(offsetof(W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP, EntryPoint) == 0x000000, "Member 'W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP, Temp_bool_Has_Been_Initd_Variable_1) == 0x000006, "Member 'W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP, K2Node_Event_MyGeometry) == 0x000008, "Member 'W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP, K2Node_Event_InDeltaTime) == 0x000040, "Member 'W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP, Temp_bool_IsClosed_Variable_1) == 0x000044, "Member 'W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP, CallFunc_Less_FloatFloat_ReturnValue) == 0x000045, "Member 'W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP, CallFunc_PlayAnimation_ReturnValue) == 0x000048, "Member 'W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP, CallFunc_GetPlayerController_ReturnValue) == 0x000050, "Member 'W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP, K2Node_DynamicCast_AsBP_Controller) == 0x000060, "Member 'W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP::K2Node_DynamicCast_AsBP_Controller' has a wrong offset!");
static_assert(offsetof(W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP, CallFunc_K2_GetPawn_ReturnValue) == 0x000070, "Member 'W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP, K2Node_DynamicCast_AsBP_Vehicle_Base) == 0x000078, "Member 'W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP::K2Node_DynamicCast_AsBP_Vehicle_Base' has a wrong offset!");
static_assert(offsetof(W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP, CallFunc_GetVehicleHealthInformation_CurrentHealthPercentage) == 0x000084, "Member 'W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP::CallFunc_GetVehicleHealthInformation_CurrentHealthPercentage' has a wrong offset!");
static_assert(offsetof(W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP, CallFunc_GetVehicleHealthInformation_CurrentHealthAmount) == 0x000088, "Member 'W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP::CallFunc_GetVehicleHealthInformation_CurrentHealthAmount' has a wrong offset!");
static_assert(offsetof(W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP, CallFunc_GetVehicleHealthInformation_MaxHealth) == 0x00008C, "Member 'W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP::CallFunc_GetVehicleHealthInformation_MaxHealth' has a wrong offset!");
static_assert(offsetof(W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000090, "Member 'W_VehicleHP_C_ExecuteUbergraph_W_VehicleHP::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function W_VehicleHP.W_VehicleHP_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_VehicleHP_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_VehicleHP_C_Tick) == 0x000004, "Wrong alignment on W_VehicleHP_C_Tick");
static_assert(sizeof(W_VehicleHP_C_Tick) == 0x00003C, "Wrong size on W_VehicleHP_C_Tick");
static_assert(offsetof(W_VehicleHP_C_Tick, MyGeometry) == 0x000000, "Member 'W_VehicleHP_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_VehicleHP_C_Tick, InDeltaTime) == 0x000038, "Member 'W_VehicleHP_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_VehicleHP.W_VehicleHP_C.SetHealthPercentage
// 0x0008 (0x0008 - 0x0000)
struct W_VehicleHP_C_SetHealthPercentage final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_VehicleHP_C_SetHealthPercentage) == 0x000004, "Wrong alignment on W_VehicleHP_C_SetHealthPercentage");
static_assert(sizeof(W_VehicleHP_C_SetHealthPercentage) == 0x000008, "Wrong size on W_VehicleHP_C_SetHealthPercentage");
static_assert(offsetof(W_VehicleHP_C_SetHealthPercentage, ReturnValue) == 0x000000, "Member 'W_VehicleHP_C_SetHealthPercentage::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleHP_C_SetHealthPercentage, CallFunc_FClamp_ReturnValue) == 0x000004, "Member 'W_VehicleHP_C_SetHealthPercentage::CallFunc_FClamp_ReturnValue' has a wrong offset!");

}

