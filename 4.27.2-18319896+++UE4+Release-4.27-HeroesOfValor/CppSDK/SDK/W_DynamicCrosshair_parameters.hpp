#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_DynamicCrosshair

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ST_Options_structs.hpp"
#include "ST_CrosshairSettings_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_DynamicCrosshair.W_DynamicCrosshair_C.ExecuteUbergraph_W_DynamicCrosshair
// 0x0230 (0x0230 - 0x0000)
struct W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_8;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_9;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_10;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_11;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_12;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_13;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_14;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_15;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_16;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_17;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_18;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_19;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_20;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_21;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_22;                            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_23;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_3;           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_Options                            CallFunc_GetOptions_Options;                       // 0x0098(0x0070)(HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_4;           // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_5;           // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_6;           // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_7;           // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCrosshairTypeIndex_Index;              // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_8;           // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_CrosshairSettings                  CallFunc_Array_Get_Item;                           // 0x0140(0x0020)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0160(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_4;               // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_2;            // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_5;               // 0x01F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_6;               // 0x01FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_7;               // 0x0214(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_8;               // 0x021C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair) == 0x000008, "Wrong alignment on W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair");
static_assert(sizeof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair) == 0x000230, "Wrong size on W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, EntryPoint) == 0x000000, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, Temp_bool_Variable) == 0x000004, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, Temp_int_Variable) == 0x000008, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, Temp_float_Variable) == 0x00000C, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, Temp_float_Variable_1) == 0x000010, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, Temp_float_Variable_2) == 0x000014, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, Temp_float_Variable_3) == 0x000018, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, Temp_float_Variable_4) == 0x00001C, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, Temp_float_Variable_5) == 0x000020, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, Temp_float_Variable_6) == 0x000024, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, Temp_float_Variable_7) == 0x000028, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, Temp_float_Variable_8) == 0x00002C, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::Temp_float_Variable_8' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, Temp_float_Variable_9) == 0x000030, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::Temp_float_Variable_9' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, Temp_float_Variable_10) == 0x000034, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::Temp_float_Variable_10' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, Temp_int_Variable_1) == 0x000038, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, Temp_float_Variable_11) == 0x00003C, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::Temp_float_Variable_11' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, Temp_float_Variable_12) == 0x000040, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::Temp_float_Variable_12' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, Temp_float_Variable_13) == 0x000044, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::Temp_float_Variable_13' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, Temp_float_Variable_14) == 0x000048, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::Temp_float_Variable_14' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, Temp_float_Variable_15) == 0x00004C, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::Temp_float_Variable_15' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, Temp_float_Variable_16) == 0x000050, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::Temp_float_Variable_16' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, Temp_float_Variable_17) == 0x000054, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::Temp_float_Variable_17' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, Temp_float_Variable_18) == 0x000058, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::Temp_float_Variable_18' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, Temp_float_Variable_19) == 0x00005C, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::Temp_float_Variable_19' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, Temp_float_Variable_20) == 0x000060, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::Temp_float_Variable_20' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, Temp_float_Variable_21) == 0x000064, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::Temp_float_Variable_21' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, Temp_bool_Variable_1) == 0x000068, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, Temp_float_Variable_22) == 0x00006C, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::Temp_float_Variable_22' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, Temp_float_Variable_23) == 0x000070, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::Temp_float_Variable_23' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, K2Node_Select_Default) == 0x000074, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000078, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000080, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x000088, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_SlotAsCanvasSlot_ReturnValue_3) == 0x000090, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_SlotAsCanvasSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_GetOptions_Options) == 0x000098, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_GetOptions_Options' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_PlayAnimation_ReturnValue) == 0x000108, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_SlotAsCanvasSlot_ReturnValue_4) == 0x000110, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_SlotAsCanvasSlot_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_SlotAsCanvasSlot_ReturnValue_5) == 0x000118, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_SlotAsCanvasSlot_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_SlotAsCanvasSlot_ReturnValue_6) == 0x000120, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_SlotAsCanvasSlot_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_SlotAsCanvasSlot_ReturnValue_7) == 0x000128, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_SlotAsCanvasSlot_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_GetCrosshairTypeIndex_Index) == 0x000130, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_GetCrosshairTypeIndex_Index' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_SlotAsCanvasSlot_ReturnValue_8) == 0x000138, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_SlotAsCanvasSlot_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_Array_Get_Item) == 0x000140, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, K2Node_Event_MyGeometry) == 0x000160, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, K2Node_Event_InDeltaTime) == 0x000198, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_MapRangeClamped_ReturnValue) == 0x00019C, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0001A0, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_Round_ReturnValue) == 0x0001A4, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0001A8, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, K2Node_Select_Default_1) == 0x0001AC, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, K2Node_Select_Default_2) == 0x0001B0, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x0001B4, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_MakeVector2D_ReturnValue) == 0x0001B8, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_MakeVector2D_ReturnValue_1) == 0x0001C0, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_MakeVector2D_ReturnValue_2) == 0x0001C8, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_MakeVector2D_ReturnValue_3) == 0x0001D0, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_MakeVector2D_ReturnValue_4) == 0x0001D8, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_MakeVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, K2Node_Select_Default_3) == 0x0001E0, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0001E8, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_MapRangeClamped_ReturnValue_2) == 0x0001F0, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_MakeVector2D_ReturnValue_5) == 0x0001F4, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_MakeVector2D_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_MakeVector2D_ReturnValue_6) == 0x0001FC, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_MakeVector2D_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000204, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000208, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_Add_FloatFloat_ReturnValue) == 0x00020C, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000210, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_MakeVector2D_ReturnValue_7) == 0x000214, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_MakeVector2D_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_MakeVector2D_ReturnValue_8) == 0x00021C, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_MakeVector2D_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair, CallFunc_PlayAnimation_ReturnValue_1) == 0x000228, "Member 'W_DynamicCrosshair_C_ExecuteUbergraph_W_DynamicCrosshair::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function W_DynamicCrosshair.W_DynamicCrosshair_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_DynamicCrosshair_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DynamicCrosshair_C_Tick) == 0x000004, "Wrong alignment on W_DynamicCrosshair_C_Tick");
static_assert(sizeof(W_DynamicCrosshair_C_Tick) == 0x00003C, "Wrong size on W_DynamicCrosshair_C_Tick");
static_assert(offsetof(W_DynamicCrosshair_C_Tick, MyGeometry) == 0x000000, "Member 'W_DynamicCrosshair_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_Tick, InDeltaTime) == 0x000038, "Member 'W_DynamicCrosshair_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_DynamicCrosshair.W_DynamicCrosshair_C.ShowCenterDot
// 0x00A0 (0x00A0 - 0x0000)
struct W_DynamicCrosshair_C_ShowCenterDot final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_Options                            CallFunc_GetOptions_Options;                       // 0x0008(0x0070)(HasGetValueTypeHash)
	int32                                         CallFunc_GetCrosshairTypeIndex_Index;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_CrosshairSettings                  CallFunc_Array_Get_Item;                           // 0x007C(0x0020)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DynamicCrosshair_C_ShowCenterDot) == 0x000008, "Wrong alignment on W_DynamicCrosshair_C_ShowCenterDot");
static_assert(sizeof(W_DynamicCrosshair_C_ShowCenterDot) == 0x0000A0, "Wrong size on W_DynamicCrosshair_C_ShowCenterDot");
static_assert(offsetof(W_DynamicCrosshair_C_ShowCenterDot, ReturnValue) == 0x000000, "Member 'W_DynamicCrosshair_C_ShowCenterDot::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ShowCenterDot, Temp_bool_Variable) == 0x000001, "Member 'W_DynamicCrosshair_C_ShowCenterDot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ShowCenterDot, Temp_byte_Variable) == 0x000002, "Member 'W_DynamicCrosshair_C_ShowCenterDot::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ShowCenterDot, Temp_byte_Variable_1) == 0x000003, "Member 'W_DynamicCrosshair_C_ShowCenterDot::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ShowCenterDot, CallFunc_GetOptions_Options) == 0x000008, "Member 'W_DynamicCrosshair_C_ShowCenterDot::CallFunc_GetOptions_Options' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ShowCenterDot, CallFunc_GetCrosshairTypeIndex_Index) == 0x000078, "Member 'W_DynamicCrosshair_C_ShowCenterDot::CallFunc_GetCrosshairTypeIndex_Index' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ShowCenterDot, CallFunc_Array_Get_Item) == 0x00007C, "Member 'W_DynamicCrosshair_C_ShowCenterDot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_ShowCenterDot, K2Node_Select_Default) == 0x00009C, "Member 'W_DynamicCrosshair_C_ShowCenterDot::K2Node_Select_Default' has a wrong offset!");

// Function W_DynamicCrosshair.W_DynamicCrosshair_C.SetCrosshairColor
// 0x00B8 (0x00B8 - 0x0000)
struct W_DynamicCrosshair_C_SetCrosshairColor final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_Options                            CallFunc_GetOptions_Options;                       // 0x0010(0x0070)(HasGetValueTypeHash)
	int32                                         CallFunc_GetCrosshairTypeIndex_Index;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_CrosshairSettings                  CallFunc_Array_Get_Item;                           // 0x0084(0x0020)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x00A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DynamicCrosshair_C_SetCrosshairColor) == 0x000008, "Wrong alignment on W_DynamicCrosshair_C_SetCrosshairColor");
static_assert(sizeof(W_DynamicCrosshair_C_SetCrosshairColor) == 0x0000B8, "Wrong size on W_DynamicCrosshair_C_SetCrosshairColor");
static_assert(offsetof(W_DynamicCrosshair_C_SetCrosshairColor, ReturnValue) == 0x000000, "Member 'W_DynamicCrosshair_C_SetCrosshairColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_SetCrosshairColor, CallFunc_GetOptions_Options) == 0x000010, "Member 'W_DynamicCrosshair_C_SetCrosshairColor::CallFunc_GetOptions_Options' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_SetCrosshairColor, CallFunc_GetCrosshairTypeIndex_Index) == 0x000080, "Member 'W_DynamicCrosshair_C_SetCrosshairColor::CallFunc_GetCrosshairTypeIndex_Index' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_SetCrosshairColor, CallFunc_Array_Get_Item) == 0x000084, "Member 'W_DynamicCrosshair_C_SetCrosshairColor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_DynamicCrosshair_C_SetCrosshairColor, K2Node_MakeStruct_LinearColor) == 0x0000A4, "Member 'W_DynamicCrosshair_C_SetCrosshairColor::K2Node_MakeStruct_LinearColor' has a wrong offset!");

}

