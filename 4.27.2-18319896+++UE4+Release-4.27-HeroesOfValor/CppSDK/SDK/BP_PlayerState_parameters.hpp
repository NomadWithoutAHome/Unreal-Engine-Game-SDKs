#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerState

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SteamCore_structs.hpp"
#include "E_DamageTypes_structs.hpp"
#include "ST_PlayerStats_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerState.BP_PlayerState_C.ExecuteUbergraph_BP_PlayerState
// 0x01E0 (0x01E0 - 0x0000)
struct BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfOnCommunityBanList_OnList;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FLeaderboardFindResult& Data, bool bWasSuccessful)> K2Node_CreateDelegate_OutputDelegate; // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FLeaderboardFindResult                 K2Node_CustomEvent_Data;                           // 0x0018(0x0010)(ConstParm, NoDestructor)
	bool                                          K2Node_CustomEvent_bWasSuccessful;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLeaderboardFindResult                 Temp_struct_Variable;                              // 0x0030(0x0010)(NoDestructor)
	class USteamCoreUserStatsAsyncActionFindLeaderboard* CallFunc_FindLeaderboardAsync_ReturnValue;  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLeaderboardScoreUploaded              K2Node_CustomEvent_Data_1;                         // 0x0050(0x0020)(ConstParm, NoDestructor)
	bool                                          K2Node_CustomEvent_bWasSuccessful_1;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(const struct FLeaderboardScoreUploaded& Data, bool bWasSuccessful)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0074(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation;                    // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_DamageAmount;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_CriticalHit_;                   // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_HitActor;                       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsLow;                          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_DamageTypes                                 K2Node_CustomEvent_DamageType;                     // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_KilledEnemyName;                // 0x00B0(0x0018)()
	bool                                          K2Node_CustomEvent_IsAssist;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_CountAsKill;                    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Message;                        // 0x00D0(0x0018)()
	struct FLinearColor                           K2Node_CustomEvent_Color;                          // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_4;               // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_PlayerStats                        K2Node_CustomEvent_Stats;                          // 0x0100(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_RequestCurrentStats_ReturnValue;          // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IncreaseStat_Success;                     // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IncreaseStat_Success_1;                   // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IncreaseStat_Success_2;                   // 0x016B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IncreaseStat_Success_3;                   // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IncreaseStat_Success_4;                   // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IncreaseStat_Success_5;                   // 0x016E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x016F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StoreStats_ReturnValue;                   // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IncreaseStat_Success_6;                   // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_173[0x1];                                      // 0x0173(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Spawn_Transform_Location;       // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_4;                     // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_182[0x6];                                      // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BaseController_C*                   K2Node_DynamicCast_AsBP_Base_Controller;           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLeaderboardScoreUploaded              Temp_struct_Variable_1;                            // 0x01A0(0x0020)(NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTotalPlayerScore_TotalScore;           // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USteamCoreUserStatsAsyncActionUploadLeaderboardScore* CallFunc_UploadLeaderboardScoreAsync_ReturnValue; // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState) == 0x000008, "Wrong alignment on BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState");
static_assert(sizeof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState) == 0x0001E0, "Wrong size on BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, EntryPoint) == 0x000000, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_CheckIfOnCommunityBanList_OnList) == 0x000004, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_CheckIfOnCommunityBanList_OnList' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_Data) == 0x000018, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_Data' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_bWasSuccessful) == 0x000028, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_bWasSuccessful' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_bool_Variable) == 0x000029, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_struct_Variable) == 0x000030, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_FindLeaderboardAsync_ReturnValue) == 0x000040, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_FindLeaderboardAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_Data_1) == 0x000050, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_Data_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_bWasSuccessful_1) == 0x000070, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_bWasSuccessful_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_bool_IsClosed_Variable) == 0x000071, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_bool_Has_Been_Initd_Variable) == 0x000072, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_bool_IsClosed_Variable_1) == 0x000073, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CreateDelegate_OutputDelegate_1) == 0x000074, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_bool_Has_Been_Initd_Variable_1) == 0x000084, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_bool_Has_Been_Initd_Variable_2) == 0x000085, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_bool_IsClosed_Variable_2) == 0x000086, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_bool_Has_Been_Initd_Variable_3) == 0x000087, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_Event_DeltaSeconds) == 0x000088, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_HitLocation) == 0x00008C, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_DamageAmount) == 0x000098, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_DamageAmount' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_CriticalHit_) == 0x00009C, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_CriticalHit_' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_HitActor) == 0x0000A0, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_HitActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_IsLow) == 0x0000A8, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_IsLow' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_DamageType) == 0x0000A9, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_KilledEnemyName) == 0x0000B0, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_KilledEnemyName' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_IsAssist) == 0x0000C8, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_IsAssist' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_CountAsKill) == 0x0000C9, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_CountAsKill' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_Message) == 0x0000D0, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_Message' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_Color) == 0x0000E8, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_Color' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Greater_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000F9, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0000FA, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_bool_Has_Been_Initd_Variable_4) == 0x0000FB, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_bool_Has_Been_Initd_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Greater_IntInt_ReturnValue_3) == 0x0000FC, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_Stats) == 0x000100, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_Stats' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_RequestCurrentStats_ReturnValue) == 0x000168, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_RequestCurrentStats_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_IncreaseStat_Success) == 0x000169, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_IncreaseStat_Success' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_IncreaseStat_Success_1) == 0x00016A, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_IncreaseStat_Success_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_IncreaseStat_Success_2) == 0x00016B, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_IncreaseStat_Success_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_IncreaseStat_Success_3) == 0x00016C, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_IncreaseStat_Success_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_IncreaseStat_Success_4) == 0x00016D, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_IncreaseStat_Success_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_IncreaseStat_Success_5) == 0x00016E, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_IncreaseStat_Success_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Greater_IntInt_ReturnValue_4) == 0x00016F, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_StoreStats_ReturnValue) == 0x000170, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_StoreStats_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_IsServer_ReturnValue) == 0x000171, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_IncreaseStat_Success_6) == 0x000172, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_IncreaseStat_Success_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_Spawn_Transform_Location) == 0x000174, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_Spawn_Transform_Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_bool_IsClosed_Variable_3) == 0x000180, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_bool_IsClosed_Variable_4) == 0x000181, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_bool_IsClosed_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_GetPlayerController_ReturnValue) == 0x000188, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_DynamicCast_AsBP_Base_Controller) == 0x000190, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_DynamicCast_AsBP_Base_Controller' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_DynamicCast_bSuccess) == 0x000198, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_struct_Variable_1) == 0x0001A0, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_bool_Variable_1) == 0x0001C0, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_GetTotalPlayerScore_TotalScore) == 0x0001C4, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_GetTotalPlayerScore_TotalScore' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_UploadLeaderboardScoreAsync_ReturnValue) == 0x0001C8, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_UploadLeaderboardScoreAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0001D0, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_FClamp_ReturnValue) == 0x0001D4, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_IsValid_ReturnValue_1) == 0x0001D8, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.OC_SpawnEventToken
// 0x000C (0x000C - 0x0000)
struct BP_PlayerState_C_OC_SpawnEventToken final
{
public:
	struct FVector                                Spawn_Transform_Location;                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_OC_SpawnEventToken) == 0x000004, "Wrong alignment on BP_PlayerState_C_OC_SpawnEventToken");
static_assert(sizeof(BP_PlayerState_C_OC_SpawnEventToken) == 0x00000C, "Wrong size on BP_PlayerState_C_OC_SpawnEventToken");
static_assert(offsetof(BP_PlayerState_C_OC_SpawnEventToken, Spawn_Transform_Location) == 0x000000, "Member 'BP_PlayerState_C_OC_SpawnEventToken::Spawn_Transform_Location' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.OC_SendStatsToSteam
// 0x0068 (0x0068 - 0x0000)
struct BP_PlayerState_C_OC_SendStatsToSteam final
{
public:
	struct FST_PlayerStats                        Stats;                                             // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_OC_SendStatsToSteam) == 0x000008, "Wrong alignment on BP_PlayerState_C_OC_SendStatsToSteam");
static_assert(sizeof(BP_PlayerState_C_OC_SendStatsToSteam) == 0x000068, "Wrong size on BP_PlayerState_C_OC_SendStatsToSteam");
static_assert(offsetof(BP_PlayerState_C_OC_SendStatsToSteam, Stats) == 0x000000, "Member 'BP_PlayerState_C_OC_SendStatsToSteam::Stats' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.OC_PostSpecialActionNotification
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerState_C_OC_PostSpecialActionNotification final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FLinearColor                           Color;                                             // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_OC_PostSpecialActionNotification) == 0x000008, "Wrong alignment on BP_PlayerState_C_OC_PostSpecialActionNotification");
static_assert(sizeof(BP_PlayerState_C_OC_PostSpecialActionNotification) == 0x000028, "Wrong size on BP_PlayerState_C_OC_PostSpecialActionNotification");
static_assert(offsetof(BP_PlayerState_C_OC_PostSpecialActionNotification, Message) == 0x000000, "Member 'BP_PlayerState_C_OC_PostSpecialActionNotification::Message' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_OC_PostSpecialActionNotification, Color) == 0x000018, "Member 'BP_PlayerState_C_OC_PostSpecialActionNotification::Color' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.OC_Kill
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerState_C_OC_Kill final
{
public:
	class FText                                   KilledEnemyName;                                   // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          IsAssist;                                          // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CountAsKill;                                       // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_OC_Kill) == 0x000008, "Wrong alignment on BP_PlayerState_C_OC_Kill");
static_assert(sizeof(BP_PlayerState_C_OC_Kill) == 0x000020, "Wrong size on BP_PlayerState_C_OC_Kill");
static_assert(offsetof(BP_PlayerState_C_OC_Kill, KilledEnemyName) == 0x000000, "Member 'BP_PlayerState_C_OC_Kill::KilledEnemyName' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_OC_Kill, IsAssist) == 0x000018, "Member 'BP_PlayerState_C_OC_Kill::IsAssist' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_OC_Kill, CountAsKill) == 0x000019, "Member 'BP_PlayerState_C_OC_Kill::CountAsKill' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.OC_DisplayDamageNumbers
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerState_C_OC_DisplayDamageNumbers final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageAmount;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CriticalHit_;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 HitActor;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLow;                                             // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_DamageTypes                                 DamageType;                                        // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_OC_DisplayDamageNumbers) == 0x000008, "Wrong alignment on BP_PlayerState_C_OC_DisplayDamageNumbers");
static_assert(sizeof(BP_PlayerState_C_OC_DisplayDamageNumbers) == 0x000028, "Wrong size on BP_PlayerState_C_OC_DisplayDamageNumbers");
static_assert(offsetof(BP_PlayerState_C_OC_DisplayDamageNumbers, HitLocation) == 0x000000, "Member 'BP_PlayerState_C_OC_DisplayDamageNumbers::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_OC_DisplayDamageNumbers, DamageAmount) == 0x00000C, "Member 'BP_PlayerState_C_OC_DisplayDamageNumbers::DamageAmount' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_OC_DisplayDamageNumbers, CriticalHit_) == 0x000010, "Member 'BP_PlayerState_C_OC_DisplayDamageNumbers::CriticalHit_' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_OC_DisplayDamageNumbers, HitActor) == 0x000018, "Member 'BP_PlayerState_C_OC_DisplayDamageNumbers::HitActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_OC_DisplayDamageNumbers, IsLow) == 0x000020, "Member 'BP_PlayerState_C_OC_DisplayDamageNumbers::IsLow' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_OC_DisplayDamageNumbers, DamageType) == 0x000021, "Member 'BP_PlayerState_C_OC_DisplayDamageNumbers::DamageType' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerState_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_PlayerState_C_ReceiveTick");
static_assert(sizeof(BP_PlayerState_C_ReceiveTick) == 0x000004, "Wrong size on BP_PlayerState_C_ReceiveTick");
static_assert(offsetof(BP_PlayerState_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_PlayerState_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.OnCallback_CBE15C504D14F6B56FCC2DB5DFE71574
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerState_C_OnCallback_CBE15C504D14F6B56FCC2DB5DFE71574 final
{
public:
	struct FLeaderboardFindResult                 Data;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          bWasSuccessful;                                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_OnCallback_CBE15C504D14F6B56FCC2DB5DFE71574) == 0x000008, "Wrong alignment on BP_PlayerState_C_OnCallback_CBE15C504D14F6B56FCC2DB5DFE71574");
static_assert(sizeof(BP_PlayerState_C_OnCallback_CBE15C504D14F6B56FCC2DB5DFE71574) == 0x000018, "Wrong size on BP_PlayerState_C_OnCallback_CBE15C504D14F6B56FCC2DB5DFE71574");
static_assert(offsetof(BP_PlayerState_C_OnCallback_CBE15C504D14F6B56FCC2DB5DFE71574, Data) == 0x000000, "Member 'BP_PlayerState_C_OnCallback_CBE15C504D14F6B56FCC2DB5DFE71574::Data' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_OnCallback_CBE15C504D14F6B56FCC2DB5DFE71574, bWasSuccessful) == 0x000010, "Member 'BP_PlayerState_C_OnCallback_CBE15C504D14F6B56FCC2DB5DFE71574::bWasSuccessful' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.OnCallback_B34C091241C05CE2FEC424A9088164C6
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerState_C_OnCallback_B34C091241C05CE2FEC424A9088164C6 final
{
public:
	struct FLeaderboardScoreUploaded              Data;                                              // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          bWasSuccessful;                                    // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_OnCallback_B34C091241C05CE2FEC424A9088164C6) == 0x000008, "Wrong alignment on BP_PlayerState_C_OnCallback_B34C091241C05CE2FEC424A9088164C6");
static_assert(sizeof(BP_PlayerState_C_OnCallback_B34C091241C05CE2FEC424A9088164C6) == 0x000028, "Wrong size on BP_PlayerState_C_OnCallback_B34C091241C05CE2FEC424A9088164C6");
static_assert(offsetof(BP_PlayerState_C_OnCallback_B34C091241C05CE2FEC424A9088164C6, Data) == 0x000000, "Member 'BP_PlayerState_C_OnCallback_B34C091241C05CE2FEC424A9088164C6::Data' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_OnCallback_B34C091241C05CE2FEC424A9088164C6, bWasSuccessful) == 0x000020, "Member 'BP_PlayerState_C_OnCallback_B34C091241C05CE2FEC424A9088164C6::bWasSuccessful' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.IncreaseKills
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerState_C_IncreaseKills final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_IncreaseKills) == 0x000004, "Wrong alignment on BP_PlayerState_C_IncreaseKills");
static_assert(sizeof(BP_PlayerState_C_IncreaseKills) == 0x000008, "Wrong size on BP_PlayerState_C_IncreaseKills");
static_assert(offsetof(BP_PlayerState_C_IncreaseKills, Amount) == 0x000000, "Member 'BP_PlayerState_C_IncreaseKills::Amount' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_IncreaseKills, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_PlayerState_C_IncreaseKills::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.CacheUsername
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerState_C_CacheUsername final
{
public:
	class FString                                 UserName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_CacheUsername) == 0x000008, "Wrong alignment on BP_PlayerState_C_CacheUsername");
static_assert(sizeof(BP_PlayerState_C_CacheUsername) == 0x000010, "Wrong size on BP_PlayerState_C_CacheUsername");
static_assert(offsetof(BP_PlayerState_C_CacheUsername, UserName) == 0x000000, "Member 'BP_PlayerState_C_CacheUsername::UserName' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.ValidateUsername
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerState_C_ValidateUsername final
{
public:
	class FString                                 UserName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_ValidateUsername) == 0x000008, "Wrong alignment on BP_PlayerState_C_ValidateUsername");
static_assert(sizeof(BP_PlayerState_C_ValidateUsername) == 0x000018, "Wrong size on BP_PlayerState_C_ValidateUsername");
static_assert(offsetof(BP_PlayerState_C_ValidateUsername, UserName) == 0x000000, "Member 'BP_PlayerState_C_ValidateUsername::UserName' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ValidateUsername, IsValid) == 0x000010, "Member 'BP_PlayerState_C_ValidateUsername::IsValid' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ValidateUsername, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000011, "Member 'BP_PlayerState_C_ValidateUsername::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ValidateUsername, CallFunc_IsEmpty_ReturnValue) == 0x000012, "Member 'BP_PlayerState_C_ValidateUsername::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.GetSteamID
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerState_C_GetSteamID final
{
public:
	class FString                                 SteamID;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	struct FSteamID                               CallFunc_GetSteamIdFromPlayerState_ReturnValue;    // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BreakSteamID_ReturnValue;                 // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_GetSteamID) == 0x000008, "Wrong alignment on BP_PlayerState_C_GetSteamID");
static_assert(sizeof(BP_PlayerState_C_GetSteamID) == 0x000028, "Wrong size on BP_PlayerState_C_GetSteamID");
static_assert(offsetof(BP_PlayerState_C_GetSteamID, SteamID) == 0x000000, "Member 'BP_PlayerState_C_GetSteamID::SteamID' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_GetSteamID, CallFunc_GetSteamIdFromPlayerState_ReturnValue) == 0x000010, "Member 'BP_PlayerState_C_GetSteamID::CallFunc_GetSteamIdFromPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_GetSteamID, CallFunc_BreakSteamID_ReturnValue) == 0x000018, "Member 'BP_PlayerState_C_GetSteamID::CallFunc_BreakSteamID_ReturnValue' has a wrong offset!");

}

