#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkillBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_SkillSlots_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SkillBase.BP_SkillBase_C
// 0x0030 (0x0250 - 0x0220)
class ABP_SkillBase_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        Character;                                         // 0x0230(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, RepNotify, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	E_SkillSlots                                  SkillSlot;                                         // 0x0238(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_239[0x3];                                      // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SkillCooldown;                                     // 0x023C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkillDuration;                                     // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkillTimeThatHasPassed;                            // 0x0244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RunSkillTime;                                      // 0x0248(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          RemainActiveInVehicle;                             // 0x0249(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          EndActiveSkillsUponUse;                            // 0x024A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AttachToPlayer;                                    // 0x024B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_SkillBase(int32 EntryPoint);
	void EndSkillFromCharacter();
	void ReduceSkillDuration(float Amount);
	void ReceiveBeginPlay();
	void CharacterSet();
	void BeginSkillDuration();
	void EndSkill();
	void RechargeSkill();
	void ReceiveTick(float DeltaSeconds);
	void OnRep_Character();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SkillBase_C">();
	}
	static class ABP_SkillBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SkillBase_C>();
	}
};
static_assert(alignof(ABP_SkillBase_C) == 0x000008, "Wrong alignment on ABP_SkillBase_C");
static_assert(sizeof(ABP_SkillBase_C) == 0x000250, "Wrong size on ABP_SkillBase_C");
static_assert(offsetof(ABP_SkillBase_C, UberGraphFrame) == 0x000220, "Member 'ABP_SkillBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SkillBase_C, DefaultSceneRoot) == 0x000228, "Member 'ABP_SkillBase_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_SkillBase_C, Character) == 0x000230, "Member 'ABP_SkillBase_C::Character' has a wrong offset!");
static_assert(offsetof(ABP_SkillBase_C, SkillSlot) == 0x000238, "Member 'ABP_SkillBase_C::SkillSlot' has a wrong offset!");
static_assert(offsetof(ABP_SkillBase_C, SkillCooldown) == 0x00023C, "Member 'ABP_SkillBase_C::SkillCooldown' has a wrong offset!");
static_assert(offsetof(ABP_SkillBase_C, SkillDuration) == 0x000240, "Member 'ABP_SkillBase_C::SkillDuration' has a wrong offset!");
static_assert(offsetof(ABP_SkillBase_C, SkillTimeThatHasPassed) == 0x000244, "Member 'ABP_SkillBase_C::SkillTimeThatHasPassed' has a wrong offset!");
static_assert(offsetof(ABP_SkillBase_C, RunSkillTime) == 0x000248, "Member 'ABP_SkillBase_C::RunSkillTime' has a wrong offset!");
static_assert(offsetof(ABP_SkillBase_C, RemainActiveInVehicle) == 0x000249, "Member 'ABP_SkillBase_C::RemainActiveInVehicle' has a wrong offset!");
static_assert(offsetof(ABP_SkillBase_C, EndActiveSkillsUponUse) == 0x00024A, "Member 'ABP_SkillBase_C::EndActiveSkillsUponUse' has a wrong offset!");
static_assert(offsetof(ABP_SkillBase_C, AttachToPlayer) == 0x00024B, "Member 'ABP_SkillBase_C::AttachToPlayer' has a wrong offset!");

}

