#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Tooltip

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Tooltip.W_Tooltip_C
// 0x0068 (0x02C8 - 0x0260)
class UW_Tooltip_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_92;                                          // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Text;                                    // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Title;                                   // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   TipText;                                           // 0x0280(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   Title;                                             // 0x0298(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	int32                                         TextFontSize;                                      // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         TitleFontSize;                                     // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture2D*                             Icon;                                              // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         IconSize;                                          // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_Tooltip(int32 EntryPoint);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	ESlateVisibility ShowIcon();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Tooltip_C">();
	}
	static class UW_Tooltip_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Tooltip_C>();
	}
};
static_assert(alignof(UW_Tooltip_C) == 0x000008, "Wrong alignment on UW_Tooltip_C");
static_assert(sizeof(UW_Tooltip_C) == 0x0002C8, "Wrong size on UW_Tooltip_C");
static_assert(offsetof(UW_Tooltip_C, UberGraphFrame) == 0x000260, "Member 'UW_Tooltip_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Tooltip_C, Image_92) == 0x000268, "Member 'UW_Tooltip_C::Image_92' has a wrong offset!");
static_assert(offsetof(UW_Tooltip_C, TextBlock_Text) == 0x000270, "Member 'UW_Tooltip_C::TextBlock_Text' has a wrong offset!");
static_assert(offsetof(UW_Tooltip_C, TextBlock_Title) == 0x000278, "Member 'UW_Tooltip_C::TextBlock_Title' has a wrong offset!");
static_assert(offsetof(UW_Tooltip_C, TipText) == 0x000280, "Member 'UW_Tooltip_C::TipText' has a wrong offset!");
static_assert(offsetof(UW_Tooltip_C, Title) == 0x000298, "Member 'UW_Tooltip_C::Title' has a wrong offset!");
static_assert(offsetof(UW_Tooltip_C, TextFontSize) == 0x0002B0, "Member 'UW_Tooltip_C::TextFontSize' has a wrong offset!");
static_assert(offsetof(UW_Tooltip_C, TitleFontSize) == 0x0002B4, "Member 'UW_Tooltip_C::TitleFontSize' has a wrong offset!");
static_assert(offsetof(UW_Tooltip_C, Icon) == 0x0002B8, "Member 'UW_Tooltip_C::Icon' has a wrong offset!");
static_assert(offsetof(UW_Tooltip_C, IconSize) == 0x0002C0, "Member 'UW_Tooltip_C::IconSize' has a wrong offset!");

}

