#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ST_Options

#include "Basic.hpp"

#include "ST_CrosshairSettings_structs.hpp"


namespace SDK
{

// UserDefinedStruct ST_Options.ST_Options
// 0x0070 (0x0070 - 0x0000)
struct FST_Options final
{
public:
	float                                         MouseSensitivity_2_102E18DC4CB7C5BE531B5A80E64EBCBC; // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlaneMouseSensitivity_8_5C1E3EB248204E5FAD61C38D5F074830; // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AimToggle_6_DA13C1EE420205509840B2AB0E735A69;      // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InvertedFlying_10_52D00F184063F318D7BE1FBAB924F881; // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseMouseToStrafe_12_6740C6DE4FF0D90D524A338AF9DF2826; // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseInstantThrow_69_E3BCFAFB430D2657130189A1B9647AD5; // 0x000B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         MasterVolume_19_C8AA031340C6551B2652E5B202FB9BE9;  // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EffectsVolume_21_B8FABB5145E4945332503E9BF499ACD0; // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MusicVolume_23_CABC50FD47D4D0519D0EBBB4851FDE7C;   // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AAMethod_26_D88827CF436348920597678876AA82C8;      // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SharpenAmount_28_7F8C1C4F4E3B948532CAB39B74593B7A; // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableCrosshairHitGlow_30_F96A58D4450C5EFCE8C1DEBCF4A1D284; // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          EnableAnimatedCrosshair_32_F5FDFB9042603CF130E6E9A124F0F9D2; // 0x0021(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MouseSensitivtyAiming_35_286033F74BFAC6F653B0AFB5E72F78B8; // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoReloadStowedAwayWeapons_37_75641E194A17B052E8E5AE92C975C1AF; // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxChatMessages_40_26E1EFF64E569640145B0CB7B4B69D5A; // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowCrosshairReloadBar_43_980E0E5643399DD255974FB59D137898; // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          EnableCenterDot_45_4D2C4C8F4339CF8839D1968FE95C0828; // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseStaticCrosshair_47_032CB5714A93659309D10E97D24F58BE; // 0x0032(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StaticCrosshairSize_50_4F5AAB644067925599E7F4838D3C01F8; // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CrosshairRedColor_55_1A4B8D6B4F9AC8B771C100B4184A259D; // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CrosshairGreenColor_56_3D83F5284BF4F3C867BB85B389DE9B49; // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CrosshairBlueColor_58_EF387CEF4DA4E10060BBDD945A093FA6; // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CrosshairLineLength_61_C80ED1884DE2F72483905D973C0C6F2D; // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FST_CrosshairSettings>          Crosshairs_65_6A194DED48CFA00C056F94AA7D0904CC;    // 0x0048(0x0010)(Edit, BlueprintVisible)
	bool                                          InvertScrollWeaponSwapDirection_68_E1D2DD2F4E5D085542AC01BBBFE09611; // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseCustomCrosshair_71_FE70E1A64F7759CCB6ADCE9DE9701ECB; // 0x0059(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CrosshairSize_74_A948471E42E6B94D5594D29569B017F2; // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowBOTtag_76_0C3DA5E343CA0FFB5C20F48D3F654CF8;    // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MarketingFeaturesEnabled_78_D0EFB62A49DD64698537DB9E7565F63A; // 0x0061(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MotionBlurAmount_82_FDF667E64517577B7785D9A6716D7739; // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableTesselation_84_66E827DE4CB81D36DA64B6B2303A7EDE; // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          EnableAmbientOcclusion_86_C655C43D4AD065E58522D4A38BBA12DB; // 0x0069(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InvertMouseY_88_29E4E787456E7BE73A7F498BBC901342;  // 0x006A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ToggleSprint_92_6A89D7B543F08F48123E76AA849E53DB;  // 0x006B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FST_Options) == 0x000008, "Wrong alignment on FST_Options");
static_assert(sizeof(FST_Options) == 0x000070, "Wrong size on FST_Options");
static_assert(offsetof(FST_Options, MouseSensitivity_2_102E18DC4CB7C5BE531B5A80E64EBCBC) == 0x000000, "Member 'FST_Options::MouseSensitivity_2_102E18DC4CB7C5BE531B5A80E64EBCBC' has a wrong offset!");
static_assert(offsetof(FST_Options, PlaneMouseSensitivity_8_5C1E3EB248204E5FAD61C38D5F074830) == 0x000004, "Member 'FST_Options::PlaneMouseSensitivity_8_5C1E3EB248204E5FAD61C38D5F074830' has a wrong offset!");
static_assert(offsetof(FST_Options, AimToggle_6_DA13C1EE420205509840B2AB0E735A69) == 0x000008, "Member 'FST_Options::AimToggle_6_DA13C1EE420205509840B2AB0E735A69' has a wrong offset!");
static_assert(offsetof(FST_Options, InvertedFlying_10_52D00F184063F318D7BE1FBAB924F881) == 0x000009, "Member 'FST_Options::InvertedFlying_10_52D00F184063F318D7BE1FBAB924F881' has a wrong offset!");
static_assert(offsetof(FST_Options, UseMouseToStrafe_12_6740C6DE4FF0D90D524A338AF9DF2826) == 0x00000A, "Member 'FST_Options::UseMouseToStrafe_12_6740C6DE4FF0D90D524A338AF9DF2826' has a wrong offset!");
static_assert(offsetof(FST_Options, UseInstantThrow_69_E3BCFAFB430D2657130189A1B9647AD5) == 0x00000B, "Member 'FST_Options::UseInstantThrow_69_E3BCFAFB430D2657130189A1B9647AD5' has a wrong offset!");
static_assert(offsetof(FST_Options, MasterVolume_19_C8AA031340C6551B2652E5B202FB9BE9) == 0x00000C, "Member 'FST_Options::MasterVolume_19_C8AA031340C6551B2652E5B202FB9BE9' has a wrong offset!");
static_assert(offsetof(FST_Options, EffectsVolume_21_B8FABB5145E4945332503E9BF499ACD0) == 0x000010, "Member 'FST_Options::EffectsVolume_21_B8FABB5145E4945332503E9BF499ACD0' has a wrong offset!");
static_assert(offsetof(FST_Options, MusicVolume_23_CABC50FD47D4D0519D0EBBB4851FDE7C) == 0x000014, "Member 'FST_Options::MusicVolume_23_CABC50FD47D4D0519D0EBBB4851FDE7C' has a wrong offset!");
static_assert(offsetof(FST_Options, AAMethod_26_D88827CF436348920597678876AA82C8) == 0x000018, "Member 'FST_Options::AAMethod_26_D88827CF436348920597678876AA82C8' has a wrong offset!");
static_assert(offsetof(FST_Options, SharpenAmount_28_7F8C1C4F4E3B948532CAB39B74593B7A) == 0x00001C, "Member 'FST_Options::SharpenAmount_28_7F8C1C4F4E3B948532CAB39B74593B7A' has a wrong offset!");
static_assert(offsetof(FST_Options, EnableCrosshairHitGlow_30_F96A58D4450C5EFCE8C1DEBCF4A1D284) == 0x000020, "Member 'FST_Options::EnableCrosshairHitGlow_30_F96A58D4450C5EFCE8C1DEBCF4A1D284' has a wrong offset!");
static_assert(offsetof(FST_Options, EnableAnimatedCrosshair_32_F5FDFB9042603CF130E6E9A124F0F9D2) == 0x000021, "Member 'FST_Options::EnableAnimatedCrosshair_32_F5FDFB9042603CF130E6E9A124F0F9D2' has a wrong offset!");
static_assert(offsetof(FST_Options, MouseSensitivtyAiming_35_286033F74BFAC6F653B0AFB5E72F78B8) == 0x000024, "Member 'FST_Options::MouseSensitivtyAiming_35_286033F74BFAC6F653B0AFB5E72F78B8' has a wrong offset!");
static_assert(offsetof(FST_Options, AutoReloadStowedAwayWeapons_37_75641E194A17B052E8E5AE92C975C1AF) == 0x000028, "Member 'FST_Options::AutoReloadStowedAwayWeapons_37_75641E194A17B052E8E5AE92C975C1AF' has a wrong offset!");
static_assert(offsetof(FST_Options, MaxChatMessages_40_26E1EFF64E569640145B0CB7B4B69D5A) == 0x00002C, "Member 'FST_Options::MaxChatMessages_40_26E1EFF64E569640145B0CB7B4B69D5A' has a wrong offset!");
static_assert(offsetof(FST_Options, ShowCrosshairReloadBar_43_980E0E5643399DD255974FB59D137898) == 0x000030, "Member 'FST_Options::ShowCrosshairReloadBar_43_980E0E5643399DD255974FB59D137898' has a wrong offset!");
static_assert(offsetof(FST_Options, EnableCenterDot_45_4D2C4C8F4339CF8839D1968FE95C0828) == 0x000031, "Member 'FST_Options::EnableCenterDot_45_4D2C4C8F4339CF8839D1968FE95C0828' has a wrong offset!");
static_assert(offsetof(FST_Options, UseStaticCrosshair_47_032CB5714A93659309D10E97D24F58BE) == 0x000032, "Member 'FST_Options::UseStaticCrosshair_47_032CB5714A93659309D10E97D24F58BE' has a wrong offset!");
static_assert(offsetof(FST_Options, StaticCrosshairSize_50_4F5AAB644067925599E7F4838D3C01F8) == 0x000034, "Member 'FST_Options::StaticCrosshairSize_50_4F5AAB644067925599E7F4838D3C01F8' has a wrong offset!");
static_assert(offsetof(FST_Options, CrosshairRedColor_55_1A4B8D6B4F9AC8B771C100B4184A259D) == 0x000038, "Member 'FST_Options::CrosshairRedColor_55_1A4B8D6B4F9AC8B771C100B4184A259D' has a wrong offset!");
static_assert(offsetof(FST_Options, CrosshairGreenColor_56_3D83F5284BF4F3C867BB85B389DE9B49) == 0x00003C, "Member 'FST_Options::CrosshairGreenColor_56_3D83F5284BF4F3C867BB85B389DE9B49' has a wrong offset!");
static_assert(offsetof(FST_Options, CrosshairBlueColor_58_EF387CEF4DA4E10060BBDD945A093FA6) == 0x000040, "Member 'FST_Options::CrosshairBlueColor_58_EF387CEF4DA4E10060BBDD945A093FA6' has a wrong offset!");
static_assert(offsetof(FST_Options, CrosshairLineLength_61_C80ED1884DE2F72483905D973C0C6F2D) == 0x000044, "Member 'FST_Options::CrosshairLineLength_61_C80ED1884DE2F72483905D973C0C6F2D' has a wrong offset!");
static_assert(offsetof(FST_Options, Crosshairs_65_6A194DED48CFA00C056F94AA7D0904CC) == 0x000048, "Member 'FST_Options::Crosshairs_65_6A194DED48CFA00C056F94AA7D0904CC' has a wrong offset!");
static_assert(offsetof(FST_Options, InvertScrollWeaponSwapDirection_68_E1D2DD2F4E5D085542AC01BBBFE09611) == 0x000058, "Member 'FST_Options::InvertScrollWeaponSwapDirection_68_E1D2DD2F4E5D085542AC01BBBFE09611' has a wrong offset!");
static_assert(offsetof(FST_Options, UseCustomCrosshair_71_FE70E1A64F7759CCB6ADCE9DE9701ECB) == 0x000059, "Member 'FST_Options::UseCustomCrosshair_71_FE70E1A64F7759CCB6ADCE9DE9701ECB' has a wrong offset!");
static_assert(offsetof(FST_Options, CrosshairSize_74_A948471E42E6B94D5594D29569B017F2) == 0x00005C, "Member 'FST_Options::CrosshairSize_74_A948471E42E6B94D5594D29569B017F2' has a wrong offset!");
static_assert(offsetof(FST_Options, ShowBOTtag_76_0C3DA5E343CA0FFB5C20F48D3F654CF8) == 0x000060, "Member 'FST_Options::ShowBOTtag_76_0C3DA5E343CA0FFB5C20F48D3F654CF8' has a wrong offset!");
static_assert(offsetof(FST_Options, MarketingFeaturesEnabled_78_D0EFB62A49DD64698537DB9E7565F63A) == 0x000061, "Member 'FST_Options::MarketingFeaturesEnabled_78_D0EFB62A49DD64698537DB9E7565F63A' has a wrong offset!");
static_assert(offsetof(FST_Options, MotionBlurAmount_82_FDF667E64517577B7785D9A6716D7739) == 0x000064, "Member 'FST_Options::MotionBlurAmount_82_FDF667E64517577B7785D9A6716D7739' has a wrong offset!");
static_assert(offsetof(FST_Options, EnableTesselation_84_66E827DE4CB81D36DA64B6B2303A7EDE) == 0x000068, "Member 'FST_Options::EnableTesselation_84_66E827DE4CB81D36DA64B6B2303A7EDE' has a wrong offset!");
static_assert(offsetof(FST_Options, EnableAmbientOcclusion_86_C655C43D4AD065E58522D4A38BBA12DB) == 0x000069, "Member 'FST_Options::EnableAmbientOcclusion_86_C655C43D4AD065E58522D4A38BBA12DB' has a wrong offset!");
static_assert(offsetof(FST_Options, InvertMouseY_88_29E4E787456E7BE73A7F498BBC901342) == 0x00006A, "Member 'FST_Options::InvertMouseY_88_29E4E787456E7BE73A7F498BBC901342' has a wrong offset!");
static_assert(offsetof(FST_Options, ToggleSprint_92_6A89D7B543F08F48123E76AA849E53DB) == 0x00006B, "Member 'FST_Options::ToggleSprint_92_6A89D7B543F08F48123E76AA849E53DB' has a wrong offset!");

}

