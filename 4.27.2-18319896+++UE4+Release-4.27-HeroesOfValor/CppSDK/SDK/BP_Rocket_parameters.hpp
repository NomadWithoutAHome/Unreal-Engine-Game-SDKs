#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Rocket

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Rocket.BP_Rocket_C.ExecuteUbergraph_BP_Rocket
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Rocket_C_ExecuteUbergraph_BP_Rocket final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0024(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket) == 0x000008, "Wrong alignment on BP_Rocket_C_ExecuteUbergraph_BP_Rocket");
static_assert(sizeof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket) == 0x0000B0, "Wrong size on BP_Rocket_C_ExecuteUbergraph_BP_Rocket");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, EntryPoint) == 0x000000, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000018, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Rocket_C_ExecuteUbergraph_BP_Rocket, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000024, "Member 'BP_Rocket_C_ExecuteUbergraph_BP_Rocket::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function BP_Rocket.BP_Rocket_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Rocket_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds_0;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Rocket_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Rocket_C_ReceiveTick");
static_assert(sizeof(BP_Rocket_C_ReceiveTick) == 0x000004, "Wrong size on BP_Rocket_C_ReceiveTick");
static_assert(offsetof(BP_Rocket_C_ReceiveTick, DeltaSeconds_0) == 0x000000, "Member 'BP_Rocket_C_ReceiveTick::DeltaSeconds_0' has a wrong offset!");

}

