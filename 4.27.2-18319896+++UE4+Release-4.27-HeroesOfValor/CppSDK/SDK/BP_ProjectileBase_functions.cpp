#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ProjectileBase

#include "Basic.hpp"

#include "BP_ProjectileBase_classes.hpp"
#include "BP_ProjectileBase_parameters.hpp"


namespace SDK
{

// Function BP_ProjectileBase.BP_ProjectileBase_C.ExecuteUbergraph_BP_ProjectileBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ProjectileBase_C::ExecuteUbergraph_BP_ProjectileBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ProjectileBase_C", "ExecuteUbergraph_BP_ProjectileBase");

	Params::BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ProjectileBase.BP_ProjectileBase_C.KillProjectile
// (BlueprintCallable, BlueprintEvent)

void ABP_ProjectileBase_C::KillProjectile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ProjectileBase_C", "KillProjectile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ProjectileBase.BP_ProjectileBase_C.TriggerAOE
// (BlueprintCallable, BlueprintEvent)

void ABP_ProjectileBase_C::TriggerAOE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ProjectileBase_C", "TriggerAOE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ProjectileBase.BP_ProjectileBase_C.Detonate
// (BlueprintCallable, BlueprintEvent)

void ABP_ProjectileBase_C::Detonate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ProjectileBase_C", "Detonate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ProjectileBase.BP_ProjectileBase_C.InstantHit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitResult&                HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_ProjectileBase_C::InstantHit(const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ProjectileBase_C", "InstantHit");

	Params::BP_ProjectileBase_C_InstantHit Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ProjectileBase.BP_ProjectileBase_C.WasDirectHit
// (BlueprintCallable, BlueprintEvent)

void ABP_ProjectileBase_C::WasDirectHit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ProjectileBase_C", "WasDirectHit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ProjectileBase.BP_ProjectileBase_C.KillThrowable
// (BlueprintCallable, BlueprintEvent)

void ABP_ProjectileBase_C::KillThrowable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ProjectileBase_C", "KillThrowable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ProjectileBase.BP_ProjectileBase_C.MC_ThrowableExplode
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ProjectileBase_C::MC_ThrowableExplode(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ProjectileBase_C", "MC_ThrowableExplode");

	Params::BP_ProjectileBase_C_MC_ThrowableExplode Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ProjectileBase.BP_ProjectileBase_C.MC_Bounce
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_ProjectileBase_C::MC_Bounce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ProjectileBase_C", "MC_Bounce");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ProjectileBase.BP_ProjectileBase_C.ReceiveHit
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              MyComp                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Other                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSelfMoved                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit_0                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_ProjectileBase_C::ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ProjectileBase_C", "ReceiveHit");

	Params::BP_ProjectileBase_C_ReceiveHit Parms{};

	Parms.MyComp = MyComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.bSelfMoved = bSelfMoved;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit_0 = std::move(Hit_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ProjectileBase.BP_ProjectileBase_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ProjectileBase_C::ReceiveTick(float DeltaSeconds_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ProjectileBase_C", "ReceiveTick");

	Params::BP_ProjectileBase_C_ReceiveTick Parms{};

	Parms.DeltaSeconds_0 = DeltaSeconds_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ProjectileBase.BP_ProjectileBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_ProjectileBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ProjectileBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ProjectileBase.BP_ProjectileBase_C.OnRep_IsThrowable
// (BlueprintCallable, BlueprintEvent)

void ABP_ProjectileBase_C::OnRep_IsThrowable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ProjectileBase_C", "OnRep_IsThrowable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ProjectileBase.BP_ProjectileBase_C.CalculateDamageFalloff
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   DamageIn                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  ResultingDamage                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ProjectileBase_C::CalculateDamageFalloff(int32 DamageIn, int32* ResultingDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ProjectileBase_C", "CalculateDamageFalloff");

	Params::BP_ProjectileBase_C_CalculateDamageFalloff Parms{};

	Parms.DamageIn = DamageIn;

	UObject::ProcessEvent(Func, &Parms);

	if (ResultingDamage != nullptr)
		*ResultingDamage = Parms.ResultingDamage;
}


// Function BP_ProjectileBase.BP_ProjectileBase_C.OnRep_ThrowableAttachment
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ProjectileBase_C::OnRep_ThrowableAttachment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ProjectileBase_C", "OnRep_ThrowableAttachment");

	UObject::ProcessEvent(Func, nullptr);
}

}

