#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Sherman

#include "Basic.hpp"

#include "E_VehicleSkinThemes_structs.hpp"


namespace SDK::Params
{

// Function BP_Sherman.BP_Sherman_C.ExecuteUbergraph_BP_Sherman
// 0x0058 (0x0058 - 0x0000)
struct BP_Sherman_C_ExecuteUbergraph_BP_Sherman final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_VehicleSkinThemes                           Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F[0x1];                                       // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Sherman_C_ExecuteUbergraph_BP_Sherman) == 0x000008, "Wrong alignment on BP_Sherman_C_ExecuteUbergraph_BP_Sherman");
static_assert(sizeof(BP_Sherman_C_ExecuteUbergraph_BP_Sherman) == 0x000058, "Wrong size on BP_Sherman_C_ExecuteUbergraph_BP_Sherman");
static_assert(offsetof(BP_Sherman_C_ExecuteUbergraph_BP_Sherman, EntryPoint) == 0x000000, "Member 'BP_Sherman_C_ExecuteUbergraph_BP_Sherman::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Sherman_C_ExecuteUbergraph_BP_Sherman, Temp_byte_Variable) == 0x000004, "Member 'BP_Sherman_C_ExecuteUbergraph_BP_Sherman::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Sherman_C_ExecuteUbergraph_BP_Sherman, Temp_object_Variable) == 0x000008, "Member 'BP_Sherman_C_ExecuteUbergraph_BP_Sherman::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Sherman_C_ExecuteUbergraph_BP_Sherman, Temp_object_Variable_1) == 0x000010, "Member 'BP_Sherman_C_ExecuteUbergraph_BP_Sherman::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Sherman_C_ExecuteUbergraph_BP_Sherman, Temp_object_Variable_2) == 0x000018, "Member 'BP_Sherman_C_ExecuteUbergraph_BP_Sherman::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Sherman_C_ExecuteUbergraph_BP_Sherman, Temp_object_Variable_3) == 0x000020, "Member 'BP_Sherman_C_ExecuteUbergraph_BP_Sherman::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Sherman_C_ExecuteUbergraph_BP_Sherman, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_Sherman_C_ExecuteUbergraph_BP_Sherman::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Sherman_C_ExecuteUbergraph_BP_Sherman, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_Sherman_C_ExecuteUbergraph_BP_Sherman::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Sherman_C_ExecuteUbergraph_BP_Sherman, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_Sherman_C_ExecuteUbergraph_BP_Sherman::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sherman_C_ExecuteUbergraph_BP_Sherman, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_Sherman_C_ExecuteUbergraph_BP_Sherman::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sherman_C_ExecuteUbergraph_BP_Sherman, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'BP_Sherman_C_ExecuteUbergraph_BP_Sherman::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Sherman_C_ExecuteUbergraph_BP_Sherman, CallFunc_Greater_IntInt_ReturnValue) == 0x00003C, "Member 'BP_Sherman_C_ExecuteUbergraph_BP_Sherman::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sherman_C_ExecuteUbergraph_BP_Sherman, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00003D, "Member 'BP_Sherman_C_ExecuteUbergraph_BP_Sherman::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Sherman_C_ExecuteUbergraph_BP_Sherman, CallFunc_BooleanAND_ReturnValue) == 0x00003E, "Member 'BP_Sherman_C_ExecuteUbergraph_BP_Sherman::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sherman_C_ExecuteUbergraph_BP_Sherman, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_Sherman_C_ExecuteUbergraph_BP_Sherman::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Sherman_C_ExecuteUbergraph_BP_Sherman, CallFunc_Array_Length_ReturnValue_2) == 0x000048, "Member 'BP_Sherman_C_ExecuteUbergraph_BP_Sherman::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Sherman_C_ExecuteUbergraph_BP_Sherman, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_Sherman_C_ExecuteUbergraph_BP_Sherman::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sherman_C_ExecuteUbergraph_BP_Sherman, K2Node_Select_Default) == 0x000050, "Member 'BP_Sherman_C_ExecuteUbergraph_BP_Sherman::K2Node_Select_Default' has a wrong offset!");

}

