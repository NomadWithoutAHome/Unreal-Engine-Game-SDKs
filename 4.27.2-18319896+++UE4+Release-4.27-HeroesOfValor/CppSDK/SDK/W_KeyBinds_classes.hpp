#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_KeyBinds

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_KeyBinds.W_KeyBinds_C
// 0x0188 (0x03E8 - 0x0260)
class UW_KeyBinds_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image;                                             // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_3;                                           // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_4;                                           // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_5;                                           // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_27;                                      // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            W_Button;                                          // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            W_Button_110;                                      // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry;                                    // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_1;                                  // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_2;                                  // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_3;                                  // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_4;                                  // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_5;                                  // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_6;                                  // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_7;                                  // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_8;                                  // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_9;                                  // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_10;                                 // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_11;                                 // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_12;                                 // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_13;                                 // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_14;                                 // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_15;                                 // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_16;                                 // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_17;                                 // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_18;                                 // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_19;                                 // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_20;                                 // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_21;                                 // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_22;                                 // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_23;                                 // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_24;                                 // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_25;                                 // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_26;                                 // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_27;                                 // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_28;                                 // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_29;                                 // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_30;                                 // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_31;                                 // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_32;                                 // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_33;                                 // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_34;                                 // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_35;                                 // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_36;                                 // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_37;                                 // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_KeybindEntry_C*                      W_KeybindEntry_38;                                 // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_KeyBinds(int32 EntryPoint);
	void BndEvt__W_KeyBinds_W_Button_110_K2Node_ComponentBoundEvent_1_ButtonPressed__DelegateSignature();
	void BndEvt__W_KeyBinds_W_Button_K2Node_ComponentBoundEvent_0_ButtonPressed__DelegateSignature();
	void SetAxisMapping(const class FName InAxisName, const struct FKey& Key);
	void SetActionMapping(const class FName InAxisName, const struct FKey& Key);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_KeyBinds_C">();
	}
	static class UW_KeyBinds_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_KeyBinds_C>();
	}
};
static_assert(alignof(UW_KeyBinds_C) == 0x000008, "Wrong alignment on UW_KeyBinds_C");
static_assert(sizeof(UW_KeyBinds_C) == 0x0003E8, "Wrong size on UW_KeyBinds_C");
static_assert(offsetof(UW_KeyBinds_C, UberGraphFrame) == 0x000260, "Member 'UW_KeyBinds_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, Image) == 0x000268, "Member 'UW_KeyBinds_C::Image' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, Image_1) == 0x000270, "Member 'UW_KeyBinds_C::Image_1' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, Image_2) == 0x000278, "Member 'UW_KeyBinds_C::Image_2' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, Image_3) == 0x000280, "Member 'UW_KeyBinds_C::Image_3' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, Image_4) == 0x000288, "Member 'UW_KeyBinds_C::Image_4' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, Image_5) == 0x000290, "Member 'UW_KeyBinds_C::Image_5' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, ScrollBox_27) == 0x000298, "Member 'UW_KeyBinds_C::ScrollBox_27' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_Button) == 0x0002A0, "Member 'UW_KeyBinds_C::W_Button' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_Button_110) == 0x0002A8, "Member 'UW_KeyBinds_C::W_Button_110' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry) == 0x0002B0, "Member 'UW_KeyBinds_C::W_KeybindEntry' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_1) == 0x0002B8, "Member 'UW_KeyBinds_C::W_KeybindEntry_1' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_2) == 0x0002C0, "Member 'UW_KeyBinds_C::W_KeybindEntry_2' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_3) == 0x0002C8, "Member 'UW_KeyBinds_C::W_KeybindEntry_3' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_4) == 0x0002D0, "Member 'UW_KeyBinds_C::W_KeybindEntry_4' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_5) == 0x0002D8, "Member 'UW_KeyBinds_C::W_KeybindEntry_5' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_6) == 0x0002E0, "Member 'UW_KeyBinds_C::W_KeybindEntry_6' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_7) == 0x0002E8, "Member 'UW_KeyBinds_C::W_KeybindEntry_7' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_8) == 0x0002F0, "Member 'UW_KeyBinds_C::W_KeybindEntry_8' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_9) == 0x0002F8, "Member 'UW_KeyBinds_C::W_KeybindEntry_9' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_10) == 0x000300, "Member 'UW_KeyBinds_C::W_KeybindEntry_10' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_11) == 0x000308, "Member 'UW_KeyBinds_C::W_KeybindEntry_11' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_12) == 0x000310, "Member 'UW_KeyBinds_C::W_KeybindEntry_12' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_13) == 0x000318, "Member 'UW_KeyBinds_C::W_KeybindEntry_13' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_14) == 0x000320, "Member 'UW_KeyBinds_C::W_KeybindEntry_14' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_15) == 0x000328, "Member 'UW_KeyBinds_C::W_KeybindEntry_15' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_16) == 0x000330, "Member 'UW_KeyBinds_C::W_KeybindEntry_16' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_17) == 0x000338, "Member 'UW_KeyBinds_C::W_KeybindEntry_17' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_18) == 0x000340, "Member 'UW_KeyBinds_C::W_KeybindEntry_18' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_19) == 0x000348, "Member 'UW_KeyBinds_C::W_KeybindEntry_19' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_20) == 0x000350, "Member 'UW_KeyBinds_C::W_KeybindEntry_20' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_21) == 0x000358, "Member 'UW_KeyBinds_C::W_KeybindEntry_21' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_22) == 0x000360, "Member 'UW_KeyBinds_C::W_KeybindEntry_22' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_23) == 0x000368, "Member 'UW_KeyBinds_C::W_KeybindEntry_23' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_24) == 0x000370, "Member 'UW_KeyBinds_C::W_KeybindEntry_24' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_25) == 0x000378, "Member 'UW_KeyBinds_C::W_KeybindEntry_25' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_26) == 0x000380, "Member 'UW_KeyBinds_C::W_KeybindEntry_26' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_27) == 0x000388, "Member 'UW_KeyBinds_C::W_KeybindEntry_27' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_28) == 0x000390, "Member 'UW_KeyBinds_C::W_KeybindEntry_28' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_29) == 0x000398, "Member 'UW_KeyBinds_C::W_KeybindEntry_29' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_30) == 0x0003A0, "Member 'UW_KeyBinds_C::W_KeybindEntry_30' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_31) == 0x0003A8, "Member 'UW_KeyBinds_C::W_KeybindEntry_31' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_32) == 0x0003B0, "Member 'UW_KeyBinds_C::W_KeybindEntry_32' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_33) == 0x0003B8, "Member 'UW_KeyBinds_C::W_KeybindEntry_33' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_34) == 0x0003C0, "Member 'UW_KeyBinds_C::W_KeybindEntry_34' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_35) == 0x0003C8, "Member 'UW_KeyBinds_C::W_KeybindEntry_35' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_36) == 0x0003D0, "Member 'UW_KeyBinds_C::W_KeybindEntry_36' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_37) == 0x0003D8, "Member 'UW_KeyBinds_C::W_KeybindEntry_37' has a wrong offset!");
static_assert(offsetof(UW_KeyBinds_C, W_KeybindEntry_38) == 0x0003E0, "Member 'UW_KeyBinds_C::W_KeybindEntry_38' has a wrong offset!");

}

