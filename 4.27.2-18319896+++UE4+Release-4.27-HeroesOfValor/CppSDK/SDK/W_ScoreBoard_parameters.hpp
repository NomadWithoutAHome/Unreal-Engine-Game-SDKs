#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ScoreBoard

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ST_PlayerStats_structs.hpp"
#include "E_Teams_structs.hpp"
#include "E_Units_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_ScoreBoard.W_ScoreBoard_C.ExecuteUbergraph_W_ScoreBoard
// 0x0180 (0x0180 - 0x0000)
struct W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ScoreboardEntry_C*                   CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_ScoreboardSpectatorEntry_C*          CallFunc_Create_ReturnValue_1;                     // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0038(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_C*                      CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FST_PlayerStats                        CallFunc_Array_Get_Item_1;                         // 0x00B8(0x0068)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_126[0x2];                                      // 0x0126(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_1;                   // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Controller_C*                       K2Node_DynamicCast_AsBP_Controller;                // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetConnectedPlayersCount_PlayerCount;     // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetConnectedPlayersCount_PlayerCount_1;   // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_2;                   // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSpectatorAmount_PlayerCount;           // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSpectatorAmount_PlayerCount_1;         // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16A[0x6];                                      // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard) == 0x000008, "Wrong alignment on W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard");
static_assert(sizeof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard) == 0x000180, "Wrong size on W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, EntryPoint) == 0x000000, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, CallFunc_Create_ReturnValue) == 0x000008, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, CallFunc_Create_ReturnValue_1) == 0x000010, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, Temp_bool_IsClosed_Variable) == 0x00001C, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, Temp_bool_Has_Been_Initd_Variable) == 0x000024, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, Temp_int_Array_Index_Variable) == 0x000028, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, Temp_int_Loop_Counter_Variable_1) == 0x00002C, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, K2Node_Event_MyGeometry) == 0x000038, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, K2Node_Event_InDeltaTime) == 0x000070, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, CallFunc_GetGameState_ReturnValue) == 0x000078, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x000080, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, CallFunc_AddChild_ReturnValue) == 0x000090, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, CallFunc_Array_Get_Item) == 0x000098, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, CallFunc_IsValid_ReturnValue) == 0x0000A4, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, CallFunc_Less_IntInt_ReturnValue) == 0x0000A5, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, CallFunc_GetPlayerName_ReturnValue) == 0x0000A8, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, CallFunc_Array_Get_Item_1) == 0x0000B8, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, CallFunc_Array_Length_ReturnValue_1) == 0x000120, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, CallFunc_Less_IntInt_ReturnValue_1) == 0x000124, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, K2Node_SwitchEnum_CmpSuccess) == 0x000125, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, CallFunc_GetPlayerController_ReturnValue) == 0x000128, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, CallFunc_AddChild_ReturnValue_1) == 0x000130, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::CallFunc_AddChild_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, K2Node_DynamicCast_AsBP_Controller) == 0x000138, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::K2Node_DynamicCast_AsBP_Controller' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, K2Node_DynamicCast_bSuccess_1) == 0x000140, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000141, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000142, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, CallFunc_Not_PreBool_ReturnValue) == 0x000143, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, CallFunc_BooleanAND_ReturnValue) == 0x000144, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, CallFunc_GetConnectedPlayersCount_PlayerCount) == 0x000148, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::CallFunc_GetConnectedPlayersCount_PlayerCount' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00014C, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, CallFunc_GetConnectedPlayersCount_PlayerCount_1) == 0x000150, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::CallFunc_GetConnectedPlayersCount_PlayerCount_1' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, CallFunc_AddChild_ReturnValue_2) == 0x000158, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::CallFunc_AddChild_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, CallFunc_GetSpectatorAmount_PlayerCount) == 0x000160, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::CallFunc_GetSpectatorAmount_PlayerCount' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, CallFunc_GetSpectatorAmount_PlayerCount_1) == 0x000164, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::CallFunc_GetSpectatorAmount_PlayerCount_1' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000168, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, CallFunc_BooleanOR_ReturnValue) == 0x000169, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, CallFunc_PlayAnimation_ReturnValue) == 0x000170, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard, CallFunc_PlayAnimation_ReturnValue_1) == 0x000178, "Member 'W_ScoreBoard_C_ExecuteUbergraph_W_ScoreBoard::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function W_ScoreBoard.W_ScoreBoard_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_ScoreBoard_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScoreBoard_C_Tick) == 0x000004, "Wrong alignment on W_ScoreBoard_C_Tick");
static_assert(sizeof(W_ScoreBoard_C_Tick) == 0x00003C, "Wrong size on W_ScoreBoard_C_Tick");
static_assert(offsetof(W_ScoreBoard_C_Tick, MyGeometry) == 0x000000, "Member 'W_ScoreBoard_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_Tick, InDeltaTime) == 0x000038, "Member 'W_ScoreBoard_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_ScoreBoard.W_ScoreBoard_C.GetConnectedPlayersCount
// 0x00A8 (0x00A8 - 0x0000)
struct W_ScoreBoard_C_GetConnectedPlayersCount final
{
public:
	int32                                         PlayerCount;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_PlayerStats                        CallFunc_Array_Get_Item;                           // 0x0038(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_ScoreBoard_C_GetConnectedPlayersCount) == 0x000008, "Wrong alignment on W_ScoreBoard_C_GetConnectedPlayersCount");
static_assert(sizeof(W_ScoreBoard_C_GetConnectedPlayersCount) == 0x0000A8, "Wrong size on W_ScoreBoard_C_GetConnectedPlayersCount");
static_assert(offsetof(W_ScoreBoard_C_GetConnectedPlayersCount, PlayerCount) == 0x000000, "Member 'W_ScoreBoard_C_GetConnectedPlayersCount::PlayerCount' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_GetConnectedPlayersCount, Count) == 0x000004, "Member 'W_ScoreBoard_C_GetConnectedPlayersCount::Count' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_GetConnectedPlayersCount, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'W_ScoreBoard_C_GetConnectedPlayersCount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_GetConnectedPlayersCount, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'W_ScoreBoard_C_GetConnectedPlayersCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_GetConnectedPlayersCount, Temp_int_Array_Index_Variable) == 0x000010, "Member 'W_ScoreBoard_C_GetConnectedPlayersCount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_GetConnectedPlayersCount, Temp_int_Variable) == 0x000014, "Member 'W_ScoreBoard_C_GetConnectedPlayersCount::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_GetConnectedPlayersCount, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'W_ScoreBoard_C_GetConnectedPlayersCount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_GetConnectedPlayersCount, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'W_ScoreBoard_C_GetConnectedPlayersCount::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_GetConnectedPlayersCount, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x000028, "Member 'W_ScoreBoard_C_GetConnectedPlayersCount::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_GetConnectedPlayersCount, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'W_ScoreBoard_C_GetConnectedPlayersCount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_GetConnectedPlayersCount, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'W_ScoreBoard_C_GetConnectedPlayersCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_GetConnectedPlayersCount, CallFunc_Array_Get_Item) == 0x000038, "Member 'W_ScoreBoard_C_GetConnectedPlayersCount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_GetConnectedPlayersCount, CallFunc_Less_IntInt_ReturnValue) == 0x0000A0, "Member 'W_ScoreBoard_C_GetConnectedPlayersCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_GetConnectedPlayersCount, CallFunc_Not_PreBool_ReturnValue) == 0x0000A1, "Member 'W_ScoreBoard_C_GetConnectedPlayersCount::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function W_ScoreBoard.W_ScoreBoard_C.SortListOnScore
// 0x0258 (0x0258 - 0x0000)
struct W_ScoreBoard_C_SortListOnScore final
{
public:
	E_Teams                                       Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FST_PlayerStats>                SortedEntries;                                     // 0x0008(0x0010)(Parm, OutParm)
	TArray<struct FST_PlayerStats>                PlayerStatsOriginal;                               // 0x0018(0x0010)(Edit, BlueprintVisible)
	struct FST_PlayerStats                        StatToAdd;                                         // 0x0028(0x0068)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FST_PlayerStats>                PlayerStats;                                       // 0x0090(0x0010)(Edit, BlueprintVisible)
	TArray<class UWidget*>                        OriginalArray;                                     // 0x00A0(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         HighestScoreIndex;                                 // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_ScoreboardEntry_C*>           SortedArray;                                       // 0x00B8(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class UW_ScoreboardEntry_C*                   HighestScoreEntryTemp;                             // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HighestScore;                                      // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelWidget*                           Temp_object_Variable;                              // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_PlayerStats                        CallFunc_Array_Get_Item;                           // 0x00F0(0x0068)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Teams                                       Temp_byte_Variable;                                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelWidget*                           K2Node_Select_Default;                             // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0188(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ScoreboardEntry_C*                   K2Node_DynamicCast_AsW_Scoreboard_Entry;           // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B2[0x2];                                      // 0x01B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetStats_Kills;                           // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStats_Deaths;                          // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStats_Score;                           // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetStats_Username;                        // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStats_PlayerIndex;                     // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStats_IsSelf;                          // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetStats_IsPlayer;                        // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Units                                       CallFunc_GetStats_PlayerClass;                     // 0x01D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D7[0x1];                                      // 0x01D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetStats_Rank;                            // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStats_AssistKills;                     // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_PlayerStats                        K2Node_MakeStruct_ST_PlayerStats;                  // 0x01E0(0x0068)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_ScoreBoard_C_SortListOnScore) == 0x000008, "Wrong alignment on W_ScoreBoard_C_SortListOnScore");
static_assert(sizeof(W_ScoreBoard_C_SortListOnScore) == 0x000258, "Wrong size on W_ScoreBoard_C_SortListOnScore");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, Team) == 0x000000, "Member 'W_ScoreBoard_C_SortListOnScore::Team' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, SortedEntries) == 0x000008, "Member 'W_ScoreBoard_C_SortListOnScore::SortedEntries' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, PlayerStatsOriginal) == 0x000018, "Member 'W_ScoreBoard_C_SortListOnScore::PlayerStatsOriginal' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, StatToAdd) == 0x000028, "Member 'W_ScoreBoard_C_SortListOnScore::StatToAdd' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, PlayerStats) == 0x000090, "Member 'W_ScoreBoard_C_SortListOnScore::PlayerStats' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, OriginalArray) == 0x0000A0, "Member 'W_ScoreBoard_C_SortListOnScore::OriginalArray' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, HighestScoreIndex) == 0x0000B0, "Member 'W_ScoreBoard_C_SortListOnScore::HighestScoreIndex' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, SortedArray) == 0x0000B8, "Member 'W_ScoreBoard_C_SortListOnScore::SortedArray' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, HighestScoreEntryTemp) == 0x0000C8, "Member 'W_ScoreBoard_C_SortListOnScore::HighestScoreEntryTemp' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, HighestScore) == 0x0000D0, "Member 'W_ScoreBoard_C_SortListOnScore::HighestScore' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, Temp_int_Array_Index_Variable) == 0x0000D4, "Member 'W_ScoreBoard_C_SortListOnScore::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, Temp_int_Loop_Counter_Variable) == 0x0000D8, "Member 'W_ScoreBoard_C_SortListOnScore::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, CallFunc_Add_IntInt_ReturnValue) == 0x0000DC, "Member 'W_ScoreBoard_C_SortListOnScore::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, Temp_int_Array_Index_Variable_1) == 0x0000E0, "Member 'W_ScoreBoard_C_SortListOnScore::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, Temp_object_Variable) == 0x0000E8, "Member 'W_ScoreBoard_C_SortListOnScore::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'W_ScoreBoard_C_SortListOnScore::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, CallFunc_Array_Length_ReturnValue) == 0x000158, "Member 'W_ScoreBoard_C_SortListOnScore::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, Temp_int_Loop_Counter_Variable_1) == 0x00015C, "Member 'W_ScoreBoard_C_SortListOnScore::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, CallFunc_Array_Length_ReturnValue_1) == 0x000160, "Member 'W_ScoreBoard_C_SortListOnScore::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, CallFunc_Less_IntInt_ReturnValue) == 0x000164, "Member 'W_ScoreBoard_C_SortListOnScore::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, CallFunc_Add_IntInt_ReturnValue_1) == 0x000168, "Member 'W_ScoreBoard_C_SortListOnScore::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, CallFunc_Array_Add_ReturnValue) == 0x00016C, "Member 'W_ScoreBoard_C_SortListOnScore::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, Temp_byte_Variable) == 0x000170, "Member 'W_ScoreBoard_C_SortListOnScore::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, K2Node_Select_Default) == 0x000178, "Member 'W_ScoreBoard_C_SortListOnScore::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, CallFunc_Greater_IntInt_ReturnValue) == 0x000180, "Member 'W_ScoreBoard_C_SortListOnScore::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, CallFunc_GetAllChildren_ReturnValue) == 0x000188, "Member 'W_ScoreBoard_C_SortListOnScore::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, CallFunc_Array_Get_Item_1) == 0x000198, "Member 'W_ScoreBoard_C_SortListOnScore::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, CallFunc_Array_Length_ReturnValue_2) == 0x0001A0, "Member 'W_ScoreBoard_C_SortListOnScore::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, K2Node_DynamicCast_AsW_Scoreboard_Entry) == 0x0001A8, "Member 'W_ScoreBoard_C_SortListOnScore::K2Node_DynamicCast_AsW_Scoreboard_Entry' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, K2Node_DynamicCast_bSuccess) == 0x0001B0, "Member 'W_ScoreBoard_C_SortListOnScore::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001B1, "Member 'W_ScoreBoard_C_SortListOnScore::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, CallFunc_GetStats_Kills) == 0x0001B4, "Member 'W_ScoreBoard_C_SortListOnScore::CallFunc_GetStats_Kills' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, CallFunc_GetStats_Deaths) == 0x0001B8, "Member 'W_ScoreBoard_C_SortListOnScore::CallFunc_GetStats_Deaths' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, CallFunc_GetStats_Score) == 0x0001BC, "Member 'W_ScoreBoard_C_SortListOnScore::CallFunc_GetStats_Score' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, CallFunc_GetStats_Username) == 0x0001C0, "Member 'W_ScoreBoard_C_SortListOnScore::CallFunc_GetStats_Username' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, CallFunc_GetStats_PlayerIndex) == 0x0001D0, "Member 'W_ScoreBoard_C_SortListOnScore::CallFunc_GetStats_PlayerIndex' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, CallFunc_GetStats_IsSelf) == 0x0001D4, "Member 'W_ScoreBoard_C_SortListOnScore::CallFunc_GetStats_IsSelf' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, CallFunc_GetStats_IsPlayer) == 0x0001D5, "Member 'W_ScoreBoard_C_SortListOnScore::CallFunc_GetStats_IsPlayer' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, CallFunc_GetStats_PlayerClass) == 0x0001D6, "Member 'W_ScoreBoard_C_SortListOnScore::CallFunc_GetStats_PlayerClass' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, CallFunc_GetStats_Rank) == 0x0001D8, "Member 'W_ScoreBoard_C_SortListOnScore::CallFunc_GetStats_Rank' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, CallFunc_GetStats_AssistKills) == 0x0001DC, "Member 'W_ScoreBoard_C_SortListOnScore::CallFunc_GetStats_AssistKills' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, K2Node_MakeStruct_ST_PlayerStats) == 0x0001E0, "Member 'W_ScoreBoard_C_SortListOnScore::K2Node_MakeStruct_ST_PlayerStats' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, CallFunc_Array_Length_ReturnValue_3) == 0x000248, "Member 'W_ScoreBoard_C_SortListOnScore::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, CallFunc_Array_Add_ReturnValue_1) == 0x00024C, "Member 'W_ScoreBoard_C_SortListOnScore::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SortListOnScore, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000250, "Member 'W_ScoreBoard_C_SortListOnScore::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function W_ScoreBoard.W_ScoreBoard_C.UpdateSortedEntries
// 0x00C0 (0x00C0 - 0x0000)
struct W_ScoreBoard_C_UpdateSortedEntries final
{
public:
	E_Teams                                       Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Teams                                       Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FST_PlayerStats>                CallFunc_SortListOnScore_SortedEntries;            // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelWidget*                           Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_PlayerStats                        CallFunc_Array_Get_Item;                           // 0x0030(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           K2Node_Select_Default;                             // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_ScoreboardEntry_C*                   K2Node_DynamicCast_AsW_Scoreboard_Entry;           // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_ScoreBoard_C_UpdateSortedEntries) == 0x000008, "Wrong alignment on W_ScoreBoard_C_UpdateSortedEntries");
static_assert(sizeof(W_ScoreBoard_C_UpdateSortedEntries) == 0x0000C0, "Wrong size on W_ScoreBoard_C_UpdateSortedEntries");
static_assert(offsetof(W_ScoreBoard_C_UpdateSortedEntries, Team) == 0x000000, "Member 'W_ScoreBoard_C_UpdateSortedEntries::Team' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateSortedEntries, Temp_byte_Variable) == 0x000001, "Member 'W_ScoreBoard_C_UpdateSortedEntries::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateSortedEntries, CallFunc_SortListOnScore_SortedEntries) == 0x000008, "Member 'W_ScoreBoard_C_UpdateSortedEntries::CallFunc_SortListOnScore_SortedEntries' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateSortedEntries, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'W_ScoreBoard_C_UpdateSortedEntries::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateSortedEntries, Temp_object_Variable) == 0x000020, "Member 'W_ScoreBoard_C_UpdateSortedEntries::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateSortedEntries, Temp_int_Array_Index_Variable) == 0x000028, "Member 'W_ScoreBoard_C_UpdateSortedEntries::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateSortedEntries, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'W_ScoreBoard_C_UpdateSortedEntries::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateSortedEntries, CallFunc_Array_Get_Item) == 0x000030, "Member 'W_ScoreBoard_C_UpdateSortedEntries::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateSortedEntries, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'W_ScoreBoard_C_UpdateSortedEntries::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateSortedEntries, CallFunc_Add_IntInt_ReturnValue) == 0x00009C, "Member 'W_ScoreBoard_C_UpdateSortedEntries::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateSortedEntries, K2Node_Select_Default) == 0x0000A0, "Member 'W_ScoreBoard_C_UpdateSortedEntries::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateSortedEntries, CallFunc_GetChildAt_ReturnValue) == 0x0000A8, "Member 'W_ScoreBoard_C_UpdateSortedEntries::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateSortedEntries, K2Node_DynamicCast_AsW_Scoreboard_Entry) == 0x0000B0, "Member 'W_ScoreBoard_C_UpdateSortedEntries::K2Node_DynamicCast_AsW_Scoreboard_Entry' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateSortedEntries, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'W_ScoreBoard_C_UpdateSortedEntries::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_ScoreBoard.W_ScoreBoard_C.UpdateStats
// 0x0160 (0x0160 - 0x0000)
struct W_ScoreBoard_C_UpdateStats final
{
public:
	class UPanelWidget*                           List;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_PlayerStats                        PlayerToUpdate;                                    // 0x0008(0x0068)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0078(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_ScoreboardEntry_C*                   K2Node_DynamicCast_AsW_Scoreboard_Entry;           // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Controller_C*                       K2Node_DynamicCast_AsBP_Controller;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_PlayerStats                        CallFunc_Array_Get_Item_1;                         // 0x00F0(0x0068)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x015E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x015F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_ScoreBoard_C_UpdateStats) == 0x000008, "Wrong alignment on W_ScoreBoard_C_UpdateStats");
static_assert(sizeof(W_ScoreBoard_C_UpdateStats) == 0x000160, "Wrong size on W_ScoreBoard_C_UpdateStats");
static_assert(offsetof(W_ScoreBoard_C_UpdateStats, List) == 0x000000, "Member 'W_ScoreBoard_C_UpdateStats::List' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateStats, PlayerToUpdate) == 0x000008, "Member 'W_ScoreBoard_C_UpdateStats::PlayerToUpdate' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateStats, Temp_int_Array_Index_Variable) == 0x000070, "Member 'W_ScoreBoard_C_UpdateStats::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateStats, CallFunc_GetAllChildren_ReturnValue) == 0x000078, "Member 'W_ScoreBoard_C_UpdateStats::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateStats, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'W_ScoreBoard_C_UpdateStats::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateStats, Temp_bool_True_if_break_was_hit_Variable) == 0x00008C, "Member 'W_ScoreBoard_C_UpdateStats::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateStats, CallFunc_Not_PreBool_ReturnValue) == 0x00008D, "Member 'W_ScoreBoard_C_UpdateStats::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateStats, Temp_int_Loop_Counter_Variable) == 0x000090, "Member 'W_ScoreBoard_C_UpdateStats::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateStats, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'W_ScoreBoard_C_UpdateStats::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateStats, CallFunc_Add_IntInt_ReturnValue) == 0x000098, "Member 'W_ScoreBoard_C_UpdateStats::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateStats, Temp_int_Array_Index_Variable_1) == 0x00009C, "Member 'W_ScoreBoard_C_UpdateStats::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateStats, Temp_int_Loop_Counter_Variable_1) == 0x0000A0, "Member 'W_ScoreBoard_C_UpdateStats::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateStats, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'W_ScoreBoard_C_UpdateStats::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateStats, K2Node_DynamicCast_AsW_Scoreboard_Entry) == 0x0000B0, "Member 'W_ScoreBoard_C_UpdateStats::K2Node_DynamicCast_AsW_Scoreboard_Entry' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateStats, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'W_ScoreBoard_C_UpdateStats::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateStats, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000BC, "Member 'W_ScoreBoard_C_UpdateStats::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateStats, CallFunc_GetPlayerController_ReturnValue) == 0x0000C0, "Member 'W_ScoreBoard_C_UpdateStats::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateStats, K2Node_DynamicCast_AsBP_Controller) == 0x0000C8, "Member 'W_ScoreBoard_C_UpdateStats::K2Node_DynamicCast_AsBP_Controller' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateStats, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'W_ScoreBoard_C_UpdateStats::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateStats, CallFunc_GetGameState_ReturnValue) == 0x0000D8, "Member 'W_ScoreBoard_C_UpdateStats::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateStats, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x0000E0, "Member 'W_ScoreBoard_C_UpdateStats::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateStats, K2Node_DynamicCast_bSuccess_2) == 0x0000E8, "Member 'W_ScoreBoard_C_UpdateStats::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateStats, CallFunc_IsValid_ReturnValue) == 0x0000E9, "Member 'W_ScoreBoard_C_UpdateStats::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateStats, CallFunc_Array_Get_Item_1) == 0x0000F0, "Member 'W_ScoreBoard_C_UpdateStats::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateStats, CallFunc_Array_Length_ReturnValue_1) == 0x000158, "Member 'W_ScoreBoard_C_UpdateStats::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateStats, CallFunc_Less_IntInt_ReturnValue_1) == 0x00015C, "Member 'W_ScoreBoard_C_UpdateStats::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateStats, CallFunc_BooleanAND_ReturnValue) == 0x00015D, "Member 'W_ScoreBoard_C_UpdateStats::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateStats, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00015E, "Member 'W_ScoreBoard_C_UpdateStats::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_UpdateStats, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00015F, "Member 'W_ScoreBoard_C_UpdateStats::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function W_ScoreBoard.W_ScoreBoard_C.SetServerName
// 0x0050 (0x0050 - 0x0000)
struct W_ScoreBoard_C_SetServerName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_ScoreBoard_C_SetServerName) == 0x000008, "Wrong alignment on W_ScoreBoard_C_SetServerName");
static_assert(sizeof(W_ScoreBoard_C_SetServerName) == 0x000050, "Wrong size on W_ScoreBoard_C_SetServerName");
static_assert(offsetof(W_ScoreBoard_C_SetServerName, ReturnValue) == 0x000000, "Member 'W_ScoreBoard_C_SetServerName::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SetServerName, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'W_ScoreBoard_C_SetServerName::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SetServerName, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x000020, "Member 'W_ScoreBoard_C_SetServerName::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SetServerName, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'W_ScoreBoard_C_SetServerName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SetServerName, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'W_ScoreBoard_C_SetServerName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SetServerName, CallFunc_IsEmpty_ReturnValue) == 0x000048, "Member 'W_ScoreBoard_C_SetServerName::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");

// Function W_ScoreBoard.W_ScoreBoard_C.GetSpectatorAmount
// 0x0020 (0x0020 - 0x0000)
struct W_ScoreBoard_C_GetSpectatorAmount final
{
public:
	int32                                         PlayerCount;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScoreBoard_C_GetSpectatorAmount) == 0x000008, "Wrong alignment on W_ScoreBoard_C_GetSpectatorAmount");
static_assert(sizeof(W_ScoreBoard_C_GetSpectatorAmount) == 0x000020, "Wrong size on W_ScoreBoard_C_GetSpectatorAmount");
static_assert(offsetof(W_ScoreBoard_C_GetSpectatorAmount, PlayerCount) == 0x000000, "Member 'W_ScoreBoard_C_GetSpectatorAmount::PlayerCount' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_GetSpectatorAmount, Count) == 0x000004, "Member 'W_ScoreBoard_C_GetSpectatorAmount::Count' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_GetSpectatorAmount, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'W_ScoreBoard_C_GetSpectatorAmount::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_GetSpectatorAmount, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x000010, "Member 'W_ScoreBoard_C_GetSpectatorAmount::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_GetSpectatorAmount, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_ScoreBoard_C_GetSpectatorAmount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_GetSpectatorAmount, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'W_ScoreBoard_C_GetSpectatorAmount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function W_ScoreBoard.W_ScoreBoard_C.SetPlayerAmount
// 0x0040 (0x0040 - 0x0000)
struct W_ScoreBoard_C_SetPlayerAmount final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0028(0x0018)()
};
static_assert(alignof(W_ScoreBoard_C_SetPlayerAmount) == 0x000008, "Wrong alignment on W_ScoreBoard_C_SetPlayerAmount");
static_assert(sizeof(W_ScoreBoard_C_SetPlayerAmount) == 0x000040, "Wrong size on W_ScoreBoard_C_SetPlayerAmount");
static_assert(offsetof(W_ScoreBoard_C_SetPlayerAmount, ReturnValue) == 0x000000, "Member 'W_ScoreBoard_C_SetPlayerAmount::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SetPlayerAmount, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'W_ScoreBoard_C_SetPlayerAmount::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SetPlayerAmount, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'W_ScoreBoard_C_SetPlayerAmount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SetPlayerAmount, CallFunc_Conv_IntToText_ReturnValue) == 0x000028, "Member 'W_ScoreBoard_C_SetPlayerAmount::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function W_ScoreBoard.W_ScoreBoard_C.SetHostName
// 0x00B0 (0x00B0 - 0x0000)
struct W_ScoreBoard_C_SetHostName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0018)()
};
static_assert(alignof(W_ScoreBoard_C_SetHostName) == 0x000008, "Wrong alignment on W_ScoreBoard_C_SetHostName");
static_assert(sizeof(W_ScoreBoard_C_SetHostName) == 0x0000B0, "Wrong size on W_ScoreBoard_C_SetHostName");
static_assert(offsetof(W_ScoreBoard_C_SetHostName, ReturnValue) == 0x000000, "Member 'W_ScoreBoard_C_SetHostName::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SetHostName, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'W_ScoreBoard_C_SetHostName::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SetHostName, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x000020, "Member 'W_ScoreBoard_C_SetHostName::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SetHostName, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'W_ScoreBoard_C_SetHostName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SetHostName, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'W_ScoreBoard_C_SetHostName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SetHostName, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'W_ScoreBoard_C_SetHostName::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SetHostName, K2Node_MakeArray_Array) == 0x000088, "Member 'W_ScoreBoard_C_SetHostName::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_ScoreBoard_C_SetHostName, CallFunc_Format_ReturnValue) == 0x000098, "Member 'W_ScoreBoard_C_SetHostName::CallFunc_Format_ReturnValue' has a wrong offset!");

}

