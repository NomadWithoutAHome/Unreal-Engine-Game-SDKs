#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Task_MoveToEnemy

#include "Basic.hpp"

#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function Task_MoveToEnemy.Task_MoveToEnemy_C.ExecuteUbergraph_Task_MoveToEnemy
// 0x0078 (0x0078 - 0x0000)
struct Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_1;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate;       // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_1;     // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	EPathFollowingResult                          Temp_byte_Variable;                                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetValueAsObject_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy) == 0x000008, "Wrong alignment on Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy");
static_assert(sizeof(Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy) == 0x000078, "Wrong size on Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy");
static_assert(offsetof(Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy, EntryPoint) == 0x000000, "Member 'Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy::EntryPoint' has a wrong offset!");
static_assert(offsetof(Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy, CallFunc_MakeLiteralName_ReturnValue) == 0x000004, "Member 'Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy, K2Node_CustomEvent_MovementResult_1) == 0x00000C, "Member 'Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy::K2Node_CustomEvent_MovementResult_1' has a wrong offset!");
static_assert(offsetof(Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy, K2Node_CustomEvent_MovementResult) == 0x000020, "Member 'Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy::K2Node_CustomEvent_MovementResult' has a wrong offset!");
static_assert(offsetof(Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy, Temp_byte_Variable) == 0x000034, "Member 'Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy, K2Node_Event_OwnerController) == 0x000038, "Member 'Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy, K2Node_Event_ControlledPawn) == 0x000040, "Member 'Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy, CallFunc_GetBlackboard_ReturnValue) == 0x000048, "Member 'Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy, CallFunc_GetValueAsObject_ReturnValue) == 0x000050, "Member 'Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy::CallFunc_GetValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy, K2Node_DynamicCast_AsActor) == 0x000058, "Member 'Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy, CallFunc_CreateMoveToProxyObject_ReturnValue) == 0x000068, "Member 'Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy::CallFunc_CreateMoveToProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'Task_MoveToEnemy_C_ExecuteUbergraph_Task_MoveToEnemy::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Task_MoveToEnemy.Task_MoveToEnemy_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct Task_MoveToEnemy_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_MoveToEnemy_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on Task_MoveToEnemy_C_ReceiveExecuteAI");
static_assert(sizeof(Task_MoveToEnemy_C_ReceiveExecuteAI) == 0x000010, "Wrong size on Task_MoveToEnemy_C_ReceiveExecuteAI");
static_assert(offsetof(Task_MoveToEnemy_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'Task_MoveToEnemy_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(Task_MoveToEnemy_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'Task_MoveToEnemy_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function Task_MoveToEnemy.Task_MoveToEnemy_C.OnSuccess_C93C33B54082C1FC2D0E29B13EEC1B53
// 0x0001 (0x0001 - 0x0000)
struct Task_MoveToEnemy_C_OnSuccess_C93C33B54082C1FC2D0E29B13EEC1B53 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_MoveToEnemy_C_OnSuccess_C93C33B54082C1FC2D0E29B13EEC1B53) == 0x000001, "Wrong alignment on Task_MoveToEnemy_C_OnSuccess_C93C33B54082C1FC2D0E29B13EEC1B53");
static_assert(sizeof(Task_MoveToEnemy_C_OnSuccess_C93C33B54082C1FC2D0E29B13EEC1B53) == 0x000001, "Wrong size on Task_MoveToEnemy_C_OnSuccess_C93C33B54082C1FC2D0E29B13EEC1B53");
static_assert(offsetof(Task_MoveToEnemy_C_OnSuccess_C93C33B54082C1FC2D0E29B13EEC1B53, MovementResult) == 0x000000, "Member 'Task_MoveToEnemy_C_OnSuccess_C93C33B54082C1FC2D0E29B13EEC1B53::MovementResult' has a wrong offset!");

// Function Task_MoveToEnemy.Task_MoveToEnemy_C.OnFail_C93C33B54082C1FC2D0E29B13EEC1B53
// 0x0001 (0x0001 - 0x0000)
struct Task_MoveToEnemy_C_OnFail_C93C33B54082C1FC2D0E29B13EEC1B53 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_MoveToEnemy_C_OnFail_C93C33B54082C1FC2D0E29B13EEC1B53) == 0x000001, "Wrong alignment on Task_MoveToEnemy_C_OnFail_C93C33B54082C1FC2D0E29B13EEC1B53");
static_assert(sizeof(Task_MoveToEnemy_C_OnFail_C93C33B54082C1FC2D0E29B13EEC1B53) == 0x000001, "Wrong size on Task_MoveToEnemy_C_OnFail_C93C33B54082C1FC2D0E29B13EEC1B53");
static_assert(offsetof(Task_MoveToEnemy_C_OnFail_C93C33B54082C1FC2D0E29B13EEC1B53, MovementResult) == 0x000000, "Member 'Task_MoveToEnemy_C_OnFail_C93C33B54082C1FC2D0E29B13EEC1B53::MovementResult' has a wrong offset!");

}

