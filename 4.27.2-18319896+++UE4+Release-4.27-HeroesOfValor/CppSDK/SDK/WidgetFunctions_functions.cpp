#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WidgetFunctions

#include "Basic.hpp"

#include "WidgetFunctions_classes.hpp"
#include "WidgetFunctions_parameters.hpp"


namespace SDK
{

// Function WidgetFunctions.WidgetFunctions_C.GetCrosshairStyle
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSlateBrush*                     Crosshair_Normal                                       (Parm, OutParm)
// struct FSlateBrush*                     Crosshair_Hit                                          (Parm, OutParm)

void UWidgetFunctions_C::GetCrosshairStyle(class UObject* __WorldContext, struct FSlateBrush* Crosshair_Normal, struct FSlateBrush* Crosshair_Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WidgetFunctions_C", "GetCrosshairStyle");

	Params::WidgetFunctions_C_GetCrosshairStyle Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Crosshair_Normal != nullptr)
		*Crosshair_Normal = std::move(Parms.Crosshair_Normal);

	if (Crosshair_Hit != nullptr)
		*Crosshair_Hit = std::move(Parms.Crosshair_Hit);
}


// Function WidgetFunctions.WidgetFunctions_C.PostGamestateNotification
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      NotificationMessage                                    (BlueprintVisible, BlueprintReadOnly, Parm)
// class UTexture2D*                       NotificationIcon                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidgetFunctions_C::PostGamestateNotification(const class FText& NotificationMessage, class UTexture2D* NotificationIcon, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WidgetFunctions_C", "PostGamestateNotification");

	Params::WidgetFunctions_C_PostGamestateNotification Parms{};

	Parms.NotificationMessage = std::move(NotificationMessage);
	Parms.NotificationIcon = NotificationIcon;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function WidgetFunctions.WidgetFunctions_C.PostSpecialActionNotification
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FLinearColor&              Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      KilledPlayerUsername                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidgetFunctions_C::PostSpecialActionNotification(const class FText& Message, const struct FLinearColor& Color, class FName Tag, const class FText& KilledPlayerUsername, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WidgetFunctions_C", "PostSpecialActionNotification");

	Params::WidgetFunctions_C_PostSpecialActionNotification Parms{};

	Parms.Message = std::move(Message);
	Parms.Color = std::move(Color);
	Parms.Tag = Tag;
	Parms.KilledPlayerUsername = std::move(KilledPlayerUsername);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function WidgetFunctions.WidgetFunctions_C.GetSelectableStatsAsText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FST_Selectable&            Selectable                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText*                            Stats                                                  (Parm, OutParm)

void UWidgetFunctions_C::GetSelectableStatsAsText(const struct FST_Selectable& Selectable, class UObject* __WorldContext, class FText* Stats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WidgetFunctions_C", "GetSelectableStatsAsText");

	Params::WidgetFunctions_C_GetSelectableStatsAsText Parms{};

	Parms.Selectable = std::move(Selectable);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Stats != nullptr)
		*Stats = std::move(Parms.Stats);
}


// Function WidgetFunctions.WidgetFunctions_C.GetCurrencyIcon(Events)
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_CurrencyTypes                         Currency                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D**                      LargeIcon                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D**                      SmallIcon                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidgetFunctions_C::GetCurrencyIcon_Events_(E_CurrencyTypes Currency, class UObject* __WorldContext, class UTexture2D** LargeIcon, class UTexture2D** SmallIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WidgetFunctions_C", "GetCurrencyIcon(Events)");

	Params::WidgetFunctions_C_GetCurrencyIcon_Events_ Parms{};

	Parms.Currency = Currency;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (LargeIcon != nullptr)
		*LargeIcon = Parms.LargeIcon;

	if (SmallIcon != nullptr)
		*SmallIcon = Parms.SmallIcon;
}


// Function WidgetFunctions.WidgetFunctions_C.FormatKeybindName
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class FText&                      KeybindName                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UWidgetFunctions_C::FormatKeybindName(const class FText& KeybindName, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WidgetFunctions_C", "FormatKeybindName");

	Params::WidgetFunctions_C_FormatKeybindName Parms{};

	Parms.KeybindName = std::move(KeybindName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WidgetFunctions.WidgetFunctions_C.GetCrosshairTypeIndex
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_CrosshairTypes                        Selection                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidgetFunctions_C::GetCrosshairTypeIndex(E_CrosshairTypes Selection, class UObject* __WorldContext, int32* Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WidgetFunctions_C", "GetCrosshairTypeIndex");

	Params::WidgetFunctions_C_GetCrosshairTypeIndex Parms{};

	Parms.Selection = Selection;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}


// Function WidgetFunctions.WidgetFunctions_C.GetFinalClassName
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_Units                                 Class_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText*                            Name_0                                                 (Parm, OutParm)

void UWidgetFunctions_C::GetFinalClassName(E_Units Class_0, class UObject* __WorldContext, class FText* Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WidgetFunctions_C", "GetFinalClassName");

	Params::WidgetFunctions_C_GetFinalClassName Parms{};

	Parms.Class_0 = Class_0;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Name_0 != nullptr)
		*Name_0 = std::move(Parms.Name_0);
}


// Function WidgetFunctions.WidgetFunctions_C.SetWeaponInLoadout
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Selectables                           Selection                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SelectedItemIndex                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidgetFunctions_C::SetWeaponInLoadout(E_Selectables Selection, int32 SelectedItemIndex, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WidgetFunctions_C", "SetWeaponInLoadout");

	Params::WidgetFunctions_C_SetWeaponInLoadout Parms{};

	Parms.Selection = Selection;
	Parms.SelectedItemIndex = SelectedItemIndex;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function WidgetFunctions.WidgetFunctions_C.GetActivePlayerCount
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  PlayerCount                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidgetFunctions_C::GetActivePlayerCount(class UObject* __WorldContext, int32* PlayerCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WidgetFunctions_C", "GetActivePlayerCount");

	Params::WidgetFunctions_C_GetActivePlayerCount Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (PlayerCount != nullptr)
		*PlayerCount = Parms.PlayerCount;
}


// Function WidgetFunctions.WidgetFunctions_C.GetTeamPlayerAmount
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  AlliedPlayers                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  AxisPlayers                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidgetFunctions_C::GetTeamPlayerAmount(class UObject* __WorldContext, int32* AlliedPlayers, int32* AxisPlayers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WidgetFunctions_C", "GetTeamPlayerAmount");

	Params::WidgetFunctions_C_GetTeamPlayerAmount Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (AlliedPlayers != nullptr)
		*AlliedPlayers = Parms.AlliedPlayers;

	if (AxisPlayers != nullptr)
		*AxisPlayers = Parms.AxisPlayers;
}


// Function WidgetFunctions.WidgetFunctions_C.GetTeamJoinableStates
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   CanJoinAllies                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool*                                   CanJoinAxis                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32*                                  AlliedPlayers                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  AxisPlayers                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWidgetFunctions_C::GetTeamJoinableStates(class UObject* __WorldContext, bool* CanJoinAllies, bool* CanJoinAxis, int32* AlliedPlayers, int32* AxisPlayers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WidgetFunctions_C", "GetTeamJoinableStates");

	Params::WidgetFunctions_C_GetTeamJoinableStates Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (CanJoinAllies != nullptr)
		*CanJoinAllies = Parms.CanJoinAllies;

	if (CanJoinAxis != nullptr)
		*CanJoinAxis = Parms.CanJoinAxis;

	if (AlliedPlayers != nullptr)
		*AlliedPlayers = Parms.AlliedPlayers;

	if (AxisPlayers != nullptr)
		*AxisPlayers = Parms.AxisPlayers;
}

}

