#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WidgetFunctions

#include "Basic.hpp"

#include "ST_PlayerStats_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_Selectables_structs.hpp"
#include "E_CurrencyTypes_structs.hpp"
#include "E_Units_structs.hpp"
#include "Engine_structs.hpp"
#include "E_CrosshairTypes_structs.hpp"
#include "ST_Selectable_structs.hpp"
#include "E_DamageTypes_structs.hpp"
#include "E_WeaponRange_structs.hpp"
#include "SlateCore_structs.hpp"
#include "E_WeaponCrosshairStyles_structs.hpp"


namespace SDK::Params
{

// Function WidgetFunctions.WidgetFunctions_C.GetCrosshairStyle
// 0x0700 (0x0700 - 0x0000)
struct WidgetFunctions_C_GetCrosshairStyle final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            Crosshair_Normal;                                  // 0x0008(0x0088)(Parm, OutParm)
	struct FSlateBrush                            Crosshair_Hit;                                     // 0x0090(0x0088)(Parm, OutParm)
	class UTexture2D*                             Temp_object_Variable;                              // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_TankBase_C*                         K2Node_DynamicCast_AsBP_Tank_Base;                 // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15B[0x5];                                      // 0x015B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlaneBase_C*                        K2Node_DynamicCast_AsBP_Plane_Base;                // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_5;                            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_6;                            // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_7;                            // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_8;                            // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WeaponCrosshairStyles                       Temp_byte_Variable;                                // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_9;                            // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_10;                           // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_11;                           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_12;                           // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_13;                           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_14;                           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_15;                           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_16;                           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_17;                           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WeaponCrosshairStyles                       Temp_byte_Variable_1;                              // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue;         // 0x0210(0x0088)()
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue_1;       // 0x0298(0x0088)()
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue_2;       // 0x0320(0x0088)()
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue_3;       // 0x03A8(0x0088)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0430(0x0028)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0458(0x0088)()
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue_4;       // 0x04E0(0x0088)()
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue_5;       // 0x0568(0x0088)()
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue_6;       // 0x05F0(0x0088)()
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue_7;       // 0x0678(0x0088)()
};
static_assert(alignof(WidgetFunctions_C_GetCrosshairStyle) == 0x000008, "Wrong alignment on WidgetFunctions_C_GetCrosshairStyle");
static_assert(sizeof(WidgetFunctions_C_GetCrosshairStyle) == 0x000700, "Wrong size on WidgetFunctions_C_GetCrosshairStyle");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, __WorldContext) == 0x000000, "Member 'WidgetFunctions_C_GetCrosshairStyle::__WorldContext' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, Crosshair_Normal) == 0x000008, "Member 'WidgetFunctions_C_GetCrosshairStyle::Crosshair_Normal' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, Crosshair_Hit) == 0x000090, "Member 'WidgetFunctions_C_GetCrosshairStyle::Crosshair_Hit' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, Temp_object_Variable) == 0x000118, "Member 'WidgetFunctions_C_GetCrosshairStyle::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, CallFunc_GetPlayerController_ReturnValue) == 0x000120, "Member 'WidgetFunctions_C_GetCrosshairStyle::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, CallFunc_K2_GetPawn_ReturnValue) == 0x000128, "Member 'WidgetFunctions_C_GetCrosshairStyle::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, Temp_object_Variable_1) == 0x000130, "Member 'WidgetFunctions_C_GetCrosshairStyle::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, CallFunc_IsValid_ReturnValue) == 0x000138, "Member 'WidgetFunctions_C_GetCrosshairStyle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, K2Node_DynamicCast_AsBP_Character) == 0x000140, "Member 'WidgetFunctions_C_GetCrosshairStyle::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, K2Node_DynamicCast_bSuccess) == 0x000148, "Member 'WidgetFunctions_C_GetCrosshairStyle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, K2Node_DynamicCast_AsBP_Tank_Base) == 0x000150, "Member 'WidgetFunctions_C_GetCrosshairStyle::K2Node_DynamicCast_AsBP_Tank_Base' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, K2Node_DynamicCast_bSuccess_1) == 0x000158, "Member 'WidgetFunctions_C_GetCrosshairStyle::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, CallFunc_IsValid_ReturnValue_1) == 0x000159, "Member 'WidgetFunctions_C_GetCrosshairStyle::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, CallFunc_IsValid_ReturnValue_2) == 0x00015A, "Member 'WidgetFunctions_C_GetCrosshairStyle::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, K2Node_DynamicCast_AsBP_Plane_Base) == 0x000160, "Member 'WidgetFunctions_C_GetCrosshairStyle::K2Node_DynamicCast_AsBP_Plane_Base' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, K2Node_DynamicCast_bSuccess_2) == 0x000168, "Member 'WidgetFunctions_C_GetCrosshairStyle::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, Temp_object_Variable_2) == 0x000170, "Member 'WidgetFunctions_C_GetCrosshairStyle::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, Temp_object_Variable_3) == 0x000178, "Member 'WidgetFunctions_C_GetCrosshairStyle::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, Temp_object_Variable_4) == 0x000180, "Member 'WidgetFunctions_C_GetCrosshairStyle::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, Temp_object_Variable_5) == 0x000188, "Member 'WidgetFunctions_C_GetCrosshairStyle::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, Temp_object_Variable_6) == 0x000190, "Member 'WidgetFunctions_C_GetCrosshairStyle::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, Temp_object_Variable_7) == 0x000198, "Member 'WidgetFunctions_C_GetCrosshairStyle::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, Temp_object_Variable_8) == 0x0001A0, "Member 'WidgetFunctions_C_GetCrosshairStyle::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, Temp_byte_Variable) == 0x0001A8, "Member 'WidgetFunctions_C_GetCrosshairStyle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, Temp_object_Variable_9) == 0x0001B0, "Member 'WidgetFunctions_C_GetCrosshairStyle::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, Temp_object_Variable_10) == 0x0001B8, "Member 'WidgetFunctions_C_GetCrosshairStyle::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, Temp_object_Variable_11) == 0x0001C0, "Member 'WidgetFunctions_C_GetCrosshairStyle::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, Temp_object_Variable_12) == 0x0001C8, "Member 'WidgetFunctions_C_GetCrosshairStyle::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, Temp_object_Variable_13) == 0x0001D0, "Member 'WidgetFunctions_C_GetCrosshairStyle::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, Temp_object_Variable_14) == 0x0001D8, "Member 'WidgetFunctions_C_GetCrosshairStyle::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, Temp_object_Variable_15) == 0x0001E0, "Member 'WidgetFunctions_C_GetCrosshairStyle::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, Temp_object_Variable_16) == 0x0001E8, "Member 'WidgetFunctions_C_GetCrosshairStyle::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, Temp_object_Variable_17) == 0x0001F0, "Member 'WidgetFunctions_C_GetCrosshairStyle::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, Temp_byte_Variable_1) == 0x0001F8, "Member 'WidgetFunctions_C_GetCrosshairStyle::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, K2Node_Select_Default) == 0x000200, "Member 'WidgetFunctions_C_GetCrosshairStyle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, K2Node_Select_Default_1) == 0x000208, "Member 'WidgetFunctions_C_GetCrosshairStyle::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, CallFunc_MakeBrushFromTexture_ReturnValue) == 0x000210, "Member 'WidgetFunctions_C_GetCrosshairStyle::CallFunc_MakeBrushFromTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, CallFunc_MakeBrushFromTexture_ReturnValue_1) == 0x000298, "Member 'WidgetFunctions_C_GetCrosshairStyle::CallFunc_MakeBrushFromTexture_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, CallFunc_MakeBrushFromTexture_ReturnValue_2) == 0x000320, "Member 'WidgetFunctions_C_GetCrosshairStyle::CallFunc_MakeBrushFromTexture_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, CallFunc_MakeBrushFromTexture_ReturnValue_3) == 0x0003A8, "Member 'WidgetFunctions_C_GetCrosshairStyle::CallFunc_MakeBrushFromTexture_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, K2Node_MakeStruct_SlateColor) == 0x000430, "Member 'WidgetFunctions_C_GetCrosshairStyle::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, K2Node_MakeStruct_SlateBrush) == 0x000458, "Member 'WidgetFunctions_C_GetCrosshairStyle::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, CallFunc_MakeBrushFromTexture_ReturnValue_4) == 0x0004E0, "Member 'WidgetFunctions_C_GetCrosshairStyle::CallFunc_MakeBrushFromTexture_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, CallFunc_MakeBrushFromTexture_ReturnValue_5) == 0x000568, "Member 'WidgetFunctions_C_GetCrosshairStyle::CallFunc_MakeBrushFromTexture_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, CallFunc_MakeBrushFromTexture_ReturnValue_6) == 0x0005F0, "Member 'WidgetFunctions_C_GetCrosshairStyle::CallFunc_MakeBrushFromTexture_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairStyle, CallFunc_MakeBrushFromTexture_ReturnValue_7) == 0x000678, "Member 'WidgetFunctions_C_GetCrosshairStyle::CallFunc_MakeBrushFromTexture_ReturnValue_7' has a wrong offset!");

// Function WidgetFunctions.WidgetFunctions_C.PostGamestateNotification
// 0x0078 (0x0078 - 0x0000)
struct WidgetFunctions_C_PostGamestateNotification final
{
public:
	class FText                                   NotificationMessage;                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UTexture2D*                             NotificationIcon;                                  // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Notification_C*                      CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Controller_C*                       K2Node_DynamicCast_AsBP_Controller;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckIfPawnIsAlive_Alive;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_Notification_C*>              CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Notification_C*                      CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WidgetFunctions_C_PostGamestateNotification) == 0x000008, "Wrong alignment on WidgetFunctions_C_PostGamestateNotification");
static_assert(sizeof(WidgetFunctions_C_PostGamestateNotification) == 0x000078, "Wrong size on WidgetFunctions_C_PostGamestateNotification");
static_assert(offsetof(WidgetFunctions_C_PostGamestateNotification, NotificationMessage) == 0x000000, "Member 'WidgetFunctions_C_PostGamestateNotification::NotificationMessage' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_PostGamestateNotification, NotificationIcon) == 0x000018, "Member 'WidgetFunctions_C_PostGamestateNotification::NotificationIcon' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_PostGamestateNotification, __WorldContext) == 0x000020, "Member 'WidgetFunctions_C_PostGamestateNotification::__WorldContext' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_PostGamestateNotification, CallFunc_Create_ReturnValue) == 0x000028, "Member 'WidgetFunctions_C_PostGamestateNotification::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_PostGamestateNotification, CallFunc_GetPlayerController_ReturnValue) == 0x000030, "Member 'WidgetFunctions_C_PostGamestateNotification::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_PostGamestateNotification, K2Node_DynamicCast_AsBP_Controller) == 0x000038, "Member 'WidgetFunctions_C_PostGamestateNotification::K2Node_DynamicCast_AsBP_Controller' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_PostGamestateNotification, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WidgetFunctions_C_PostGamestateNotification::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_PostGamestateNotification, CallFunc_CheckIfPawnIsAlive_Alive) == 0x000041, "Member 'WidgetFunctions_C_PostGamestateNotification::CallFunc_CheckIfPawnIsAlive_Alive' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_PostGamestateNotification, CallFunc_IsValid_ReturnValue) == 0x000042, "Member 'WidgetFunctions_C_PostGamestateNotification::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_PostGamestateNotification, CallFunc_IsValid_ReturnValue_1) == 0x000043, "Member 'WidgetFunctions_C_PostGamestateNotification::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_PostGamestateNotification, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000048, "Member 'WidgetFunctions_C_PostGamestateNotification::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_PostGamestateNotification, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'WidgetFunctions_C_PostGamestateNotification::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_PostGamestateNotification, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'WidgetFunctions_C_PostGamestateNotification::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_PostGamestateNotification, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'WidgetFunctions_C_PostGamestateNotification::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_PostGamestateNotification, CallFunc_Array_Get_Item) == 0x000068, "Member 'WidgetFunctions_C_PostGamestateNotification::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_PostGamestateNotification, CallFunc_IsValid_ReturnValue_2) == 0x000070, "Member 'WidgetFunctions_C_PostGamestateNotification::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_PostGamestateNotification, CallFunc_Less_IntInt_ReturnValue) == 0x000071, "Member 'WidgetFunctions_C_PostGamestateNotification::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_PostGamestateNotification, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'WidgetFunctions_C_PostGamestateNotification::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WidgetFunctions.WidgetFunctions_C.PostSpecialActionNotification
// 0x0068 (0x0068 - 0x0000)
struct WidgetFunctions_C_PostSpecialActionNotification final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FLinearColor                           Color;                                             // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Tag;                                               // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   KilledPlayerUsername;                              // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Controller_C*                       K2Node_DynamicCast_AsBP_Controller;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WidgetFunctions_C_PostSpecialActionNotification) == 0x000008, "Wrong alignment on WidgetFunctions_C_PostSpecialActionNotification");
static_assert(sizeof(WidgetFunctions_C_PostSpecialActionNotification) == 0x000068, "Wrong size on WidgetFunctions_C_PostSpecialActionNotification");
static_assert(offsetof(WidgetFunctions_C_PostSpecialActionNotification, Message) == 0x000000, "Member 'WidgetFunctions_C_PostSpecialActionNotification::Message' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_PostSpecialActionNotification, Color) == 0x000018, "Member 'WidgetFunctions_C_PostSpecialActionNotification::Color' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_PostSpecialActionNotification, Tag) == 0x000028, "Member 'WidgetFunctions_C_PostSpecialActionNotification::Tag' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_PostSpecialActionNotification, KilledPlayerUsername) == 0x000030, "Member 'WidgetFunctions_C_PostSpecialActionNotification::KilledPlayerUsername' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_PostSpecialActionNotification, __WorldContext) == 0x000048, "Member 'WidgetFunctions_C_PostSpecialActionNotification::__WorldContext' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_PostSpecialActionNotification, CallFunc_GetPlayerController_ReturnValue) == 0x000050, "Member 'WidgetFunctions_C_PostSpecialActionNotification::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_PostSpecialActionNotification, K2Node_DynamicCast_AsBP_Controller) == 0x000058, "Member 'WidgetFunctions_C_PostSpecialActionNotification::K2Node_DynamicCast_AsBP_Controller' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_PostSpecialActionNotification, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'WidgetFunctions_C_PostSpecialActionNotification::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WidgetFunctions.WidgetFunctions_C.GetSelectableStatsAsText
// 0x07C0 (0x07C0 - 0x0000)
struct WidgetFunctions_C_GetSelectableStatsAsText final
{
public:
	struct FST_Selectable                         Selectable;                                        // 0x0000(0x00E0)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x00E0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Stats;                                             // 0x00E8(0x0018)(Parm, OutParm)
	E_DamageTypes                                 Temp_byte_Variable;                                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Equipable_Base;       // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Throwablebase;        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0138(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0178(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0188(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01A0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01E0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0220(0x0040)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Ranged_Weapon_Base;   // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_2;                // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0280(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0298(0x0040)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x02D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x02F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0300(0x0040)(HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0340(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0350(0x0040)(HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0390(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC[0x4];                                      // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x03B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x03C0(0x0040)(HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0400(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x0410(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0450(0x0018)()
	class FString                                 Temp_string_Variable_1;                            // 0x0468(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_9;            // 0x0478(0x0040)(HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x04B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x04C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x04D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_5;                            // 0x04E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_6;                            // 0x04F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_7;                            // 0x0508(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_8;                            // 0x0518(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_9;                            // 0x0528(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	E_WeaponRange                                 Temp_byte_Variable_1;                              // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_539[0x7];                                      // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0540(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0558(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0570(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0588(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x05A0(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x05B8(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x05D0(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x05E8(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x0600(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x0618(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x0630(0x0018)()
	class FText                                   Temp_text_Variable_11;                             // 0x0648(0x0018)()
	class FText                                   Temp_text_Variable_12;                             // 0x0660(0x0018)()
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0678(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x0688(0x0018)()
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_1;          // 0x06A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x06B0(0x0018)()
	class FString                                 K2Node_Select_Default_1;                           // 0x06C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_10;           // 0x06D8(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0718(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0730(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_11;           // 0x0740(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0780(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0798(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x07A8(0x0018)()
};
static_assert(alignof(WidgetFunctions_C_GetSelectableStatsAsText) == 0x000008, "Wrong alignment on WidgetFunctions_C_GetSelectableStatsAsText");
static_assert(sizeof(WidgetFunctions_C_GetSelectableStatsAsText) == 0x0007C0, "Wrong size on WidgetFunctions_C_GetSelectableStatsAsText");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, Selectable) == 0x000000, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::Selectable' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, __WorldContext) == 0x0000E0, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::__WorldContext' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, Stats) == 0x0000E8, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::Stats' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, Temp_byte_Variable) == 0x000100, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, Temp_string_Variable) == 0x000108, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, K2Node_ClassDynamicCast_AsBP_Equipable_Base) == 0x000118, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::K2Node_ClassDynamicCast_AsBP_Equipable_Base' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, K2Node_ClassDynamicCast_bSuccess) == 0x000120, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, K2Node_ClassDynamicCast_AsBP_Throwablebase) == 0x000128, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::K2Node_ClassDynamicCast_AsBP_Throwablebase' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, K2Node_ClassDynamicCast_bSuccess_1) == 0x000130, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, K2Node_MakeStruct_FormatArgumentData) == 0x000138, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, K2Node_MakeArray_Array) == 0x000178, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, CallFunc_Format_ReturnValue) == 0x000188, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001A0, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001E0, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, K2Node_MakeStruct_FormatArgumentData_3) == 0x000220, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, CallFunc_Conv_IntToString_ReturnValue) == 0x000260, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, K2Node_ClassDynamicCast_AsBP_Ranged_Weapon_Base) == 0x000270, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::K2Node_ClassDynamicCast_AsBP_Ranged_Weapon_Base' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, K2Node_ClassDynamicCast_bSuccess_2) == 0x000278, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::K2Node_ClassDynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, CallFunc_Conv_StringToText_ReturnValue) == 0x000280, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, K2Node_MakeStruct_FormatArgumentData_4) == 0x000298, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0002D8, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, CallFunc_Greater_IntInt_ReturnValue) == 0x0002E8, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, CallFunc_Concat_StrStr_ReturnValue) == 0x0002F0, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, K2Node_MakeStruct_FormatArgumentData_5) == 0x000300, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000340, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, K2Node_MakeStruct_FormatArgumentData_6) == 0x000350, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, CallFunc_SelectString_ReturnValue) == 0x000390, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0003A0, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, CallFunc_Multiply_IntInt_ReturnValue) == 0x0003A4, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, CallFunc_FCeil_ReturnValue) == 0x0003A8, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0003B0, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, K2Node_MakeStruct_FormatArgumentData_7) == 0x0003C0, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000400, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, K2Node_MakeStruct_FormatArgumentData_8) == 0x000410, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000450, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, Temp_string_Variable_1) == 0x000468, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, K2Node_MakeStruct_FormatArgumentData_9) == 0x000478, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::K2Node_MakeStruct_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, Temp_string_Variable_2) == 0x0004B8, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, Temp_string_Variable_3) == 0x0004C8, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, Temp_string_Variable_4) == 0x0004D8, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, Temp_string_Variable_5) == 0x0004E8, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, Temp_string_Variable_6) == 0x0004F8, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::Temp_string_Variable_6' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, Temp_string_Variable_7) == 0x000508, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::Temp_string_Variable_7' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, Temp_string_Variable_8) == 0x000518, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::Temp_string_Variable_8' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, Temp_string_Variable_9) == 0x000528, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::Temp_string_Variable_9' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, Temp_byte_Variable_1) == 0x000538, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, Temp_text_Variable) == 0x000540, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, Temp_text_Variable_1) == 0x000558, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, Temp_text_Variable_2) == 0x000570, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, Temp_text_Variable_3) == 0x000588, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, Temp_text_Variable_4) == 0x0005A0, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, Temp_text_Variable_5) == 0x0005B8, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, Temp_text_Variable_6) == 0x0005D0, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, Temp_text_Variable_7) == 0x0005E8, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, Temp_text_Variable_8) == 0x000600, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, Temp_text_Variable_9) == 0x000618, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, Temp_text_Variable_10) == 0x000630, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, Temp_text_Variable_11) == 0x000648, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, Temp_text_Variable_12) == 0x000660, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::Temp_text_Variable_12' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, CallFunc_MakeLiteralString_ReturnValue) == 0x000678, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, K2Node_Select_Default) == 0x000688, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, CallFunc_MakeLiteralString_ReturnValue_1) == 0x0006A0, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::CallFunc_MakeLiteralString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, CallFunc_MakeLiteralText_ReturnValue) == 0x0006B0, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, K2Node_Select_Default_1) == 0x0006C8, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, K2Node_MakeStruct_FormatArgumentData_10) == 0x0006D8, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::K2Node_MakeStruct_FormatArgumentData_10' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000718, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, K2Node_MakeArray_Array_1) == 0x000730, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, K2Node_MakeStruct_FormatArgumentData_11) == 0x000740, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::K2Node_MakeStruct_FormatArgumentData_11' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, CallFunc_Format_ReturnValue_1) == 0x000780, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, K2Node_MakeArray_Array_2) == 0x000798, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetSelectableStatsAsText, CallFunc_Format_ReturnValue_2) == 0x0007A8, "Member 'WidgetFunctions_C_GetSelectableStatsAsText::CallFunc_Format_ReturnValue_2' has a wrong offset!");

// Function WidgetFunctions.WidgetFunctions_C.GetCurrencyIcon(Events)
// 0x0090 (0x0090 - 0x0000)
struct WidgetFunctions_C_GetCurrencyIcon_Events_ final
{
public:
	E_CurrencyTypes                               Currency;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             LargeIcon;                                         // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             SmallIcon;                                         // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CurrencyTypes                               Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CurrencyTypes                               Temp_byte_Variable_1;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_5;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_6;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_7;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_8;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_9;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WidgetFunctions_C_GetCurrencyIcon_Events_) == 0x000008, "Wrong alignment on WidgetFunctions_C_GetCurrencyIcon_Events_");
static_assert(sizeof(WidgetFunctions_C_GetCurrencyIcon_Events_) == 0x000090, "Wrong size on WidgetFunctions_C_GetCurrencyIcon_Events_");
static_assert(offsetof(WidgetFunctions_C_GetCurrencyIcon_Events_, Currency) == 0x000000, "Member 'WidgetFunctions_C_GetCurrencyIcon_Events_::Currency' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCurrencyIcon_Events_, __WorldContext) == 0x000008, "Member 'WidgetFunctions_C_GetCurrencyIcon_Events_::__WorldContext' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCurrencyIcon_Events_, LargeIcon) == 0x000010, "Member 'WidgetFunctions_C_GetCurrencyIcon_Events_::LargeIcon' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCurrencyIcon_Events_, SmallIcon) == 0x000018, "Member 'WidgetFunctions_C_GetCurrencyIcon_Events_::SmallIcon' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCurrencyIcon_Events_, Temp_byte_Variable) == 0x000020, "Member 'WidgetFunctions_C_GetCurrencyIcon_Events_::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCurrencyIcon_Events_, Temp_object_Variable) == 0x000028, "Member 'WidgetFunctions_C_GetCurrencyIcon_Events_::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCurrencyIcon_Events_, Temp_object_Variable_1) == 0x000030, "Member 'WidgetFunctions_C_GetCurrencyIcon_Events_::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCurrencyIcon_Events_, Temp_object_Variable_2) == 0x000038, "Member 'WidgetFunctions_C_GetCurrencyIcon_Events_::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCurrencyIcon_Events_, Temp_object_Variable_3) == 0x000040, "Member 'WidgetFunctions_C_GetCurrencyIcon_Events_::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCurrencyIcon_Events_, Temp_object_Variable_4) == 0x000048, "Member 'WidgetFunctions_C_GetCurrencyIcon_Events_::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCurrencyIcon_Events_, Temp_byte_Variable_1) == 0x000050, "Member 'WidgetFunctions_C_GetCurrencyIcon_Events_::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCurrencyIcon_Events_, K2Node_Select_Default) == 0x000058, "Member 'WidgetFunctions_C_GetCurrencyIcon_Events_::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCurrencyIcon_Events_, Temp_object_Variable_5) == 0x000060, "Member 'WidgetFunctions_C_GetCurrencyIcon_Events_::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCurrencyIcon_Events_, Temp_object_Variable_6) == 0x000068, "Member 'WidgetFunctions_C_GetCurrencyIcon_Events_::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCurrencyIcon_Events_, Temp_object_Variable_7) == 0x000070, "Member 'WidgetFunctions_C_GetCurrencyIcon_Events_::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCurrencyIcon_Events_, Temp_object_Variable_8) == 0x000078, "Member 'WidgetFunctions_C_GetCurrencyIcon_Events_::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCurrencyIcon_Events_, Temp_object_Variable_9) == 0x000080, "Member 'WidgetFunctions_C_GetCurrencyIcon_Events_::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCurrencyIcon_Events_, K2Node_Select_Default_1) == 0x000088, "Member 'WidgetFunctions_C_GetCurrencyIcon_Events_::K2Node_Select_Default_1' has a wrong offset!");

// Function WidgetFunctions.WidgetFunctions_C.FormatKeybindName
// 0x0130 (0x0130 - 0x0000)
struct WidgetFunctions_C_FormatKeybindName final
{
public:
	class FText                                   KeybindName;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   ReturnValue;                                       // 0x0020(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0038(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0080(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0098(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x00B0(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue_1;        // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue_2;        // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB[0x5];                                       // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_3;            // 0x00D0(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue_3;        // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_4;            // 0x00F0(0x0018)()
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue_4;        // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10A[0x6];                                      // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_5;            // 0x0110(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue_5;        // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WidgetFunctions_C_FormatKeybindName) == 0x000008, "Wrong alignment on WidgetFunctions_C_FormatKeybindName");
static_assert(sizeof(WidgetFunctions_C_FormatKeybindName) == 0x000130, "Wrong size on WidgetFunctions_C_FormatKeybindName");
static_assert(offsetof(WidgetFunctions_C_FormatKeybindName, KeybindName) == 0x000000, "Member 'WidgetFunctions_C_FormatKeybindName::KeybindName' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_FormatKeybindName, __WorldContext) == 0x000018, "Member 'WidgetFunctions_C_FormatKeybindName::__WorldContext' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_FormatKeybindName, ReturnValue) == 0x000020, "Member 'WidgetFunctions_C_FormatKeybindName::ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_FormatKeybindName, CallFunc_MakeLiteralText_ReturnValue) == 0x000038, "Member 'WidgetFunctions_C_FormatKeybindName::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_FormatKeybindName, CallFunc_Conv_TextToString_ReturnValue) == 0x000050, "Member 'WidgetFunctions_C_FormatKeybindName::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_FormatKeybindName, CallFunc_EqualEqual_TextText_ReturnValue) == 0x000060, "Member 'WidgetFunctions_C_FormatKeybindName::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_FormatKeybindName, CallFunc_Len_ReturnValue) == 0x000064, "Member 'WidgetFunctions_C_FormatKeybindName::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_FormatKeybindName, CallFunc_FindSubstring_ReturnValue) == 0x000068, "Member 'WidgetFunctions_C_FormatKeybindName::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_FormatKeybindName, CallFunc_Greater_IntInt_ReturnValue) == 0x00006C, "Member 'WidgetFunctions_C_FormatKeybindName::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_FormatKeybindName, CallFunc_GetSubstring_ReturnValue) == 0x000070, "Member 'WidgetFunctions_C_FormatKeybindName::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_FormatKeybindName, CallFunc_Conv_StringToText_ReturnValue) == 0x000080, "Member 'WidgetFunctions_C_FormatKeybindName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_FormatKeybindName, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000098, "Member 'WidgetFunctions_C_FormatKeybindName::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_FormatKeybindName, CallFunc_MakeLiteralText_ReturnValue_2) == 0x0000B0, "Member 'WidgetFunctions_C_FormatKeybindName::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_FormatKeybindName, CallFunc_EqualEqual_TextText_ReturnValue_1) == 0x0000C8, "Member 'WidgetFunctions_C_FormatKeybindName::CallFunc_EqualEqual_TextText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_FormatKeybindName, CallFunc_EqualEqual_TextText_ReturnValue_2) == 0x0000C9, "Member 'WidgetFunctions_C_FormatKeybindName::CallFunc_EqualEqual_TextText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_FormatKeybindName, CallFunc_BooleanOR_ReturnValue) == 0x0000CA, "Member 'WidgetFunctions_C_FormatKeybindName::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_FormatKeybindName, CallFunc_MakeLiteralText_ReturnValue_3) == 0x0000D0, "Member 'WidgetFunctions_C_FormatKeybindName::CallFunc_MakeLiteralText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_FormatKeybindName, CallFunc_EqualEqual_TextText_ReturnValue_3) == 0x0000E8, "Member 'WidgetFunctions_C_FormatKeybindName::CallFunc_EqualEqual_TextText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_FormatKeybindName, CallFunc_MakeLiteralText_ReturnValue_4) == 0x0000F0, "Member 'WidgetFunctions_C_FormatKeybindName::CallFunc_MakeLiteralText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_FormatKeybindName, CallFunc_BooleanOR_ReturnValue_1) == 0x000108, "Member 'WidgetFunctions_C_FormatKeybindName::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_FormatKeybindName, CallFunc_EqualEqual_TextText_ReturnValue_4) == 0x000109, "Member 'WidgetFunctions_C_FormatKeybindName::CallFunc_EqualEqual_TextText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_FormatKeybindName, CallFunc_MakeLiteralText_ReturnValue_5) == 0x000110, "Member 'WidgetFunctions_C_FormatKeybindName::CallFunc_MakeLiteralText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_FormatKeybindName, CallFunc_EqualEqual_TextText_ReturnValue_5) == 0x000128, "Member 'WidgetFunctions_C_FormatKeybindName::CallFunc_EqualEqual_TextText_ReturnValue_5' has a wrong offset!");

// Function WidgetFunctions.WidgetFunctions_C.GetCrosshairTypeIndex
// 0x0018 (0x0018 - 0x0000)
struct WidgetFunctions_C_GetCrosshairTypeIndex final
{
public:
	E_CrosshairTypes                              Selection;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WidgetFunctions_C_GetCrosshairTypeIndex) == 0x000008, "Wrong alignment on WidgetFunctions_C_GetCrosshairTypeIndex");
static_assert(sizeof(WidgetFunctions_C_GetCrosshairTypeIndex) == 0x000018, "Wrong size on WidgetFunctions_C_GetCrosshairTypeIndex");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairTypeIndex, Selection) == 0x000000, "Member 'WidgetFunctions_C_GetCrosshairTypeIndex::Selection' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairTypeIndex, __WorldContext) == 0x000008, "Member 'WidgetFunctions_C_GetCrosshairTypeIndex::__WorldContext' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairTypeIndex, Index_0) == 0x000010, "Member 'WidgetFunctions_C_GetCrosshairTypeIndex::Index_0' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetCrosshairTypeIndex, K2Node_SwitchEnum_CmpSuccess) == 0x000014, "Member 'WidgetFunctions_C_GetCrosshairTypeIndex::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WidgetFunctions.WidgetFunctions_C.GetFinalClassName
// 0x00D8 (0x00D8 - 0x0000)
struct WidgetFunctions_C_GetFinalClassName final
{
public:
	E_Units                                       Class_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Name_0;                                            // 0x0010(0x0018)(Parm, OutParm)
	E_Units                                       Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0030(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0048(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0060(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0078(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0090(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x00A8(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x00C0(0x0018)()
};
static_assert(alignof(WidgetFunctions_C_GetFinalClassName) == 0x000008, "Wrong alignment on WidgetFunctions_C_GetFinalClassName");
static_assert(sizeof(WidgetFunctions_C_GetFinalClassName) == 0x0000D8, "Wrong size on WidgetFunctions_C_GetFinalClassName");
static_assert(offsetof(WidgetFunctions_C_GetFinalClassName, Class_0) == 0x000000, "Member 'WidgetFunctions_C_GetFinalClassName::Class_0' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetFinalClassName, __WorldContext) == 0x000008, "Member 'WidgetFunctions_C_GetFinalClassName::__WorldContext' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetFinalClassName, Name_0) == 0x000010, "Member 'WidgetFunctions_C_GetFinalClassName::Name_0' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetFinalClassName, Temp_byte_Variable) == 0x000028, "Member 'WidgetFunctions_C_GetFinalClassName::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetFinalClassName, Temp_text_Variable) == 0x000030, "Member 'WidgetFunctions_C_GetFinalClassName::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetFinalClassName, Temp_text_Variable_1) == 0x000048, "Member 'WidgetFunctions_C_GetFinalClassName::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetFinalClassName, Temp_text_Variable_2) == 0x000060, "Member 'WidgetFunctions_C_GetFinalClassName::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetFinalClassName, Temp_text_Variable_3) == 0x000078, "Member 'WidgetFunctions_C_GetFinalClassName::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetFinalClassName, Temp_text_Variable_4) == 0x000090, "Member 'WidgetFunctions_C_GetFinalClassName::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetFinalClassName, Temp_text_Variable_5) == 0x0000A8, "Member 'WidgetFunctions_C_GetFinalClassName::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetFinalClassName, K2Node_Select_Default) == 0x0000C0, "Member 'WidgetFunctions_C_GetFinalClassName::K2Node_Select_Default' has a wrong offset!");

// Function WidgetFunctions.WidgetFunctions_C.SetWeaponInLoadout
// 0x0030 (0x0030 - 0x0000)
struct WidgetFunctions_C_SetWeaponInLoadout final
{
public:
	E_Selectables                                 Selection;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SelectedItemIndex;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedItemIndexTemp;                             // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WidgetFunctions_C_SetWeaponInLoadout) == 0x000008, "Wrong alignment on WidgetFunctions_C_SetWeaponInLoadout");
static_assert(sizeof(WidgetFunctions_C_SetWeaponInLoadout) == 0x000030, "Wrong size on WidgetFunctions_C_SetWeaponInLoadout");
static_assert(offsetof(WidgetFunctions_C_SetWeaponInLoadout, Selection) == 0x000000, "Member 'WidgetFunctions_C_SetWeaponInLoadout::Selection' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_SetWeaponInLoadout, SelectedItemIndex) == 0x000004, "Member 'WidgetFunctions_C_SetWeaponInLoadout::SelectedItemIndex' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_SetWeaponInLoadout, __WorldContext) == 0x000008, "Member 'WidgetFunctions_C_SetWeaponInLoadout::__WorldContext' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_SetWeaponInLoadout, SelectedItemIndexTemp) == 0x000010, "Member 'WidgetFunctions_C_SetWeaponInLoadout::SelectedItemIndexTemp' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_SetWeaponInLoadout, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'WidgetFunctions_C_SetWeaponInLoadout::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_SetWeaponInLoadout, K2Node_DynamicCast_AsBP_Game_Instance) == 0x000020, "Member 'WidgetFunctions_C_SetWeaponInLoadout::K2Node_DynamicCast_AsBP_Game_Instance' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_SetWeaponInLoadout, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WidgetFunctions_C_SetWeaponInLoadout::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_SetWeaponInLoadout, K2Node_SwitchEnum_CmpSuccess) == 0x000029, "Member 'WidgetFunctions_C_SetWeaponInLoadout::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WidgetFunctions.WidgetFunctions_C.GetActivePlayerCount
// 0x00B8 (0x00B8 - 0x0000)
struct WidgetFunctions_C_GetActivePlayerCount final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerCount;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_PlayerStats                        CallFunc_Array_Get_Item;                           // 0x0040(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WidgetFunctions_C_GetActivePlayerCount) == 0x000008, "Wrong alignment on WidgetFunctions_C_GetActivePlayerCount");
static_assert(sizeof(WidgetFunctions_C_GetActivePlayerCount) == 0x0000B8, "Wrong size on WidgetFunctions_C_GetActivePlayerCount");
static_assert(offsetof(WidgetFunctions_C_GetActivePlayerCount, __WorldContext) == 0x000000, "Member 'WidgetFunctions_C_GetActivePlayerCount::__WorldContext' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetActivePlayerCount, PlayerCount) == 0x000008, "Member 'WidgetFunctions_C_GetActivePlayerCount::PlayerCount' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetActivePlayerCount, Count) == 0x00000C, "Member 'WidgetFunctions_C_GetActivePlayerCount::Count' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetActivePlayerCount, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'WidgetFunctions_C_GetActivePlayerCount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetActivePlayerCount, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'WidgetFunctions_C_GetActivePlayerCount::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetActivePlayerCount, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WidgetFunctions_C_GetActivePlayerCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetActivePlayerCount, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x000028, "Member 'WidgetFunctions_C_GetActivePlayerCount::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetActivePlayerCount, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WidgetFunctions_C_GetActivePlayerCount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetActivePlayerCount, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'WidgetFunctions_C_GetActivePlayerCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetActivePlayerCount, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'WidgetFunctions_C_GetActivePlayerCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetActivePlayerCount, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'WidgetFunctions_C_GetActivePlayerCount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetActivePlayerCount, CallFunc_Array_Get_Item) == 0x000040, "Member 'WidgetFunctions_C_GetActivePlayerCount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetActivePlayerCount, CallFunc_Not_PreBool_ReturnValue) == 0x0000A8, "Member 'WidgetFunctions_C_GetActivePlayerCount::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetActivePlayerCount, Temp_int_Variable) == 0x0000AC, "Member 'WidgetFunctions_C_GetActivePlayerCount::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetActivePlayerCount, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B0, "Member 'WidgetFunctions_C_GetActivePlayerCount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function WidgetFunctions.WidgetFunctions_C.GetTeamPlayerAmount
// 0x00C8 (0x00C8 - 0x0000)
struct WidgetFunctions_C_GetTeamPlayerAmount final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AlliedPlayers;                                     // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AxisPlayers;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AxisPlayerCount;                                   // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AlliedPlayerCount;                                 // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_PlayerStats                        CallFunc_Array_Get_Item;                           // 0x0050(0x0068)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WidgetFunctions_C_GetTeamPlayerAmount) == 0x000008, "Wrong alignment on WidgetFunctions_C_GetTeamPlayerAmount");
static_assert(sizeof(WidgetFunctions_C_GetTeamPlayerAmount) == 0x0000C8, "Wrong size on WidgetFunctions_C_GetTeamPlayerAmount");
static_assert(offsetof(WidgetFunctions_C_GetTeamPlayerAmount, __WorldContext) == 0x000000, "Member 'WidgetFunctions_C_GetTeamPlayerAmount::__WorldContext' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamPlayerAmount, AlliedPlayers) == 0x000008, "Member 'WidgetFunctions_C_GetTeamPlayerAmount::AlliedPlayers' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamPlayerAmount, AxisPlayers) == 0x00000C, "Member 'WidgetFunctions_C_GetTeamPlayerAmount::AxisPlayers' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamPlayerAmount, AxisPlayerCount) == 0x000010, "Member 'WidgetFunctions_C_GetTeamPlayerAmount::AxisPlayerCount' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamPlayerAmount, AlliedPlayerCount) == 0x000014, "Member 'WidgetFunctions_C_GetTeamPlayerAmount::AlliedPlayerCount' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamPlayerAmount, Temp_int_Variable) == 0x000018, "Member 'WidgetFunctions_C_GetTeamPlayerAmount::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamPlayerAmount, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'WidgetFunctions_C_GetTeamPlayerAmount::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamPlayerAmount, Temp_int_Variable_1) == 0x000028, "Member 'WidgetFunctions_C_GetTeamPlayerAmount::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamPlayerAmount, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x000030, "Member 'WidgetFunctions_C_GetTeamPlayerAmount::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamPlayerAmount, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WidgetFunctions_C_GetTeamPlayerAmount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamPlayerAmount, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'WidgetFunctions_C_GetTeamPlayerAmount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamPlayerAmount, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'WidgetFunctions_C_GetTeamPlayerAmount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamPlayerAmount, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'WidgetFunctions_C_GetTeamPlayerAmount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamPlayerAmount, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'WidgetFunctions_C_GetTeamPlayerAmount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamPlayerAmount, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'WidgetFunctions_C_GetTeamPlayerAmount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamPlayerAmount, CallFunc_Array_Get_Item) == 0x000050, "Member 'WidgetFunctions_C_GetTeamPlayerAmount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamPlayerAmount, K2Node_SwitchEnum_CmpSuccess) == 0x0000B8, "Member 'WidgetFunctions_C_GetTeamPlayerAmount::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamPlayerAmount, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000BC, "Member 'WidgetFunctions_C_GetTeamPlayerAmount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamPlayerAmount, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000C0, "Member 'WidgetFunctions_C_GetTeamPlayerAmount::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function WidgetFunctions.WidgetFunctions_C.GetTeamJoinableStates
// 0x0040 (0x0040 - 0x0000)
struct WidgetFunctions_C_GetTeamJoinableStates final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanJoinAllies;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CanJoinAxis;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AlliedPlayers;                                     // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AxisPlayers;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllowAxisJoin;                                     // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AllowAlliedJoin;                                   // 0x0015(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Axis_Players;                                      // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Allied_Players;                                    // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTeamPlayerAmount_AlliedPlayers;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTeamPlayerAmount_AxisPlayers;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WidgetFunctions_C_GetTeamJoinableStates) == 0x000008, "Wrong alignment on WidgetFunctions_C_GetTeamJoinableStates");
static_assert(sizeof(WidgetFunctions_C_GetTeamJoinableStates) == 0x000040, "Wrong size on WidgetFunctions_C_GetTeamJoinableStates");
static_assert(offsetof(WidgetFunctions_C_GetTeamJoinableStates, __WorldContext) == 0x000000, "Member 'WidgetFunctions_C_GetTeamJoinableStates::__WorldContext' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamJoinableStates, CanJoinAllies) == 0x000008, "Member 'WidgetFunctions_C_GetTeamJoinableStates::CanJoinAllies' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamJoinableStates, CanJoinAxis) == 0x000009, "Member 'WidgetFunctions_C_GetTeamJoinableStates::CanJoinAxis' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamJoinableStates, AlliedPlayers) == 0x00000C, "Member 'WidgetFunctions_C_GetTeamJoinableStates::AlliedPlayers' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamJoinableStates, AxisPlayers) == 0x000010, "Member 'WidgetFunctions_C_GetTeamJoinableStates::AxisPlayers' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamJoinableStates, AllowAxisJoin) == 0x000014, "Member 'WidgetFunctions_C_GetTeamJoinableStates::AllowAxisJoin' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamJoinableStates, AllowAlliedJoin) == 0x000015, "Member 'WidgetFunctions_C_GetTeamJoinableStates::AllowAlliedJoin' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamJoinableStates, Axis_Players) == 0x000018, "Member 'WidgetFunctions_C_GetTeamJoinableStates::Axis_Players' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamJoinableStates, Allied_Players) == 0x00001C, "Member 'WidgetFunctions_C_GetTeamJoinableStates::Allied_Players' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamJoinableStates, CallFunc_GetTeamPlayerAmount_AlliedPlayers) == 0x000020, "Member 'WidgetFunctions_C_GetTeamJoinableStates::CallFunc_GetTeamPlayerAmount_AlliedPlayers' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamJoinableStates, CallFunc_GetTeamPlayerAmount_AxisPlayers) == 0x000024, "Member 'WidgetFunctions_C_GetTeamJoinableStates::CallFunc_GetTeamPlayerAmount_AxisPlayers' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamJoinableStates, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'WidgetFunctions_C_GetTeamJoinableStates::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamJoinableStates, CallFunc_Greater_IntInt_ReturnValue) == 0x00002C, "Member 'WidgetFunctions_C_GetTeamJoinableStates::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamJoinableStates, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'WidgetFunctions_C_GetTeamJoinableStates::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamJoinableStates, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000034, "Member 'WidgetFunctions_C_GetTeamJoinableStates::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamJoinableStates, CallFunc_Add_IntInt_ReturnValue_2) == 0x000038, "Member 'WidgetFunctions_C_GetTeamJoinableStates::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WidgetFunctions_C_GetTeamJoinableStates, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00003C, "Member 'WidgetFunctions_C_GetTeamJoinableStates::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

}

