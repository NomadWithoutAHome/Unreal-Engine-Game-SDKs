#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PowderKegProjectile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_ThrowableProjectileBase_classes.hpp"
#include "E_DamageTypes_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PowderKegProjectile.BP_PowderKegProjectile_C
// 0x0030 (0x05A0 - 0x0570)
class ABP_PowderKegProjectile_C final : public ABP_ThrowableProjectileBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_PowderKegProjectile_C;           // 0x0570(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Audio;                                             // 0x0578(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Fuse;                                              // 0x0580(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_50E651BD46AC8F86F4BA86BBF0CFD8BC; // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_50E651BD46AC8F86F4BA86BBF0CFD8BC; // 0x058C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58D[0x3];                                      // 0x058D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         KegHP;                                             // 0x0598(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PowderKegProjectile(int32 EntryPoint);
	void ReceiveDestroyed();
	void MC_HitEffect(const struct FVector& Location);
	void ApplyDamage(int32 DamageAmount_0, const struct FVector& DamageHitLocation, const struct FVector& DamageDirection, class APawn* AttackerPawn, class UClass* Debuff, E_DamageTypes DamageType, int32 PlayerIndex, bool IsCriticalHit, bool IgnoreTeamProtection, const class FText& SpecialKillMessage_0, bool ShouldBreakInvisibility, bool IsPiercingDamage_0);
	void ReceiveBeginPlay();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PowderKegProjectile_C">();
	}
	static class ABP_PowderKegProjectile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PowderKegProjectile_C>();
	}
};
static_assert(alignof(ABP_PowderKegProjectile_C) == 0x000010, "Wrong alignment on ABP_PowderKegProjectile_C");
static_assert(sizeof(ABP_PowderKegProjectile_C) == 0x0005A0, "Wrong size on ABP_PowderKegProjectile_C");
static_assert(offsetof(ABP_PowderKegProjectile_C, UberGraphFrame_BP_PowderKegProjectile_C) == 0x000570, "Member 'ABP_PowderKegProjectile_C::UberGraphFrame_BP_PowderKegProjectile_C' has a wrong offset!");
static_assert(offsetof(ABP_PowderKegProjectile_C, Audio) == 0x000578, "Member 'ABP_PowderKegProjectile_C::Audio' has a wrong offset!");
static_assert(offsetof(ABP_PowderKegProjectile_C, Fuse) == 0x000580, "Member 'ABP_PowderKegProjectile_C::Fuse' has a wrong offset!");
static_assert(offsetof(ABP_PowderKegProjectile_C, Timeline_0_NewTrack_0_50E651BD46AC8F86F4BA86BBF0CFD8BC) == 0x000588, "Member 'ABP_PowderKegProjectile_C::Timeline_0_NewTrack_0_50E651BD46AC8F86F4BA86BBF0CFD8BC' has a wrong offset!");
static_assert(offsetof(ABP_PowderKegProjectile_C, Timeline_0__Direction_50E651BD46AC8F86F4BA86BBF0CFD8BC) == 0x00058C, "Member 'ABP_PowderKegProjectile_C::Timeline_0__Direction_50E651BD46AC8F86F4BA86BBF0CFD8BC' has a wrong offset!");
static_assert(offsetof(ABP_PowderKegProjectile_C, Timeline_0) == 0x000590, "Member 'ABP_PowderKegProjectile_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_PowderKegProjectile_C, KegHP) == 0x000598, "Member 'ABP_PowderKegProjectile_C::KegHP' has a wrong offset!");

}

