#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AAGun

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_VehicleBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AAGun.BP_AAGun_C
// 0x00B0 (0x0470 - 0x03C0)
class ABP_AAGun_C final : public ABP_VehicleBase_C
{
public:
	uint8                                         Pad_3B3[0x5];                                      // 0x03B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AAGun_C;                         // 0x03B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        FaceCam;                                           // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Backward;                                          // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        MoveSound;                                         // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Crank;                                             // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        DriverSeatTransform;                               // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DriverSeatBase;                                    // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        UsernameLoc;                                       // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RetractingBarrel;                                  // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        ProjectileStart;                                   // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Barrel;                                            // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       Camera;                                            // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BaseGun;                                           // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Base;                                              // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         BarrelRetract_NewTrack_0_55A83F5E4D7A1ED6BD057DB3D9C413FD; // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            BarrelRetract__Direction_55A83F5E4D7A1ED6BD057DB3D9C413FD; // 0x042C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D[0x3];                                      // 0x042D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     BarrelRetract;                                     // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Firing;                                            // 0x0438(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_439[0x3];                                      // 0x0439(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               SharedRotation;                                    // 0x043C(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         DeltaSeconds;                                      // 0x0448(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlaneBase_C*>                Planes;                                            // 0x0450(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	float                                         AutoCalculatedProjectileDistance;                  // 0x0460(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Zoom;                                              // 0x0464(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_AAGun(int32 EntryPoint);
	void MC_SetMoveSound(bool Enabled);
	void S_SetMoveSound(bool Enabled);
	void BarrelRetractAnimation();
	void MC_FireAAGun(const struct FVector& StartLocation, const struct FVector& Direction, float maxTravelDistance);
	void S_FireAAGun(const struct FVector& StartLocation, const struct FVector& Direction, float maxTravelDistance);
	void S_ShareRotation(float Pitch, float Yaw);
	void FireAAGun(const struct FVector& StartLocation, const struct FVector& Direction, float maxTravelDistance);
	void InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent_1(float AxisValue);
	void InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent_0(float AxisValue);
	void InpActEvt_RightMouseButton_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2(const struct FKey& Key);
	void InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3(const struct FKey& Key);
	void BarrelRetract__UpdateFunc();
	void BarrelRetract__FinishedFunc();
	void GetAutomaticPlaneDistance(float* Distance);
	void IsPossessedEvent();
	void DestroyedRepNotify();
	void ReceiveTick(float DeltaSeconds_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AAGun_C">();
	}
	static class ABP_AAGun_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AAGun_C>();
	}
};
static_assert(alignof(ABP_AAGun_C) == 0x000010, "Wrong alignment on ABP_AAGun_C");
static_assert(sizeof(ABP_AAGun_C) == 0x000470, "Wrong size on ABP_AAGun_C");
static_assert(offsetof(ABP_AAGun_C, UberGraphFrame_BP_AAGun_C) == 0x0003B8, "Member 'ABP_AAGun_C::UberGraphFrame_BP_AAGun_C' has a wrong offset!");
static_assert(offsetof(ABP_AAGun_C, FaceCam) == 0x0003C0, "Member 'ABP_AAGun_C::FaceCam' has a wrong offset!");
static_assert(offsetof(ABP_AAGun_C, Backward) == 0x0003C8, "Member 'ABP_AAGun_C::Backward' has a wrong offset!");
static_assert(offsetof(ABP_AAGun_C, MoveSound) == 0x0003D0, "Member 'ABP_AAGun_C::MoveSound' has a wrong offset!");
static_assert(offsetof(ABP_AAGun_C, Crank) == 0x0003D8, "Member 'ABP_AAGun_C::Crank' has a wrong offset!");
static_assert(offsetof(ABP_AAGun_C, DriverSeatTransform) == 0x0003E0, "Member 'ABP_AAGun_C::DriverSeatTransform' has a wrong offset!");
static_assert(offsetof(ABP_AAGun_C, DriverSeatBase) == 0x0003E8, "Member 'ABP_AAGun_C::DriverSeatBase' has a wrong offset!");
static_assert(offsetof(ABP_AAGun_C, UsernameLoc) == 0x0003F0, "Member 'ABP_AAGun_C::UsernameLoc' has a wrong offset!");
static_assert(offsetof(ABP_AAGun_C, RetractingBarrel) == 0x0003F8, "Member 'ABP_AAGun_C::RetractingBarrel' has a wrong offset!");
static_assert(offsetof(ABP_AAGun_C, ProjectileStart) == 0x000400, "Member 'ABP_AAGun_C::ProjectileStart' has a wrong offset!");
static_assert(offsetof(ABP_AAGun_C, Barrel) == 0x000408, "Member 'ABP_AAGun_C::Barrel' has a wrong offset!");
static_assert(offsetof(ABP_AAGun_C, Camera) == 0x000410, "Member 'ABP_AAGun_C::Camera' has a wrong offset!");
static_assert(offsetof(ABP_AAGun_C, BaseGun) == 0x000418, "Member 'ABP_AAGun_C::BaseGun' has a wrong offset!");
static_assert(offsetof(ABP_AAGun_C, Base) == 0x000420, "Member 'ABP_AAGun_C::Base' has a wrong offset!");
static_assert(offsetof(ABP_AAGun_C, BarrelRetract_NewTrack_0_55A83F5E4D7A1ED6BD057DB3D9C413FD) == 0x000428, "Member 'ABP_AAGun_C::BarrelRetract_NewTrack_0_55A83F5E4D7A1ED6BD057DB3D9C413FD' has a wrong offset!");
static_assert(offsetof(ABP_AAGun_C, BarrelRetract__Direction_55A83F5E4D7A1ED6BD057DB3D9C413FD) == 0x00042C, "Member 'ABP_AAGun_C::BarrelRetract__Direction_55A83F5E4D7A1ED6BD057DB3D9C413FD' has a wrong offset!");
static_assert(offsetof(ABP_AAGun_C, BarrelRetract) == 0x000430, "Member 'ABP_AAGun_C::BarrelRetract' has a wrong offset!");
static_assert(offsetof(ABP_AAGun_C, Firing) == 0x000438, "Member 'ABP_AAGun_C::Firing' has a wrong offset!");
static_assert(offsetof(ABP_AAGun_C, SharedRotation) == 0x00043C, "Member 'ABP_AAGun_C::SharedRotation' has a wrong offset!");
static_assert(offsetof(ABP_AAGun_C, DeltaSeconds) == 0x000448, "Member 'ABP_AAGun_C::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(ABP_AAGun_C, Planes) == 0x000450, "Member 'ABP_AAGun_C::Planes' has a wrong offset!");
static_assert(offsetof(ABP_AAGun_C, AutoCalculatedProjectileDistance) == 0x000460, "Member 'ABP_AAGun_C::AutoCalculatedProjectileDistance' has a wrong offset!");
static_assert(offsetof(ABP_AAGun_C, Zoom) == 0x000464, "Member 'ABP_AAGun_C::Zoom' has a wrong offset!");

}

