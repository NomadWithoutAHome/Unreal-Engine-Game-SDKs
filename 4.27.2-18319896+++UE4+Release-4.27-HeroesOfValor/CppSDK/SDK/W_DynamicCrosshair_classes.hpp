#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_DynamicCrosshair

#include "Basic.hpp"

#include "E_CrosshairTypes_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_DynamicCrosshair.W_DynamicCrosshair_C
// 0x0068 (0x02C8 - 0x0260)
class UW_DynamicCrosshair_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Hit;                                               // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Appear;                                            // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_0;                                     // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_bottom;                                      // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_centerdot;                                   // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Hit;                                         // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_left;                                        // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_right;                                       // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_top;                                         // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         CrosshairPrecision;                                // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CrosshairTypes                              CrosshairType;                                     // 0x02B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B5[0x3];                                      // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               MIDCrosshair;                                      // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowCrosshair;                                     // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_W_DynamicCrosshair(int32 EntryPoint);
	void ShowHitMarker();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	ESlateVisibility ShowCenterDot();
	struct FLinearColor SetCrosshairColor();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_DynamicCrosshair_C">();
	}
	static class UW_DynamicCrosshair_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_DynamicCrosshair_C>();
	}
};
static_assert(alignof(UW_DynamicCrosshair_C) == 0x000008, "Wrong alignment on UW_DynamicCrosshair_C");
static_assert(sizeof(UW_DynamicCrosshair_C) == 0x0002C8, "Wrong size on UW_DynamicCrosshair_C");
static_assert(offsetof(UW_DynamicCrosshair_C, UberGraphFrame) == 0x000260, "Member 'UW_DynamicCrosshair_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_DynamicCrosshair_C, Hit) == 0x000268, "Member 'UW_DynamicCrosshair_C::Hit' has a wrong offset!");
static_assert(offsetof(UW_DynamicCrosshair_C, Appear) == 0x000270, "Member 'UW_DynamicCrosshair_C::Appear' has a wrong offset!");
static_assert(offsetof(UW_DynamicCrosshair_C, CanvasPanel_0) == 0x000278, "Member 'UW_DynamicCrosshair_C::CanvasPanel_0' has a wrong offset!");
static_assert(offsetof(UW_DynamicCrosshair_C, Image_bottom) == 0x000280, "Member 'UW_DynamicCrosshair_C::Image_bottom' has a wrong offset!");
static_assert(offsetof(UW_DynamicCrosshair_C, Image_centerdot) == 0x000288, "Member 'UW_DynamicCrosshair_C::Image_centerdot' has a wrong offset!");
static_assert(offsetof(UW_DynamicCrosshair_C, Image_Hit) == 0x000290, "Member 'UW_DynamicCrosshair_C::Image_Hit' has a wrong offset!");
static_assert(offsetof(UW_DynamicCrosshair_C, Image_left) == 0x000298, "Member 'UW_DynamicCrosshair_C::Image_left' has a wrong offset!");
static_assert(offsetof(UW_DynamicCrosshair_C, Image_right) == 0x0002A0, "Member 'UW_DynamicCrosshair_C::Image_right' has a wrong offset!");
static_assert(offsetof(UW_DynamicCrosshair_C, Image_top) == 0x0002A8, "Member 'UW_DynamicCrosshair_C::Image_top' has a wrong offset!");
static_assert(offsetof(UW_DynamicCrosshair_C, CrosshairPrecision) == 0x0002B0, "Member 'UW_DynamicCrosshair_C::CrosshairPrecision' has a wrong offset!");
static_assert(offsetof(UW_DynamicCrosshair_C, CrosshairType) == 0x0002B4, "Member 'UW_DynamicCrosshair_C::CrosshairType' has a wrong offset!");
static_assert(offsetof(UW_DynamicCrosshair_C, MIDCrosshair) == 0x0002B8, "Member 'UW_DynamicCrosshair_C::MIDCrosshair' has a wrong offset!");
static_assert(offsetof(UW_DynamicCrosshair_C, ShowCrosshair) == 0x0002C0, "Member 'UW_DynamicCrosshair_C::ShowCrosshair' has a wrong offset!");

}

