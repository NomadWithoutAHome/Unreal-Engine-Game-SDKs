#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DamageDealerData

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass DamageDealerData.DamageDealerData_C
// 0x0020 (0x00D0 - 0x00B0)
class UDamageDealerData_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         PlayerIndex;                                       // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         TotalDamageAmount;                                 // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class ABP_PlayerState_C*                      PlayerState;                                       // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class APawn*                                  Pawn;                                              // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_DamageDealerData(int32 EntryPoint);
	void AddDamage(int32 Damage);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DamageDealerData_C">();
	}
	static class UDamageDealerData_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDamageDealerData_C>();
	}
};
static_assert(alignof(UDamageDealerData_C) == 0x000008, "Wrong alignment on UDamageDealerData_C");
static_assert(sizeof(UDamageDealerData_C) == 0x0000D0, "Wrong size on UDamageDealerData_C");
static_assert(offsetof(UDamageDealerData_C, UberGraphFrame) == 0x0000B0, "Member 'UDamageDealerData_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UDamageDealerData_C, PlayerIndex) == 0x0000B8, "Member 'UDamageDealerData_C::PlayerIndex' has a wrong offset!");
static_assert(offsetof(UDamageDealerData_C, TotalDamageAmount) == 0x0000BC, "Member 'UDamageDealerData_C::TotalDamageAmount' has a wrong offset!");
static_assert(offsetof(UDamageDealerData_C, PlayerState) == 0x0000C0, "Member 'UDamageDealerData_C::PlayerState' has a wrong offset!");
static_assert(offsetof(UDamageDealerData_C, Pawn) == 0x0000C8, "Member 'UDamageDealerData_C::Pawn' has a wrong offset!");

}

