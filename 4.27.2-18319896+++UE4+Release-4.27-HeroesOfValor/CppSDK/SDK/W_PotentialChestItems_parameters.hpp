#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PotentialChestItems

#include "Basic.hpp"

#include "E_SteamItemRarities_structs.hpp"
#include "ST_Unlockable_structs.hpp"


namespace SDK::Params
{

// Function W_PotentialChestItems.W_PotentialChestItems_C.ExecuteUbergraph_W_PotentialChestItems
// 0x0008 (0x0008 - 0x0000)
struct W_PotentialChestItems_C_ExecuteUbergraph_W_PotentialChestItems final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PotentialChestItems_C_ExecuteUbergraph_W_PotentialChestItems) == 0x000004, "Wrong alignment on W_PotentialChestItems_C_ExecuteUbergraph_W_PotentialChestItems");
static_assert(sizeof(W_PotentialChestItems_C_ExecuteUbergraph_W_PotentialChestItems) == 0x000008, "Wrong size on W_PotentialChestItems_C_ExecuteUbergraph_W_PotentialChestItems");
static_assert(offsetof(W_PotentialChestItems_C_ExecuteUbergraph_W_PotentialChestItems, EntryPoint) == 0x000000, "Member 'W_PotentialChestItems_C_ExecuteUbergraph_W_PotentialChestItems::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_PotentialChestItems_C_ExecuteUbergraph_W_PotentialChestItems, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'W_PotentialChestItems_C_ExecuteUbergraph_W_PotentialChestItems::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function W_PotentialChestItems.W_PotentialChestItems_C.LoadItemsFromRarity
// 0x0198 (0x0198 - 0x0000)
struct W_PotentialChestItems_C_LoadItemsFromRarity final
{
public:
	E_SteamItemRarities                           Rarity;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_EquipEntry_C*                        CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0020(0x0010)(ReferenceParm)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_Unlockable                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0048(0x0148)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_PotentialChestItems_C_LoadItemsFromRarity) == 0x000008, "Wrong alignment on W_PotentialChestItems_C_LoadItemsFromRarity");
static_assert(sizeof(W_PotentialChestItems_C_LoadItemsFromRarity) == 0x000198, "Wrong size on W_PotentialChestItems_C_LoadItemsFromRarity");
static_assert(offsetof(W_PotentialChestItems_C_LoadItemsFromRarity, Rarity) == 0x000000, "Member 'W_PotentialChestItems_C_LoadItemsFromRarity::Rarity' has a wrong offset!");
static_assert(offsetof(W_PotentialChestItems_C_LoadItemsFromRarity, CallFunc_Create_ReturnValue) == 0x000008, "Member 'W_PotentialChestItems_C_LoadItemsFromRarity::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PotentialChestItems_C_LoadItemsFromRarity, Temp_int_Array_Index_Variable) == 0x000010, "Member 'W_PotentialChestItems_C_LoadItemsFromRarity::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_PotentialChestItems_C_LoadItemsFromRarity, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'W_PotentialChestItems_C_LoadItemsFromRarity::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_PotentialChestItems_C_LoadItemsFromRarity, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'W_PotentialChestItems_C_LoadItemsFromRarity::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PotentialChestItems_C_LoadItemsFromRarity, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000020, "Member 'W_PotentialChestItems_C_LoadItemsFromRarity::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(W_PotentialChestItems_C_LoadItemsFromRarity, CallFunc_AddChild_ReturnValue) == 0x000030, "Member 'W_PotentialChestItems_C_LoadItemsFromRarity::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PotentialChestItems_C_LoadItemsFromRarity, CallFunc_Array_Get_Item) == 0x000038, "Member 'W_PotentialChestItems_C_LoadItemsFromRarity::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_PotentialChestItems_C_LoadItemsFromRarity, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'W_PotentialChestItems_C_LoadItemsFromRarity::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PotentialChestItems_C_LoadItemsFromRarity, CallFunc_GetDataTableRowFromName_OutRow) == 0x000048, "Member 'W_PotentialChestItems_C_LoadItemsFromRarity::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_PotentialChestItems_C_LoadItemsFromRarity, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000190, "Member 'W_PotentialChestItems_C_LoadItemsFromRarity::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PotentialChestItems_C_LoadItemsFromRarity, CallFunc_Less_IntInt_ReturnValue) == 0x000191, "Member 'W_PotentialChestItems_C_LoadItemsFromRarity::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PotentialChestItems_C_LoadItemsFromRarity, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000192, "Member 'W_PotentialChestItems_C_LoadItemsFromRarity::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

}

