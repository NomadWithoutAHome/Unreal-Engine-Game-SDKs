#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Task_FindObjective

#include "Basic.hpp"

#include "E_Teams_structs.hpp"
#include "ST_PlayerStats_structs.hpp"
#include "E_AITeamPlayStyles_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Task_FindObjective.Task_FindObjective_C.ExecuteUbergraph_Task_FindObjective
// 0x0110 (0x0110 - 0x0000)
struct Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ObjectiveBase_C*                    CallFunc_Array_Random_OutItem;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsObjectiveStillRelevant__StillRelevant;  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCurrentObjectiveWon__ObjectiveWon;      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoWeHaveAnObjective__ValidObjective;      // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCurrentObjectiveWon__ObjectiveWon_1;    // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Teams                                       CallFunc_GetPawnData_Team;                         // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPawnData_PlayerIndex;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_PlayerStats                        CallFunc_GetPawnData_PlayerStats;                  // 0x0078(0x0068)(HasGetValueTypeHash)
	class UPawnDataComponent_C*                   CallFunc_GetPawnData_PawnDataComponent;            // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTeamSupremacy_Supremacy;               // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ObjectiveBase_C*                    CallFunc_GetRandomObjective_Objective;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ObjectiveBase_C*                    CallFunc_GetClosestObjective_ClosestObjective;     // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDefendChance_Defend;                   // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_AITeamPlayStyles                            CallFunc_GetDefendChance_PlayStyle;                // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective) == 0x000008, "Wrong alignment on Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective");
static_assert(sizeof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective) == 0x000110, "Wrong size on Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, EntryPoint) == 0x000000, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::EntryPoint' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, CallFunc_RandomFloatInRange_ReturnValue) == 0x000010, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x000018, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, CallFunc_Array_Random_OutItem) == 0x000028, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, CallFunc_Array_Random_OutIndex) == 0x000030, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, CallFunc_MakeLiteralName_ReturnValue) == 0x000034, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, CallFunc_MakeLiteralName_ReturnValue_1) == 0x00003C, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000044, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x000048, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00004C, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, K2Node_Event_OwnerController) == 0x000050, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, K2Node_Event_ControlledPawn) == 0x000058, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, K2Node_Event_DeltaSeconds) == 0x000060, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, CallFunc_Add_FloatFloat_ReturnValue) == 0x000064, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, CallFunc_IsObjectiveStillRelevant__StillRelevant) == 0x000068, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::CallFunc_IsObjectiveStillRelevant__StillRelevant' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, CallFunc_IsCurrentObjectiveWon__ObjectiveWon) == 0x000069, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::CallFunc_IsCurrentObjectiveWon__ObjectiveWon' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, CallFunc_DoWeHaveAnObjective__ValidObjective) == 0x00006A, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::CallFunc_DoWeHaveAnObjective__ValidObjective' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, CallFunc_IsCurrentObjectiveWon__ObjectiveWon_1) == 0x00006B, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::CallFunc_IsCurrentObjectiveWon__ObjectiveWon_1' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, CallFunc_GetPawnData_Team) == 0x00006C, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::CallFunc_GetPawnData_Team' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, CallFunc_GetPawnData_PlayerIndex) == 0x000070, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::CallFunc_GetPawnData_PlayerIndex' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, CallFunc_GetPawnData_PlayerStats) == 0x000078, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::CallFunc_GetPawnData_PlayerStats' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, CallFunc_GetPawnData_PawnDataComponent) == 0x0000E0, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::CallFunc_GetPawnData_PawnDataComponent' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, CallFunc_GetTeamSupremacy_Supremacy) == 0x0000E8, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::CallFunc_GetTeamSupremacy_Supremacy' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, CallFunc_GetRandomObjective_Objective) == 0x0000F0, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::CallFunc_GetRandomObjective_Objective' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, CallFunc_GetBlackboard_ReturnValue) == 0x0000F8, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, CallFunc_GetClosestObjective_ClosestObjective) == 0x000100, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::CallFunc_GetClosestObjective_ClosestObjective' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, CallFunc_GetDefendChance_Defend) == 0x000108, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::CallFunc_GetDefendChance_Defend' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, CallFunc_GetDefendChance_PlayStyle) == 0x000109, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::CallFunc_GetDefendChance_PlayStyle' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, K2Node_SwitchEnum_CmpSuccess) == 0x00010A, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00010B, "Member 'Task_FindObjective_C_ExecuteUbergraph_Task_FindObjective::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function Task_FindObjective.Task_FindObjective_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct Task_FindObjective_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_FindObjective_C_ReceiveTickAI) == 0x000008, "Wrong alignment on Task_FindObjective_C_ReceiveTickAI");
static_assert(sizeof(Task_FindObjective_C_ReceiveTickAI) == 0x000018, "Wrong size on Task_FindObjective_C_ReceiveTickAI");
static_assert(offsetof(Task_FindObjective_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'Task_FindObjective_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'Task_FindObjective_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'Task_FindObjective_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function Task_FindObjective.Task_FindObjective_C.GetClosestObjective
// 0x0080 (0x0080 - 0x0000)
struct Task_FindObjective_C_GetClosestObjective final
{
public:
	class AActor*                                 ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ObjectiveBase_C*                    ClosestObjective;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ObjectiveBase_C*                    ClosestObjectiveTemp;                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ClosestDistance;                                   // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ObjectiveBase_C*                    CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Task_FindObjective_C_GetClosestObjective) == 0x000008, "Wrong alignment on Task_FindObjective_C_GetClosestObjective");
static_assert(sizeof(Task_FindObjective_C_GetClosestObjective) == 0x000080, "Wrong size on Task_FindObjective_C_GetClosestObjective");
static_assert(offsetof(Task_FindObjective_C_GetClosestObjective, ControlledPawn) == 0x000000, "Member 'Task_FindObjective_C_GetClosestObjective::ControlledPawn' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetClosestObjective, ClosestObjective) == 0x000008, "Member 'Task_FindObjective_C_GetClosestObjective::ClosestObjective' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetClosestObjective, ClosestObjectiveTemp) == 0x000010, "Member 'Task_FindObjective_C_GetClosestObjective::ClosestObjectiveTemp' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetClosestObjective, ClosestDistance) == 0x000018, "Member 'Task_FindObjective_C_GetClosestObjective::ClosestDistance' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetClosestObjective, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'Task_FindObjective_C_GetClosestObjective::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetClosestObjective, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'Task_FindObjective_C_GetClosestObjective::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetClosestObjective, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'Task_FindObjective_C_GetClosestObjective::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetClosestObjective, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'Task_FindObjective_C_GetClosestObjective::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetClosestObjective, CallFunc_GetGameState_ReturnValue) == 0x000038, "Member 'Task_FindObjective_C_GetClosestObjective::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetClosestObjective, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x000040, "Member 'Task_FindObjective_C_GetClosestObjective::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetClosestObjective, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'Task_FindObjective_C_GetClosestObjective::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetClosestObjective, CallFunc_Array_Get_Item) == 0x000050, "Member 'Task_FindObjective_C_GetClosestObjective::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetClosestObjective, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'Task_FindObjective_C_GetClosestObjective::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetClosestObjective, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'Task_FindObjective_C_GetClosestObjective::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetClosestObjective, K2Node_SwitchEnum_CmpSuccess) == 0x00005D, "Member 'Task_FindObjective_C_GetClosestObjective::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetClosestObjective, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000060, "Member 'Task_FindObjective_C_GetClosestObjective::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetClosestObjective, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00006C, "Member 'Task_FindObjective_C_GetClosestObjective::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetClosestObjective, CallFunc_VSize_ReturnValue) == 0x000078, "Member 'Task_FindObjective_C_GetClosestObjective::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetClosestObjective, CallFunc_Less_FloatFloat_ReturnValue) == 0x00007C, "Member 'Task_FindObjective_C_GetClosestObjective::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function Task_FindObjective.Task_FindObjective_C.GetRandomObjective
// 0x00E8 (0x00E8 - 0x0000)
struct Task_FindObjective_C_GetRandomObjective final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ObjectiveBase_C*                    Objective;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_ObjectiveBase_C*>            ShuffledObjectives;                                // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class ABP_ObjectiveBase_C*                    TempObjective;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Teams                                       CallFunc_GetPawnData_Team;                         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPawnData_PlayerIndex;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_PlayerStats                        CallFunc_GetPawnData_PlayerStats;                  // 0x0038(0x0068)(HasGetValueTypeHash)
	class UPawnDataComponent_C*                   CallFunc_GetPawnData_PawnDataComponent;            // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ObjectiveBase_C*                    CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Task_FindObjective_C_GetRandomObjective) == 0x000008, "Wrong alignment on Task_FindObjective_C_GetRandomObjective");
static_assert(sizeof(Task_FindObjective_C_GetRandomObjective) == 0x0000E8, "Wrong size on Task_FindObjective_C_GetRandomObjective");
static_assert(offsetof(Task_FindObjective_C_GetRandomObjective, ControlledPawn) == 0x000000, "Member 'Task_FindObjective_C_GetRandomObjective::ControlledPawn' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetRandomObjective, Objective) == 0x000008, "Member 'Task_FindObjective_C_GetRandomObjective::Objective' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetRandomObjective, ShuffledObjectives) == 0x000010, "Member 'Task_FindObjective_C_GetRandomObjective::ShuffledObjectives' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetRandomObjective, TempObjective) == 0x000020, "Member 'Task_FindObjective_C_GetRandomObjective::TempObjective' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetRandomObjective, Temp_int_Array_Index_Variable) == 0x000028, "Member 'Task_FindObjective_C_GetRandomObjective::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetRandomObjective, CallFunc_GetPawnData_Team) == 0x00002C, "Member 'Task_FindObjective_C_GetRandomObjective::CallFunc_GetPawnData_Team' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetRandomObjective, CallFunc_GetPawnData_PlayerIndex) == 0x000030, "Member 'Task_FindObjective_C_GetRandomObjective::CallFunc_GetPawnData_PlayerIndex' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetRandomObjective, CallFunc_GetPawnData_PlayerStats) == 0x000038, "Member 'Task_FindObjective_C_GetRandomObjective::CallFunc_GetPawnData_PlayerStats' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetRandomObjective, CallFunc_GetPawnData_PawnDataComponent) == 0x0000A0, "Member 'Task_FindObjective_C_GetRandomObjective::CallFunc_GetPawnData_PawnDataComponent' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetRandomObjective, K2Node_SwitchEnum_CmpSuccess) == 0x0000A8, "Member 'Task_FindObjective_C_GetRandomObjective::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetRandomObjective, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'Task_FindObjective_C_GetRandomObjective::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetRandomObjective, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000B8, "Member 'Task_FindObjective_C_GetRandomObjective::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetRandomObjective, CallFunc_Array_Length_ReturnValue) == 0x0000BC, "Member 'Task_FindObjective_C_GetRandomObjective::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetRandomObjective, Temp_int_Loop_Counter_Variable) == 0x0000C0, "Member 'Task_FindObjective_C_GetRandomObjective::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetRandomObjective, CallFunc_Less_IntInt_ReturnValue) == 0x0000C4, "Member 'Task_FindObjective_C_GetRandomObjective::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetRandomObjective, CallFunc_Add_IntInt_ReturnValue) == 0x0000C8, "Member 'Task_FindObjective_C_GetRandomObjective::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetRandomObjective, CallFunc_GetGameState_ReturnValue) == 0x0000D0, "Member 'Task_FindObjective_C_GetRandomObjective::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetRandomObjective, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x0000D8, "Member 'Task_FindObjective_C_GetRandomObjective::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetRandomObjective, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'Task_FindObjective_C_GetRandomObjective::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Task_FindObjective.Task_FindObjective_C.IsCurrentObjectiveWon?
// 0x00A8 (0x00A8 - 0x0000)
struct Task_FindObjective_C_IsCurrentObjectiveWon_ final
{
public:
	class AActor*                                 PawnActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ObjectiveWon;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Teams                                       CallFunc_GetPawnData_Team;                         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPawnData_PlayerIndex;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_PlayerStats                        CallFunc_GetPawnData_PlayerStats;                  // 0x0010(0x0068)(HasGetValueTypeHash)
	class UPawnDataComponent_C*                   CallFunc_GetPawnData_PawnDataComponent;            // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetValueAsObject_ReturnValue;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ObjectiveBase_C*                    K2Node_DynamicCast_AsBP_Objective_Base;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Task_FindObjective_C_IsCurrentObjectiveWon_) == 0x000008, "Wrong alignment on Task_FindObjective_C_IsCurrentObjectiveWon_");
static_assert(sizeof(Task_FindObjective_C_IsCurrentObjectiveWon_) == 0x0000A8, "Wrong size on Task_FindObjective_C_IsCurrentObjectiveWon_");
static_assert(offsetof(Task_FindObjective_C_IsCurrentObjectiveWon_, PawnActor) == 0x000000, "Member 'Task_FindObjective_C_IsCurrentObjectiveWon_::PawnActor' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_IsCurrentObjectiveWon_, ObjectiveWon) == 0x000008, "Member 'Task_FindObjective_C_IsCurrentObjectiveWon_::ObjectiveWon' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_IsCurrentObjectiveWon_, CallFunc_GetPawnData_Team) == 0x000009, "Member 'Task_FindObjective_C_IsCurrentObjectiveWon_::CallFunc_GetPawnData_Team' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_IsCurrentObjectiveWon_, CallFunc_GetPawnData_PlayerIndex) == 0x00000C, "Member 'Task_FindObjective_C_IsCurrentObjectiveWon_::CallFunc_GetPawnData_PlayerIndex' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_IsCurrentObjectiveWon_, CallFunc_GetPawnData_PlayerStats) == 0x000010, "Member 'Task_FindObjective_C_IsCurrentObjectiveWon_::CallFunc_GetPawnData_PlayerStats' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_IsCurrentObjectiveWon_, CallFunc_GetPawnData_PawnDataComponent) == 0x000078, "Member 'Task_FindObjective_C_IsCurrentObjectiveWon_::CallFunc_GetPawnData_PawnDataComponent' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_IsCurrentObjectiveWon_, CallFunc_GetBlackboard_ReturnValue) == 0x000080, "Member 'Task_FindObjective_C_IsCurrentObjectiveWon_::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_IsCurrentObjectiveWon_, CallFunc_MakeLiteralName_ReturnValue) == 0x000088, "Member 'Task_FindObjective_C_IsCurrentObjectiveWon_::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_IsCurrentObjectiveWon_, CallFunc_GetValueAsObject_ReturnValue) == 0x000090, "Member 'Task_FindObjective_C_IsCurrentObjectiveWon_::CallFunc_GetValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_IsCurrentObjectiveWon_, K2Node_DynamicCast_AsBP_Objective_Base) == 0x000098, "Member 'Task_FindObjective_C_IsCurrentObjectiveWon_::K2Node_DynamicCast_AsBP_Objective_Base' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_IsCurrentObjectiveWon_, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'Task_FindObjective_C_IsCurrentObjectiveWon_::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_IsCurrentObjectiveWon_, CallFunc_IsValid_ReturnValue) == 0x0000A1, "Member 'Task_FindObjective_C_IsCurrentObjectiveWon_::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_IsCurrentObjectiveWon_, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A2, "Member 'Task_FindObjective_C_IsCurrentObjectiveWon_::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Task_FindObjective.Task_FindObjective_C.GetDefendChance
// 0x00B0 (0x00B0 - 0x0000)
struct Task_FindObjective_C_GetDefendChance final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Defend;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_AITeamPlayStyles                            PlayStyle;                                         // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Teams                                       CallFunc_GetPawnData_Team;                         // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPawnData_PlayerIndex;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_PlayerStats                        CallFunc_GetPawnData_PlayerStats;                  // 0x0010(0x0068)(HasGetValueTypeHash)
	class UPawnDataComponent_C*                   CallFunc_GetPawnData_PawnDataComponent;            // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_AITeamPlayStyles                            Temp_byte_Variable;                                // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBool_ReturnValue_1;                 // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBool_ReturnValue_2;                 // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_AITeamPlayStyles                            Temp_byte_Variable_1;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue_3;                 // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_1;                           // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Task_FindObjective_C_GetDefendChance) == 0x000008, "Wrong alignment on Task_FindObjective_C_GetDefendChance");
static_assert(sizeof(Task_FindObjective_C_GetDefendChance) == 0x0000B0, "Wrong size on Task_FindObjective_C_GetDefendChance");
static_assert(offsetof(Task_FindObjective_C_GetDefendChance, ControlledPawn) == 0x000000, "Member 'Task_FindObjective_C_GetDefendChance::ControlledPawn' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetDefendChance, Defend) == 0x000008, "Member 'Task_FindObjective_C_GetDefendChance::Defend' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetDefendChance, PlayStyle) == 0x000009, "Member 'Task_FindObjective_C_GetDefendChance::PlayStyle' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetDefendChance, Temp_bool_Variable) == 0x00000A, "Member 'Task_FindObjective_C_GetDefendChance::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetDefendChance, CallFunc_GetPawnData_Team) == 0x00000B, "Member 'Task_FindObjective_C_GetDefendChance::CallFunc_GetPawnData_Team' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetDefendChance, CallFunc_GetPawnData_PlayerIndex) == 0x00000C, "Member 'Task_FindObjective_C_GetDefendChance::CallFunc_GetPawnData_PlayerIndex' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetDefendChance, CallFunc_GetPawnData_PlayerStats) == 0x000010, "Member 'Task_FindObjective_C_GetDefendChance::CallFunc_GetPawnData_PlayerStats' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetDefendChance, CallFunc_GetPawnData_PawnDataComponent) == 0x000078, "Member 'Task_FindObjective_C_GetDefendChance::CallFunc_GetPawnData_PawnDataComponent' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetDefendChance, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000080, "Member 'Task_FindObjective_C_GetDefendChance::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetDefendChance, Temp_bool_Variable_1) == 0x000081, "Member 'Task_FindObjective_C_GetDefendChance::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetDefendChance, Temp_byte_Variable) == 0x000082, "Member 'Task_FindObjective_C_GetDefendChance::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetDefendChance, Temp_bool_Variable_2) == 0x000083, "Member 'Task_FindObjective_C_GetDefendChance::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetDefendChance, Temp_bool_Variable_3) == 0x000084, "Member 'Task_FindObjective_C_GetDefendChance::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetDefendChance, CallFunc_RandomBool_ReturnValue) == 0x000085, "Member 'Task_FindObjective_C_GetDefendChance::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetDefendChance, CallFunc_RandomBool_ReturnValue_1) == 0x000086, "Member 'Task_FindObjective_C_GetDefendChance::CallFunc_RandomBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetDefendChance, CallFunc_RandomBool_ReturnValue_2) == 0x000087, "Member 'Task_FindObjective_C_GetDefendChance::CallFunc_RandomBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetDefendChance, Temp_byte_Variable_1) == 0x000088, "Member 'Task_FindObjective_C_GetDefendChance::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetDefendChance, CallFunc_RandomBool_ReturnValue_3) == 0x000089, "Member 'Task_FindObjective_C_GetDefendChance::CallFunc_RandomBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetDefendChance, CallFunc_GetGameState_ReturnValue) == 0x000090, "Member 'Task_FindObjective_C_GetDefendChance::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetDefendChance, CallFunc_BooleanAND_ReturnValue) == 0x000098, "Member 'Task_FindObjective_C_GetDefendChance::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetDefendChance, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x0000A0, "Member 'Task_FindObjective_C_GetDefendChance::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetDefendChance, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'Task_FindObjective_C_GetDefendChance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetDefendChance, CallFunc_BooleanAND_ReturnValue_1) == 0x0000A9, "Member 'Task_FindObjective_C_GetDefendChance::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetDefendChance, K2Node_Select_Default) == 0x0000AA, "Member 'Task_FindObjective_C_GetDefendChance::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetDefendChance, K2Node_Select_Default_1) == 0x0000AB, "Member 'Task_FindObjective_C_GetDefendChance::K2Node_Select_Default_1' has a wrong offset!");

// Function Task_FindObjective.Task_FindObjective_C.GetTeamSupremacy
// 0x0020 (0x0020 - 0x0000)
struct Task_FindObjective_C_GetTeamSupremacy final
{
public:
	E_Teams                                       Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Supremacy;                                         // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Teams                                       Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Task_FindObjective_C_GetTeamSupremacy) == 0x000008, "Wrong alignment on Task_FindObjective_C_GetTeamSupremacy");
static_assert(sizeof(Task_FindObjective_C_GetTeamSupremacy) == 0x000020, "Wrong size on Task_FindObjective_C_GetTeamSupremacy");
static_assert(offsetof(Task_FindObjective_C_GetTeamSupremacy, Team) == 0x000000, "Member 'Task_FindObjective_C_GetTeamSupremacy::Team' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetTeamSupremacy, Supremacy) == 0x000001, "Member 'Task_FindObjective_C_GetTeamSupremacy::Supremacy' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetTeamSupremacy, Temp_byte_Variable) == 0x000002, "Member 'Task_FindObjective_C_GetTeamSupremacy::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetTeamSupremacy, Temp_bool_Variable) == 0x000003, "Member 'Task_FindObjective_C_GetTeamSupremacy::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetTeamSupremacy, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'Task_FindObjective_C_GetTeamSupremacy::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetTeamSupremacy, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x000010, "Member 'Task_FindObjective_C_GetTeamSupremacy::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetTeamSupremacy, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Task_FindObjective_C_GetTeamSupremacy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_GetTeamSupremacy, K2Node_Select_Default) == 0x000019, "Member 'Task_FindObjective_C_GetTeamSupremacy::K2Node_Select_Default' has a wrong offset!");

// Function Task_FindObjective.Task_FindObjective_C.DoWeHaveAnObjective?
// 0x0030 (0x0030 - 0x0000)
struct Task_FindObjective_C_DoWeHaveAnObjective_ final
{
public:
	class AActor*                                 Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ValidObjective;                                    // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetValueAsObject_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Task_FindObjective_C_DoWeHaveAnObjective_) == 0x000008, "Wrong alignment on Task_FindObjective_C_DoWeHaveAnObjective_");
static_assert(sizeof(Task_FindObjective_C_DoWeHaveAnObjective_) == 0x000030, "Wrong size on Task_FindObjective_C_DoWeHaveAnObjective_");
static_assert(offsetof(Task_FindObjective_C_DoWeHaveAnObjective_, Pawn) == 0x000000, "Member 'Task_FindObjective_C_DoWeHaveAnObjective_::Pawn' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_DoWeHaveAnObjective_, ValidObjective) == 0x000008, "Member 'Task_FindObjective_C_DoWeHaveAnObjective_::ValidObjective' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_DoWeHaveAnObjective_, CallFunc_GetBlackboard_ReturnValue) == 0x000010, "Member 'Task_FindObjective_C_DoWeHaveAnObjective_::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_DoWeHaveAnObjective_, CallFunc_MakeLiteralName_ReturnValue) == 0x000018, "Member 'Task_FindObjective_C_DoWeHaveAnObjective_::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_DoWeHaveAnObjective_, CallFunc_GetValueAsObject_ReturnValue) == 0x000020, "Member 'Task_FindObjective_C_DoWeHaveAnObjective_::CallFunc_GetValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_DoWeHaveAnObjective_, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'Task_FindObjective_C_DoWeHaveAnObjective_::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Task_FindObjective.Task_FindObjective_C.IsObjectiveStillRelevant?
// 0x00B0 (0x00B0 - 0x0000)
struct Task_FindObjective_C_IsObjectiveStillRelevant_ final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StillRelevant;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Teams                                       CallFunc_GetPawnData_Team;                         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPawnData_PlayerIndex;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_PlayerStats                        CallFunc_GetPawnData_PlayerStats;                  // 0x0010(0x0068)(HasGetValueTypeHash)
	class UPawnDataComponent_C*                   CallFunc_GetPawnData_PawnDataComponent;            // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetValueAsObject_ReturnValue;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ObjectiveBase_C*                    K2Node_DynamicCast_AsBP_Objective_Base;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Task_FindObjective_C_IsObjectiveStillRelevant_) == 0x000008, "Wrong alignment on Task_FindObjective_C_IsObjectiveStillRelevant_");
static_assert(sizeof(Task_FindObjective_C_IsObjectiveStillRelevant_) == 0x0000B0, "Wrong size on Task_FindObjective_C_IsObjectiveStillRelevant_");
static_assert(offsetof(Task_FindObjective_C_IsObjectiveStillRelevant_, Pawn) == 0x000000, "Member 'Task_FindObjective_C_IsObjectiveStillRelevant_::Pawn' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_IsObjectiveStillRelevant_, StillRelevant) == 0x000008, "Member 'Task_FindObjective_C_IsObjectiveStillRelevant_::StillRelevant' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_IsObjectiveStillRelevant_, CallFunc_GetPawnData_Team) == 0x000009, "Member 'Task_FindObjective_C_IsObjectiveStillRelevant_::CallFunc_GetPawnData_Team' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_IsObjectiveStillRelevant_, CallFunc_GetPawnData_PlayerIndex) == 0x00000C, "Member 'Task_FindObjective_C_IsObjectiveStillRelevant_::CallFunc_GetPawnData_PlayerIndex' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_IsObjectiveStillRelevant_, CallFunc_GetPawnData_PlayerStats) == 0x000010, "Member 'Task_FindObjective_C_IsObjectiveStillRelevant_::CallFunc_GetPawnData_PlayerStats' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_IsObjectiveStillRelevant_, CallFunc_GetPawnData_PawnDataComponent) == 0x000078, "Member 'Task_FindObjective_C_IsObjectiveStillRelevant_::CallFunc_GetPawnData_PawnDataComponent' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_IsObjectiveStillRelevant_, CallFunc_GetBlackboard_ReturnValue) == 0x000080, "Member 'Task_FindObjective_C_IsObjectiveStillRelevant_::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_IsObjectiveStillRelevant_, K2Node_SwitchEnum_CmpSuccess) == 0x000088, "Member 'Task_FindObjective_C_IsObjectiveStillRelevant_::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_IsObjectiveStillRelevant_, CallFunc_MakeLiteralName_ReturnValue) == 0x00008C, "Member 'Task_FindObjective_C_IsObjectiveStillRelevant_::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_IsObjectiveStillRelevant_, CallFunc_GetValueAsObject_ReturnValue) == 0x000098, "Member 'Task_FindObjective_C_IsObjectiveStillRelevant_::CallFunc_GetValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_IsObjectiveStillRelevant_, K2Node_DynamicCast_AsBP_Objective_Base) == 0x0000A0, "Member 'Task_FindObjective_C_IsObjectiveStillRelevant_::K2Node_DynamicCast_AsBP_Objective_Base' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_IsObjectiveStillRelevant_, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'Task_FindObjective_C_IsObjectiveStillRelevant_::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Task_FindObjective_C_IsObjectiveStillRelevant_, CallFunc_IsValid_ReturnValue) == 0x0000A9, "Member 'Task_FindObjective_C_IsObjectiveStillRelevant_::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

