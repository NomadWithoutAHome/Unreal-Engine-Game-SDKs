#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_VotekickVotePopup

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_VotekickVotePopup.W_VotekickVotePopup_C.SetVoteKickTime
// 0x0098 (0x0098 - 0x0000)
struct W_VotekickVotePopup_C_SetVoteKickTime final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0018)()
};
static_assert(alignof(W_VotekickVotePopup_C_SetVoteKickTime) == 0x000008, "Wrong alignment on W_VotekickVotePopup_C_SetVoteKickTime");
static_assert(sizeof(W_VotekickVotePopup_C_SetVoteKickTime) == 0x000098, "Wrong size on W_VotekickVotePopup_C_SetVoteKickTime");
static_assert(offsetof(W_VotekickVotePopup_C_SetVoteKickTime, ReturnValue) == 0x000000, "Member 'W_VotekickVotePopup_C_SetVoteKickTime::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_SetVoteKickTime, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'W_VotekickVotePopup_C_SetVoteKickTime::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_SetVoteKickTime, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x000020, "Member 'W_VotekickVotePopup_C_SetVoteKickTime::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_SetVoteKickTime, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'W_VotekickVotePopup_C_SetVoteKickTime::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_SetVoteKickTime, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'W_VotekickVotePopup_C_SetVoteKickTime::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_SetVoteKickTime, K2Node_MakeArray_Array) == 0x000070, "Member 'W_VotekickVotePopup_C_SetVoteKickTime::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_SetVoteKickTime, CallFunc_Format_ReturnValue) == 0x000080, "Member 'W_VotekickVotePopup_C_SetVoteKickTime::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function W_VotekickVotePopup.W_VotekickVotePopup_C.SetPlayerToVoteKickName
// 0x0060 (0x0060 - 0x0000)
struct W_VotekickVotePopup_C_SetPlayerToVoteKickName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0018)()
};
static_assert(alignof(W_VotekickVotePopup_C_SetPlayerToVoteKickName) == 0x000008, "Wrong alignment on W_VotekickVotePopup_C_SetPlayerToVoteKickName");
static_assert(sizeof(W_VotekickVotePopup_C_SetPlayerToVoteKickName) == 0x000060, "Wrong size on W_VotekickVotePopup_C_SetPlayerToVoteKickName");
static_assert(offsetof(W_VotekickVotePopup_C_SetPlayerToVoteKickName, ReturnValue) == 0x000000, "Member 'W_VotekickVotePopup_C_SetPlayerToVoteKickName::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_SetPlayerToVoteKickName, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'W_VotekickVotePopup_C_SetPlayerToVoteKickName::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_SetPlayerToVoteKickName, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x000020, "Member 'W_VotekickVotePopup_C_SetPlayerToVoteKickName::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_SetPlayerToVoteKickName, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'W_VotekickVotePopup_C_SetPlayerToVoteKickName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_SetPlayerToVoteKickName, CallFunc_GetPlayerName_ReturnValue) == 0x000030, "Member 'W_VotekickVotePopup_C_SetPlayerToVoteKickName::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_SetPlayerToVoteKickName, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'W_VotekickVotePopup_C_SetPlayerToVoteKickName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_SetPlayerToVoteKickName, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'W_VotekickVotePopup_C_SetPlayerToVoteKickName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function W_VotekickVotePopup.W_VotekickVotePopup_C.GetYesVoteAmount
// 0x0048 (0x0048 - 0x0000)
struct W_VotekickVotePopup_C_GetYesVoteAmount final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0030(0x0018)()
};
static_assert(alignof(W_VotekickVotePopup_C_GetYesVoteAmount) == 0x000008, "Wrong alignment on W_VotekickVotePopup_C_GetYesVoteAmount");
static_assert(sizeof(W_VotekickVotePopup_C_GetYesVoteAmount) == 0x000048, "Wrong size on W_VotekickVotePopup_C_GetYesVoteAmount");
static_assert(offsetof(W_VotekickVotePopup_C_GetYesVoteAmount, ReturnValue) == 0x000000, "Member 'W_VotekickVotePopup_C_GetYesVoteAmount::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_GetYesVoteAmount, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'W_VotekickVotePopup_C_GetYesVoteAmount::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_GetYesVoteAmount, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x000020, "Member 'W_VotekickVotePopup_C_GetYesVoteAmount::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_GetYesVoteAmount, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'W_VotekickVotePopup_C_GetYesVoteAmount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_GetYesVoteAmount, CallFunc_Conv_IntToText_ReturnValue) == 0x000030, "Member 'W_VotekickVotePopup_C_GetYesVoteAmount::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function W_VotekickVotePopup.W_VotekickVotePopup_C.GetNoVoteAmount
// 0x0048 (0x0048 - 0x0000)
struct W_VotekickVotePopup_C_GetNoVoteAmount final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0030(0x0018)()
};
static_assert(alignof(W_VotekickVotePopup_C_GetNoVoteAmount) == 0x000008, "Wrong alignment on W_VotekickVotePopup_C_GetNoVoteAmount");
static_assert(sizeof(W_VotekickVotePopup_C_GetNoVoteAmount) == 0x000048, "Wrong size on W_VotekickVotePopup_C_GetNoVoteAmount");
static_assert(offsetof(W_VotekickVotePopup_C_GetNoVoteAmount, ReturnValue) == 0x000000, "Member 'W_VotekickVotePopup_C_GetNoVoteAmount::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_GetNoVoteAmount, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'W_VotekickVotePopup_C_GetNoVoteAmount::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_GetNoVoteAmount, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x000020, "Member 'W_VotekickVotePopup_C_GetNoVoteAmount::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_GetNoVoteAmount, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'W_VotekickVotePopup_C_GetNoVoteAmount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_GetNoVoteAmount, CallFunc_Conv_IntToText_ReturnValue) == 0x000030, "Member 'W_VotekickVotePopup_C_GetNoVoteAmount::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function W_VotekickVotePopup.W_VotekickVotePopup_C.ShowNoBorder
// 0x0060 (0x0060 - 0x0000)
struct W_VotekickVotePopup_C_ShowNoBorder final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Controller_C*                       K2Node_DynamicCast_AsBP_Controller;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_VotekickVotePopup_C_ShowNoBorder) == 0x000008, "Wrong alignment on W_VotekickVotePopup_C_ShowNoBorder");
static_assert(sizeof(W_VotekickVotePopup_C_ShowNoBorder) == 0x000060, "Wrong size on W_VotekickVotePopup_C_ShowNoBorder");
static_assert(offsetof(W_VotekickVotePopup_C_ShowNoBorder, ReturnValue) == 0x000000, "Member 'W_VotekickVotePopup_C_ShowNoBorder::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_ShowNoBorder, Temp_bool_Variable) == 0x000010, "Member 'W_VotekickVotePopup_C_ShowNoBorder::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_ShowNoBorder, Temp_struct_Variable) == 0x000014, "Member 'W_VotekickVotePopup_C_ShowNoBorder::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_ShowNoBorder, Temp_struct_Variable_1) == 0x000024, "Member 'W_VotekickVotePopup_C_ShowNoBorder::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_ShowNoBorder, CallFunc_GetPlayerController_ReturnValue) == 0x000038, "Member 'W_VotekickVotePopup_C_ShowNoBorder::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_ShowNoBorder, K2Node_DynamicCast_AsBP_Controller) == 0x000040, "Member 'W_VotekickVotePopup_C_ShowNoBorder::K2Node_DynamicCast_AsBP_Controller' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_ShowNoBorder, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'W_VotekickVotePopup_C_ShowNoBorder::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_ShowNoBorder, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000049, "Member 'W_VotekickVotePopup_C_ShowNoBorder::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_ShowNoBorder, K2Node_Select_Default) == 0x00004C, "Member 'W_VotekickVotePopup_C_ShowNoBorder::K2Node_Select_Default' has a wrong offset!");

// Function W_VotekickVotePopup.W_VotekickVotePopup_C.ShowYesBorder
// 0x0060 (0x0060 - 0x0000)
struct W_VotekickVotePopup_C_ShowYesBorder final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Controller_C*                       K2Node_DynamicCast_AsBP_Controller;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_VotekickVotePopup_C_ShowYesBorder) == 0x000008, "Wrong alignment on W_VotekickVotePopup_C_ShowYesBorder");
static_assert(sizeof(W_VotekickVotePopup_C_ShowYesBorder) == 0x000060, "Wrong size on W_VotekickVotePopup_C_ShowYesBorder");
static_assert(offsetof(W_VotekickVotePopup_C_ShowYesBorder, ReturnValue) == 0x000000, "Member 'W_VotekickVotePopup_C_ShowYesBorder::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_ShowYesBorder, Temp_bool_Variable) == 0x000010, "Member 'W_VotekickVotePopup_C_ShowYesBorder::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_ShowYesBorder, Temp_struct_Variable) == 0x000014, "Member 'W_VotekickVotePopup_C_ShowYesBorder::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_ShowYesBorder, Temp_struct_Variable_1) == 0x000024, "Member 'W_VotekickVotePopup_C_ShowYesBorder::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_ShowYesBorder, CallFunc_GetPlayerController_ReturnValue) == 0x000038, "Member 'W_VotekickVotePopup_C_ShowYesBorder::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_ShowYesBorder, K2Node_DynamicCast_AsBP_Controller) == 0x000040, "Member 'W_VotekickVotePopup_C_ShowYesBorder::K2Node_DynamicCast_AsBP_Controller' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_ShowYesBorder, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'W_VotekickVotePopup_C_ShowYesBorder::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_ShowYesBorder, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000049, "Member 'W_VotekickVotePopup_C_ShowYesBorder::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_ShowYesBorder, K2Node_Select_Default) == 0x00004C, "Member 'W_VotekickVotePopup_C_ShowYesBorder::K2Node_Select_Default' has a wrong offset!");

// Function W_VotekickVotePopup.W_VotekickVotePopup_C.SetRequiredVotesText
// 0x00B8 (0x00B8 - 0x0000)
struct W_VotekickVotePopup_C_SetRequiredVotesText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMod_Remainder;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0018)()
};
static_assert(alignof(W_VotekickVotePopup_C_SetRequiredVotesText) == 0x000008, "Wrong alignment on W_VotekickVotePopup_C_SetRequiredVotesText");
static_assert(sizeof(W_VotekickVotePopup_C_SetRequiredVotesText) == 0x0000B8, "Wrong size on W_VotekickVotePopup_C_SetRequiredVotesText");
static_assert(offsetof(W_VotekickVotePopup_C_SetRequiredVotesText, ReturnValue) == 0x000000, "Member 'W_VotekickVotePopup_C_SetRequiredVotesText::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_SetRequiredVotesText, Temp_bool_Variable) == 0x000018, "Member 'W_VotekickVotePopup_C_SetRequiredVotesText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_SetRequiredVotesText, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'W_VotekickVotePopup_C_SetRequiredVotesText::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_SetRequiredVotesText, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x000028, "Member 'W_VotekickVotePopup_C_SetRequiredVotesText::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_SetRequiredVotesText, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'W_VotekickVotePopup_C_SetRequiredVotesText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_SetRequiredVotesText, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'W_VotekickVotePopup_C_SetRequiredVotesText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_SetRequiredVotesText, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000038, "Member 'W_VotekickVotePopup_C_SetRequiredVotesText::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_SetRequiredVotesText, CallFunc_FMod_Remainder) == 0x00003C, "Member 'W_VotekickVotePopup_C_SetRequiredVotesText::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_SetRequiredVotesText, CallFunc_FMod_ReturnValue) == 0x000040, "Member 'W_VotekickVotePopup_C_SetRequiredVotesText::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_SetRequiredVotesText, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000044, "Member 'W_VotekickVotePopup_C_SetRequiredVotesText::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_SetRequiredVotesText, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'W_VotekickVotePopup_C_SetRequiredVotesText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_SetRequiredVotesText, K2Node_Select_Default) == 0x00004C, "Member 'W_VotekickVotePopup_C_SetRequiredVotesText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_SetRequiredVotesText, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'W_VotekickVotePopup_C_SetRequiredVotesText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_SetRequiredVotesText, K2Node_MakeArray_Array) == 0x000090, "Member 'W_VotekickVotePopup_C_SetRequiredVotesText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_VotekickVotePopup_C_SetRequiredVotesText, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'W_VotekickVotePopup_C_SetRequiredVotesText::CallFunc_Format_ReturnValue' has a wrong offset!");

}

