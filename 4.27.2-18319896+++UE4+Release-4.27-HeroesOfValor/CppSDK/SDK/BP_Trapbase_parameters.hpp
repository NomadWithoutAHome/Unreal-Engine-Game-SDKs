#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Trapbase

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "E_Teams_structs.hpp"
#include "ST_PlayerStats_structs.hpp"
#include "E_DamageTypes_structs.hpp"


namespace SDK::Params
{

// Function BP_Trapbase.BP_Trapbase_C.ExecuteUbergraph_BP_Trapbase
// 0x0720 (0x0720 - 0x0000)
struct BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetTruePawnLocation_PawnLocation;         // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Teams                                       CallFunc_GetPawnData_Team;                         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPawnData_PlayerIndex;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_PlayerStats                        CallFunc_GetPawnData_PlayerStats;                  // 0x0048(0x0068)(HasGetValueTypeHash)
	class UPawnDataComponent_C*                   CallFunc_GetPawnData_PawnDataComponent;            // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x00B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0140(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0198(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ProjectileBase_C*                   K2Node_DynamicCast_AsBP_Projectile_Base;           // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x026C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F5[0x3];                                      // 0x02F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0300(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x0330(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_TInterpTo_ReturnValue;                    // 0x0360(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0390(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult_1;    // 0x0418(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult_2;    // 0x04A0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_528[0x8];                                      // 0x0528(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_2;     // 0x0530(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0560(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x056C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0578(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_584[0xC];                                      // 0x0584(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0590(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x05C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x05CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x05D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_DamageAmount;                         // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_DamageHitLocation;                    // 0x05E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_DamageDirection;                      // 0x05F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_AttackerPawn;                         // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Event_Debuff;                               // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DamageTypes                                 K2Node_Event_DamageType;                           // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_611[0x3];                                      // 0x0611(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PlayerIndex;                          // 0x0614(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsCriticalHit;                        // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IgnoreTeamProtection;                 // 0x0619(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61A[0x6];                                      // 0x061A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_SpecialKillMessage;                   // 0x0620(0x0018)()
	bool                                          K2Node_Event_ShouldBreakInvisibility;              // 0x0638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsPiercingDamage;                     // 0x0639(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x063A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x063B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x063C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x063D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x063E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x063F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0640(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64C[0x4];                                      // 0x064C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0650(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0658(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_659[0x3];                                      // 0x0659(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x065C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_668[0x8];                                      // 0x0668(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0670(0x0030)(IsPlainOldData, NoDestructor)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x06A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x06B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B1[0x3];                                      // 0x06B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FindActiveTrapAmountForOwner_TrapAmount;  // 0x06B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Trapbase_C*                         CallFunc_FindActiveTrapAmountForOwner_OldestTrap;  // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x06C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C1[0x7];                                      // 0x06C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x06C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x06D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x06E0(0x0028)()
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0708(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x070C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase) == 0x000010, "Wrong alignment on BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase");
static_assert(sizeof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase) == 0x000720, "Wrong size on BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, EntryPoint) == 0x000000, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, Temp_object_Variable) == 0x000008, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_HasAuthority_ReturnValue) == 0x000018, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, Temp_bool_Has_Been_Initd_Variable) == 0x000019, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, Temp_bool_IsClosed_Variable) == 0x00001A, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, Temp_bool_IsClosed_Variable_1) == 0x00001B, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_HasAuthority_ReturnValue_1) == 0x00001C, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, Temp_bool_Has_Been_Initd_Variable_1) == 0x00001D, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, K2Node_Event_OtherActor) == 0x000020, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, K2Node_DynamicCast_AsPawn) == 0x000028, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_GetTruePawnLocation_PawnLocation) == 0x000034, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_GetTruePawnLocation_PawnLocation' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_GetPawnData_Team) == 0x000040, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_GetPawnData_Team' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_GetPawnData_PlayerIndex) == 0x000044, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_GetPawnData_PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_GetPawnData_PlayerStats) == 0x000048, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_GetPawnData_PlayerStats' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_GetPawnData_PawnDataComponent) == 0x0000B0, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_GetPawnData_PawnDataComponent' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_MakeHitResult_ReturnValue) == 0x0000B8, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, K2Node_MakeArray_Array) == 0x000140, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_HasAuthority_ReturnValue_2) == 0x000150, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000151, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, K2Node_Event_MyComp) == 0x000158, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, K2Node_Event_Other) == 0x000160, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, K2Node_Event_OtherComp) == 0x000168, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, K2Node_Event_bSelfMoved) == 0x000170, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, K2Node_Event_HitLocation) == 0x000174, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, K2Node_Event_HitNormal) == 0x000180, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, K2Node_Event_NormalImpulse) == 0x00018C, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, K2Node_Event_Hit) == 0x000198, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000220, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_BreakRotator_Roll) == 0x00022C, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_BreakRotator_Pitch) == 0x000230, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_BreakRotator_Yaw) == 0x000234, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_Add_VectorVector_ReturnValue) == 0x000238, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_MakeRotator_ReturnValue) == 0x000244, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000250, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, K2Node_DynamicCast_AsBP_Projectile_Base) == 0x000260, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::K2Node_DynamicCast_AsBP_Projectile_Base' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, K2Node_DynamicCast_bSuccess_1) == 0x000268, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_LineTraceSingle_OutHit) == 0x00026C, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_LineTraceSingle_ReturnValue) == 0x0002F4, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, K2Node_Event_DeltaSeconds) == 0x0002F8, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000300, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x000330, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_TInterpTo_ReturnValue) == 0x000360, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_TInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000390, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_K2_SetWorldTransform_SweepHitResult_1) == 0x000418, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_K2_SetWorldTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_K2_SetWorldTransform_SweepHitResult_2) == 0x0004A0, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_K2_SetWorldTransform_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_K2_GetComponentToWorld_ReturnValue_2) == 0x000530, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_K2_GetComponentToWorld_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_BreakTransform_Location) == 0x000560, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_BreakTransform_Rotation) == 0x00056C, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_BreakTransform_Scale) == 0x000578, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_MakeTransform_ReturnValue) == 0x000590, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0005C0, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0005CC, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x0005D8, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, K2Node_Event_DamageAmount) == 0x0005E4, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::K2Node_Event_DamageAmount' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, K2Node_Event_DamageHitLocation) == 0x0005E8, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::K2Node_Event_DamageHitLocation' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, K2Node_Event_DamageDirection) == 0x0005F4, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::K2Node_Event_DamageDirection' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, K2Node_Event_AttackerPawn) == 0x000600, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::K2Node_Event_AttackerPawn' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, K2Node_Event_Debuff) == 0x000608, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::K2Node_Event_Debuff' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, K2Node_Event_DamageType) == 0x000610, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, K2Node_Event_PlayerIndex) == 0x000614, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::K2Node_Event_PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, K2Node_Event_IsCriticalHit) == 0x000618, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::K2Node_Event_IsCriticalHit' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, K2Node_Event_IgnoreTeamProtection) == 0x000619, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::K2Node_Event_IgnoreTeamProtection' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, K2Node_Event_SpecialKillMessage) == 0x000620, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::K2Node_Event_SpecialKillMessage' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, K2Node_Event_ShouldBreakInvisibility) == 0x000638, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::K2Node_Event_ShouldBreakInvisibility' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, K2Node_Event_IsPiercingDamage) == 0x000639, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::K2Node_Event_IsPiercingDamage' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00063A, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00063B, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00063C, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_BooleanOR_ReturnValue) == 0x00063D, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_BooleanOR_ReturnValue_1) == 0x00063E, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_HasAuthority_ReturnValue_3) == 0x00063F, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000640, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000650, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000658, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00065C, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_MakeTransform_ReturnValue_1) == 0x000670, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_GetGameState_ReturnValue) == 0x0006A0, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x0006A8, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, K2Node_DynamicCast_bSuccess_2) == 0x0006B0, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_FindActiveTrapAmountForOwner_TrapAmount) == 0x0006B4, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_FindActiveTrapAmountForOwner_TrapAmount' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_FindActiveTrapAmountForOwner_OldestTrap) == 0x0006B8, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_FindActiveTrapAmountForOwner_OldestTrap' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_Greater_IntInt_ReturnValue) == 0x0006C0, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0006C8, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_SelectColor_ReturnValue) == 0x0006D0, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, K2Node_MakeStruct_SlateColor) == 0x0006E0, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000708, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00070C, "Member 'BP_Trapbase_C_ExecuteUbergraph_BP_Trapbase::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function BP_Trapbase.BP_Trapbase_C.ApplyDamage
// 0x0060 (0x0060 - 0x0000)
struct BP_Trapbase_C_ApplyDamage final
{
public:
	int32                                         DamageAmount_0;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DamageHitLocation;                                 // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DamageDirection;                                   // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  AttackerPawn;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Debuff;                                            // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DamageTypes                                 DamageType_0;                                      // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayerIndex;                                       // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCriticalHit;                                     // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreTeamProtection;                              // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   SpecialKillMessage;                                // 0x0040(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          ShouldBreakInvisibility;                           // 0x0058(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPiercingDamage;                                  // 0x0059(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Trapbase_C_ApplyDamage) == 0x000008, "Wrong alignment on BP_Trapbase_C_ApplyDamage");
static_assert(sizeof(BP_Trapbase_C_ApplyDamage) == 0x000060, "Wrong size on BP_Trapbase_C_ApplyDamage");
static_assert(offsetof(BP_Trapbase_C_ApplyDamage, DamageAmount_0) == 0x000000, "Member 'BP_Trapbase_C_ApplyDamage::DamageAmount_0' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ApplyDamage, DamageHitLocation) == 0x000004, "Member 'BP_Trapbase_C_ApplyDamage::DamageHitLocation' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ApplyDamage, DamageDirection) == 0x000010, "Member 'BP_Trapbase_C_ApplyDamage::DamageDirection' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ApplyDamage, AttackerPawn) == 0x000020, "Member 'BP_Trapbase_C_ApplyDamage::AttackerPawn' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ApplyDamage, Debuff) == 0x000028, "Member 'BP_Trapbase_C_ApplyDamage::Debuff' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ApplyDamage, DamageType_0) == 0x000030, "Member 'BP_Trapbase_C_ApplyDamage::DamageType_0' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ApplyDamage, PlayerIndex) == 0x000034, "Member 'BP_Trapbase_C_ApplyDamage::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ApplyDamage, IsCriticalHit) == 0x000038, "Member 'BP_Trapbase_C_ApplyDamage::IsCriticalHit' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ApplyDamage, IgnoreTeamProtection) == 0x000039, "Member 'BP_Trapbase_C_ApplyDamage::IgnoreTeamProtection' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ApplyDamage, SpecialKillMessage) == 0x000040, "Member 'BP_Trapbase_C_ApplyDamage::SpecialKillMessage' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ApplyDamage, ShouldBreakInvisibility) == 0x000058, "Member 'BP_Trapbase_C_ApplyDamage::ShouldBreakInvisibility' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ApplyDamage, IsPiercingDamage) == 0x000059, "Member 'BP_Trapbase_C_ApplyDamage::IsPiercingDamage' has a wrong offset!");

// Function BP_Trapbase.BP_Trapbase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Trapbase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Trapbase_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Trapbase_C_ReceiveTick");
static_assert(sizeof(BP_Trapbase_C_ReceiveTick) == 0x000004, "Wrong size on BP_Trapbase_C_ReceiveTick");
static_assert(offsetof(BP_Trapbase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Trapbase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Trapbase.BP_Trapbase_C.ReceiveHit
// 0x00C8 (0x00C8 - 0x0000)
struct BP_Trapbase_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0040(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Trapbase_C_ReceiveHit) == 0x000008, "Wrong alignment on BP_Trapbase_C_ReceiveHit");
static_assert(sizeof(BP_Trapbase_C_ReceiveHit) == 0x0000C8, "Wrong size on BP_Trapbase_C_ReceiveHit");
static_assert(offsetof(BP_Trapbase_C_ReceiveHit, MyComp) == 0x000000, "Member 'BP_Trapbase_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ReceiveHit, Other) == 0x000008, "Member 'BP_Trapbase_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ReceiveHit, OtherComp) == 0x000010, "Member 'BP_Trapbase_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'BP_Trapbase_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ReceiveHit, HitLocation) == 0x00001C, "Member 'BP_Trapbase_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ReceiveHit, HitNormal) == 0x000028, "Member 'BP_Trapbase_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ReceiveHit, NormalImpulse) == 0x000034, "Member 'BP_Trapbase_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_ReceiveHit, Hit) == 0x000040, "Member 'BP_Trapbase_C_ReceiveHit::Hit' has a wrong offset!");

// Function BP_Trapbase.BP_Trapbase_C.ReceiveActorBeginOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_Trapbase_C_ReceiveActorBeginOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Trapbase_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong alignment on BP_Trapbase_C_ReceiveActorBeginOverlap");
static_assert(sizeof(BP_Trapbase_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong size on BP_Trapbase_C_ReceiveActorBeginOverlap");
static_assert(offsetof(BP_Trapbase_C_ReceiveActorBeginOverlap, OtherActor) == 0x000000, "Member 'BP_Trapbase_C_ReceiveActorBeginOverlap::OtherActor' has a wrong offset!");

// Function BP_Trapbase.BP_Trapbase_C.OnRep_Armed
// 0x01E8 (0x01E8 - 0x0000)
struct BP_Trapbase_C_OnRep_Armed final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0020(0x0010)(ConstParm, ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x0040(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB[0x1];                                       // 0x00CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Teams                                       CallFunc_GetPawnData_Team;                         // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPawnData_PlayerIndex;                  // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_PlayerStats                        CallFunc_GetPawnData_PlayerStats;                  // 0x0170(0x0068)(HasGetValueTypeHash)
	class UPawnDataComponent_C*                   CallFunc_GetPawnData_PawnDataComponent;            // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Trapbase_C_OnRep_Armed) == 0x000008, "Wrong alignment on BP_Trapbase_C_OnRep_Armed");
static_assert(sizeof(BP_Trapbase_C_OnRep_Armed) == 0x0001E8, "Wrong size on BP_Trapbase_C_OnRep_Armed");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_Trapbase_C_OnRep_Armed::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000004, "Member 'BP_Trapbase_C_OnRep_Armed::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, CallFunc_Add_VectorVector_ReturnValue) == 0x000010, "Member 'BP_Trapbase_C_OnRep_Armed::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, Temp_object_Variable) == 0x000020, "Member 'BP_Trapbase_C_OnRep_Armed::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, K2Node_MakeArray_Array) == 0x000030, "Member 'BP_Trapbase_C_OnRep_Armed::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x000040, "Member 'BP_Trapbase_C_OnRep_Armed::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x0000C8, "Member 'BP_Trapbase_C_OnRep_Armed::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, CallFunc_BreakHitResult_bBlockingHit) == 0x0000C9, "Member 'BP_Trapbase_C_OnRep_Armed::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000CA, "Member 'BP_Trapbase_C_OnRep_Armed::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, CallFunc_BreakHitResult_Time) == 0x0000CC, "Member 'BP_Trapbase_C_OnRep_Armed::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, CallFunc_BreakHitResult_Distance) == 0x0000D0, "Member 'BP_Trapbase_C_OnRep_Armed::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, CallFunc_BreakHitResult_Location) == 0x0000D4, "Member 'BP_Trapbase_C_OnRep_Armed::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, CallFunc_BreakHitResult_ImpactPoint) == 0x0000E0, "Member 'BP_Trapbase_C_OnRep_Armed::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, CallFunc_BreakHitResult_Normal) == 0x0000EC, "Member 'BP_Trapbase_C_OnRep_Armed::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, CallFunc_BreakHitResult_ImpactNormal) == 0x0000F8, "Member 'BP_Trapbase_C_OnRep_Armed::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, CallFunc_BreakHitResult_PhysMat) == 0x000108, "Member 'BP_Trapbase_C_OnRep_Armed::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, CallFunc_BreakHitResult_HitActor) == 0x000110, "Member 'BP_Trapbase_C_OnRep_Armed::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, CallFunc_BreakHitResult_HitComponent) == 0x000118, "Member 'BP_Trapbase_C_OnRep_Armed::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, CallFunc_BreakHitResult_HitBoneName) == 0x000120, "Member 'BP_Trapbase_C_OnRep_Armed::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, CallFunc_BreakHitResult_HitItem) == 0x000128, "Member 'BP_Trapbase_C_OnRep_Armed::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, CallFunc_BreakHitResult_ElementIndex) == 0x00012C, "Member 'BP_Trapbase_C_OnRep_Armed::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, CallFunc_BreakHitResult_FaceIndex) == 0x000130, "Member 'BP_Trapbase_C_OnRep_Armed::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, CallFunc_BreakHitResult_TraceStart) == 0x000134, "Member 'BP_Trapbase_C_OnRep_Armed::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, CallFunc_BreakHitResult_TraceEnd) == 0x000140, "Member 'BP_Trapbase_C_OnRep_Armed::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, K2Node_DynamicCast_AsPawn) == 0x000150, "Member 'BP_Trapbase_C_OnRep_Armed::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, K2Node_DynamicCast_bSuccess) == 0x000158, "Member 'BP_Trapbase_C_OnRep_Armed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x00015C, "Member 'BP_Trapbase_C_OnRep_Armed::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, CallFunc_GetPawnData_Team) == 0x000168, "Member 'BP_Trapbase_C_OnRep_Armed::CallFunc_GetPawnData_Team' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, CallFunc_GetPawnData_PlayerIndex) == 0x00016C, "Member 'BP_Trapbase_C_OnRep_Armed::CallFunc_GetPawnData_PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, CallFunc_GetPawnData_PlayerStats) == 0x000170, "Member 'BP_Trapbase_C_OnRep_Armed::CallFunc_GetPawnData_PlayerStats' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, CallFunc_GetPawnData_PawnDataComponent) == 0x0001D8, "Member 'BP_Trapbase_C_OnRep_Armed::CallFunc_GetPawnData_PawnDataComponent' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_OnRep_Armed, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0001E0, "Member 'BP_Trapbase_C_OnRep_Armed::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_Trapbase.BP_Trapbase_C.FindActiveTrapAmountForOwner
// 0x0060 (0x0060 - 0x0000)
struct BP_Trapbase_C_FindActiveTrapAmountForOwner final
{
public:
	int32                                         TrapAmount;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Trapbase_C*                         OldestTrap;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Trapbase_C*                         OldestTrapTemp;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OldestTimePassed;                                  // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FoundTraps;                                        // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_Trapbase_C*>                 CallFunc_GetAllActorsOfClass_OutActors;            // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Trapbase_C*                         CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Trapbase_C_FindActiveTrapAmountForOwner) == 0x000008, "Wrong alignment on BP_Trapbase_C_FindActiveTrapAmountForOwner");
static_assert(sizeof(BP_Trapbase_C_FindActiveTrapAmountForOwner) == 0x000060, "Wrong size on BP_Trapbase_C_FindActiveTrapAmountForOwner");
static_assert(offsetof(BP_Trapbase_C_FindActiveTrapAmountForOwner, TrapAmount) == 0x000000, "Member 'BP_Trapbase_C_FindActiveTrapAmountForOwner::TrapAmount' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_FindActiveTrapAmountForOwner, OldestTrap) == 0x000008, "Member 'BP_Trapbase_C_FindActiveTrapAmountForOwner::OldestTrap' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_FindActiveTrapAmountForOwner, OldestTrapTemp) == 0x000010, "Member 'BP_Trapbase_C_FindActiveTrapAmountForOwner::OldestTrapTemp' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_FindActiveTrapAmountForOwner, OldestTimePassed) == 0x000018, "Member 'BP_Trapbase_C_FindActiveTrapAmountForOwner::OldestTimePassed' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_FindActiveTrapAmountForOwner, FoundTraps) == 0x00001C, "Member 'BP_Trapbase_C_FindActiveTrapAmountForOwner::FoundTraps' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_FindActiveTrapAmountForOwner, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_Trapbase_C_FindActiveTrapAmountForOwner::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_FindActiveTrapAmountForOwner, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_Trapbase_C_FindActiveTrapAmountForOwner::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_FindActiveTrapAmountForOwner, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_Trapbase_C_FindActiveTrapAmountForOwner::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_FindActiveTrapAmountForOwner, Temp_int_Variable) == 0x00002C, "Member 'BP_Trapbase_C_FindActiveTrapAmountForOwner::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_FindActiveTrapAmountForOwner, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_Trapbase_C_FindActiveTrapAmountForOwner::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_FindActiveTrapAmountForOwner, CallFunc_GetAllActorsOfClass_OutActors) == 0x000038, "Member 'BP_Trapbase_C_FindActiveTrapAmountForOwner::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_FindActiveTrapAmountForOwner, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_Trapbase_C_FindActiveTrapAmountForOwner::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_FindActiveTrapAmountForOwner, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_Trapbase_C_FindActiveTrapAmountForOwner::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_FindActiveTrapAmountForOwner, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_Trapbase_C_FindActiveTrapAmountForOwner::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_FindActiveTrapAmountForOwner, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000059, "Member 'BP_Trapbase_C_FindActiveTrapAmountForOwner::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Trapbase_C_FindActiveTrapAmountForOwner, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00005A, "Member 'BP_Trapbase_C_FindActiveTrapAmountForOwner::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

}

