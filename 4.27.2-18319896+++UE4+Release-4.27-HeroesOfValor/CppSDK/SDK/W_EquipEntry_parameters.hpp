#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_EquipEntry

#include "Basic.hpp"

#include "SteamCore_structs.hpp"
#include "ST_CharacterCustomization_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_SteamItemRarities_structs.hpp"
#include "UMG_structs.hpp"
#include "E_CurrencyTypes_structs.hpp"
#include "E_UnlockableCategories_structs.hpp"
#include "E_Teams_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function W_EquipEntry.W_EquipEntry_C.ExecuteUbergraph_W_EquipEntry
// 0x01E0 (0x01E0 - 0x0000)
struct W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CurrencyTypes                               Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Tooltip_C*                           CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0070(0x0028)()
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakColor_R_1;                           // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G_1;                           // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B_1;                           // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A_1;                           // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Teams                                       CallFunc_Array_Get_Item;                           // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AF[0x1];                                       // 0x00AF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00B0(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0108(0x0018)()
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0128(0x0018)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_143[0x5];                                      // 0x0143(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance;             // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCosmeticItemIndex_ItemIndex;           // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Mannequin_C*                        K2Node_DynamicCast_AsBP_Mannequin;                 // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x017E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x017F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select_Default_3;                           // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x01AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BD[0x3];                                      // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_4;                           // 0x01C0(0x0018)()
	class UW_ShopToolTipPreview_C*                CallFunc_Create_ReturnValue_1;                     // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry) == 0x000008, "Wrong alignment on W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry");
static_assert(sizeof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry) == 0x0001E0, "Wrong size on W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, EntryPoint) == 0x000000, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, Temp_float_Variable) == 0x000004, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, Temp_byte_Variable) == 0x000008, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, Temp_float_Variable_1) == 0x00000C, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, Temp_float_Variable_2) == 0x000010, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, Temp_float_Variable_3) == 0x000014, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, Temp_float_Variable_4) == 0x000018, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, Temp_float_Variable_5) == 0x00001C, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, CallFunc_Create_ReturnValue) == 0x000020, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, Temp_bool_Variable) == 0x000028, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, Temp_object_Variable) == 0x000030, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, Temp_object_Variable_1) == 0x000038, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000040, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, CallFunc_SelectFloat_ReturnValue) == 0x000048, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x00004C, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, CallFunc_BreakColor_R) == 0x00005C, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, CallFunc_BreakColor_G) == 0x000060, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, CallFunc_BreakColor_B) == 0x000064, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, CallFunc_BreakColor_A) == 0x000068, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, K2Node_MakeStruct_SlateColor) == 0x000070, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000098, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, CallFunc_BreakColor_R_1) == 0x00009C, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::CallFunc_BreakColor_R_1' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, CallFunc_BreakColor_G_1) == 0x0000A0, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::CallFunc_BreakColor_G_1' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, CallFunc_BreakColor_B_1) == 0x0000A4, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::CallFunc_BreakColor_B_1' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, CallFunc_BreakColor_A_1) == 0x0000A8, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::CallFunc_BreakColor_A_1' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0000AC, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000AD, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, CallFunc_Array_Get_Item) == 0x0000AE, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, K2Node_MakeStruct_FormatArgumentData) == 0x0000B0, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000F0, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, K2Node_MakeArray_Array) == 0x0000F8, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, CallFunc_Format_ReturnValue) == 0x000108, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, K2Node_Select_Default) == 0x000120, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, CallFunc_Conv_IntToText_ReturnValue) == 0x000128, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000140, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000141, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, Temp_bool_Variable_1) == 0x000142, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, CallFunc_GetGameInstance_ReturnValue) == 0x000148, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, K2Node_DynamicCast_AsBP_Game_Instance) == 0x000150, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::K2Node_DynamicCast_AsBP_Game_Instance' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, K2Node_DynamicCast_bSuccess) == 0x000158, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, CallFunc_GetCosmeticItemIndex_ItemIndex) == 0x00015C, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::CallFunc_GetCosmeticItemIndex_ItemIndex' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, K2Node_DynamicCast_AsBP_Mannequin) == 0x000160, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::K2Node_DynamicCast_AsBP_Mannequin' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, K2Node_DynamicCast_bSuccess_1) == 0x000168, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000170, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, Temp_float_Variable_6) == 0x000178, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, CallFunc_IsValid_ReturnValue) == 0x00017C, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x00017D, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, Temp_bool_Variable_2) == 0x00017E, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00017F, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000180, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, K2Node_SwitchEnum_CmpSuccess) == 0x000188, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, CallFunc_MakeLiteralFloat_ReturnValue) == 0x00018C, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, K2Node_Select_Default_1) == 0x000190, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, K2Node_Select_Default_2) == 0x000194, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, K2Node_MakeStruct_Margin) == 0x000198, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, K2Node_Select_Default_3) == 0x0001A8, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, K2Node_MakeStruct_Margin_1) == 0x0001AC, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, Temp_bool_Variable_3) == 0x0001BC, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, K2Node_Select_Default_4) == 0x0001C0, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry, CallFunc_Create_ReturnValue_1) == 0x0001D8, "Member 'W_EquipEntry_C_ExecuteUbergraph_W_EquipEntry::CallFunc_Create_ReturnValue_1' has a wrong offset!");

// Function W_EquipEntry.W_EquipEntry_C.ShowEquipedCheckMark
// 0x0078 (0x0078 - 0x0000)
struct W_EquipEntry_C_ShowEquipedCheckMark final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UnlockableCategories                        Temp_byte_Variable_2;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetClassAndTeamUnitIndex_Index;           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_CharacterCustomization             CallFunc_Get_Unit_Character_Customization_CharacterCustomization; // 0x0028(0x003C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_9;          // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_10;         // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_11;         // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_EquipEntry_C_ShowEquipedCheckMark) == 0x000008, "Wrong alignment on W_EquipEntry_C_ShowEquipedCheckMark");
static_assert(sizeof(W_EquipEntry_C_ShowEquipedCheckMark) == 0x000078, "Wrong size on W_EquipEntry_C_ShowEquipedCheckMark");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, ReturnValue) == 0x000000, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, Temp_bool_Variable) == 0x000001, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, Temp_bool_Variable_1) == 0x000002, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, Temp_bool_Variable_2) == 0x000003, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, Temp_bool_Variable_3) == 0x000004, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, Temp_bool_Variable_4) == 0x000005, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, Temp_bool_Variable_5) == 0x000006, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, Temp_byte_Variable) == 0x000007, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, Temp_byte_Variable_1) == 0x000008, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, Temp_byte_Variable_2) == 0x000009, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, K2Node_DynamicCast_AsBP_Game_Instance) == 0x000018, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::K2Node_DynamicCast_AsBP_Game_Instance' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, CallFunc_GetClassAndTeamUnitIndex_Index) == 0x000024, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::CallFunc_GetClassAndTeamUnitIndex_Index' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, CallFunc_Get_Unit_Character_Customization_CharacterCustomization) == 0x000028, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::CallFunc_Get_Unit_Character_Customization_CharacterCustomization' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, CallFunc_Array_Get_Item) == 0x000064, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000068, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000069, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00006A, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x00006B, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x00006C, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x00006D, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x00006E, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x00006F, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x000070, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, CallFunc_EqualEqual_IntInt_ReturnValue_9) == 0x000071, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::CallFunc_EqualEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, CallFunc_EqualEqual_IntInt_ReturnValue_10) == 0x000072, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::CallFunc_EqualEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, CallFunc_EqualEqual_IntInt_ReturnValue_11) == 0x000073, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::CallFunc_EqualEqual_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, K2Node_Select_Default) == 0x000074, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEquipedCheckMark, K2Node_Select_Default_1) == 0x000075, "Member 'W_EquipEntry_C_ShowEquipedCheckMark::K2Node_Select_Default_1' has a wrong offset!");

// Function W_EquipEntry.W_EquipEntry_C.ShowLocked
// 0x0002 (0x0002 - 0x0000)
struct W_EquipEntry_C_ShowLocked final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_EquipEntry_C_ShowLocked) == 0x000001, "Wrong alignment on W_EquipEntry_C_ShowLocked");
static_assert(sizeof(W_EquipEntry_C_ShowLocked) == 0x000002, "Wrong size on W_EquipEntry_C_ShowLocked");
static_assert(offsetof(W_EquipEntry_C_ShowLocked, ReturnValue) == 0x000000, "Member 'W_EquipEntry_C_ShowLocked::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowLocked, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'W_EquipEntry_C_ShowLocked::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function W_EquipEntry.W_EquipEntry_C.SetIconColor
// 0x0010 (0x0010 - 0x0000)
struct W_EquipEntry_C_SetIconColor final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_EquipEntry_C_SetIconColor) == 0x000004, "Wrong alignment on W_EquipEntry_C_SetIconColor");
static_assert(sizeof(W_EquipEntry_C_SetIconColor) == 0x000010, "Wrong size on W_EquipEntry_C_SetIconColor");
static_assert(offsetof(W_EquipEntry_C_SetIconColor, ReturnValue) == 0x000000, "Member 'W_EquipEntry_C_SetIconColor::ReturnValue' has a wrong offset!");

// Function W_EquipEntry.W_EquipEntry_C.SetWeaponSkin
// 0x0038 (0x0038 - 0x0000)
struct W_EquipEntry_C_SetWeaponSkin final
{
public:
	int32                                         ItemIndex_0;                                       // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 WeaponSkinsTemp;                                   // 0x0008(0x0010)(Edit, BlueprintVisible)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetClassAndTeamUnitIndex_Index;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_EquipEntry_C_SetWeaponSkin) == 0x000008, "Wrong alignment on W_EquipEntry_C_SetWeaponSkin");
static_assert(sizeof(W_EquipEntry_C_SetWeaponSkin) == 0x000038, "Wrong size on W_EquipEntry_C_SetWeaponSkin");
static_assert(offsetof(W_EquipEntry_C_SetWeaponSkin, ItemIndex_0) == 0x000000, "Member 'W_EquipEntry_C_SetWeaponSkin::ItemIndex_0' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetWeaponSkin, WeaponSkinsTemp) == 0x000008, "Member 'W_EquipEntry_C_SetWeaponSkin::WeaponSkinsTemp' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetWeaponSkin, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'W_EquipEntry_C_SetWeaponSkin::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetWeaponSkin, CallFunc_GetClassAndTeamUnitIndex_Index) == 0x000020, "Member 'W_EquipEntry_C_SetWeaponSkin::CallFunc_GetClassAndTeamUnitIndex_Index' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetWeaponSkin, K2Node_DynamicCast_AsBP_Game_Instance) == 0x000028, "Member 'W_EquipEntry_C_SetWeaponSkin::K2Node_DynamicCast_AsBP_Game_Instance' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetWeaponSkin, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'W_EquipEntry_C_SetWeaponSkin::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_EquipEntry.W_EquipEntry_C.ShowEventIcon
// 0x0008 (0x0008 - 0x0000)
struct W_EquipEntry_C_ShowEventIcon final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CurrencyTypes                               Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_EquipEntry_C_ShowEventIcon) == 0x000001, "Wrong alignment on W_EquipEntry_C_ShowEventIcon");
static_assert(sizeof(W_EquipEntry_C_ShowEventIcon) == 0x000008, "Wrong size on W_EquipEntry_C_ShowEventIcon");
static_assert(offsetof(W_EquipEntry_C_ShowEventIcon, ReturnValue) == 0x000000, "Member 'W_EquipEntry_C_ShowEventIcon::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEventIcon, Temp_byte_Variable) == 0x000001, "Member 'W_EquipEntry_C_ShowEventIcon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEventIcon, Temp_byte_Variable_1) == 0x000002, "Member 'W_EquipEntry_C_ShowEventIcon::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEventIcon, Temp_byte_Variable_2) == 0x000003, "Member 'W_EquipEntry_C_ShowEventIcon::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEventIcon, Temp_byte_Variable_3) == 0x000004, "Member 'W_EquipEntry_C_ShowEventIcon::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEventIcon, Temp_byte_Variable_4) == 0x000005, "Member 'W_EquipEntry_C_ShowEventIcon::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEventIcon, Temp_byte_Variable_5) == 0x000006, "Member 'W_EquipEntry_C_ShowEventIcon::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowEventIcon, K2Node_Select_Default) == 0x000007, "Member 'W_EquipEntry_C_ShowEventIcon::K2Node_Select_Default' has a wrong offset!");

// Function W_EquipEntry.W_EquipEntry_C.SetCurrencyIcon
// 0x0148 (0x0148 - 0x0000)
struct W_EquipEntry_C_SetCurrencyIcon final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x0088)(Parm, OutParm, ReturnParm)
	E_CurrencyTypes                               Temp_byte_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default;                             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00C0(0x0088)()
};
static_assert(alignof(W_EquipEntry_C_SetCurrencyIcon) == 0x000008, "Wrong alignment on W_EquipEntry_C_SetCurrencyIcon");
static_assert(sizeof(W_EquipEntry_C_SetCurrencyIcon) == 0x000148, "Wrong size on W_EquipEntry_C_SetCurrencyIcon");
static_assert(offsetof(W_EquipEntry_C_SetCurrencyIcon, ReturnValue) == 0x000000, "Member 'W_EquipEntry_C_SetCurrencyIcon::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetCurrencyIcon, Temp_byte_Variable) == 0x000088, "Member 'W_EquipEntry_C_SetCurrencyIcon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetCurrencyIcon, Temp_object_Variable) == 0x000090, "Member 'W_EquipEntry_C_SetCurrencyIcon::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetCurrencyIcon, Temp_object_Variable_1) == 0x000098, "Member 'W_EquipEntry_C_SetCurrencyIcon::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetCurrencyIcon, Temp_object_Variable_2) == 0x0000A0, "Member 'W_EquipEntry_C_SetCurrencyIcon::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetCurrencyIcon, Temp_object_Variable_3) == 0x0000A8, "Member 'W_EquipEntry_C_SetCurrencyIcon::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetCurrencyIcon, Temp_object_Variable_4) == 0x0000B0, "Member 'W_EquipEntry_C_SetCurrencyIcon::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetCurrencyIcon, K2Node_Select_Default) == 0x0000B8, "Member 'W_EquipEntry_C_SetCurrencyIcon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetCurrencyIcon, K2Node_MakeStruct_SlateBrush) == 0x0000C0, "Member 'W_EquipEntry_C_SetCurrencyIcon::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function W_EquipEntry.W_EquipEntry_C.SetPriceColor
// 0x0088 (0x0088 - 0x0000)
struct W_EquipEntry_C_SetPriceColor final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0060(0x0028)()
};
static_assert(alignof(W_EquipEntry_C_SetPriceColor) == 0x000008, "Wrong alignment on W_EquipEntry_C_SetPriceColor");
static_assert(sizeof(W_EquipEntry_C_SetPriceColor) == 0x000088, "Wrong size on W_EquipEntry_C_SetPriceColor");
static_assert(offsetof(W_EquipEntry_C_SetPriceColor, ReturnValue) == 0x000000, "Member 'W_EquipEntry_C_SetPriceColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetPriceColor, Temp_bool_Variable) == 0x000028, "Member 'W_EquipEntry_C_SetPriceColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetPriceColor, Temp_struct_Variable) == 0x00002C, "Member 'W_EquipEntry_C_SetPriceColor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetPriceColor, Temp_struct_Variable_1) == 0x00003C, "Member 'W_EquipEntry_C_SetPriceColor::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetPriceColor, K2Node_Select_Default) == 0x00004C, "Member 'W_EquipEntry_C_SetPriceColor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetPriceColor, K2Node_MakeStruct_SlateColor) == 0x000060, "Member 'W_EquipEntry_C_SetPriceColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function W_EquipEntry.W_EquipEntry_C.SetHat
// 0x0038 (0x0038 - 0x0000)
struct W_EquipEntry_C_SetHat final
{
public:
	int32                                         ItemIndex_0;                                       // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 HatsTemp;                                          // 0x0008(0x0010)(Edit, BlueprintVisible)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetClassAndTeamUnitIndex_Index;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_EquipEntry_C_SetHat) == 0x000008, "Wrong alignment on W_EquipEntry_C_SetHat");
static_assert(sizeof(W_EquipEntry_C_SetHat) == 0x000038, "Wrong size on W_EquipEntry_C_SetHat");
static_assert(offsetof(W_EquipEntry_C_SetHat, ItemIndex_0) == 0x000000, "Member 'W_EquipEntry_C_SetHat::ItemIndex_0' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetHat, HatsTemp) == 0x000008, "Member 'W_EquipEntry_C_SetHat::HatsTemp' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetHat, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'W_EquipEntry_C_SetHat::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetHat, CallFunc_GetClassAndTeamUnitIndex_Index) == 0x000020, "Member 'W_EquipEntry_C_SetHat::CallFunc_GetClassAndTeamUnitIndex_Index' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetHat, K2Node_DynamicCast_AsBP_Game_Instance) == 0x000028, "Member 'W_EquipEntry_C_SetHat::K2Node_DynamicCast_AsBP_Game_Instance' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetHat, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'W_EquipEntry_C_SetHat::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_EquipEntry.W_EquipEntry_C.SetUpperFace
// 0x0038 (0x0038 - 0x0000)
struct W_EquipEntry_C_SetUpperFace final
{
public:
	int32                                         ItemIndex_0;                                       // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 UpperFaceTemp;                                     // 0x0008(0x0010)(Edit, BlueprintVisible)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetClassAndTeamUnitIndex_Index;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_EquipEntry_C_SetUpperFace) == 0x000008, "Wrong alignment on W_EquipEntry_C_SetUpperFace");
static_assert(sizeof(W_EquipEntry_C_SetUpperFace) == 0x000038, "Wrong size on W_EquipEntry_C_SetUpperFace");
static_assert(offsetof(W_EquipEntry_C_SetUpperFace, ItemIndex_0) == 0x000000, "Member 'W_EquipEntry_C_SetUpperFace::ItemIndex_0' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetUpperFace, UpperFaceTemp) == 0x000008, "Member 'W_EquipEntry_C_SetUpperFace::UpperFaceTemp' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetUpperFace, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'W_EquipEntry_C_SetUpperFace::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetUpperFace, CallFunc_GetClassAndTeamUnitIndex_Index) == 0x000020, "Member 'W_EquipEntry_C_SetUpperFace::CallFunc_GetClassAndTeamUnitIndex_Index' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetUpperFace, K2Node_DynamicCast_AsBP_Game_Instance) == 0x000028, "Member 'W_EquipEntry_C_SetUpperFace::K2Node_DynamicCast_AsBP_Game_Instance' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetUpperFace, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'W_EquipEntry_C_SetUpperFace::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_EquipEntry.W_EquipEntry_C.SetShirt
// 0x0038 (0x0038 - 0x0000)
struct W_EquipEntry_C_SetShirt final
{
public:
	int32                                         ItemIndex_0;                                       // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 ShirtTemp;                                         // 0x0008(0x0010)(Edit, BlueprintVisible)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetClassAndTeamUnitIndex_Index;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_EquipEntry_C_SetShirt) == 0x000008, "Wrong alignment on W_EquipEntry_C_SetShirt");
static_assert(sizeof(W_EquipEntry_C_SetShirt) == 0x000038, "Wrong size on W_EquipEntry_C_SetShirt");
static_assert(offsetof(W_EquipEntry_C_SetShirt, ItemIndex_0) == 0x000000, "Member 'W_EquipEntry_C_SetShirt::ItemIndex_0' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetShirt, ShirtTemp) == 0x000008, "Member 'W_EquipEntry_C_SetShirt::ShirtTemp' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetShirt, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'W_EquipEntry_C_SetShirt::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetShirt, CallFunc_GetClassAndTeamUnitIndex_Index) == 0x000020, "Member 'W_EquipEntry_C_SetShirt::CallFunc_GetClassAndTeamUnitIndex_Index' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetShirt, K2Node_DynamicCast_AsBP_Game_Instance) == 0x000028, "Member 'W_EquipEntry_C_SetShirt::K2Node_DynamicCast_AsBP_Game_Instance' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetShirt, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'W_EquipEntry_C_SetShirt::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_EquipEntry.W_EquipEntry_C.SetTorso
// 0x0038 (0x0038 - 0x0000)
struct W_EquipEntry_C_SetTorso final
{
public:
	int32                                         ItemIndex_0;                                       // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 TorsoTemp;                                         // 0x0008(0x0010)(Edit, BlueprintVisible)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetClassAndTeamUnitIndex_Index;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_EquipEntry_C_SetTorso) == 0x000008, "Wrong alignment on W_EquipEntry_C_SetTorso");
static_assert(sizeof(W_EquipEntry_C_SetTorso) == 0x000038, "Wrong size on W_EquipEntry_C_SetTorso");
static_assert(offsetof(W_EquipEntry_C_SetTorso, ItemIndex_0) == 0x000000, "Member 'W_EquipEntry_C_SetTorso::ItemIndex_0' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetTorso, TorsoTemp) == 0x000008, "Member 'W_EquipEntry_C_SetTorso::TorsoTemp' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetTorso, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'W_EquipEntry_C_SetTorso::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetTorso, CallFunc_GetClassAndTeamUnitIndex_Index) == 0x000020, "Member 'W_EquipEntry_C_SetTorso::CallFunc_GetClassAndTeamUnitIndex_Index' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetTorso, K2Node_DynamicCast_AsBP_Game_Instance) == 0x000028, "Member 'W_EquipEntry_C_SetTorso::K2Node_DynamicCast_AsBP_Game_Instance' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetTorso, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'W_EquipEntry_C_SetTorso::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_EquipEntry.W_EquipEntry_C.SetBorderColor
// 0x0064 (0x0064 - 0x0000)
struct W_EquipEntry_C_SetBorderColor final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SteamItemRarities                           Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_EquipEntry_C_SetBorderColor) == 0x000004, "Wrong alignment on W_EquipEntry_C_SetBorderColor");
static_assert(sizeof(W_EquipEntry_C_SetBorderColor) == 0x000064, "Wrong size on W_EquipEntry_C_SetBorderColor");
static_assert(offsetof(W_EquipEntry_C_SetBorderColor, ReturnValue) == 0x000000, "Member 'W_EquipEntry_C_SetBorderColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetBorderColor, Temp_byte_Variable) == 0x000010, "Member 'W_EquipEntry_C_SetBorderColor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetBorderColor, Temp_struct_Variable) == 0x000014, "Member 'W_EquipEntry_C_SetBorderColor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetBorderColor, Temp_struct_Variable_1) == 0x000024, "Member 'W_EquipEntry_C_SetBorderColor::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetBorderColor, Temp_struct_Variable_2) == 0x000034, "Member 'W_EquipEntry_C_SetBorderColor::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetBorderColor, Temp_struct_Variable_3) == 0x000044, "Member 'W_EquipEntry_C_SetBorderColor::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetBorderColor, K2Node_Select_Default) == 0x000054, "Member 'W_EquipEntry_C_SetBorderColor::K2Node_Select_Default' has a wrong offset!");

// Function W_EquipEntry.W_EquipEntry_C.SetLowerFace
// 0x0038 (0x0038 - 0x0000)
struct W_EquipEntry_C_SetLowerFace final
{
public:
	int32                                         ItemIndex_0;                                       // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 LowerFaceTemp;                                     // 0x0008(0x0010)(Edit, BlueprintVisible)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetClassAndTeamUnitIndex_Index;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_EquipEntry_C_SetLowerFace) == 0x000008, "Wrong alignment on W_EquipEntry_C_SetLowerFace");
static_assert(sizeof(W_EquipEntry_C_SetLowerFace) == 0x000038, "Wrong size on W_EquipEntry_C_SetLowerFace");
static_assert(offsetof(W_EquipEntry_C_SetLowerFace, ItemIndex_0) == 0x000000, "Member 'W_EquipEntry_C_SetLowerFace::ItemIndex_0' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetLowerFace, LowerFaceTemp) == 0x000008, "Member 'W_EquipEntry_C_SetLowerFace::LowerFaceTemp' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetLowerFace, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'W_EquipEntry_C_SetLowerFace::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetLowerFace, CallFunc_GetClassAndTeamUnitIndex_Index) == 0x000020, "Member 'W_EquipEntry_C_SetLowerFace::CallFunc_GetClassAndTeamUnitIndex_Index' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetLowerFace, K2Node_DynamicCast_AsBP_Game_Instance) == 0x000028, "Member 'W_EquipEntry_C_SetLowerFace::K2Node_DynamicCast_AsBP_Game_Instance' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetLowerFace, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'W_EquipEntry_C_SetLowerFace::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_EquipEntry.W_EquipEntry_C.GetSteamItemUnlockedState
// 0x0088 (0x0088 - 0x0000)
struct W_EquipEntry_C_GetSteamItemUnlockedState final
{
public:
	int32                                         ItemIndex_0;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Unlocked_0;                                        // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BaseController_C*                   K2Node_DynamicCast_AsBP_Base_Controller;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSteamItemDetails                      CallFunc_Array_Get_Item;                           // 0x0048(0x0020)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetItemDefinitionProperty_Value;          // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemDefinitionProperty_ReturnValue;    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_EquipEntry_C_GetSteamItemUnlockedState) == 0x000008, "Wrong alignment on W_EquipEntry_C_GetSteamItemUnlockedState");
static_assert(sizeof(W_EquipEntry_C_GetSteamItemUnlockedState) == 0x000088, "Wrong size on W_EquipEntry_C_GetSteamItemUnlockedState");
static_assert(offsetof(W_EquipEntry_C_GetSteamItemUnlockedState, ItemIndex_0) == 0x000000, "Member 'W_EquipEntry_C_GetSteamItemUnlockedState::ItemIndex_0' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_GetSteamItemUnlockedState, Unlocked_0) == 0x000004, "Member 'W_EquipEntry_C_GetSteamItemUnlockedState::Unlocked_0' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_GetSteamItemUnlockedState, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'W_EquipEntry_C_GetSteamItemUnlockedState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_GetSteamItemUnlockedState, Temp_bool_True_if_break_was_hit_Variable) == 0x00000C, "Member 'W_EquipEntry_C_GetSteamItemUnlockedState::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_GetSteamItemUnlockedState, CallFunc_Conv_IntToString_ReturnValue) == 0x000010, "Member 'W_EquipEntry_C_GetSteamItemUnlockedState::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_GetSteamItemUnlockedState, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'W_EquipEntry_C_GetSteamItemUnlockedState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_GetSteamItemUnlockedState, Temp_int_Array_Index_Variable) == 0x000024, "Member 'W_EquipEntry_C_GetSteamItemUnlockedState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_GetSteamItemUnlockedState, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'W_EquipEntry_C_GetSteamItemUnlockedState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_GetSteamItemUnlockedState, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'W_EquipEntry_C_GetSteamItemUnlockedState::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_GetSteamItemUnlockedState, CallFunc_GetPlayerController_ReturnValue) == 0x000030, "Member 'W_EquipEntry_C_GetSteamItemUnlockedState::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_GetSteamItemUnlockedState, K2Node_DynamicCast_AsBP_Base_Controller) == 0x000038, "Member 'W_EquipEntry_C_GetSteamItemUnlockedState::K2Node_DynamicCast_AsBP_Base_Controller' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_GetSteamItemUnlockedState, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'W_EquipEntry_C_GetSteamItemUnlockedState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_GetSteamItemUnlockedState, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'W_EquipEntry_C_GetSteamItemUnlockedState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_GetSteamItemUnlockedState, CallFunc_Array_Get_Item) == 0x000048, "Member 'W_EquipEntry_C_GetSteamItemUnlockedState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_GetSteamItemUnlockedState, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'W_EquipEntry_C_GetSteamItemUnlockedState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_GetSteamItemUnlockedState, CallFunc_BooleanAND_ReturnValue) == 0x000069, "Member 'W_EquipEntry_C_GetSteamItemUnlockedState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_GetSteamItemUnlockedState, CallFunc_GetItemDefinitionProperty_Value) == 0x000070, "Member 'W_EquipEntry_C_GetSteamItemUnlockedState::CallFunc_GetItemDefinitionProperty_Value' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_GetSteamItemUnlockedState, CallFunc_GetItemDefinitionProperty_ReturnValue) == 0x000080, "Member 'W_EquipEntry_C_GetSteamItemUnlockedState::CallFunc_GetItemDefinitionProperty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_GetSteamItemUnlockedState, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000081, "Member 'W_EquipEntry_C_GetSteamItemUnlockedState::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function W_EquipEntry.W_EquipEntry_C.ShowRequiredAmountNumber
// 0x0008 (0x0008 - 0x0000)
struct W_EquipEntry_C_ShowRequiredAmountNumber final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CurrencyTypes                               Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_EquipEntry_C_ShowRequiredAmountNumber) == 0x000001, "Wrong alignment on W_EquipEntry_C_ShowRequiredAmountNumber");
static_assert(sizeof(W_EquipEntry_C_ShowRequiredAmountNumber) == 0x000008, "Wrong size on W_EquipEntry_C_ShowRequiredAmountNumber");
static_assert(offsetof(W_EquipEntry_C_ShowRequiredAmountNumber, ReturnValue) == 0x000000, "Member 'W_EquipEntry_C_ShowRequiredAmountNumber::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowRequiredAmountNumber, Temp_byte_Variable) == 0x000001, "Member 'W_EquipEntry_C_ShowRequiredAmountNumber::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowRequiredAmountNumber, Temp_byte_Variable_1) == 0x000002, "Member 'W_EquipEntry_C_ShowRequiredAmountNumber::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowRequiredAmountNumber, Temp_byte_Variable_2) == 0x000003, "Member 'W_EquipEntry_C_ShowRequiredAmountNumber::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowRequiredAmountNumber, Temp_byte_Variable_3) == 0x000004, "Member 'W_EquipEntry_C_ShowRequiredAmountNumber::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowRequiredAmountNumber, Temp_byte_Variable_4) == 0x000005, "Member 'W_EquipEntry_C_ShowRequiredAmountNumber::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowRequiredAmountNumber, Temp_byte_Variable_5) == 0x000006, "Member 'W_EquipEntry_C_ShowRequiredAmountNumber::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowRequiredAmountNumber, K2Node_Select_Default) == 0x000007, "Member 'W_EquipEntry_C_ShowRequiredAmountNumber::K2Node_Select_Default' has a wrong offset!");

// Function W_EquipEntry.W_EquipEntry_C.SetItemTypeIcon
// 0x0148 (0x0148 - 0x0000)
struct W_EquipEntry_C_SetItemTypeIcon final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x0088)(Parm, OutParm, ReturnParm)
	E_CurrencyTypes                               Temp_byte_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default;                             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue;         // 0x00C0(0x0088)()
};
static_assert(alignof(W_EquipEntry_C_SetItemTypeIcon) == 0x000008, "Wrong alignment on W_EquipEntry_C_SetItemTypeIcon");
static_assert(sizeof(W_EquipEntry_C_SetItemTypeIcon) == 0x000148, "Wrong size on W_EquipEntry_C_SetItemTypeIcon");
static_assert(offsetof(W_EquipEntry_C_SetItemTypeIcon, ReturnValue) == 0x000000, "Member 'W_EquipEntry_C_SetItemTypeIcon::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetItemTypeIcon, Temp_byte_Variable) == 0x000088, "Member 'W_EquipEntry_C_SetItemTypeIcon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetItemTypeIcon, Temp_object_Variable) == 0x000090, "Member 'W_EquipEntry_C_SetItemTypeIcon::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetItemTypeIcon, Temp_object_Variable_1) == 0x000098, "Member 'W_EquipEntry_C_SetItemTypeIcon::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetItemTypeIcon, Temp_object_Variable_2) == 0x0000A0, "Member 'W_EquipEntry_C_SetItemTypeIcon::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetItemTypeIcon, Temp_object_Variable_3) == 0x0000A8, "Member 'W_EquipEntry_C_SetItemTypeIcon::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetItemTypeIcon, Temp_object_Variable_4) == 0x0000B0, "Member 'W_EquipEntry_C_SetItemTypeIcon::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetItemTypeIcon, K2Node_Select_Default) == 0x0000B8, "Member 'W_EquipEntry_C_SetItemTypeIcon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetItemTypeIcon, CallFunc_MakeBrushFromTexture_ReturnValue) == 0x0000C0, "Member 'W_EquipEntry_C_SetItemTypeIcon::CallFunc_MakeBrushFromTexture_ReturnValue' has a wrong offset!");

// Function W_EquipEntry.W_EquipEntry_C.SetLegs
// 0x0038 (0x0038 - 0x0000)
struct W_EquipEntry_C_SetLegs final
{
public:
	int32                                         ItemIndex_0;                                       // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 LegsTemp;                                          // 0x0008(0x0010)(Edit, BlueprintVisible)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetClassAndTeamUnitIndex_Index;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_EquipEntry_C_SetLegs) == 0x000008, "Wrong alignment on W_EquipEntry_C_SetLegs");
static_assert(sizeof(W_EquipEntry_C_SetLegs) == 0x000038, "Wrong size on W_EquipEntry_C_SetLegs");
static_assert(offsetof(W_EquipEntry_C_SetLegs, ItemIndex_0) == 0x000000, "Member 'W_EquipEntry_C_SetLegs::ItemIndex_0' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetLegs, LegsTemp) == 0x000008, "Member 'W_EquipEntry_C_SetLegs::LegsTemp' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetLegs, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'W_EquipEntry_C_SetLegs::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetLegs, CallFunc_GetClassAndTeamUnitIndex_Index) == 0x000020, "Member 'W_EquipEntry_C_SetLegs::CallFunc_GetClassAndTeamUnitIndex_Index' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetLegs, K2Node_DynamicCast_AsBP_Game_Instance) == 0x000028, "Member 'W_EquipEntry_C_SetLegs::K2Node_DynamicCast_AsBP_Game_Instance' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetLegs, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'W_EquipEntry_C_SetLegs::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_EquipEntry.W_EquipEntry_C.SetTattoo
// 0x0038 (0x0038 - 0x0000)
struct W_EquipEntry_C_SetTattoo final
{
public:
	int32                                         ItemIndex_0;                                       // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 TattooTemp;                                        // 0x0008(0x0010)(Edit, BlueprintVisible)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetClassAndTeamUnitIndex_Index;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_EquipEntry_C_SetTattoo) == 0x000008, "Wrong alignment on W_EquipEntry_C_SetTattoo");
static_assert(sizeof(W_EquipEntry_C_SetTattoo) == 0x000038, "Wrong size on W_EquipEntry_C_SetTattoo");
static_assert(offsetof(W_EquipEntry_C_SetTattoo, ItemIndex_0) == 0x000000, "Member 'W_EquipEntry_C_SetTattoo::ItemIndex_0' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetTattoo, TattooTemp) == 0x000008, "Member 'W_EquipEntry_C_SetTattoo::TattooTemp' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetTattoo, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'W_EquipEntry_C_SetTattoo::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetTattoo, CallFunc_GetClassAndTeamUnitIndex_Index) == 0x000020, "Member 'W_EquipEntry_C_SetTattoo::CallFunc_GetClassAndTeamUnitIndex_Index' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetTattoo, K2Node_DynamicCast_AsBP_Game_Instance) == 0x000028, "Member 'W_EquipEntry_C_SetTattoo::K2Node_DynamicCast_AsBP_Game_Instance' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetTattoo, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'W_EquipEntry_C_SetTattoo::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_EquipEntry.W_EquipEntry_C.SetFeet
// 0x0038 (0x0038 - 0x0000)
struct W_EquipEntry_C_SetFeet final
{
public:
	int32                                         ItemIndex_0;                                       // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 FeetTemp;                                          // 0x0008(0x0010)(Edit, BlueprintVisible)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetClassAndTeamUnitIndex_Index;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_EquipEntry_C_SetFeet) == 0x000008, "Wrong alignment on W_EquipEntry_C_SetFeet");
static_assert(sizeof(W_EquipEntry_C_SetFeet) == 0x000038, "Wrong size on W_EquipEntry_C_SetFeet");
static_assert(offsetof(W_EquipEntry_C_SetFeet, ItemIndex_0) == 0x000000, "Member 'W_EquipEntry_C_SetFeet::ItemIndex_0' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetFeet, FeetTemp) == 0x000008, "Member 'W_EquipEntry_C_SetFeet::FeetTemp' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetFeet, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'W_EquipEntry_C_SetFeet::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetFeet, CallFunc_GetClassAndTeamUnitIndex_Index) == 0x000020, "Member 'W_EquipEntry_C_SetFeet::CallFunc_GetClassAndTeamUnitIndex_Index' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetFeet, K2Node_DynamicCast_AsBP_Game_Instance) == 0x000028, "Member 'W_EquipEntry_C_SetFeet::K2Node_DynamicCast_AsBP_Game_Instance' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetFeet, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'W_EquipEntry_C_SetFeet::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_EquipEntry.W_EquipEntry_C.SetHands
// 0x0038 (0x0038 - 0x0000)
struct W_EquipEntry_C_SetHands final
{
public:
	int32                                         ItemIndex_0;                                       // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 HandsTemp;                                         // 0x0008(0x0010)(Edit, BlueprintVisible)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetClassAndTeamUnitIndex_Index;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_EquipEntry_C_SetHands) == 0x000008, "Wrong alignment on W_EquipEntry_C_SetHands");
static_assert(sizeof(W_EquipEntry_C_SetHands) == 0x000038, "Wrong size on W_EquipEntry_C_SetHands");
static_assert(offsetof(W_EquipEntry_C_SetHands, ItemIndex_0) == 0x000000, "Member 'W_EquipEntry_C_SetHands::ItemIndex_0' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetHands, HandsTemp) == 0x000008, "Member 'W_EquipEntry_C_SetHands::HandsTemp' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetHands, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'W_EquipEntry_C_SetHands::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetHands, CallFunc_GetClassAndTeamUnitIndex_Index) == 0x000020, "Member 'W_EquipEntry_C_SetHands::CallFunc_GetClassAndTeamUnitIndex_Index' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetHands, K2Node_DynamicCast_AsBP_Game_Instance) == 0x000028, "Member 'W_EquipEntry_C_SetHands::K2Node_DynamicCast_AsBP_Game_Instance' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetHands, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'W_EquipEntry_C_SetHands::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_EquipEntry.W_EquipEntry_C.SetBack
// 0x0038 (0x0038 - 0x0000)
struct W_EquipEntry_C_SetBack final
{
public:
	int32                                         ItemIndex_0;                                       // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 BackTemp;                                          // 0x0008(0x0010)(Edit, BlueprintVisible)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetClassAndTeamUnitIndex_Index;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_EquipEntry_C_SetBack) == 0x000008, "Wrong alignment on W_EquipEntry_C_SetBack");
static_assert(sizeof(W_EquipEntry_C_SetBack) == 0x000038, "Wrong size on W_EquipEntry_C_SetBack");
static_assert(offsetof(W_EquipEntry_C_SetBack, ItemIndex_0) == 0x000000, "Member 'W_EquipEntry_C_SetBack::ItemIndex_0' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetBack, BackTemp) == 0x000008, "Member 'W_EquipEntry_C_SetBack::BackTemp' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetBack, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'W_EquipEntry_C_SetBack::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetBack, CallFunc_GetClassAndTeamUnitIndex_Index) == 0x000020, "Member 'W_EquipEntry_C_SetBack::CallFunc_GetClassAndTeamUnitIndex_Index' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetBack, K2Node_DynamicCast_AsBP_Game_Instance) == 0x000028, "Member 'W_EquipEntry_C_SetBack::K2Node_DynamicCast_AsBP_Game_Instance' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_SetBack, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'W_EquipEntry_C_SetBack::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_EquipEntry.W_EquipEntry_C.ShowItemRequirementInfo
// 0x0005 (0x0005 - 0x0000)
struct W_EquipEntry_C_ShowItemRequirementInfo final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_EquipEntry_C_ShowItemRequirementInfo) == 0x000001, "Wrong alignment on W_EquipEntry_C_ShowItemRequirementInfo");
static_assert(sizeof(W_EquipEntry_C_ShowItemRequirementInfo) == 0x000005, "Wrong size on W_EquipEntry_C_ShowItemRequirementInfo");
static_assert(offsetof(W_EquipEntry_C_ShowItemRequirementInfo, ReturnValue) == 0x000000, "Member 'W_EquipEntry_C_ShowItemRequirementInfo::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowItemRequirementInfo, Temp_bool_Variable) == 0x000001, "Member 'W_EquipEntry_C_ShowItemRequirementInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowItemRequirementInfo, Temp_byte_Variable) == 0x000002, "Member 'W_EquipEntry_C_ShowItemRequirementInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowItemRequirementInfo, Temp_byte_Variable_1) == 0x000003, "Member 'W_EquipEntry_C_ShowItemRequirementInfo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_ShowItemRequirementInfo, K2Node_Select_Default) == 0x000004, "Member 'W_EquipEntry_C_ShowItemRequirementInfo::K2Node_Select_Default' has a wrong offset!");

// Function W_EquipEntry.W_EquipEntry_C.GetBgColor
// 0x0044 (0x0044 - 0x0000)
struct W_EquipEntry_C_GetBgColor final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_EquipEntry_C_GetBgColor) == 0x000004, "Wrong alignment on W_EquipEntry_C_GetBgColor");
static_assert(sizeof(W_EquipEntry_C_GetBgColor) == 0x000044, "Wrong size on W_EquipEntry_C_GetBgColor");
static_assert(offsetof(W_EquipEntry_C_GetBgColor, ReturnValue) == 0x000000, "Member 'W_EquipEntry_C_GetBgColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_GetBgColor, Temp_bool_Variable) == 0x000010, "Member 'W_EquipEntry_C_GetBgColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_GetBgColor, Temp_struct_Variable) == 0x000014, "Member 'W_EquipEntry_C_GetBgColor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_GetBgColor, Temp_struct_Variable_1) == 0x000024, "Member 'W_EquipEntry_C_GetBgColor::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_EquipEntry_C_GetBgColor, K2Node_Select_Default) == 0x000034, "Member 'W_EquipEntry_C_GetBgColor::K2Node_Select_Default' has a wrong offset!");

}

