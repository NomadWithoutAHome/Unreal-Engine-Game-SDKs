#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_TextBox

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_TextBox.W_TextBox_C
// 0x0068 (0x02C8 - 0x0260)
class UW_TextBox_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UEditableTextBox*                       EditableTextBox_74;                                // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   HintText;                                          // 0x0270(0x0018)(Edit, BlueprintVisible)
	class FText                                   PreText;                                           // 0x0288(0x0018)(Edit, BlueprintVisible)
	TMulticastInlineDelegate<void(class FText Text)> OnTextChanged;                                  // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class FText Text)> OnTextCommited;                                 // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsPassword;                                        // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_W_TextBox(int32 EntryPoint);
	void BndEvt__W_TextBox_EditableTextBox_74_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__W_TextBox_EditableTextBox_74_K2Node_ComponentBoundEvent_1_OnEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text);
	void Reload();
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_TextBox_C">();
	}
	static class UW_TextBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_TextBox_C>();
	}
};
static_assert(alignof(UW_TextBox_C) == 0x000008, "Wrong alignment on UW_TextBox_C");
static_assert(sizeof(UW_TextBox_C) == 0x0002C8, "Wrong size on UW_TextBox_C");
static_assert(offsetof(UW_TextBox_C, UberGraphFrame) == 0x000260, "Member 'UW_TextBox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_TextBox_C, EditableTextBox_74) == 0x000268, "Member 'UW_TextBox_C::EditableTextBox_74' has a wrong offset!");
static_assert(offsetof(UW_TextBox_C, HintText) == 0x000270, "Member 'UW_TextBox_C::HintText' has a wrong offset!");
static_assert(offsetof(UW_TextBox_C, PreText) == 0x000288, "Member 'UW_TextBox_C::PreText' has a wrong offset!");
static_assert(offsetof(UW_TextBox_C, OnTextChanged) == 0x0002A0, "Member 'UW_TextBox_C::OnTextChanged' has a wrong offset!");
static_assert(offsetof(UW_TextBox_C, OnTextCommited) == 0x0002B0, "Member 'UW_TextBox_C::OnTextCommited' has a wrong offset!");
static_assert(offsetof(UW_TextBox_C, IsPassword) == 0x0002C0, "Member 'UW_TextBox_C::IsPassword' has a wrong offset!");

}

