#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Rocket_0

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_Flag_classes.hpp"
#include "E_Teams_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Rocket.BP_Rocket_C
// 0x0058 (0x0320 - 0x02C8)
class BP_Rocket_0::ABP_Rocket_C final : public ABP_Flag_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Rocket_C;                        // 0x02C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCapsuleComponent*                      Capsule;                                           // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SpotlightBeam4;                                    // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SpotlightBeam3;                                    // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SpotlightBeam2;                                    // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SpotlightBeam1;                                    // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   V2;                                                // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight3;                                        // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight2;                                        // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight1;                                        // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Rocket(int32 EntryPoint);
	void ControllingTeamChanged();
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BlueprintGeneratedClass BP_Rocket.BP_Rocket_C", true, "BP_Rocket_C">();
	}
	static class BP_Rocket_0::ABP_Rocket_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<BP_Rocket_0::ABP_Rocket_C>();
	}
};
static_assert(alignof(BP_Rocket_0::ABP_Rocket_C) == 0x000008, "Wrong alignment on BP_Rocket_0::ABP_Rocket_C");
static_assert(sizeof(BP_Rocket_0::ABP_Rocket_C) == 0x000320, "Wrong size on BP_Rocket_0::ABP_Rocket_C");
static_assert(offsetof(BP_Rocket_0::ABP_Rocket_C, UberGraphFrame_BP_Rocket_C) == 0x0002C8, "Member 'BP_Rocket_0::ABP_Rocket_C::UberGraphFrame_BP_Rocket_C' has a wrong offset!");
static_assert(offsetof(BP_Rocket_0::ABP_Rocket_C, Capsule) == 0x0002D0, "Member 'BP_Rocket_0::ABP_Rocket_C::Capsule' has a wrong offset!");
static_assert(offsetof(BP_Rocket_0::ABP_Rocket_C, SpotlightBeam4) == 0x0002D8, "Member 'BP_Rocket_0::ABP_Rocket_C::SpotlightBeam4' has a wrong offset!");
static_assert(offsetof(BP_Rocket_0::ABP_Rocket_C, SpotlightBeam3) == 0x0002E0, "Member 'BP_Rocket_0::ABP_Rocket_C::SpotlightBeam3' has a wrong offset!");
static_assert(offsetof(BP_Rocket_0::ABP_Rocket_C, SpotlightBeam2) == 0x0002E8, "Member 'BP_Rocket_0::ABP_Rocket_C::SpotlightBeam2' has a wrong offset!");
static_assert(offsetof(BP_Rocket_0::ABP_Rocket_C, SpotlightBeam1) == 0x0002F0, "Member 'BP_Rocket_0::ABP_Rocket_C::SpotlightBeam1' has a wrong offset!");
static_assert(offsetof(BP_Rocket_0::ABP_Rocket_C, V2) == 0x0002F8, "Member 'BP_Rocket_0::ABP_Rocket_C::V2' has a wrong offset!");
static_assert(offsetof(BP_Rocket_0::ABP_Rocket_C, SpotLight3) == 0x000300, "Member 'BP_Rocket_0::ABP_Rocket_C::SpotLight3' has a wrong offset!");
static_assert(offsetof(BP_Rocket_0::ABP_Rocket_C, SpotLight2) == 0x000308, "Member 'BP_Rocket_0::ABP_Rocket_C::SpotLight2' has a wrong offset!");
static_assert(offsetof(BP_Rocket_0::ABP_Rocket_C, SpotLight1) == 0x000310, "Member 'BP_Rocket_0::ABP_Rocket_C::SpotLight1' has a wrong offset!");
static_assert(offsetof(BP_Rocket_0::ABP_Rocket_C, SpotLight) == 0x000318, "Member 'BP_Rocket_0::ABP_Rocket_C::SpotLight' has a wrong offset!");

}

