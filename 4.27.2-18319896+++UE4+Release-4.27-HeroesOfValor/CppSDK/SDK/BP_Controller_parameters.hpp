#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Controller

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_CombatZoneTypes_structs.hpp"
#include "ST_PlayerStats_structs.hpp"
#include "InputCore_structs.hpp"
#include "E_Menus_structs.hpp"
#include "ST_SpawnInfo_structs.hpp"
#include "E_Teams_structs.hpp"
#include "E_DamageTypes_structs.hpp"
#include "E_VoteOptions_structs.hpp"
#include "ST_Options_structs.hpp"


namespace SDK::Params
{

// Function BP_Controller.BP_Controller_C.ExecuteUbergraph_BP_Controller
// 0x0AA0 (0x0AA0 - 0x0000)
struct BP_Controller_C_ExecuteUbergraph_BP_Controller final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_VehicleBase_C*                      K2Node_CustomEvent_Vehicle_1;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnDataComponent_C*                   K2Node_CustomEvent_PawnData;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Teleport;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_TeleportLocation;               // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_VehicleBase_C*                      K2Node_CustomEvent_Vehicle;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnDataComponent_C*                   CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerControlled_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Teams                                       K2Node_CustomEvent_Team_1;                         // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0058(0x0018)(HasGetValueTypeHash)
	struct FST_SpawnInfo                          K2Node_CustomEvent_SpawnInfo;                      // 0x0070(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_VehicleBase_C*                      K2Node_CustomEvent_VehicleToEnterAfterSpawn_Optional_; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State;              // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x2];                                       // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State_1;            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0xF];                                      // 0x0121(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0130(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_173[0x5];                                      // 0x0173(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Target_1;                       // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_DamageAmount_2;                 // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_DamageHitLocation_1;            // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_DamageDirection_1;              // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_CustomEvent_AttackerPawn_1;                 // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_CustomEvent_Debuff_1;                       // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DamageTypes                                 K2Node_CustomEvent_DamageType_2;                   // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_PlayerIndex_1;                  // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsCriticalHit_1;                // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IgnoreTeamProtection_1;         // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BA[0x6];                                      // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_SpecialKillMessage_1;           // 0x01C0(0x0018)()
	bool                                          K2Node_CustomEvent_ShouldBreakInvisibility_1;      // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsPiercingDamage_1;             // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DA[0x6];                                      // 0x01DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Target;                         // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_DamageAmount_1;                 // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_DamageHitLocation;              // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_DamageDirection;                // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_CustomEvent_AttackerPawn;                   // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_CustomEvent_Debuff;                         // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DamageTypes                                 K2Node_CustomEvent_DamageType_1;                   // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_PlayerIndex;                    // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsCriticalHit;                  // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IgnoreTeamProtection;           // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_222[0x6];                                      // 0x0222(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_SpecialKillMessage;             // 0x0228(0x0018)()
	bool                                          K2Node_CustomEvent_ShouldBreakInvisibility;        // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsPiercingDamage;               // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_242[0x6];                                      // 0x0242(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IApplyDamage_C>        K2Node_DynamicCast_AsApply_Damage;                 // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_HitLocation;                    // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_DamageAmount;                   // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_CriticalHit_;                   // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26D[0x3];                                      // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_HitActor;                       // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsLow;                          // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_DamageTypes                                 K2Node_CustomEvent_DamageType;                     // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27A[0x6];                                      // 0x027A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable;                              // 0x0280(0x0018)(HasGetValueTypeHash)
	TArray<class ABP_MapCam_C*>                   CallFunc_GetAllActorsOfClass_OutActors;            // 0x0298(0x0010)(ReferenceParm)
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x02A8(0x0018)(HasGetValueTypeHash)
	class ABP_MapCam_C*                           CallFunc_Array_Get_Item;                           // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x02D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x02E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_4;                        // 0x02F0(0x0018)(HasGetValueTypeHash)
	uint8                                         Pad_308[0x8];                                      // 0x0308(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0310(0x0030)(IsPlainOldData, NoDestructor)
	struct FKey                                   K2Node_InputKeyEvent_Key_5;                        // 0x0340(0x0018)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_FreeCam_C*                          CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MapCam_C*                           K2Node_DynamicCast_AsBP_Map_Cam;                   // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x038A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38B[0x5];                                      // 0x038B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Loading_Text;                   // 0x0390(0x0018)()
	class FText                                   K2Node_CustomEvent_MapName;                        // 0x03A8(0x0018)()
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Teams                                       K2Node_CustomEvent_Team;                           // 0x03D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x03D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x03D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D4[0x4];                                      // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_SwitchSpawnMenu_menuWidget;               // 0x03D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_SwitchSpawnMenu_menuWidget_1;             // 0x03E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_SpawnSelect_C*                       K2Node_DynamicCast_AsW_Spawn_Select;               // 0x03E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_MapCam_C*>                   CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x03F8(0x0010)(ReferenceParm)
	class ABP_MapCam_C*                           CallFunc_Array_Get_Item_1;                         // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_2;                 // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SpectatorCam_C*                     K2Node_DynamicCast_AsBP_Spectator_Cam;             // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_FreeCam_C*                          K2Node_DynamicCast_AsBP_Free_Cam;                  // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_439[0x7];                                      // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_VehicleBase_C*                      K2Node_DynamicCast_AsBP_Vehicle_Base;              // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0459(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45A[0x6];                                      // 0x045A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_3;                        // 0x0460(0x0018)(HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base_1;         // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_3;                 // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_4;                 // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfPawnIsAlive_Alive;                 // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A1[0x7];                                      // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x04A8(0x0018)(HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_Message_1;                      // 0x04C0(0x0018)()
	class FText                                   K2Node_CustomEvent_Username;                       // 0x04D8(0x0018)()
	class FText                                   K2Node_CustomEvent_Message;                        // 0x04F0(0x0018)()
	bool                                          K2Node_CustomEvent_SpecialMessage;                 // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_509[0x7];                                      // 0x0509(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base_2;         // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_521[0x7];                                      // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State_2;            // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_531[0x7];                                      // 0x0531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0538(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0548(0x0018)()
	bool                                          CallFunc_CheckForChatCommand_CommandFound_;        // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_561[0x7];                                      // 0x0561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_CheckForChatCommand_ResponseMessage;      // 0x0568(0x0018)()
	bool                                          CallFunc_CheckForChatCommand_Broadcast;            // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_581[0x7];                                      // 0x0581(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_HUD_C*                               CallFunc_Create_ReturnValue;                       // 0x0588(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0591(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0592(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0593(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_594[0x4];                                      // 0x0594(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ChatOverlay_C*                       CallFunc_Create_ReturnValue_1;                     // 0x0598(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State_3;            // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B9[0x7];                                      // 0x05B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance;             // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C9[0x7];                                      // 0x05C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_6;                        // 0x05D0(0x0018)(HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E9[0x7];                                      // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       CallFunc_GetComponentByClass_ReturnValue_2;        // 0x05F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x05F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_604[0x4];                                      // 0x0604(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_629[0x3];                                      // 0x0629(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x062C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_634[0x4];                                      // 0x0634(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ScoreBoard_C*                        CallFunc_Create_ReturnValue_2;                     // 0x0638(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_641[0x3];                                      // 0x0641(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0644(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        K2Node_CustomEvent_Character;                      // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_LaunchVelocity;                 // 0x0650(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65C[0x4];                                      // 0x065C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_CustomEvent_LaunchInflicter;                // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x0668(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_669[0x7];                                      // 0x0669(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_3;               // 0x0670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue_1;  // 0x0678(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_679[0x7];                                      // 0x0679(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base_3;         // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_689[0x7];                                      // 0x0689(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Map;                            // 0x0690(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_4;               // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base_4;         // 0x06A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x06B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B1[0x7];                                      // 0x06B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue_1;              // 0x06B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UW_LoadingScreen_C*                     CallFunc_Create_ReturnValue_3;                     // 0x06C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x06D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DC[0x4];                                      // 0x06DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_SpawnSelect_C*                       K2Node_DynamicCast_AsW_Spawn_Select_1;             // 0x06E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x06E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x06E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EA[0x6];                                      // 0x06EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_5;               // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base_5;         // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x0700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_701[0x7];                                      // 0x0701(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State_4;            // 0x0708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x0710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_711[0x7];                                      // 0x0711(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue_2;              // 0x0718(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0728(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_729[0x7];                                      // 0x0729(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_6;               // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base_6;         // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x0740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_741[0x7];                                      // 0x0741(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State_5;            // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_21;                    // 0x0750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0751(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_752[0x6];                                      // 0x0752(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_VehicleSeat_C*                      K2Node_CustomEvent_VehicleSeat;                    // 0x0758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_IngameMenu_C*                        CallFunc_Create_ReturnValue_4;                     // 0x0760(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0768(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_769[0x3];                                      // 0x0769(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x076C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_7;                        // 0x0778(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_8;                        // 0x0790(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A9[0x7];                                      // 0x07A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        K2Node_CustomEvent_PlayerToSpectate;               // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_4;               // 0x07B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue_2;  // 0x07B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_4;                     // 0x07BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7BB[0x5];                                      // 0x07BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x07C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FST_Options                            CallFunc_GetOptions_Options;                       // 0x07F0(0x0070)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x0860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SpectatorCam_C*                     CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x0868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_Options                            CallFunc_GetOptions_Options_1;                     // 0x0870(0x0070)(HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x08E0(0x0010)(ZeroConstructor, NoDestructor)
	struct FST_Options                            CallFunc_GetOptions_Options_2;                     // 0x08F0(0x0070)(HasGetValueTypeHash)
	E_VoteOptions                                 Temp_byte_Variable;                                // 0x0960(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_VoteOptions                                 Temp_byte_Variable_1;                              // 0x0961(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0962(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0963(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_964[0x4];                                      // 0x0964(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0968(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0980(0x0018)(HasGetValueTypeHash)
	uint8                                         Pad_998[0x8];                                      // 0x0998(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_MakeVector4_ReturnValue;                  // 0x09A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               CallFunc_MakeVector4_ReturnValue_1;                // 0x09B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x09C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x09C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x09C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C9[0x7];                                      // 0x09C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x09D0(0x0010)(ConstParm, ReferenceParm)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_5;                 // 0x09E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_6;                 // 0x09E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTruePawnLocation_PawnLocation;         // 0x09F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9FC[0x4];                                      // 0x09FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlaneBase_C*                        K2Node_DynamicCast_AsBP_Plane_Base;                // 0x0A00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_22;                    // 0x0A08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0A09(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x0A0A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A0B[0x5];                                      // 0x0A0B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_WidgetClass;                    // 0x0A10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Create_ReturnValue_5;                     // 0x0A18(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x0A20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A21[0x7];                                      // 0x0A21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_C*                      K2Node_CustomEvent_PlayerToVoteKick;               // 0x0A28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_7;               // 0x0A30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base_7;         // 0x0A38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_23;                    // 0x0A40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0A41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A42[0x2];                                      // 0x0A42(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0A44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0A48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Yes;                            // 0x0A4C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_VoteOptions                                 K2Node_Select_Default;                             // 0x0A4D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4E[0x2];                                      // 0x0A4E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_8;               // 0x0A50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0A58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5C[0x4];                                      // 0x0A5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base_8;         // 0x0A60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_24;                    // 0x0A68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A69[0x7];                                      // 0x0A69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_9;               // 0x0A70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base_9;         // 0x0A78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_25;                    // 0x0A80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CombatZoneTypes                             CallFunc_GetCurrentZoneType_ZoneType;              // 0x0A81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A82[0x2];                                      // 0x0A82(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x0A84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0A88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A89[0x3];                                      // 0x0A89(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x0A8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0A90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0A91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0A92(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0A93(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Controller_C_ExecuteUbergraph_BP_Controller) == 0x000010, "Wrong alignment on BP_Controller_C_ExecuteUbergraph_BP_Controller");
static_assert(sizeof(BP_Controller_C_ExecuteUbergraph_BP_Controller) == 0x000AA0, "Wrong size on BP_Controller_C_ExecuteUbergraph_BP_Controller");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, EntryPoint) == 0x000000, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_Vehicle_1) == 0x000008, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_Vehicle_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_PawnData) == 0x000010, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_PawnData' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_Teleport) == 0x000018, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_Teleport' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_TeleportLocation) == 0x00001C, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_TeleportLocation' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_Vehicle) == 0x000028, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_Vehicle' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000038, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000048, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_IsPlayerControlled_ReturnValue) == 0x000050, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_IsPlayerControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_Team_1) == 0x000051, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_Team_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_InputActionEvent_Key) == 0x000058, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_SpawnInfo) == 0x000070, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_SpawnInfo' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_VehicleToEnterAfterSpawn_Optional_) == 0x0000D0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_VehicleToEnterAfterSpawn_Optional_' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_AsBP_Player_State) == 0x0000D8, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_AsBP_Player_State' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_IsValid_ReturnValue) == 0x0000E1, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_BreakTransform_Location) == 0x0000E4, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_BreakTransform_Rotation) == 0x0000F0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_BreakTransform_Scale) == 0x0000FC, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_AsBP_Player_State_1) == 0x000108, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_AsBP_Player_State_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_bSuccess_1) == 0x000110, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_Add_VectorVector_ReturnValue) == 0x000114, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_IsLocalController_ReturnValue) == 0x000120, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_MakeTransform_ReturnValue) == 0x000130, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000160, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_FinishSpawningActor_ReturnValue) == 0x000168, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_IsValid_ReturnValue_1) == 0x000170, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_IsValid_ReturnValue_2) == 0x000171, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, Temp_bool_IsClosed_Variable) == 0x000172, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_Target_1) == 0x000178, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_Target_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_DamageAmount_2) == 0x000180, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_DamageAmount_2' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_DamageHitLocation_1) == 0x000184, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_DamageHitLocation_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_DamageDirection_1) == 0x000190, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_DamageDirection_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_AttackerPawn_1) == 0x0001A0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_AttackerPawn_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_Debuff_1) == 0x0001A8, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_Debuff_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_DamageType_2) == 0x0001B0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_DamageType_2' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_PlayerIndex_1) == 0x0001B4, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_PlayerIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_IsCriticalHit_1) == 0x0001B8, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_IsCriticalHit_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_IgnoreTeamProtection_1) == 0x0001B9, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_IgnoreTeamProtection_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_SpecialKillMessage_1) == 0x0001C0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_SpecialKillMessage_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_ShouldBreakInvisibility_1) == 0x0001D8, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_ShouldBreakInvisibility_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_IsPiercingDamage_1) == 0x0001D9, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_IsPiercingDamage_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_Target) == 0x0001E0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_DamageAmount_1) == 0x0001E8, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_DamageAmount_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_DamageHitLocation) == 0x0001EC, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_DamageHitLocation' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_DamageDirection) == 0x0001F8, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_DamageDirection' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_AttackerPawn) == 0x000208, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_AttackerPawn' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_Debuff) == 0x000210, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_Debuff' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_DamageType_1) == 0x000218, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_DamageType_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_PlayerIndex) == 0x00021C, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_IsCriticalHit) == 0x000220, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_IsCriticalHit' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_IgnoreTeamProtection) == 0x000221, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_IgnoreTeamProtection' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_SpecialKillMessage) == 0x000228, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_SpecialKillMessage' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_ShouldBreakInvisibility) == 0x000240, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_ShouldBreakInvisibility' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_IsPiercingDamage) == 0x000241, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_IsPiercingDamage' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_AsApply_Damage) == 0x000248, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_AsApply_Damage' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_bSuccess_2) == 0x000258, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_HitLocation) == 0x00025C, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_DamageAmount) == 0x000268, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_DamageAmount' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_CriticalHit_) == 0x00026C, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_CriticalHit_' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_HitActor) == 0x000270, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_IsLow) == 0x000278, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_IsLow' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_DamageType) == 0x000279, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, Temp_struct_Variable) == 0x000280, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_GetAllActorsOfClass_OutActors) == 0x000298, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_InputActionEvent_Key_1) == 0x0002A8, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_Array_Get_Item) == 0x0002C0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x0002C8, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0002D0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_GetCameraRotation_ReturnValue) == 0x0002D8, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_GetCameraLocation_ReturnValue) == 0x0002E4, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_InputKeyEvent_Key_4) == 0x0002F0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_InputKeyEvent_Key_4' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_MakeTransform_ReturnValue_1) == 0x000310, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_InputKeyEvent_Key_5) == 0x000340, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_InputKeyEvent_Key_5' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000358, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000360, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_Greater_IntInt_ReturnValue) == 0x000368, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_K2_GetPawn_ReturnValue) == 0x000370, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000378, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_AsBP_Map_Cam) == 0x000380, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_AsBP_Map_Cam' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_bSuccess_3) == 0x000388, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_IsValid_ReturnValue_3) == 0x000389, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, Temp_bool_IsClosed_Variable_1) == 0x00038A, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_Loading_Text) == 0x000390, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_Loading_Text' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_MapName) == 0x0003A8, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_MapName' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_GetGameState_ReturnValue) == 0x0003C0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x0003C8, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_bSuccess_4) == 0x0003D0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_Team) == 0x0003D1, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_Team' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_HasAuthority_ReturnValue) == 0x0003D2, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_IsValid_ReturnValue_4) == 0x0003D3, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_SwitchSpawnMenu_menuWidget) == 0x0003D8, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_SwitchSpawnMenu_menuWidget' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_SwitchSpawnMenu_menuWidget_1) == 0x0003E0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_SwitchSpawnMenu_menuWidget_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_AsW_Spawn_Select) == 0x0003E8, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_AsW_Spawn_Select' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_bSuccess_5) == 0x0003F0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x0003F8, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_Array_Get_Item_1) == 0x000408, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_Event_DeltaSeconds) == 0x000410, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_K2_GetPawn_ReturnValue_2) == 0x000418, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_K2_GetPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_AsBP_Spectator_Cam) == 0x000420, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_AsBP_Spectator_Cam' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_bSuccess_6) == 0x000428, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_AsBP_Free_Cam) == 0x000430, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_AsBP_Free_Cam' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_bSuccess_7) == 0x000438, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_AsBP_Vehicle_Base) == 0x000440, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_AsBP_Vehicle_Base' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_bSuccess_8) == 0x000448, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_AsBP_Character) == 0x000450, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_bSuccess_9) == 0x000458, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, Temp_bool_Has_Been_Initd_Variable_1) == 0x000459, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_InputKeyEvent_Key_3) == 0x000460, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_InputKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_GetGameState_ReturnValue_1) == 0x000478, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_AsBP_Game_State_Base_1) == 0x000480, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_AsBP_Game_State_Base_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_bSuccess_10) == 0x000488, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_K2_GetPawn_ReturnValue_3) == 0x000490, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_K2_GetPawn_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_K2_GetPawn_ReturnValue_4) == 0x000498, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_K2_GetPawn_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_CheckIfPawnIsAlive_Alive) == 0x0004A0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_CheckIfPawnIsAlive_Alive' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_InputKeyEvent_Key_2) == 0x0004A8, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_Message_1) == 0x0004C0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_Message_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_Username) == 0x0004D8, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_Username' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_Message) == 0x0004F0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_Message' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_SpecialMessage) == 0x000508, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_SpecialMessage' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_GetGameState_ReturnValue_2) == 0x000510, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_AsBP_Game_State_Base_2) == 0x000518, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_AsBP_Game_State_Base_2' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_bSuccess_11) == 0x000520, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_AsBP_Player_State_2) == 0x000528, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_AsBP_Player_State_2' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_bSuccess_12) == 0x000530, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_GetPlayerName_ReturnValue) == 0x000538, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_Conv_StringToText_ReturnValue) == 0x000548, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_CheckForChatCommand_CommandFound_) == 0x000560, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_CheckForChatCommand_CommandFound_' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_CheckForChatCommand_ResponseMessage) == 0x000568, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_CheckForChatCommand_ResponseMessage' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_CheckForChatCommand_Broadcast) == 0x000580, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_CheckForChatCommand_Broadcast' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_Create_ReturnValue) == 0x000588, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, Temp_bool_Has_Been_Initd_Variable_2) == 0x000590, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_IsValid_ReturnValue_5) == 0x000591, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_IsValid_ReturnValue_6) == 0x000592, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_IsValid_ReturnValue_7) == 0x000593, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_Create_ReturnValue_1) == 0x000598, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_IsValid_ReturnValue_8) == 0x0005A0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_GetGameInstance_ReturnValue) == 0x0005A8, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_AsBP_Player_State_3) == 0x0005B0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_AsBP_Player_State_3' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_bSuccess_13) == 0x0005B8, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_AsBP_Game_Instance) == 0x0005C0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_AsBP_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_bSuccess_14) == 0x0005C8, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_InputKeyEvent_Key_6) == 0x0005D0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_InputKeyEvent_Key_6' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, Temp_bool_IsClosed_Variable_2) == 0x0005E8, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_GetComponentByClass_ReturnValue_2) == 0x0005F0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x0005F8, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_GetPlayerController_ReturnValue) == 0x000608, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_GetViewportSize_ReturnValue) == 0x000610, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000618, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_BreakVector2D_X) == 0x000620, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_BreakVector2D_Y) == 0x000624, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, Temp_bool_Has_Been_Initd_Variable_3) == 0x000628, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_FTrunc_ReturnValue) == 0x00062C, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_FTrunc_ReturnValue_1) == 0x000630, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_Create_ReturnValue_2) == 0x000638, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_IsValid_ReturnValue_9) == 0x000640, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_Add_IntInt_ReturnValue) == 0x000644, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_Character) == 0x000648, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_LaunchVelocity) == 0x000650, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_LaunchVelocity' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_LaunchInflicter) == 0x000660, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_LaunchInflicter' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, Temp_bool_IsClosed_Variable_3) == 0x000668, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_GetGameState_ReturnValue_3) == 0x000670, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_GetGameState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_IsPackagedForDistribution_ReturnValue_1) == 0x000678, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_IsPackagedForDistribution_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_AsBP_Game_State_Base_3) == 0x000680, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_AsBP_Game_State_Base_3' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_bSuccess_15) == 0x000688, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_Map) == 0x000690, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_Map' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_GetGameState_ReturnValue_4) == 0x0006A0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_GetGameState_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_AsBP_Game_State_Base_4) == 0x0006A8, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_AsBP_Game_State_Base_4' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_bSuccess_16) == 0x0006B0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_GetPlayerName_ReturnValue_1) == 0x0006B8, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_GetPlayerName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_Create_ReturnValue_3) == 0x0006C8, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_Create_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0006D0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_AsW_Spawn_Select_1) == 0x0006E0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_AsW_Spawn_Select_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_bSuccess_17) == 0x0006E8, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_IsValid_ReturnValue_10) == 0x0006E9, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_GetGameState_ReturnValue_5) == 0x0006F0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_GetGameState_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_AsBP_Game_State_Base_5) == 0x0006F8, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_AsBP_Game_State_Base_5' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_bSuccess_18) == 0x000700, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_AsBP_Player_State_4) == 0x000708, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_AsBP_Player_State_4' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_bSuccess_19) == 0x000710, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_GetPlayerName_ReturnValue_2) == 0x000718, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_GetPlayerName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_IsEmpty_ReturnValue) == 0x000728, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_GetGameState_ReturnValue_6) == 0x000730, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_GetGameState_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_AsBP_Game_State_Base_6) == 0x000738, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_AsBP_Game_State_Base_6' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_bSuccess_20) == 0x000740, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_AsBP_Player_State_5) == 0x000748, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_AsBP_Player_State_5' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_bSuccess_21) == 0x000750, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_bSuccess_21' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_IsValid_ReturnValue_11) == 0x000751, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_VehicleSeat) == 0x000758, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_VehicleSeat' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_Create_ReturnValue_4) == 0x000760, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_Create_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_IsValid_ReturnValue_12) == 0x000768, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00076C, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_InputKeyEvent_Key_7) == 0x000778, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_InputKeyEvent_Key_7' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_InputKeyEvent_Key_8) == 0x000790, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_InputKeyEvent_Key_8' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_HasAuthority_ReturnValue_1) == 0x0007A8, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_PlayerToSpectate) == 0x0007B0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_PlayerToSpectate' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, Temp_bool_Has_Been_Initd_Variable_4) == 0x0007B8, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::Temp_bool_Has_Been_Initd_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_IsPackagedForDistribution_ReturnValue_2) == 0x0007B9, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_IsPackagedForDistribution_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, Temp_bool_IsClosed_Variable_4) == 0x0007BA, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::Temp_bool_IsClosed_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_MakeTransform_ReturnValue_2) == 0x0007C0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_GetOptions_Options) == 0x0007F0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_GetOptions_Options' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x000860, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x000868, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_GetOptions_Options_1) == 0x000870, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_GetOptions_Options_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CreateDelegate_OutputDelegate) == 0x0008E0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_GetOptions_Options_2) == 0x0008F0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_GetOptions_Options_2' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, Temp_byte_Variable) == 0x000960, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, Temp_byte_Variable_1) == 0x000961, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, Temp_bool_Variable) == 0x000962, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_IsValid_ReturnValue_13) == 0x000963, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_InputKeyEvent_Key) == 0x000968, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_InputKeyEvent_Key_1) == 0x000980, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_MakeVector4_ReturnValue) == 0x0009A0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_MakeVector4_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_MakeVector4_ReturnValue_1) == 0x0009B0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_MakeVector4_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0009C0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_FClamp_ReturnValue) == 0x0009C4, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_IsValid_ReturnValue_14) == 0x0009C8, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_MakeArray_Array) == 0x0009D0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_K2_GetPawn_ReturnValue_5) == 0x0009E0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_K2_GetPawn_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_K2_GetPawn_ReturnValue_6) == 0x0009E8, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_K2_GetPawn_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_GetTruePawnLocation_PawnLocation) == 0x0009F0, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_GetTruePawnLocation_PawnLocation' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_AsBP_Plane_Base) == 0x000A00, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_AsBP_Plane_Base' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_bSuccess_22) == 0x000A08, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_bSuccess_22' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000A09, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_IsValid_ReturnValue_15) == 0x000A0A, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_WidgetClass) == 0x000A10, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_WidgetClass' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_Create_ReturnValue_5) == 0x000A18, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_Create_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_IsValid_ReturnValue_16) == 0x000A20, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_PlayerToVoteKick) == 0x000A28, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_PlayerToVoteKick' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_GetGameState_ReturnValue_7) == 0x000A30, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_GetGameState_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_AsBP_Game_State_Base_7) == 0x000A38, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_AsBP_Game_State_Base_7' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_bSuccess_23) == 0x000A40, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_bSuccess_23' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000A41, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000A44, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_FClamp_ReturnValue_1) == 0x000A48, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_CustomEvent_Yes) == 0x000A4C, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_CustomEvent_Yes' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_Select_Default) == 0x000A4D, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_GetGameState_ReturnValue_8) == 0x000A50, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_GetGameState_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, Temp_float_Variable) == 0x000A58, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_AsBP_Game_State_Base_8) == 0x000A60, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_AsBP_Game_State_Base_8' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_bSuccess_24) == 0x000A68, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_bSuccess_24' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_GetGameState_ReturnValue_9) == 0x000A70, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_GetGameState_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_AsBP_Game_State_Base_9) == 0x000A78, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_AsBP_Game_State_Base_9' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_DynamicCast_bSuccess_25) == 0x000A80, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_DynamicCast_bSuccess_25' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_GetCurrentZoneType_ZoneType) == 0x000A81, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_GetCurrentZoneType_ZoneType' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, Temp_float_Variable_1) == 0x000A84, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, Temp_bool_Variable_1) == 0x000A88, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_Select_Default_1) == 0x000A8C, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000A90, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000A91, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, K2Node_SwitchEnum_CmpSuccess) == 0x000A92, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ExecuteUbergraph_BP_Controller, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000A93, "Member 'BP_Controller_C_ExecuteUbergraph_BP_Controller::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.S_SendVote
// 0x0001 (0x0001 - 0x0000)
struct BP_Controller_C_S_SendVote final
{
public:
	bool                                          Yes;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Controller_C_S_SendVote) == 0x000001, "Wrong alignment on BP_Controller_C_S_SendVote");
static_assert(sizeof(BP_Controller_C_S_SendVote) == 0x000001, "Wrong size on BP_Controller_C_S_SendVote");
static_assert(offsetof(BP_Controller_C_S_SendVote, Yes) == 0x000000, "Member 'BP_Controller_C_S_SendVote::Yes' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.S_StartVoteKick
// 0x0008 (0x0008 - 0x0000)
struct BP_Controller_C_S_StartVoteKick final
{
public:
	class ABP_PlayerState_C*                      PlayerToVoteKick;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Controller_C_S_StartVoteKick) == 0x000008, "Wrong alignment on BP_Controller_C_S_StartVoteKick");
static_assert(sizeof(BP_Controller_C_S_StartVoteKick) == 0x000008, "Wrong size on BP_Controller_C_S_StartVoteKick");
static_assert(offsetof(BP_Controller_C_S_StartVoteKick, PlayerToVoteKick) == 0x000000, "Member 'BP_Controller_C_S_StartVoteKick::PlayerToVoteKick' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.OC_OpenCustomCommandWidget
// 0x0008 (0x0008 - 0x0000)
struct BP_Controller_C_OC_OpenCustomCommandWidget final
{
public:
	class UClass*                                 WidgetClass;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Controller_C_OC_OpenCustomCommandWidget) == 0x000008, "Wrong alignment on BP_Controller_C_OC_OpenCustomCommandWidget");
static_assert(sizeof(BP_Controller_C_OC_OpenCustomCommandWidget) == 0x000008, "Wrong size on BP_Controller_C_OC_OpenCustomCommandWidget");
static_assert(offsetof(BP_Controller_C_OC_OpenCustomCommandWidget, WidgetClass) == 0x000000, "Member 'BP_Controller_C_OC_OpenCustomCommandWidget::WidgetClass' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.S_RegisterAsSpecatorForPlayer
// 0x0008 (0x0008 - 0x0000)
struct BP_Controller_C_S_RegisterAsSpecatorForPlayer final
{
public:
	class ABP_Character_C*                        PlayerToSpectate;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Controller_C_S_RegisterAsSpecatorForPlayer) == 0x000008, "Wrong alignment on BP_Controller_C_S_RegisterAsSpecatorForPlayer");
static_assert(sizeof(BP_Controller_C_S_RegisterAsSpecatorForPlayer) == 0x000008, "Wrong size on BP_Controller_C_S_RegisterAsSpecatorForPlayer");
static_assert(offsetof(BP_Controller_C_S_RegisterAsSpecatorForPlayer, PlayerToSpectate) == 0x000000, "Member 'BP_Controller_C_S_RegisterAsSpecatorForPlayer::PlayerToSpectate' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.S_EnterVehicleSeat
// 0x0008 (0x0008 - 0x0000)
struct BP_Controller_C_S_EnterVehicleSeat final
{
public:
	class ABP_VehicleSeat_C*                      VehicleSeat;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Controller_C_S_EnterVehicleSeat) == 0x000008, "Wrong alignment on BP_Controller_C_S_EnterVehicleSeat");
static_assert(sizeof(BP_Controller_C_S_EnterVehicleSeat) == 0x000008, "Wrong size on BP_Controller_C_S_EnterVehicleSeat");
static_assert(offsetof(BP_Controller_C_S_EnterVehicleSeat, VehicleSeat) == 0x000000, "Member 'BP_Controller_C_S_EnterVehicleSeat::VehicleSeat' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.S_AddMapVote
// 0x0010 (0x0010 - 0x0000)
struct BP_Controller_C_S_AddMapVote final
{
public:
	class FString                                 Map;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Controller_C_S_AddMapVote) == 0x000008, "Wrong alignment on BP_Controller_C_S_AddMapVote");
static_assert(sizeof(BP_Controller_C_S_AddMapVote) == 0x000010, "Wrong size on BP_Controller_C_S_AddMapVote");
static_assert(offsetof(BP_Controller_C_S_AddMapVote, Map) == 0x000000, "Member 'BP_Controller_C_S_AddMapVote::Map' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.S_LaunchOtherCharacter
// 0x0020 (0x0020 - 0x0000)
struct BP_Controller_C_S_LaunchOtherCharacter final
{
public:
	class ABP_Character_C*                        Character_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LaunchVelocity;                                    // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  LaunchInflicter;                                   // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Controller_C_S_LaunchOtherCharacter) == 0x000008, "Wrong alignment on BP_Controller_C_S_LaunchOtherCharacter");
static_assert(sizeof(BP_Controller_C_S_LaunchOtherCharacter) == 0x000020, "Wrong size on BP_Controller_C_S_LaunchOtherCharacter");
static_assert(offsetof(BP_Controller_C_S_LaunchOtherCharacter, Character_0) == 0x000000, "Member 'BP_Controller_C_S_LaunchOtherCharacter::Character_0' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_S_LaunchOtherCharacter, LaunchVelocity) == 0x000008, "Member 'BP_Controller_C_S_LaunchOtherCharacter::LaunchVelocity' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_S_LaunchOtherCharacter, LaunchInflicter) == 0x000018, "Member 'BP_Controller_C_S_LaunchOtherCharacter::LaunchInflicter' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.ReceiveChatMessage
// 0x0038 (0x0038 - 0x0000)
struct BP_Controller_C_ReceiveChatMessage final
{
public:
	class FText                                   UserName;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Message;                                           // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          SpecialMessage;                                    // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Controller_C_ReceiveChatMessage) == 0x000008, "Wrong alignment on BP_Controller_C_ReceiveChatMessage");
static_assert(sizeof(BP_Controller_C_ReceiveChatMessage) == 0x000038, "Wrong size on BP_Controller_C_ReceiveChatMessage");
static_assert(offsetof(BP_Controller_C_ReceiveChatMessage, UserName) == 0x000000, "Member 'BP_Controller_C_ReceiveChatMessage::UserName' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ReceiveChatMessage, Message) == 0x000018, "Member 'BP_Controller_C_ReceiveChatMessage::Message' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ReceiveChatMessage, SpecialMessage) == 0x000030, "Member 'BP_Controller_C_ReceiveChatMessage::SpecialMessage' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.S_SendChatMessage
// 0x0018 (0x0018 - 0x0000)
struct BP_Controller_C_S_SendChatMessage final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_Controller_C_S_SendChatMessage) == 0x000008, "Wrong alignment on BP_Controller_C_S_SendChatMessage");
static_assert(sizeof(BP_Controller_C_S_SendChatMessage) == 0x000018, "Wrong size on BP_Controller_C_S_SendChatMessage");
static_assert(offsetof(BP_Controller_C_S_SendChatMessage, Message) == 0x000000, "Member 'BP_Controller_C_S_SendChatMessage::Message' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Controller_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Controller_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Controller_C_ReceiveTick");
static_assert(sizeof(BP_Controller_C_ReceiveTick) == 0x000004, "Wrong size on BP_Controller_C_ReceiveTick");
static_assert(offsetof(BP_Controller_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Controller_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.OC_SpawnSelect
// 0x0001 (0x0001 - 0x0000)
struct BP_Controller_C_OC_SpawnSelect final
{
public:
	E_Teams                                       Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Controller_C_OC_SpawnSelect) == 0x000001, "Wrong alignment on BP_Controller_C_OC_SpawnSelect");
static_assert(sizeof(BP_Controller_C_OC_SpawnSelect) == 0x000001, "Wrong size on BP_Controller_C_OC_SpawnSelect");
static_assert(offsetof(BP_Controller_C_OC_SpawnSelect, Team) == 0x000000, "Member 'BP_Controller_C_OC_SpawnSelect::Team' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.OC_AddLoadingScreen
// 0x0030 (0x0030 - 0x0000)
struct BP_Controller_C_OC_AddLoadingScreen final
{
public:
	class FText                                   Loading_Text;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   MapName;                                           // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_Controller_C_OC_AddLoadingScreen) == 0x000008, "Wrong alignment on BP_Controller_C_OC_AddLoadingScreen");
static_assert(sizeof(BP_Controller_C_OC_AddLoadingScreen) == 0x000030, "Wrong size on BP_Controller_C_OC_AddLoadingScreen");
static_assert(offsetof(BP_Controller_C_OC_AddLoadingScreen, Loading_Text) == 0x000000, "Member 'BP_Controller_C_OC_AddLoadingScreen::Loading_Text' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_OC_AddLoadingScreen, MapName) == 0x000018, "Member 'BP_Controller_C_OC_AddLoadingScreen::MapName' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.OC_DisplayDamageNumbers
// 0x0028 (0x0028 - 0x0000)
struct BP_Controller_C_OC_DisplayDamageNumbers final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageAmount;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CriticalHit_;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 HitActor;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLow;                                             // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_DamageTypes                                 DamageType;                                        // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Controller_C_OC_DisplayDamageNumbers) == 0x000008, "Wrong alignment on BP_Controller_C_OC_DisplayDamageNumbers");
static_assert(sizeof(BP_Controller_C_OC_DisplayDamageNumbers) == 0x000028, "Wrong size on BP_Controller_C_OC_DisplayDamageNumbers");
static_assert(offsetof(BP_Controller_C_OC_DisplayDamageNumbers, HitLocation) == 0x000000, "Member 'BP_Controller_C_OC_DisplayDamageNumbers::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_OC_DisplayDamageNumbers, DamageAmount) == 0x00000C, "Member 'BP_Controller_C_OC_DisplayDamageNumbers::DamageAmount' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_OC_DisplayDamageNumbers, CriticalHit_) == 0x000010, "Member 'BP_Controller_C_OC_DisplayDamageNumbers::CriticalHit_' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_OC_DisplayDamageNumbers, HitActor) == 0x000018, "Member 'BP_Controller_C_OC_DisplayDamageNumbers::HitActor' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_OC_DisplayDamageNumbers, IsLow) == 0x000020, "Member 'BP_Controller_C_OC_DisplayDamageNumbers::IsLow' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_OC_DisplayDamageNumbers, DamageType) == 0x000021, "Member 'BP_Controller_C_OC_DisplayDamageNumbers::DamageType' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.S_ApplyDamage
// 0x0068 (0x0068 - 0x0000)
struct BP_Controller_C_S_ApplyDamage final
{
public:
	class UObject*                                Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageAmount;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DamageHitLocation;                                 // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DamageDirection;                                   // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  AttackerPawn;                                      // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Debuff;                                            // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DamageTypes                                 DamageType;                                        // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayerIndex_0;                                     // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCriticalHit;                                     // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreTeamProtection;                              // 0x0041(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   SpecialKillMessage;                                // 0x0048(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          ShouldBreakInvisibility;                           // 0x0060(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPiercingDamage;                                  // 0x0061(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Controller_C_S_ApplyDamage) == 0x000008, "Wrong alignment on BP_Controller_C_S_ApplyDamage");
static_assert(sizeof(BP_Controller_C_S_ApplyDamage) == 0x000068, "Wrong size on BP_Controller_C_S_ApplyDamage");
static_assert(offsetof(BP_Controller_C_S_ApplyDamage, Target) == 0x000000, "Member 'BP_Controller_C_S_ApplyDamage::Target' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_S_ApplyDamage, DamageAmount) == 0x000008, "Member 'BP_Controller_C_S_ApplyDamage::DamageAmount' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_S_ApplyDamage, DamageHitLocation) == 0x00000C, "Member 'BP_Controller_C_S_ApplyDamage::DamageHitLocation' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_S_ApplyDamage, DamageDirection) == 0x000018, "Member 'BP_Controller_C_S_ApplyDamage::DamageDirection' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_S_ApplyDamage, AttackerPawn) == 0x000028, "Member 'BP_Controller_C_S_ApplyDamage::AttackerPawn' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_S_ApplyDamage, Debuff) == 0x000030, "Member 'BP_Controller_C_S_ApplyDamage::Debuff' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_S_ApplyDamage, DamageType) == 0x000038, "Member 'BP_Controller_C_S_ApplyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_S_ApplyDamage, PlayerIndex_0) == 0x00003C, "Member 'BP_Controller_C_S_ApplyDamage::PlayerIndex_0' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_S_ApplyDamage, IsCriticalHit) == 0x000040, "Member 'BP_Controller_C_S_ApplyDamage::IsCriticalHit' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_S_ApplyDamage, IgnoreTeamProtection) == 0x000041, "Member 'BP_Controller_C_S_ApplyDamage::IgnoreTeamProtection' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_S_ApplyDamage, SpecialKillMessage) == 0x000048, "Member 'BP_Controller_C_S_ApplyDamage::SpecialKillMessage' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_S_ApplyDamage, ShouldBreakInvisibility) == 0x000060, "Member 'BP_Controller_C_S_ApplyDamage::ShouldBreakInvisibility' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_S_ApplyDamage, IsPiercingDamage) == 0x000061, "Member 'BP_Controller_C_S_ApplyDamage::IsPiercingDamage' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.ApplyDamage
// 0x0068 (0x0068 - 0x0000)
struct BP_Controller_C_ApplyDamage final
{
public:
	class UObject*                                Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageAmount;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DamageHitLocation;                                 // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DamageDirection;                                   // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  AttackerPawn;                                      // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Debuff;                                            // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DamageTypes                                 DamageType;                                        // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayerIndex_0;                                     // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCriticalHit;                                     // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreTeamProtection;                              // 0x0041(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   SpecialKillMessage;                                // 0x0048(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          ShouldBreakInvisibility;                           // 0x0060(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPiercingDamage;                                  // 0x0061(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Controller_C_ApplyDamage) == 0x000008, "Wrong alignment on BP_Controller_C_ApplyDamage");
static_assert(sizeof(BP_Controller_C_ApplyDamage) == 0x000068, "Wrong size on BP_Controller_C_ApplyDamage");
static_assert(offsetof(BP_Controller_C_ApplyDamage, Target) == 0x000000, "Member 'BP_Controller_C_ApplyDamage::Target' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ApplyDamage, DamageAmount) == 0x000008, "Member 'BP_Controller_C_ApplyDamage::DamageAmount' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ApplyDamage, DamageHitLocation) == 0x00000C, "Member 'BP_Controller_C_ApplyDamage::DamageHitLocation' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ApplyDamage, DamageDirection) == 0x000018, "Member 'BP_Controller_C_ApplyDamage::DamageDirection' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ApplyDamage, AttackerPawn) == 0x000028, "Member 'BP_Controller_C_ApplyDamage::AttackerPawn' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ApplyDamage, Debuff) == 0x000030, "Member 'BP_Controller_C_ApplyDamage::Debuff' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ApplyDamage, DamageType) == 0x000038, "Member 'BP_Controller_C_ApplyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ApplyDamage, PlayerIndex_0) == 0x00003C, "Member 'BP_Controller_C_ApplyDamage::PlayerIndex_0' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ApplyDamage, IsCriticalHit) == 0x000040, "Member 'BP_Controller_C_ApplyDamage::IsCriticalHit' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ApplyDamage, IgnoreTeamProtection) == 0x000041, "Member 'BP_Controller_C_ApplyDamage::IgnoreTeamProtection' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ApplyDamage, SpecialKillMessage) == 0x000048, "Member 'BP_Controller_C_ApplyDamage::SpecialKillMessage' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ApplyDamage, ShouldBreakInvisibility) == 0x000060, "Member 'BP_Controller_C_ApplyDamage::ShouldBreakInvisibility' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_ApplyDamage, IsPiercingDamage) == 0x000061, "Member 'BP_Controller_C_ApplyDamage::IsPiercingDamage' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.S_Spawn
// 0x0070 (0x0070 - 0x0000)
struct BP_Controller_C_S_Spawn final
{
public:
	struct FST_SpawnInfo                          SpawnInfo;                                         // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_VehicleBase_C*                      VehicleToEnterAfterSpawn_Optional_;                // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Controller_C_S_Spawn) == 0x000010, "Wrong alignment on BP_Controller_C_S_Spawn");
static_assert(sizeof(BP_Controller_C_S_Spawn) == 0x000070, "Wrong size on BP_Controller_C_S_Spawn");
static_assert(offsetof(BP_Controller_C_S_Spawn, SpawnInfo) == 0x000000, "Member 'BP_Controller_C_S_Spawn::SpawnInfo' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_S_Spawn, VehicleToEnterAfterSpawn_Optional_) == 0x000060, "Member 'BP_Controller_C_S_Spawn::VehicleToEnterAfterSpawn_Optional_' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.S_JoinTeam
// 0x0001 (0x0001 - 0x0000)
struct BP_Controller_C_S_JoinTeam final
{
public:
	E_Teams                                       Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Controller_C_S_JoinTeam) == 0x000001, "Wrong alignment on BP_Controller_C_S_JoinTeam");
static_assert(sizeof(BP_Controller_C_S_JoinTeam) == 0x000001, "Wrong size on BP_Controller_C_S_JoinTeam");
static_assert(offsetof(BP_Controller_C_S_JoinTeam, Team) == 0x000000, "Member 'BP_Controller_C_S_JoinTeam::Team' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.S_EnterCharacter
// 0x0018 (0x0018 - 0x0000)
struct BP_Controller_C_S_EnterCharacter final
{
public:
	bool                                          teleport;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TeleportLocation;                                  // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_VehicleBase_C*                      Vehicle;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Controller_C_S_EnterCharacter) == 0x000008, "Wrong alignment on BP_Controller_C_S_EnterCharacter");
static_assert(sizeof(BP_Controller_C_S_EnterCharacter) == 0x000018, "Wrong size on BP_Controller_C_S_EnterCharacter");
static_assert(offsetof(BP_Controller_C_S_EnterCharacter, teleport) == 0x000000, "Member 'BP_Controller_C_S_EnterCharacter::teleport' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_S_EnterCharacter, TeleportLocation) == 0x000004, "Member 'BP_Controller_C_S_EnterCharacter::TeleportLocation' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_S_EnterCharacter, Vehicle) == 0x000010, "Member 'BP_Controller_C_S_EnterCharacter::Vehicle' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.S_EnterVehicle
// 0x0010 (0x0010 - 0x0000)
struct BP_Controller_C_S_EnterVehicle final
{
public:
	class ABP_VehicleBase_C*                      Vehicle;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnDataComponent_C*                   PawnData;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Controller_C_S_EnterVehicle) == 0x000008, "Wrong alignment on BP_Controller_C_S_EnterVehicle");
static_assert(sizeof(BP_Controller_C_S_EnterVehicle) == 0x000010, "Wrong size on BP_Controller_C_S_EnterVehicle");
static_assert(offsetof(BP_Controller_C_S_EnterVehicle, Vehicle) == 0x000000, "Member 'BP_Controller_C_S_EnterVehicle::Vehicle' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_S_EnterVehicle, PawnData) == 0x000008, "Member 'BP_Controller_C_S_EnterVehicle::PawnData' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.InpActEvt_F2_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_Controller_C_InpActEvt_F2_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Controller_C_InpActEvt_F2_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on BP_Controller_C_InpActEvt_F2_K2Node_InputKeyEvent_0");
static_assert(sizeof(BP_Controller_C_InpActEvt_F2_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on BP_Controller_C_InpActEvt_F2_K2Node_InputKeyEvent_0");
static_assert(offsetof(BP_Controller_C_InpActEvt_F2_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'BP_Controller_C_InpActEvt_F2_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.InpActEvt_F1_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_Controller_C_InpActEvt_F1_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Controller_C_InpActEvt_F1_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on BP_Controller_C_InpActEvt_F1_K2Node_InputKeyEvent_1");
static_assert(sizeof(BP_Controller_C_InpActEvt_F1_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on BP_Controller_C_InpActEvt_F1_K2Node_InputKeyEvent_1");
static_assert(offsetof(BP_Controller_C_InpActEvt_F1_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'BP_Controller_C_InpActEvt_F1_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.InpActEvt_Delete_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_Controller_C_InpActEvt_Delete_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Controller_C_InpActEvt_Delete_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on BP_Controller_C_InpActEvt_Delete_K2Node_InputKeyEvent_2");
static_assert(sizeof(BP_Controller_C_InpActEvt_Delete_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on BP_Controller_C_InpActEvt_Delete_K2Node_InputKeyEvent_2");
static_assert(offsetof(BP_Controller_C_InpActEvt_Delete_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'BP_Controller_C_InpActEvt_Delete_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.InpActEvt_PageDown_K2Node_InputKeyEvent_3
// 0x0018 (0x0018 - 0x0000)
struct BP_Controller_C_InpActEvt_PageDown_K2Node_InputKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Controller_C_InpActEvt_PageDown_K2Node_InputKeyEvent_3) == 0x000008, "Wrong alignment on BP_Controller_C_InpActEvt_PageDown_K2Node_InputKeyEvent_3");
static_assert(sizeof(BP_Controller_C_InpActEvt_PageDown_K2Node_InputKeyEvent_3) == 0x000018, "Wrong size on BP_Controller_C_InpActEvt_PageDown_K2Node_InputKeyEvent_3");
static_assert(offsetof(BP_Controller_C_InpActEvt_PageDown_K2Node_InputKeyEvent_3, Key) == 0x000000, "Member 'BP_Controller_C_InpActEvt_PageDown_K2Node_InputKeyEvent_3::Key' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.InpActEvt_Scoreboard_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_Controller_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Controller_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_Controller_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_Controller_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_Controller_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_Controller_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_Controller_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.InpActEvt_Scoreboard_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_Controller_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Controller_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on BP_Controller_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_1");
static_assert(sizeof(BP_Controller_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on BP_Controller_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_1");
static_assert(offsetof(BP_Controller_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'BP_Controller_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.InpActEvt_SpaceBar_K2Node_InputKeyEvent_4
// 0x0018 (0x0018 - 0x0000)
struct BP_Controller_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Controller_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_4) == 0x000008, "Wrong alignment on BP_Controller_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_4");
static_assert(sizeof(BP_Controller_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_4) == 0x000018, "Wrong size on BP_Controller_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_4");
static_assert(offsetof(BP_Controller_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_4, Key) == 0x000000, "Member 'BP_Controller_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_4::Key' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.InpActEvt_K_K2Node_InputKeyEvent_5
// 0x0018 (0x0018 - 0x0000)
struct BP_Controller_C_InpActEvt_K_K2Node_InputKeyEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Controller_C_InpActEvt_K_K2Node_InputKeyEvent_5) == 0x000008, "Wrong alignment on BP_Controller_C_InpActEvt_K_K2Node_InputKeyEvent_5");
static_assert(sizeof(BP_Controller_C_InpActEvt_K_K2Node_InputKeyEvent_5) == 0x000018, "Wrong size on BP_Controller_C_InpActEvt_K_K2Node_InputKeyEvent_5");
static_assert(offsetof(BP_Controller_C_InpActEvt_K_K2Node_InputKeyEvent_5, Key) == 0x000000, "Member 'BP_Controller_C_InpActEvt_K_K2Node_InputKeyEvent_5::Key' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.InpActEvt_Enter_K2Node_InputKeyEvent_6
// 0x0018 (0x0018 - 0x0000)
struct BP_Controller_C_InpActEvt_Enter_K2Node_InputKeyEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Controller_C_InpActEvt_Enter_K2Node_InputKeyEvent_6) == 0x000008, "Wrong alignment on BP_Controller_C_InpActEvt_Enter_K2Node_InputKeyEvent_6");
static_assert(sizeof(BP_Controller_C_InpActEvt_Enter_K2Node_InputKeyEvent_6) == 0x000018, "Wrong size on BP_Controller_C_InpActEvt_Enter_K2Node_InputKeyEvent_6");
static_assert(offsetof(BP_Controller_C_InpActEvt_Enter_K2Node_InputKeyEvent_6, Key) == 0x000000, "Member 'BP_Controller_C_InpActEvt_Enter_K2Node_InputKeyEvent_6::Key' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.InpActEvt_F6_K2Node_InputKeyEvent_7
// 0x0018 (0x0018 - 0x0000)
struct BP_Controller_C_InpActEvt_F6_K2Node_InputKeyEvent_7 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Controller_C_InpActEvt_F6_K2Node_InputKeyEvent_7) == 0x000008, "Wrong alignment on BP_Controller_C_InpActEvt_F6_K2Node_InputKeyEvent_7");
static_assert(sizeof(BP_Controller_C_InpActEvt_F6_K2Node_InputKeyEvent_7) == 0x000018, "Wrong size on BP_Controller_C_InpActEvt_F6_K2Node_InputKeyEvent_7");
static_assert(offsetof(BP_Controller_C_InpActEvt_F6_K2Node_InputKeyEvent_7, Key) == 0x000000, "Member 'BP_Controller_C_InpActEvt_F6_K2Node_InputKeyEvent_7::Key' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.InpActEvt_Escape_K2Node_InputKeyEvent_8
// 0x0018 (0x0018 - 0x0000)
struct BP_Controller_C_InpActEvt_Escape_K2Node_InputKeyEvent_8 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Controller_C_InpActEvt_Escape_K2Node_InputKeyEvent_8) == 0x000008, "Wrong alignment on BP_Controller_C_InpActEvt_Escape_K2Node_InputKeyEvent_8");
static_assert(sizeof(BP_Controller_C_InpActEvt_Escape_K2Node_InputKeyEvent_8) == 0x000018, "Wrong size on BP_Controller_C_InpActEvt_Escape_K2Node_InputKeyEvent_8");
static_assert(offsetof(BP_Controller_C_InpActEvt_Escape_K2Node_InputKeyEvent_8, Key) == 0x000000, "Member 'BP_Controller_C_InpActEvt_Escape_K2Node_InputKeyEvent_8::Key' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.SwitchSpawnMenu
// 0x0030 (0x0030 - 0x0000)
struct BP_Controller_C_SwitchSpawnMenu final
{
public:
	E_Menus                                       Menu;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            menuWidget;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_TeamSelect_C*                        CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_SpawnSelect_C*                       CallFunc_Create_ReturnValue_1;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Controller_C_SwitchSpawnMenu) == 0x000008, "Wrong alignment on BP_Controller_C_SwitchSpawnMenu");
static_assert(sizeof(BP_Controller_C_SwitchSpawnMenu) == 0x000030, "Wrong size on BP_Controller_C_SwitchSpawnMenu");
static_assert(offsetof(BP_Controller_C_SwitchSpawnMenu, Menu) == 0x000000, "Member 'BP_Controller_C_SwitchSpawnMenu::Menu' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_SwitchSpawnMenu, menuWidget) == 0x000008, "Member 'BP_Controller_C_SwitchSpawnMenu::menuWidget' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_SwitchSpawnMenu, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'BP_Controller_C_SwitchSpawnMenu::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_SwitchSpawnMenu, CallFunc_Create_ReturnValue) == 0x000018, "Member 'BP_Controller_C_SwitchSpawnMenu::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_SwitchSpawnMenu, CallFunc_Create_ReturnValue_1) == 0x000020, "Member 'BP_Controller_C_SwitchSpawnMenu::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_SwitchSpawnMenu, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_Controller_C_SwitchSpawnMenu::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.CheckForChatCommand
// 0x01A0 (0x01A0 - 0x0000)
struct BP_Controller_C_CheckForChatCommand final
{
public:
	class FText                                   ChatMessage;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          IsHost;                                            // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CommandFound_;                                     // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ResponseMessage;                                   // 0x0020(0x0018)(Parm, OutParm)
	bool                                          Broadcast;                                         // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          BroadcastMessage;                                  // 0x0039(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ChatMessageInStringFormat;                         // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   Response;                                          // 0x0050(0x0018)(Edit, BlueprintVisible)
	bool                                          CommandFound;                                      // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_PlayerStats                        CallFunc_Array_Get_Item;                           // 0x00D0(0x0068)(HasGetValueTypeHash)
	class ABP_PlayerState_C*                      CallFunc_Array_Get_Item_1;                         // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_KickPlayer_Response;                      // 0x0150(0x0018)()
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_KickPlayer_Response_1;                    // 0x0170(0x0018)()
	bool                                          CallFunc_Contains_ReturnValue_1;                   // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue_2;                   // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18B[0x1];                                      // 0x018B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_193[0x1];                                      // 0x0193(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Controller_C_CheckForChatCommand) == 0x000008, "Wrong alignment on BP_Controller_C_CheckForChatCommand");
static_assert(sizeof(BP_Controller_C_CheckForChatCommand) == 0x0001A0, "Wrong size on BP_Controller_C_CheckForChatCommand");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, ChatMessage) == 0x000000, "Member 'BP_Controller_C_CheckForChatCommand::ChatMessage' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, IsHost) == 0x000018, "Member 'BP_Controller_C_CheckForChatCommand::IsHost' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, CommandFound_) == 0x000019, "Member 'BP_Controller_C_CheckForChatCommand::CommandFound_' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, ResponseMessage) == 0x000020, "Member 'BP_Controller_C_CheckForChatCommand::ResponseMessage' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, Broadcast) == 0x000038, "Member 'BP_Controller_C_CheckForChatCommand::Broadcast' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, BroadcastMessage) == 0x000039, "Member 'BP_Controller_C_CheckForChatCommand::BroadcastMessage' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, ChatMessageInStringFormat) == 0x000040, "Member 'BP_Controller_C_CheckForChatCommand::ChatMessageInStringFormat' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, Response) == 0x000050, "Member 'BP_Controller_C_CheckForChatCommand::Response' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, CommandFound) == 0x000068, "Member 'BP_Controller_C_CheckForChatCommand::CommandFound' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, CallFunc_Conv_TextToString_ReturnValue) == 0x000070, "Member 'BP_Controller_C_CheckForChatCommand::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, Temp_int_Array_Index_Variable) == 0x000080, "Member 'BP_Controller_C_CheckForChatCommand::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'BP_Controller_C_CheckForChatCommand::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'BP_Controller_C_CheckForChatCommand::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, Temp_int_Array_Index_Variable_1) == 0x00008C, "Member 'BP_Controller_C_CheckForChatCommand::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, CallFunc_Len_ReturnValue) == 0x000090, "Member 'BP_Controller_C_CheckForChatCommand::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, CallFunc_FindSubstring_ReturnValue) == 0x000094, "Member 'BP_Controller_C_CheckForChatCommand::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, CallFunc_Contains_ReturnValue) == 0x000098, "Member 'BP_Controller_C_CheckForChatCommand::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, CallFunc_Add_IntInt_ReturnValue_1) == 0x00009C, "Member 'BP_Controller_C_CheckForChatCommand::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, CallFunc_GetSubstring_ReturnValue) == 0x0000A0, "Member 'BP_Controller_C_CheckForChatCommand::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, Temp_int_Loop_Counter_Variable_1) == 0x0000B0, "Member 'BP_Controller_C_CheckForChatCommand::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000B4, "Member 'BP_Controller_C_CheckForChatCommand::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, CallFunc_GetGameState_ReturnValue) == 0x0000B8, "Member 'BP_Controller_C_CheckForChatCommand::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x0000C0, "Member 'BP_Controller_C_CheckForChatCommand::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'BP_Controller_C_CheckForChatCommand::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'BP_Controller_C_CheckForChatCommand::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, CallFunc_Array_Get_Item_1) == 0x000138, "Member 'BP_Controller_C_CheckForChatCommand::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, CallFunc_GetPlayerName_ReturnValue) == 0x000140, "Member 'BP_Controller_C_CheckForChatCommand::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, CallFunc_KickPlayer_Response) == 0x000150, "Member 'BP_Controller_C_CheckForChatCommand::CallFunc_KickPlayer_Response' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000168, "Member 'BP_Controller_C_CheckForChatCommand::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, CallFunc_KickPlayer_Response_1) == 0x000170, "Member 'BP_Controller_C_CheckForChatCommand::CallFunc_KickPlayer_Response_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, CallFunc_Contains_ReturnValue_1) == 0x000188, "Member 'BP_Controller_C_CheckForChatCommand::CallFunc_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000189, "Member 'BP_Controller_C_CheckForChatCommand::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, CallFunc_Contains_ReturnValue_2) == 0x00018A, "Member 'BP_Controller_C_CheckForChatCommand::CallFunc_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, CallFunc_Array_Length_ReturnValue) == 0x00018C, "Member 'BP_Controller_C_CheckForChatCommand::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, CallFunc_BooleanOR_ReturnValue) == 0x000190, "Member 'BP_Controller_C_CheckForChatCommand::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, CallFunc_Less_IntInt_ReturnValue) == 0x000191, "Member 'BP_Controller_C_CheckForChatCommand::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, CallFunc_BooleanOR_ReturnValue_1) == 0x000192, "Member 'BP_Controller_C_CheckForChatCommand::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, CallFunc_Array_Length_ReturnValue_1) == 0x000194, "Member 'BP_Controller_C_CheckForChatCommand::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_CheckForChatCommand, CallFunc_Less_IntInt_ReturnValue_1) == 0x000198, "Member 'BP_Controller_C_CheckForChatCommand::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.KickPlayer
// 0x0108 (0x0108 - 0x0000)
struct BP_Controller_C_KickPlayer final
{
public:
	class FString                                 PlayerName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   Response;                                          // 0x0010(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0018)()
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0018)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Controller_C_KickPlayer) == 0x000008, "Wrong alignment on BP_Controller_C_KickPlayer");
static_assert(sizeof(BP_Controller_C_KickPlayer) == 0x000108, "Wrong size on BP_Controller_C_KickPlayer");
static_assert(offsetof(BP_Controller_C_KickPlayer, PlayerName) == 0x000000, "Member 'BP_Controller_C_KickPlayer::PlayerName' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_KickPlayer, Response) == 0x000010, "Member 'BP_Controller_C_KickPlayer::Response' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_KickPlayer, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'BP_Controller_C_KickPlayer::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_KickPlayer, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_Controller_C_KickPlayer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_KickPlayer, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'BP_Controller_C_KickPlayer::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_KickPlayer, K2Node_MakeArray_Array) == 0x000088, "Member 'BP_Controller_C_KickPlayer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_KickPlayer, Temp_int_Loop_Counter_Variable) == 0x000098, "Member 'BP_Controller_C_KickPlayer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_KickPlayer, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'BP_Controller_C_KickPlayer::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_KickPlayer, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_Controller_C_KickPlayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_KickPlayer, CallFunc_GetGameState_ReturnValue) == 0x0000C0, "Member 'BP_Controller_C_KickPlayer::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_KickPlayer, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'BP_Controller_C_KickPlayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_KickPlayer, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'BP_Controller_C_KickPlayer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_KickPlayer, CallFunc_Less_IntInt_ReturnValue) == 0x0000D8, "Member 'BP_Controller_C_KickPlayer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_KickPlayer, K2Node_DynamicCast_AsBP_Player_State) == 0x0000E0, "Member 'BP_Controller_C_KickPlayer::K2Node_DynamicCast_AsBP_Player_State' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_KickPlayer, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'BP_Controller_C_KickPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_KickPlayer, CallFunc_GetPlayerName_ReturnValue) == 0x0000F0, "Member 'BP_Controller_C_KickPlayer::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_KickPlayer, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000100, "Member 'BP_Controller_C_KickPlayer::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BP_Controller.BP_Controller_C.GetCurrentZoneType
// 0x01C8 (0x01C8 - 0x0000)
struct BP_Controller_C_GetCurrentZoneType final
{
public:
	E_CombatZoneTypes                             ZoneType;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMapCenter_MapCenterLocation;           // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMapCenter_IsValid;                     // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ConstParm, ReferenceParm)
	class ABP_PlaneBase_C*                        K2Node_DynamicCast_AsBP_Plane_Base;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetTruePawnLocation_PawnLocation;         // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0058(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTruePawnLocation_PawnLocation_1;       // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_LineTraceMultiForObjects_OutHits;         // 0x0090(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceMultiForObjects_ReturnValue;     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x00AC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_136[0x2];                                      // 0x0136(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CombatZone_C*                       K2Node_DynamicCast_AsBP_Combat_Zone;               // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Controller_C_GetCurrentZoneType) == 0x000008, "Wrong alignment on BP_Controller_C_GetCurrentZoneType");
static_assert(sizeof(BP_Controller_C_GetCurrentZoneType) == 0x0001C8, "Wrong size on BP_Controller_C_GetCurrentZoneType");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, ZoneType) == 0x000000, "Member 'BP_Controller_C_GetCurrentZoneType::ZoneType' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_Controller_C_GetCurrentZoneType::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_Controller_C_GetCurrentZoneType::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_GetMapCenter_MapCenterLocation) == 0x000010, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_GetMapCenter_MapCenterLocation' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_GetMapCenter_IsValid) == 0x00001C, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_GetMapCenter_IsValid' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, K2Node_MakeArray_Array) == 0x000028, "Member 'BP_Controller_C_GetCurrentZoneType::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, K2Node_DynamicCast_AsBP_Plane_Base) == 0x000038, "Member 'BP_Controller_C_GetCurrentZoneType::K2Node_DynamicCast_AsBP_Plane_Base' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_Controller_C_GetCurrentZoneType::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_GetTruePawnLocation_PawnLocation) == 0x000044, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_GetTruePawnLocation_PawnLocation' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_Vector_Distance_ReturnValue) == 0x000050, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, Temp_object_Variable) == 0x000058, "Member 'BP_Controller_C_GetCurrentZoneType::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000068, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000070, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_GetTruePawnLocation_PawnLocation_1) == 0x000078, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_GetTruePawnLocation_PawnLocation_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_Add_VectorVector_ReturnValue) == 0x000084, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_LineTraceMultiForObjects_OutHits) == 0x000090, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_LineTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_LineTraceMultiForObjects_ReturnValue) == 0x0000A0, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_LineTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_Array_Length_ReturnValue) == 0x0000A4, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_Array_Get_Item) == 0x0000AC, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_BreakHitResult_bBlockingHit) == 0x000134, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_BreakHitResult_bInitialOverlap) == 0x000135, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_BreakHitResult_Time) == 0x000138, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_BreakHitResult_Distance) == 0x00013C, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_BreakHitResult_Location) == 0x000140, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_BreakHitResult_ImpactPoint) == 0x00014C, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_BreakHitResult_Normal) == 0x000158, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_BreakHitResult_ImpactNormal) == 0x000164, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_BreakHitResult_PhysMat) == 0x000170, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_BreakHitResult_HitActor) == 0x000178, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_BreakHitResult_HitComponent) == 0x000180, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_BreakHitResult_HitBoneName) == 0x000188, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_BreakHitResult_HitItem) == 0x000190, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_BreakHitResult_ElementIndex) == 0x000194, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_BreakHitResult_FaceIndex) == 0x000198, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_BreakHitResult_TraceStart) == 0x00019C, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, CallFunc_BreakHitResult_TraceEnd) == 0x0001A8, "Member 'BP_Controller_C_GetCurrentZoneType::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, K2Node_DynamicCast_AsBP_Combat_Zone) == 0x0001B8, "Member 'BP_Controller_C_GetCurrentZoneType::K2Node_DynamicCast_AsBP_Combat_Zone' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, K2Node_DynamicCast_bSuccess_1) == 0x0001C0, "Member 'BP_Controller_C_GetCurrentZoneType::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Controller_C_GetCurrentZoneType, K2Node_SwitchEnum_CmpSuccess) == 0x0001C1, "Member 'BP_Controller_C_GetCurrentZoneType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

