#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VehicleSeat

#include "Basic.hpp"

#include "BP_InteractableBase_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_VehicleSeat.BP_VehicleSeat_C
// 0x0030 (0x0278 - 0x0248)
class ABP_VehicleSeat_C final : public ABP_InteractableBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_VehicleSeat_C;                   // 0x0248(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        Arrow;                                             // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      PlayerPosition;                                    // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Occupied;                                          // 0x0260(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_C*                        OccupyingCharacter;                                // 0x0268(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableDucking;                                     // 0x0270(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_VehicleSeat(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void OnRep_Occupied();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_VehicleSeat_C">();
	}
	static class ABP_VehicleSeat_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_VehicleSeat_C>();
	}
};
static_assert(alignof(ABP_VehicleSeat_C) == 0x000008, "Wrong alignment on ABP_VehicleSeat_C");
static_assert(sizeof(ABP_VehicleSeat_C) == 0x000278, "Wrong size on ABP_VehicleSeat_C");
static_assert(offsetof(ABP_VehicleSeat_C, UberGraphFrame_BP_VehicleSeat_C) == 0x000248, "Member 'ABP_VehicleSeat_C::UberGraphFrame_BP_VehicleSeat_C' has a wrong offset!");
static_assert(offsetof(ABP_VehicleSeat_C, Arrow) == 0x000250, "Member 'ABP_VehicleSeat_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_VehicleSeat_C, PlayerPosition) == 0x000258, "Member 'ABP_VehicleSeat_C::PlayerPosition' has a wrong offset!");
static_assert(offsetof(ABP_VehicleSeat_C, Occupied) == 0x000260, "Member 'ABP_VehicleSeat_C::Occupied' has a wrong offset!");
static_assert(offsetof(ABP_VehicleSeat_C, OccupyingCharacter) == 0x000268, "Member 'ABP_VehicleSeat_C::OccupyingCharacter' has a wrong offset!");
static_assert(offsetof(ABP_VehicleSeat_C, EnableDucking) == 0x000270, "Member 'ABP_VehicleSeat_C::EnableDucking' has a wrong offset!");

}

