#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Task_MoveToObjective

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Task_MoveToObjective.Task_MoveToObjective_C.ExecuteUbergraph_Task_MoveToObjective
// 0x0130 (0x0130 - 0x0000)
struct Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_2;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate;       // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	EPathFollowingResult                          Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_1;     // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_1;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult;                 // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_2;     // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	EPathFollowingResult                          Temp_byte_Variable_1;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Character_C*                        K2Node_DynamicCast_AsBP_Character;                 // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetValueAsObject_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_3;     // 0x0094(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetRandomPointInNavigableRadius_RandomLocation; // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_GetRandomPointInNavigableRadius_ReturnValue; // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue;               // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_2;            // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue_1;             // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRealTimeSeconds_ReturnValue;           // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_3;               // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E6[0x2];                                       // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRealTimeSeconds_ReturnValue_1;         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameStateBase_C*                    K2Node_DynamicCast_AsBP_Game_State_Base;           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetRandomPointInNavigableRadius_RandomLocation_1; // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_GetRandomPointInNavigableRadius_ReturnValue_1; // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue_1;    // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective) == 0x000008, "Wrong alignment on Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective");
static_assert(sizeof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective) == 0x000130, "Wrong size on Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, EntryPoint) == 0x000000, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::EntryPoint' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, K2Node_CustomEvent_MovementResult_2) == 0x000004, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::K2Node_CustomEvent_MovementResult_2' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, Temp_byte_Variable) == 0x000018, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, K2Node_CustomEvent_MovementResult_1) == 0x00002C, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::K2Node_CustomEvent_MovementResult_1' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, K2Node_CustomEvent_MovementResult) == 0x00002D, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::K2Node_CustomEvent_MovementResult' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, K2Node_CreateDelegate_OutputDelegate_2) == 0x000030, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, Temp_byte_Variable_1) == 0x000040, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, K2Node_Event_OwnerController) == 0x000048, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, K2Node_Event_ControlledPawn) == 0x000050, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, CallFunc_MakeLiteralName_ReturnValue) == 0x000058, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, CallFunc_CreateMoveToProxyObject_ReturnValue) == 0x000060, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::CallFunc_CreateMoveToProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, K2Node_DynamicCast_AsBP_Character) == 0x000068, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::K2Node_DynamicCast_AsBP_Character' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, CallFunc_IsValid_ReturnValue) == 0x000071, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, CallFunc_IsValid_ReturnValue_1) == 0x000072, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, CallFunc_GetBlackboard_ReturnValue) == 0x000078, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, CallFunc_GetValueAsObject_ReturnValue) == 0x000080, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::CallFunc_GetValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, K2Node_DynamicCast_AsActor) == 0x000088, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, K2Node_CreateDelegate_OutputDelegate_3) == 0x000094, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, CallFunc_IsValid_ReturnValue_2) == 0x0000A4, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, CallFunc_IsValid_ReturnValue_3) == 0x0000A5, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000A8, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, CallFunc_K2_GetRandomPointInNavigableRadius_RandomLocation) == 0x0000B4, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::CallFunc_K2_GetRandomPointInNavigableRadius_RandomLocation' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, CallFunc_K2_GetRandomPointInNavigableRadius_ReturnValue) == 0x0000C0, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::CallFunc_K2_GetRandomPointInNavigableRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, CallFunc_MakeLiteralName_ReturnValue_1) == 0x0000C4, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, CallFunc_GetValueAsBool_ReturnValue) == 0x0000CC, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::CallFunc_GetValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000D0, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, CallFunc_MakeLiteralName_ReturnValue_2) == 0x0000D4, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::CallFunc_MakeLiteralName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, CallFunc_GetValueAsBool_ReturnValue_1) == 0x0000DC, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::CallFunc_GetValueAsBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, CallFunc_GetRealTimeSeconds_ReturnValue) == 0x0000E0, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::CallFunc_GetRealTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, K2Node_CustomEvent_MovementResult_3) == 0x0000E4, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::K2Node_CustomEvent_MovementResult_3' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000E5, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, CallFunc_GetRealTimeSeconds_ReturnValue_1) == 0x0000E8, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::CallFunc_GetRealTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000EC, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000F0, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, CallFunc_GetGameState_ReturnValue) == 0x0000F8, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, K2Node_DynamicCast_AsBP_Game_State_Base) == 0x000100, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::K2Node_DynamicCast_AsBP_Game_State_Base' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, K2Node_DynamicCast_bSuccess_2) == 0x000108, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, CallFunc_K2_GetRandomPointInNavigableRadius_RandomLocation_1) == 0x00010C, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::CallFunc_K2_GetRandomPointInNavigableRadius_RandomLocation_1' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, CallFunc_K2_GetRandomPointInNavigableRadius_ReturnValue_1) == 0x000118, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::CallFunc_K2_GetRandomPointInNavigableRadius_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, CallFunc_CreateMoveToProxyObject_ReturnValue_1) == 0x000120, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::CallFunc_CreateMoveToProxyObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective, CallFunc_IsValid_ReturnValue_4) == 0x000128, "Member 'Task_MoveToObjective_C_ExecuteUbergraph_Task_MoveToObjective::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");

// Function Task_MoveToObjective.Task_MoveToObjective_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct Task_MoveToObjective_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_MoveToObjective_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on Task_MoveToObjective_C_ReceiveExecuteAI");
static_assert(sizeof(Task_MoveToObjective_C_ReceiveExecuteAI) == 0x000010, "Wrong size on Task_MoveToObjective_C_ReceiveExecuteAI");
static_assert(offsetof(Task_MoveToObjective_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'Task_MoveToObjective_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(Task_MoveToObjective_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'Task_MoveToObjective_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function Task_MoveToObjective.Task_MoveToObjective_C.OnSuccess_D0C780294E32A35C6CC435B2A0EB9EB6
// 0x0001 (0x0001 - 0x0000)
struct Task_MoveToObjective_C_OnSuccess_D0C780294E32A35C6CC435B2A0EB9EB6 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_MoveToObjective_C_OnSuccess_D0C780294E32A35C6CC435B2A0EB9EB6) == 0x000001, "Wrong alignment on Task_MoveToObjective_C_OnSuccess_D0C780294E32A35C6CC435B2A0EB9EB6");
static_assert(sizeof(Task_MoveToObjective_C_OnSuccess_D0C780294E32A35C6CC435B2A0EB9EB6) == 0x000001, "Wrong size on Task_MoveToObjective_C_OnSuccess_D0C780294E32A35C6CC435B2A0EB9EB6");
static_assert(offsetof(Task_MoveToObjective_C_OnSuccess_D0C780294E32A35C6CC435B2A0EB9EB6, MovementResult) == 0x000000, "Member 'Task_MoveToObjective_C_OnSuccess_D0C780294E32A35C6CC435B2A0EB9EB6::MovementResult' has a wrong offset!");

// Function Task_MoveToObjective.Task_MoveToObjective_C.OnFail_D0C780294E32A35C6CC435B2A0EB9EB6
// 0x0001 (0x0001 - 0x0000)
struct Task_MoveToObjective_C_OnFail_D0C780294E32A35C6CC435B2A0EB9EB6 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_MoveToObjective_C_OnFail_D0C780294E32A35C6CC435B2A0EB9EB6) == 0x000001, "Wrong alignment on Task_MoveToObjective_C_OnFail_D0C780294E32A35C6CC435B2A0EB9EB6");
static_assert(sizeof(Task_MoveToObjective_C_OnFail_D0C780294E32A35C6CC435B2A0EB9EB6) == 0x000001, "Wrong size on Task_MoveToObjective_C_OnFail_D0C780294E32A35C6CC435B2A0EB9EB6");
static_assert(offsetof(Task_MoveToObjective_C_OnFail_D0C780294E32A35C6CC435B2A0EB9EB6, MovementResult) == 0x000000, "Member 'Task_MoveToObjective_C_OnFail_D0C780294E32A35C6CC435B2A0EB9EB6::MovementResult' has a wrong offset!");

// Function Task_MoveToObjective.Task_MoveToObjective_C.OnSuccess_CE9416B347F4F6D7ED0A25B053161052
// 0x0001 (0x0001 - 0x0000)
struct Task_MoveToObjective_C_OnSuccess_CE9416B347F4F6D7ED0A25B053161052 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_MoveToObjective_C_OnSuccess_CE9416B347F4F6D7ED0A25B053161052) == 0x000001, "Wrong alignment on Task_MoveToObjective_C_OnSuccess_CE9416B347F4F6D7ED0A25B053161052");
static_assert(sizeof(Task_MoveToObjective_C_OnSuccess_CE9416B347F4F6D7ED0A25B053161052) == 0x000001, "Wrong size on Task_MoveToObjective_C_OnSuccess_CE9416B347F4F6D7ED0A25B053161052");
static_assert(offsetof(Task_MoveToObjective_C_OnSuccess_CE9416B347F4F6D7ED0A25B053161052, MovementResult) == 0x000000, "Member 'Task_MoveToObjective_C_OnSuccess_CE9416B347F4F6D7ED0A25B053161052::MovementResult' has a wrong offset!");

// Function Task_MoveToObjective.Task_MoveToObjective_C.OnFail_CE9416B347F4F6D7ED0A25B053161052
// 0x0001 (0x0001 - 0x0000)
struct Task_MoveToObjective_C_OnFail_CE9416B347F4F6D7ED0A25B053161052 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_MoveToObjective_C_OnFail_CE9416B347F4F6D7ED0A25B053161052) == 0x000001, "Wrong alignment on Task_MoveToObjective_C_OnFail_CE9416B347F4F6D7ED0A25B053161052");
static_assert(sizeof(Task_MoveToObjective_C_OnFail_CE9416B347F4F6D7ED0A25B053161052) == 0x000001, "Wrong size on Task_MoveToObjective_C_OnFail_CE9416B347F4F6D7ED0A25B053161052");
static_assert(offsetof(Task_MoveToObjective_C_OnFail_CE9416B347F4F6D7ED0A25B053161052, MovementResult) == 0x000000, "Member 'Task_MoveToObjective_C_OnFail_CE9416B347F4F6D7ED0A25B053161052::MovementResult' has a wrong offset!");

}

