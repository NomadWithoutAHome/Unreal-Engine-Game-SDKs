#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_RocketHUD

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "E_Teams_structs.hpp"


namespace SDK::Params
{

// Function W_RocketHUD.W_RocketHUD_C.ExecuteUbergraph_W_RocketHUD
// 0x0088 (0x0088 - 0x0000)
struct W_RocketHUD_C_ExecuteUbergraph_W_RocketHUD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Teams                                       Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Gamestate_Rocket_C*                 K2Node_DynamicCast_AsBP_Gamestate_Rocket;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0040(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RocketHUD_C_ExecuteUbergraph_W_RocketHUD) == 0x000008, "Wrong alignment on W_RocketHUD_C_ExecuteUbergraph_W_RocketHUD");
static_assert(sizeof(W_RocketHUD_C_ExecuteUbergraph_W_RocketHUD) == 0x000088, "Wrong size on W_RocketHUD_C_ExecuteUbergraph_W_RocketHUD");
static_assert(offsetof(W_RocketHUD_C_ExecuteUbergraph_W_RocketHUD, EntryPoint) == 0x000000, "Member 'W_RocketHUD_C_ExecuteUbergraph_W_RocketHUD::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_ExecuteUbergraph_W_RocketHUD, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'W_RocketHUD_C_ExecuteUbergraph_W_RocketHUD::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_ExecuteUbergraph_W_RocketHUD, Temp_byte_Variable) == 0x000010, "Member 'W_RocketHUD_C_ExecuteUbergraph_W_RocketHUD::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_ExecuteUbergraph_W_RocketHUD, K2Node_DynamicCast_AsBP_Gamestate_Rocket) == 0x000018, "Member 'W_RocketHUD_C_ExecuteUbergraph_W_RocketHUD::K2Node_DynamicCast_AsBP_Gamestate_Rocket' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_ExecuteUbergraph_W_RocketHUD, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'W_RocketHUD_C_ExecuteUbergraph_W_RocketHUD::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_ExecuteUbergraph_W_RocketHUD, Temp_object_Variable) == 0x000028, "Member 'W_RocketHUD_C_ExecuteUbergraph_W_RocketHUD::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_ExecuteUbergraph_W_RocketHUD, Temp_object_Variable_1) == 0x000030, "Member 'W_RocketHUD_C_ExecuteUbergraph_W_RocketHUD::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_ExecuteUbergraph_W_RocketHUD, Temp_object_Variable_2) == 0x000038, "Member 'W_RocketHUD_C_ExecuteUbergraph_W_RocketHUD::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_ExecuteUbergraph_W_RocketHUD, K2Node_Event_MyGeometry) == 0x000040, "Member 'W_RocketHUD_C_ExecuteUbergraph_W_RocketHUD::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_ExecuteUbergraph_W_RocketHUD, K2Node_Event_InDeltaTime) == 0x000078, "Member 'W_RocketHUD_C_ExecuteUbergraph_W_RocketHUD::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_ExecuteUbergraph_W_RocketHUD, K2Node_Select_Default) == 0x000080, "Member 'W_RocketHUD_C_ExecuteUbergraph_W_RocketHUD::K2Node_Select_Default' has a wrong offset!");

// Function W_RocketHUD.W_RocketHUD_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_RocketHUD_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RocketHUD_C_Tick) == 0x000004, "Wrong alignment on W_RocketHUD_C_Tick");
static_assert(sizeof(W_RocketHUD_C_Tick) == 0x00003C, "Wrong size on W_RocketHUD_C_Tick");
static_assert(offsetof(W_RocketHUD_C_Tick, MyGeometry) == 0x000000, "Member 'W_RocketHUD_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_Tick, InDeltaTime) == 0x000038, "Member 'W_RocketHUD_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_RocketHUD.W_RocketHUD_C.GetAlliedTime
// 0x0100 (0x0100 - 0x0000)
struct W_RocketHUD_C_GetAlliedTime final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Gamestate_Rocket_C*                 K2Node_DynamicCast_AsBP_Gamestate_Rocket;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0040(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E8(0x0018)()
};
static_assert(alignof(W_RocketHUD_C_GetAlliedTime) == 0x000008, "Wrong alignment on W_RocketHUD_C_GetAlliedTime");
static_assert(sizeof(W_RocketHUD_C_GetAlliedTime) == 0x000100, "Wrong size on W_RocketHUD_C_GetAlliedTime");
static_assert(offsetof(W_RocketHUD_C_GetAlliedTime, ReturnValue) == 0x000000, "Member 'W_RocketHUD_C_GetAlliedTime::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAlliedTime, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'W_RocketHUD_C_GetAlliedTime::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAlliedTime, K2Node_DynamicCast_AsBP_Gamestate_Rocket) == 0x000020, "Member 'W_RocketHUD_C_GetAlliedTime::K2Node_DynamicCast_AsBP_Gamestate_Rocket' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAlliedTime, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'W_RocketHUD_C_GetAlliedTime::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAlliedTime, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00002C, "Member 'W_RocketHUD_C_GetAlliedTime::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAlliedTime, CallFunc_Round_ReturnValue) == 0x000030, "Member 'W_RocketHUD_C_GetAlliedTime::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAlliedTime, CallFunc_Percent_IntInt_ReturnValue) == 0x000034, "Member 'W_RocketHUD_C_GetAlliedTime::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAlliedTime, CallFunc_Divide_IntInt_ReturnValue) == 0x000038, "Member 'W_RocketHUD_C_GetAlliedTime::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAlliedTime, CallFunc_Conv_IntToText_ReturnValue) == 0x000040, "Member 'W_RocketHUD_C_GetAlliedTime::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAlliedTime, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'W_RocketHUD_C_GetAlliedTime::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAlliedTime, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'W_RocketHUD_C_GetAlliedTime::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAlliedTime, K2Node_MakeArray_Array) == 0x0000D8, "Member 'W_RocketHUD_C_GetAlliedTime::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAlliedTime, CallFunc_Format_ReturnValue) == 0x0000E8, "Member 'W_RocketHUD_C_GetAlliedTime::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function W_RocketHUD.W_RocketHUD_C.GetAxisTime
// 0x0100 (0x0100 - 0x0000)
struct W_RocketHUD_C_GetAxisTime final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Gamestate_Rocket_C*                 K2Node_DynamicCast_AsBP_Gamestate_Rocket;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0040(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E8(0x0018)()
};
static_assert(alignof(W_RocketHUD_C_GetAxisTime) == 0x000008, "Wrong alignment on W_RocketHUD_C_GetAxisTime");
static_assert(sizeof(W_RocketHUD_C_GetAxisTime) == 0x000100, "Wrong size on W_RocketHUD_C_GetAxisTime");
static_assert(offsetof(W_RocketHUD_C_GetAxisTime, ReturnValue) == 0x000000, "Member 'W_RocketHUD_C_GetAxisTime::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAxisTime, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'W_RocketHUD_C_GetAxisTime::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAxisTime, K2Node_DynamicCast_AsBP_Gamestate_Rocket) == 0x000020, "Member 'W_RocketHUD_C_GetAxisTime::K2Node_DynamicCast_AsBP_Gamestate_Rocket' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAxisTime, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'W_RocketHUD_C_GetAxisTime::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAxisTime, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00002C, "Member 'W_RocketHUD_C_GetAxisTime::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAxisTime, CallFunc_Round_ReturnValue) == 0x000030, "Member 'W_RocketHUD_C_GetAxisTime::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAxisTime, CallFunc_Percent_IntInt_ReturnValue) == 0x000034, "Member 'W_RocketHUD_C_GetAxisTime::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAxisTime, CallFunc_Divide_IntInt_ReturnValue) == 0x000038, "Member 'W_RocketHUD_C_GetAxisTime::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAxisTime, CallFunc_Conv_IntToText_ReturnValue) == 0x000040, "Member 'W_RocketHUD_C_GetAxisTime::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAxisTime, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'W_RocketHUD_C_GetAxisTime::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAxisTime, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'W_RocketHUD_C_GetAxisTime::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAxisTime, K2Node_MakeArray_Array) == 0x0000D8, "Member 'W_RocketHUD_C_GetAxisTime::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAxisTime, CallFunc_Format_ReturnValue) == 0x0000E8, "Member 'W_RocketHUD_C_GetAxisTime::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function W_RocketHUD.W_RocketHUD_C.GetAlliedTimerPercentage
// 0x0028 (0x0028 - 0x0000)
struct W_RocketHUD_C_GetAlliedTimerPercentage final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Gamestate_Rocket_C*                 K2Node_DynamicCast_AsBP_Gamestate_Rocket;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RocketHUD_C_GetAlliedTimerPercentage) == 0x000008, "Wrong alignment on W_RocketHUD_C_GetAlliedTimerPercentage");
static_assert(sizeof(W_RocketHUD_C_GetAlliedTimerPercentage) == 0x000028, "Wrong size on W_RocketHUD_C_GetAlliedTimerPercentage");
static_assert(offsetof(W_RocketHUD_C_GetAlliedTimerPercentage, ReturnValue) == 0x000000, "Member 'W_RocketHUD_C_GetAlliedTimerPercentage::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAlliedTimerPercentage, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'W_RocketHUD_C_GetAlliedTimerPercentage::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAlliedTimerPercentage, K2Node_DynamicCast_AsBP_Gamestate_Rocket) == 0x000010, "Member 'W_RocketHUD_C_GetAlliedTimerPercentage::K2Node_DynamicCast_AsBP_Gamestate_Rocket' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAlliedTimerPercentage, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_RocketHUD_C_GetAlliedTimerPercentage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAlliedTimerPercentage, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00001C, "Member 'W_RocketHUD_C_GetAlliedTimerPercentage::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAlliedTimerPercentage, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000020, "Member 'W_RocketHUD_C_GetAlliedTimerPercentage::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAlliedTimerPercentage, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000024, "Member 'W_RocketHUD_C_GetAlliedTimerPercentage::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function W_RocketHUD.W_RocketHUD_C.GetAxisTimerPercentage
// 0x0028 (0x0028 - 0x0000)
struct W_RocketHUD_C_GetAxisTimerPercentage final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Gamestate_Rocket_C*                 K2Node_DynamicCast_AsBP_Gamestate_Rocket;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RocketHUD_C_GetAxisTimerPercentage) == 0x000008, "Wrong alignment on W_RocketHUD_C_GetAxisTimerPercentage");
static_assert(sizeof(W_RocketHUD_C_GetAxisTimerPercentage) == 0x000028, "Wrong size on W_RocketHUD_C_GetAxisTimerPercentage");
static_assert(offsetof(W_RocketHUD_C_GetAxisTimerPercentage, ReturnValue) == 0x000000, "Member 'W_RocketHUD_C_GetAxisTimerPercentage::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAxisTimerPercentage, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'W_RocketHUD_C_GetAxisTimerPercentage::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAxisTimerPercentage, K2Node_DynamicCast_AsBP_Gamestate_Rocket) == 0x000010, "Member 'W_RocketHUD_C_GetAxisTimerPercentage::K2Node_DynamicCast_AsBP_Gamestate_Rocket' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAxisTimerPercentage, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_RocketHUD_C_GetAxisTimerPercentage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAxisTimerPercentage, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00001C, "Member 'W_RocketHUD_C_GetAxisTimerPercentage::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAxisTimerPercentage, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000020, "Member 'W_RocketHUD_C_GetAxisTimerPercentage::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RocketHUD_C_GetAxisTimerPercentage, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000024, "Member 'W_RocketHUD_C_GetAxisTimerPercentage::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

}

