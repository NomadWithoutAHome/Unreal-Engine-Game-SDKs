#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Task_VehicleMoveToObjective

#include "Basic.hpp"


namespace SDK::Params
{

// Function Task_VehicleMoveToObjective.Task_VehicleMoveToObjective_C.ExecuteUbergraph_Task_VehicleMoveToObjective
// 0x0050 (0x0050 - 0x0000)
struct Task_VehicleMoveToObjective_C_ExecuteUbergraph_Task_VehicleMoveToObjective final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_TankBase_C*                         K2Node_DynamicCast_AsBP_Tank_Base;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetValueAsObject_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Task_VehicleMoveToObjective_C_ExecuteUbergraph_Task_VehicleMoveToObjective) == 0x000008, "Wrong alignment on Task_VehicleMoveToObjective_C_ExecuteUbergraph_Task_VehicleMoveToObjective");
static_assert(sizeof(Task_VehicleMoveToObjective_C_ExecuteUbergraph_Task_VehicleMoveToObjective) == 0x000050, "Wrong size on Task_VehicleMoveToObjective_C_ExecuteUbergraph_Task_VehicleMoveToObjective");
static_assert(offsetof(Task_VehicleMoveToObjective_C_ExecuteUbergraph_Task_VehicleMoveToObjective, EntryPoint) == 0x000000, "Member 'Task_VehicleMoveToObjective_C_ExecuteUbergraph_Task_VehicleMoveToObjective::EntryPoint' has a wrong offset!");
static_assert(offsetof(Task_VehicleMoveToObjective_C_ExecuteUbergraph_Task_VehicleMoveToObjective, CallFunc_MakeLiteralName_ReturnValue) == 0x000004, "Member 'Task_VehicleMoveToObjective_C_ExecuteUbergraph_Task_VehicleMoveToObjective::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_VehicleMoveToObjective_C_ExecuteUbergraph_Task_VehicleMoveToObjective, K2Node_Event_OwnerController) == 0x000010, "Member 'Task_VehicleMoveToObjective_C_ExecuteUbergraph_Task_VehicleMoveToObjective::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(Task_VehicleMoveToObjective_C_ExecuteUbergraph_Task_VehicleMoveToObjective, K2Node_Event_ControlledPawn) == 0x000018, "Member 'Task_VehicleMoveToObjective_C_ExecuteUbergraph_Task_VehicleMoveToObjective::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(Task_VehicleMoveToObjective_C_ExecuteUbergraph_Task_VehicleMoveToObjective, K2Node_DynamicCast_AsBP_Tank_Base) == 0x000020, "Member 'Task_VehicleMoveToObjective_C_ExecuteUbergraph_Task_VehicleMoveToObjective::K2Node_DynamicCast_AsBP_Tank_Base' has a wrong offset!");
static_assert(offsetof(Task_VehicleMoveToObjective_C_ExecuteUbergraph_Task_VehicleMoveToObjective, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Task_VehicleMoveToObjective_C_ExecuteUbergraph_Task_VehicleMoveToObjective::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Task_VehicleMoveToObjective_C_ExecuteUbergraph_Task_VehicleMoveToObjective, CallFunc_GetBlackboard_ReturnValue) == 0x000030, "Member 'Task_VehicleMoveToObjective_C_ExecuteUbergraph_Task_VehicleMoveToObjective::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_VehicleMoveToObjective_C_ExecuteUbergraph_Task_VehicleMoveToObjective, CallFunc_GetValueAsObject_ReturnValue) == 0x000038, "Member 'Task_VehicleMoveToObjective_C_ExecuteUbergraph_Task_VehicleMoveToObjective::CallFunc_GetValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_VehicleMoveToObjective_C_ExecuteUbergraph_Task_VehicleMoveToObjective, K2Node_DynamicCast_AsActor) == 0x000040, "Member 'Task_VehicleMoveToObjective_C_ExecuteUbergraph_Task_VehicleMoveToObjective::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(Task_VehicleMoveToObjective_C_ExecuteUbergraph_Task_VehicleMoveToObjective, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'Task_VehicleMoveToObjective_C_ExecuteUbergraph_Task_VehicleMoveToObjective::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function Task_VehicleMoveToObjective.Task_VehicleMoveToObjective_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct Task_VehicleMoveToObjective_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_VehicleMoveToObjective_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on Task_VehicleMoveToObjective_C_ReceiveExecuteAI");
static_assert(sizeof(Task_VehicleMoveToObjective_C_ReceiveExecuteAI) == 0x000010, "Wrong size on Task_VehicleMoveToObjective_C_ReceiveExecuteAI");
static_assert(offsetof(Task_VehicleMoveToObjective_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'Task_VehicleMoveToObjective_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(Task_VehicleMoveToObjective_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'Task_VehicleMoveToObjective_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}

