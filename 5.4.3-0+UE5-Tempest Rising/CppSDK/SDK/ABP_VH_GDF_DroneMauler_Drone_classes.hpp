#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_VH_GDF_DroneMauler_Drone

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ABP_VH_GDF_DroneMauler_Drone_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Tempest_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_VH_GDF_DroneMauler_Drone.ABP_VH_GDF_DroneMauler_Drone_C
// 0x03B0 (0x07D0 - 0x0420)
class UABP_VH_GDF_DroneMauler_Drone_C final : public UTedAnimInstance_Aircraft
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0420(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_VH_GDF_DroneMauler_Drone::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables; // 0x0428(0x0008)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Tag;                        // 0x0430(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0438(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0440(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0448(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0468(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x04B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x04D8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0500(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0548(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0568(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x05B0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x05D0(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0698(0x0048)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose;                        // 0x06E0(0x0010)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x06F0(0x00C8)()
	bool                                          bIsHitReactActive;                                 // 0x07B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B9[0x7];                                      // 0x07B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        IdleStartPos;                                      // 0x07C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintInitializeAnimation();
	void ExecuteUbergraph_ABP_VH_GDF_DroneMauler_Drone(int32 EntryPoint);
	void HitReaction();
	void OnBlendOut_62DDE38F49DFBE3266A935950CF5F169(class FName NotifyName);
	void OnBlendOut_BFF543014E656ED6ED923EBD6AED9BAB(class FName NotifyName);
	void OnCompleted_62DDE38F49DFBE3266A935950CF5F169(class FName NotifyName);
	void OnCompleted_BFF543014E656ED6ED923EBD6AED9BAB(class FName NotifyName);
	void OnInterrupted_62DDE38F49DFBE3266A935950CF5F169(class FName NotifyName);
	void OnInterrupted_BFF543014E656ED6ED923EBD6AED9BAB(class FName NotifyName);
	void OnNotifyBegin_62DDE38F49DFBE3266A935950CF5F169(class FName NotifyName);
	void OnNotifyBegin_BFF543014E656ED6ED923EBD6AED9BAB(class FName NotifyName);
	void OnNotifyEnd_62DDE38F49DFBE3266A935950CF5F169(class FName NotifyName);
	void OnNotifyEnd_BFF543014E656ED6ED923EBD6AED9BAB(class FName NotifyName);
	void OnTakeDamage(class AActor* DamagedActor, float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void TestFire();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_VH_GDF_DroneMauler_Drone_C">();
	}
	static class UABP_VH_GDF_DroneMauler_Drone_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_VH_GDF_DroneMauler_Drone_C>();
	}
};
static_assert(alignof(UABP_VH_GDF_DroneMauler_Drone_C) == 0x000010, "Wrong alignment on UABP_VH_GDF_DroneMauler_Drone_C");
static_assert(sizeof(UABP_VH_GDF_DroneMauler_Drone_C) == 0x0007D0, "Wrong size on UABP_VH_GDF_DroneMauler_Drone_C");
static_assert(offsetof(UABP_VH_GDF_DroneMauler_Drone_C, UberGraphFrame) == 0x000420, "Member 'UABP_VH_GDF_DroneMauler_Drone_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_DroneMauler_Drone_C, __AnimBlueprintMutables) == 0x000428, "Member 'UABP_VH_GDF_DroneMauler_Drone_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_DroneMauler_Drone_C, AnimBlueprintExtension_Tag) == 0x000430, "Member 'UABP_VH_GDF_DroneMauler_Drone_C::AnimBlueprintExtension_Tag' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_DroneMauler_Drone_C, AnimBlueprintExtension_PropertyAccess) == 0x000438, "Member 'UABP_VH_GDF_DroneMauler_Drone_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_DroneMauler_Drone_C, AnimBlueprintExtension_Base) == 0x000440, "Member 'UABP_VH_GDF_DroneMauler_Drone_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_DroneMauler_Drone_C, AnimGraphNode_Root) == 0x000448, "Member 'UABP_VH_GDF_DroneMauler_Drone_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_DroneMauler_Drone_C, AnimGraphNode_Slot_1) == 0x000468, "Member 'UABP_VH_GDF_DroneMauler_Drone_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_DroneMauler_Drone_C, AnimGraphNode_TransitionResult_1) == 0x0004B0, "Member 'UABP_VH_GDF_DroneMauler_Drone_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_DroneMauler_Drone_C, AnimGraphNode_TransitionResult) == 0x0004D8, "Member 'UABP_VH_GDF_DroneMauler_Drone_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_DroneMauler_Drone_C, AnimGraphNode_SequencePlayer_1) == 0x000500, "Member 'UABP_VH_GDF_DroneMauler_Drone_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_DroneMauler_Drone_C, AnimGraphNode_StateResult_1) == 0x000548, "Member 'UABP_VH_GDF_DroneMauler_Drone_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_DroneMauler_Drone_C, AnimGraphNode_SequencePlayer) == 0x000568, "Member 'UABP_VH_GDF_DroneMauler_Drone_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_DroneMauler_Drone_C, AnimGraphNode_StateResult) == 0x0005B0, "Member 'UABP_VH_GDF_DroneMauler_Drone_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_DroneMauler_Drone_C, AnimGraphNode_StateMachine) == 0x0005D0, "Member 'UABP_VH_GDF_DroneMauler_Drone_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_DroneMauler_Drone_C, AnimGraphNode_Slot) == 0x000698, "Member 'UABP_VH_GDF_DroneMauler_Drone_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_DroneMauler_Drone_C, AnimGraphNode_IdentityPose) == 0x0006E0, "Member 'UABP_VH_GDF_DroneMauler_Drone_C::AnimGraphNode_IdentityPose' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_DroneMauler_Drone_C, AnimGraphNode_ApplyAdditive) == 0x0006F0, "Member 'UABP_VH_GDF_DroneMauler_Drone_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_DroneMauler_Drone_C, bIsHitReactActive) == 0x0007B8, "Member 'UABP_VH_GDF_DroneMauler_Drone_C::bIsHitReactActive' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_DroneMauler_Drone_C, IdleStartPos) == 0x0007C0, "Member 'UABP_VH_GDF_DroneMauler_Drone_C::IdleStartPos' has a wrong offset!");

}

