#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TedUpgradeLogic_PowerManagement_HarvestSpeed

#include "Basic.hpp"

#include "TedUpgradeLogic_PowerManagement_HarvestSpeed_classes.hpp"
#include "TedUpgradeLogic_PowerManagement_HarvestSpeed_parameters.hpp"


namespace SDK
{

// Function TedUpgradeLogic_PowerManagement_HarvestSpeed.TedUpgradeLogic_PowerManagement_HarvestSpeed_C.K2_ApplyUpgrade
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// const struct FTedActiveUpgrade&         InActiveUpgrade                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UTedUpgradeLogic_PowerManagement_HarvestSpeed_C::K2_ApplyUpgrade(const struct FTedActiveUpgrade& InActiveUpgrade) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUpgradeLogic_PowerManagement_HarvestSpeed_C", "K2_ApplyUpgrade");

	Params::TedUpgradeLogic_PowerManagement_HarvestSpeed_C_K2_ApplyUpgrade Parms{};

	Parms.InActiveUpgrade = std::move(InActiveUpgrade);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TedUpgradeLogic_PowerManagement_HarvestSpeed.TedUpgradeLogic_PowerManagement_HarvestSpeed_C.K2_IsApplicableToPawn
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const class ATedPawn*                   InPawn                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UTedUpgradeLogic_PowerManagement_HarvestSpeed_C::K2_IsApplicableToPawn(const class ATedPawn* InPawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUpgradeLogic_PowerManagement_HarvestSpeed_C", "K2_IsApplicableToPawn");

	Params::TedUpgradeLogic_PowerManagement_HarvestSpeed_C_K2_IsApplicableToPawn Parms{};

	Parms.InPawn = InPawn;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function TedUpgradeLogic_PowerManagement_HarvestSpeed.TedUpgradeLogic_PowerManagement_HarvestSpeed_C.K2_RemoveUpgrade
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// const struct FTedActiveUpgrade&         InActiveUpgrade                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UTedUpgradeLogic_PowerManagement_HarvestSpeed_C::K2_RemoveUpgrade(const struct FTedActiveUpgrade& InActiveUpgrade) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUpgradeLogic_PowerManagement_HarvestSpeed_C", "K2_RemoveUpgrade");

	Params::TedUpgradeLogic_PowerManagement_HarvestSpeed_C_K2_RemoveUpgrade Parms{};

	Parms.InActiveUpgrade = std::move(InActiveUpgrade);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TedUpgradeLogic_PowerManagement_HarvestSpeed.TedUpgradeLogic_PowerManagement_HarvestSpeed_C.K2_TryApplyToPawn
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ATedPawn*                         InPawn                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UTedUpgradeLogic_PowerManagement_HarvestSpeed_C::K2_TryApplyToPawn(class ATedPawn* InPawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUpgradeLogic_PowerManagement_HarvestSpeed_C", "K2_TryApplyToPawn");

	Params::TedUpgradeLogic_PowerManagement_HarvestSpeed_C_K2_TryApplyToPawn Parms{};

	Parms.InPawn = InPawn;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function TedUpgradeLogic_PowerManagement_HarvestSpeed.TedUpgradeLogic_PowerManagement_HarvestSpeed_C.K2_TryRemoveFromPawn
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ATedPawn*                         InPawn                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UTedUpgradeLogic_PowerManagement_HarvestSpeed_C::K2_TryRemoveFromPawn(class ATedPawn* InPawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TedUpgradeLogic_PowerManagement_HarvestSpeed_C", "K2_TryRemoveFromPawn");

	Params::TedUpgradeLogic_PowerManagement_HarvestSpeed_C_K2_TryRemoveFromPawn Parms{};

	Parms.InPawn = InPawn;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

