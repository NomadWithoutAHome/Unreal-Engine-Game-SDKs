#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TedUpgradeLogic_LogisticsPlan_HarvestSpeed

#include "Basic.hpp"

#include "Tempest_structs.hpp"


namespace SDK::Params
{

// Function TedUpgradeLogic_LogisticsPlan_HarvestSpeed.TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C.K2_ApplyUpgrade
// 0x00A0 (0x00A0 - 0x0000)
struct TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade final
{
public:
	struct FTedActiveUpgrade                      InActiveUpgrade;                                   // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATedPawn*                               CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TryApplyToPawn_ReturnValue;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UTedPlayerData*                         CallFunc_GetPlayerData_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class ATedUnitBase*>                   CallFunc_GetOwnedUnits_OutUnits;                   // 0x0060(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetOwnedUnits_ReturnValue;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATedPawn*                               CallFunc_Array_Get_Item_1;                         // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TryApplyToPawn_ReturnValue_1;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade) == 0x000008, "Wrong alignment on TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade");
static_assert(sizeof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade) == 0x0000A0, "Wrong size on TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade, InActiveUpgrade) == 0x000000, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade::InActiveUpgrade' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade, Temp_int_Array_Index_Variable) == 0x000040, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade, CallFunc_Array_Get_Item) == 0x000048, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade, CallFunc_K2_TryApplyToPawn_ReturnValue) == 0x000054, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade::CallFunc_K2_TryApplyToPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade, CallFunc_IsValid_ReturnValue) == 0x000055, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade, CallFunc_GetPlayerData_ReturnValue) == 0x000058, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade::CallFunc_GetPlayerData_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade, CallFunc_GetOwnedUnits_OutUnits) == 0x000060, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade::CallFunc_GetOwnedUnits_OutUnits' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade, CallFunc_GetOwnedUnits_ReturnValue) == 0x000070, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade::CallFunc_GetOwnedUnits_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade, CallFunc_IsValid_ReturnValue_1) == 0x000071, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade, CallFunc_Array_Length_ReturnValue_1) == 0x000074, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade, Temp_int_Array_Index_Variable_1) == 0x000084, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade, CallFunc_K2_TryApplyToPawn_ReturnValue_1) == 0x000090, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade::CallFunc_K2_TryApplyToPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade, Temp_int_Loop_Counter_Variable_1) == 0x000094, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade, CallFunc_Less_IntInt_ReturnValue_1) == 0x000098, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade, CallFunc_Add_IntInt_ReturnValue_1) == 0x00009C, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_ApplyUpgrade::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function TedUpgradeLogic_LogisticsPlan_HarvestSpeed.TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C.K2_IsApplicableToPawn
// 0x0020 (0x0020 - 0x0000)
struct TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_IsApplicableToPawn final
{
public:
	const class ATedPawn*                         InPawn;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETedFaction                                   CallFunc_GetPawnFactionFromDefinition_ReturnValue; // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ATedVehicle_Harvester*                  K2Node_DynamicCast_AsTed_Vehicle_Harvester;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_IsApplicableToPawn) == 0x000008, "Wrong alignment on TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_IsApplicableToPawn");
static_assert(sizeof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_IsApplicableToPawn) == 0x000020, "Wrong size on TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_IsApplicableToPawn");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_IsApplicableToPawn, InPawn) == 0x000000, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_IsApplicableToPawn::InPawn' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_IsApplicableToPawn, ReturnValue) == 0x000008, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_IsApplicableToPawn::ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_IsApplicableToPawn, CallFunc_GetPawnFactionFromDefinition_ReturnValue) == 0x000009, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_IsApplicableToPawn::CallFunc_GetPawnFactionFromDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_IsApplicableToPawn, K2Node_DynamicCast_AsTed_Vehicle_Harvester) == 0x000010, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_IsApplicableToPawn::K2Node_DynamicCast_AsTed_Vehicle_Harvester' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_IsApplicableToPawn, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_IsApplicableToPawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_IsApplicableToPawn, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_IsApplicableToPawn::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function TedUpgradeLogic_LogisticsPlan_HarvestSpeed.TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C.K2_RemoveUpgrade
// 0x00A0 (0x00A0 - 0x0000)
struct TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade final
{
public:
	struct FTedActiveUpgrade                      InActiveUpgrade;                                   // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATedPawn*                               CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TryRemoveFromPawn_ReturnValue;         // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UTedPlayerData*                         CallFunc_GetPlayerData_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class ATedUnitBase*>                   CallFunc_GetOwnedUnits_OutUnits;                   // 0x0060(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetOwnedUnits_ReturnValue;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATedPawn*                               CallFunc_Array_Get_Item_1;                         // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TryRemoveFromPawn_ReturnValue_1;       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade) == 0x000008, "Wrong alignment on TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade");
static_assert(sizeof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade) == 0x0000A0, "Wrong size on TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade, InActiveUpgrade) == 0x000000, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade::InActiveUpgrade' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade, Temp_int_Array_Index_Variable) == 0x000040, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade, CallFunc_Array_Get_Item) == 0x000048, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade, CallFunc_K2_TryRemoveFromPawn_ReturnValue) == 0x000054, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade::CallFunc_K2_TryRemoveFromPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade, CallFunc_IsValid_ReturnValue) == 0x000055, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade, CallFunc_GetPlayerData_ReturnValue) == 0x000058, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade::CallFunc_GetPlayerData_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade, CallFunc_GetOwnedUnits_OutUnits) == 0x000060, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade::CallFunc_GetOwnedUnits_OutUnits' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade, CallFunc_GetOwnedUnits_ReturnValue) == 0x000070, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade::CallFunc_GetOwnedUnits_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade, CallFunc_IsValid_ReturnValue_1) == 0x000071, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade, CallFunc_Array_Length_ReturnValue_1) == 0x000074, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade, Temp_int_Array_Index_Variable_1) == 0x000084, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade, CallFunc_K2_TryRemoveFromPawn_ReturnValue_1) == 0x000090, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade::CallFunc_K2_TryRemoveFromPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade, Temp_int_Loop_Counter_Variable_1) == 0x000094, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade, CallFunc_Less_IntInt_ReturnValue_1) == 0x000098, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade, CallFunc_Add_IntInt_ReturnValue_1) == 0x00009C, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_RemoveUpgrade::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function TedUpgradeLogic_LogisticsPlan_HarvestSpeed.TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C.K2_TryApplyToPawn
// 0x0068 (0x0068 - 0x0000)
struct TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryApplyToPawn final
{
public:
	class ATedPawn*                               InPawn;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATedVehicle_Harvester*                  K2Node_DynamicCast_AsTed_Vehicle_Harvester;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ITedHarvesterInterface> CallFunc_K2_GetHarvesterData_self_CastInput;      // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHarvesterData                         CallFunc_K2_GetHarvesterData_ReturnValue;          // 0x0038(0x0010)(NoDestructor)
	bool                                          CallFunc_K2_IsApplicableToPawn_ReturnValue;        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryApplyToPawn) == 0x000008, "Wrong alignment on TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryApplyToPawn");
static_assert(sizeof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryApplyToPawn) == 0x000068, "Wrong size on TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryApplyToPawn");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryApplyToPawn, InPawn) == 0x000000, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryApplyToPawn::InPawn' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryApplyToPawn, ReturnValue) == 0x000008, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryApplyToPawn::ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryApplyToPawn, K2Node_DynamicCast_AsTed_Vehicle_Harvester) == 0x000010, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryApplyToPawn::K2Node_DynamicCast_AsTed_Vehicle_Harvester' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryApplyToPawn, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryApplyToPawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryApplyToPawn, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryApplyToPawn::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryApplyToPawn, CallFunc_K2_GetHarvesterData_self_CastInput) == 0x000028, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryApplyToPawn::CallFunc_K2_GetHarvesterData_self_CastInput' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryApplyToPawn, CallFunc_K2_GetHarvesterData_ReturnValue) == 0x000038, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryApplyToPawn::CallFunc_K2_GetHarvesterData_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryApplyToPawn, CallFunc_K2_IsApplicableToPawn_ReturnValue) == 0x000048, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryApplyToPawn::CallFunc_K2_IsApplicableToPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryApplyToPawn, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000050, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryApplyToPawn::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryApplyToPawn, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryApplyToPawn::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryApplyToPawn, CallFunc_FTrunc_ReturnValue) == 0x000060, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryApplyToPawn::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

// Function TedUpgradeLogic_LogisticsPlan_HarvestSpeed.TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C.K2_TryRemoveFromPawn
// 0x0068 (0x0068 - 0x0000)
struct TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryRemoveFromPawn final
{
public:
	class ATedPawn*                               InPawn;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATedVehicle_Harvester*                  K2Node_DynamicCast_AsTed_Vehicle_Harvester;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ITedHarvesterInterface> CallFunc_K2_GetHarvesterData_self_CastInput;      // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHarvesterData                         CallFunc_K2_GetHarvesterData_ReturnValue;          // 0x0038(0x0010)(NoDestructor)
	bool                                          CallFunc_K2_IsApplicableToPawn_ReturnValue;        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryRemoveFromPawn) == 0x000008, "Wrong alignment on TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryRemoveFromPawn");
static_assert(sizeof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryRemoveFromPawn) == 0x000068, "Wrong size on TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryRemoveFromPawn");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryRemoveFromPawn, InPawn) == 0x000000, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryRemoveFromPawn::InPawn' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryRemoveFromPawn, ReturnValue) == 0x000008, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryRemoveFromPawn::ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryRemoveFromPawn, K2Node_DynamicCast_AsTed_Vehicle_Harvester) == 0x000010, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryRemoveFromPawn::K2Node_DynamicCast_AsTed_Vehicle_Harvester' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryRemoveFromPawn, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryRemoveFromPawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryRemoveFromPawn, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryRemoveFromPawn::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryRemoveFromPawn, CallFunc_K2_GetHarvesterData_self_CastInput) == 0x000028, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryRemoveFromPawn::CallFunc_K2_GetHarvesterData_self_CastInput' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryRemoveFromPawn, CallFunc_K2_GetHarvesterData_ReturnValue) == 0x000038, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryRemoveFromPawn::CallFunc_K2_GetHarvesterData_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryRemoveFromPawn, CallFunc_K2_IsApplicableToPawn_ReturnValue) == 0x000048, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryRemoveFromPawn::CallFunc_K2_IsApplicableToPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryRemoveFromPawn, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000050, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryRemoveFromPawn::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryRemoveFromPawn, CallFunc_SafeDivide_ReturnValue) == 0x000058, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryRemoveFromPawn::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryRemoveFromPawn, CallFunc_FCeil_ReturnValue) == 0x000060, "Member 'TedUpgradeLogic_LogisticsPlan_HarvestSpeed_C_K2_TryRemoveFromPawn::CallFunc_FCeil_ReturnValue' has a wrong offset!");

}

