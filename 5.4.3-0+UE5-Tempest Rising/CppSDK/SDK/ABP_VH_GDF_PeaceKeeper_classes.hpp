#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_VH_GDF_PeaceKeeper

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ABP_VH_GDF_PeaceKeeper_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Tempest_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_VH_GDF_PeaceKeeper.ABP_VH_GDF_PeaceKeeper_C
// 0x0810 (0x0C30 - 0x0420)
class UABP_VH_GDF_PeaceKeeper_C final : public UTedAnimInstance_Aircraft
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0420(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_VH_GDF_PeaceKeeper::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;       // 0x0428(0x001C)(HasGetValueTypeHash)
	uint8                                         Pad_444[0x4];                                      // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0448(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0450(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0458(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0478(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x04A0(0x0028)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose_2;                      // 0x04C8(0x0010)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x04D8(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x04F8(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0568(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0588(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0650(0x0048)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose_1;                      // 0x0698(0x0010)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x06A8(0x00C8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0770(0x0070)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x07E0(0x0080)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x0860(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0928(0x0028)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x0950(0x0118)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0A68(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0B90(0x0020)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x0BB0(0x0010)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0BC0(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0BE0(0x0048)()

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VH_GDF_PeaceKeeper_AnimGraphNode_BlendListByBool_DF498B3F46BFBD4EE8B9FC9962A9098F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VH_GDF_PeaceKeeper_AnimGraphNode_ModifyBone_00A468C3489B22A76B66CDA7786BB472();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VH_GDF_PeaceKeeper_AnimGraphNode_RotationOffsetBlendSpace_EEAB399C4BBA356CF7FA988486E801B8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VH_GDF_PeaceKeeper_AnimGraphNode_TransitionResult_7FD3C20D4B690AB1FECFCA935523A7D8();
	void ExecuteUbergraph_ABP_VH_GDF_PeaceKeeper(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_VH_GDF_PeaceKeeper_C">();
	}
	static class UABP_VH_GDF_PeaceKeeper_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_VH_GDF_PeaceKeeper_C>();
	}
};
static_assert(alignof(UABP_VH_GDF_PeaceKeeper_C) == 0x000010, "Wrong alignment on UABP_VH_GDF_PeaceKeeper_C");
static_assert(sizeof(UABP_VH_GDF_PeaceKeeper_C) == 0x000C30, "Wrong size on UABP_VH_GDF_PeaceKeeper_C");
static_assert(offsetof(UABP_VH_GDF_PeaceKeeper_C, UberGraphFrame) == 0x000420, "Member 'UABP_VH_GDF_PeaceKeeper_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_PeaceKeeper_C, __AnimBlueprintMutables) == 0x000428, "Member 'UABP_VH_GDF_PeaceKeeper_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_PeaceKeeper_C, AnimBlueprintExtension_PropertyAccess) == 0x000448, "Member 'UABP_VH_GDF_PeaceKeeper_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_PeaceKeeper_C, AnimBlueprintExtension_Base) == 0x000450, "Member 'UABP_VH_GDF_PeaceKeeper_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_PeaceKeeper_C, AnimGraphNode_Root) == 0x000458, "Member 'UABP_VH_GDF_PeaceKeeper_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_PeaceKeeper_C, AnimGraphNode_TransitionResult_1) == 0x000478, "Member 'UABP_VH_GDF_PeaceKeeper_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_PeaceKeeper_C, AnimGraphNode_TransitionResult) == 0x0004A0, "Member 'UABP_VH_GDF_PeaceKeeper_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_PeaceKeeper_C, AnimGraphNode_LocalRefPose_2) == 0x0004C8, "Member 'UABP_VH_GDF_PeaceKeeper_C::AnimGraphNode_LocalRefPose_2' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_PeaceKeeper_C, AnimGraphNode_StateResult_1) == 0x0004D8, "Member 'UABP_VH_GDF_PeaceKeeper_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_PeaceKeeper_C, AnimGraphNode_BlendSpacePlayer_1) == 0x0004F8, "Member 'UABP_VH_GDF_PeaceKeeper_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_PeaceKeeper_C, AnimGraphNode_StateResult) == 0x000568, "Member 'UABP_VH_GDF_PeaceKeeper_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_PeaceKeeper_C, AnimGraphNode_StateMachine) == 0x000588, "Member 'UABP_VH_GDF_PeaceKeeper_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_PeaceKeeper_C, AnimGraphNode_Slot) == 0x000650, "Member 'UABP_VH_GDF_PeaceKeeper_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_PeaceKeeper_C, AnimGraphNode_LocalRefPose_1) == 0x000698, "Member 'UABP_VH_GDF_PeaceKeeper_C::AnimGraphNode_LocalRefPose_1' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_PeaceKeeper_C, AnimGraphNode_ApplyAdditive_1) == 0x0006A8, "Member 'UABP_VH_GDF_PeaceKeeper_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_PeaceKeeper_C, AnimGraphNode_BlendSpacePlayer) == 0x000770, "Member 'UABP_VH_GDF_PeaceKeeper_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_PeaceKeeper_C, AnimGraphNode_SaveCachedPose) == 0x0007E0, "Member 'UABP_VH_GDF_PeaceKeeper_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_PeaceKeeper_C, AnimGraphNode_ApplyAdditive) == 0x000860, "Member 'UABP_VH_GDF_PeaceKeeper_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_PeaceKeeper_C, AnimGraphNode_UseCachedPose) == 0x000928, "Member 'UABP_VH_GDF_PeaceKeeper_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_PeaceKeeper_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x000950, "Member 'UABP_VH_GDF_PeaceKeeper_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_PeaceKeeper_C, AnimGraphNode_ModifyBone) == 0x000A68, "Member 'UABP_VH_GDF_PeaceKeeper_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_PeaceKeeper_C, AnimGraphNode_ComponentToLocalSpace) == 0x000B90, "Member 'UABP_VH_GDF_PeaceKeeper_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_PeaceKeeper_C, AnimGraphNode_LocalRefPose) == 0x000BB0, "Member 'UABP_VH_GDF_PeaceKeeper_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_PeaceKeeper_C, AnimGraphNode_LocalToComponentSpace) == 0x000BC0, "Member 'UABP_VH_GDF_PeaceKeeper_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_VH_GDF_PeaceKeeper_C, AnimGraphNode_BlendListByBool) == 0x000BE0, "Member 'UABP_VH_GDF_PeaceKeeper_C::AnimGraphNode_BlendListByBool' has a wrong offset!");

}

