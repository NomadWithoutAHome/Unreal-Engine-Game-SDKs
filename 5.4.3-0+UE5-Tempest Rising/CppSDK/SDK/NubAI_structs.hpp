#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NubAI

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum NubAI.EInfluenceMapQueryType
// NumValues: 0x0003
enum class EInfluenceMapQueryType : uint8
{
	LowestInfluence                          = 0,
	HighestInfluence                         = 1,
	EInfluenceMapQueryType_MAX               = 2,
};

// Enum NubAI.EInfluenceMapArithmeticOperationType
// NumValues: 0x0003
enum class EInfluenceMapArithmeticOperationType : uint8
{
	Addition                                 = 0,
	Multiplication                           = 1,
	EInfluenceMapArithmeticOperationType_MAX = 2,
};

// Enum NubAI.EUtilityAIActionInterruptionPolicy
// NumValues: 0x0003
enum class EUtilityAIActionInterruptionPolicy : uint8
{
	Allowed                                  = 0,
	NotAllowed                               = 1,
	EUtilityAIActionInterruptionPolicy_MAX   = 2,
};

// Enum NubAI.EUtilityAIConsiderationScoringCost
// NumValues: 0x0004
enum class EUtilityAIConsiderationScoringCost : uint8
{
	Low                                      = 0,
	Medium                                   = 1,
	High                                     = 2,
	EUtilityAIConsiderationScoringCost_MAX   = 3,
};

// Enum NubAI.EUtilityAIConsiderationtDistanceType
// NumValues: 0x0003
enum class EUtilityAIConsiderationtDistanceType : uint8
{
	Distance3D                               = 0,
	Distance2D                               = 1,
	EUtilityAIConsiderationtDistanceType_MAX = 2,
};

// Enum NubAI.EUtilityAIDataProviderOwnerType
// NumValues: 0x0005
enum class EUtilityAIDataProviderOwnerType : uint8
{
	Source                                   = 0,
	Target                                   = 1,
	SourceBlackboard                         = 2,
	WorldBlackboard                          = 3,
	EUtilityAIDataProviderOwnerType_MAX      = 4,
};

// Enum NubAI.EUtilityAIArithmeticOperationType
// NumValues: 0x0005
enum class EUtilityAIArithmeticOperationType : uint8
{
	Addition                                 = 0,
	Subtraction                              = 1,
	Multiplication                           = 2,
	Division                                 = 3,
	EUtilityAIArithmeticOperationType_MAX    = 4,
};

// Enum NubAI.EUtilityAIValueComparisonType
// NumValues: 0x0007
enum class EUtilityAIValueComparisonType : uint8
{
	Less                                     = 0,
	LessOrEqual                              = 1,
	Equal                                    = 2,
	NotEqual                                 = 3,
	GreaterOrEqual                           = 4,
	Greater                                  = 5,
	EUtilityAIValueComparisonType_MAX        = 6,
};

// Enum NubAI.EUtilityAICompoundScoreOperator
// NumValues: 0x0004
enum class EUtilityAICompoundScoreOperator : uint8
{
	AverageScore                             = 0,
	MinScore                                 = 1,
	MaxScore                                 = 2,
	EUtilityAICompoundScoreOperator_MAX      = 3,
};

// Enum NubAI.EUtilityAITagsOwnerType
// NumValues: 0x0003
enum class EUtilityAITagsOwnerType : uint8
{
	Source                                   = 0,
	Target                                   = 1,
	EUtilityAITagsOwnerType_MAX              = 2,
};

// Enum NubAI.EUtilityAIAbilityOwnerType
// NumValues: 0x0003
enum class EUtilityAIAbilityOwnerType : uint8
{
	Source                                   = 0,
	Target                                   = 1,
	EUtilityAIAbilityOwnerType_MAX           = 2,
};

// Enum NubAI.EUtilityAIInfluenceMapQueryType
// NumValues: 0x0004
enum class EUtilityAIInfluenceMapQueryType : uint8
{
	ValueAtLocation                          = 0,
	HighestValueInRange                      = 1,
	LowestValueInRange                       = 2,
	EUtilityAIInfluenceMapQueryType_MAX      = 3,
};

// Enum NubAI.EUtilityAIInfluenceMapQueryOwnerType
// NumValues: 0x0003
enum class EUtilityAIInfluenceMapQueryOwnerType : uint8
{
	Source                                   = 0,
	Target                                   = 1,
	EUtilityAIInfluenceMapQueryOwnerType_MAX = 2,
};

// Enum NubAI.EUtilityAIInfluenceMapQueryLocationType
// NumValues: 0x0003
enum class EUtilityAIInfluenceMapQueryLocationType : uint8
{
	Source                                   = 0,
	Target                                   = 1,
	EUtilityAIInfluenceMapQueryLocationType_MAX = 2,
};

// Enum NubAI.EUtilityAIResponseCurveType
// NumValues: 0x0007
enum class EUtilityAIResponseCurveType : uint8
{
	Linear                                   = 0,
	Polynomial                               = 1,
	Logistic                                 = 2,
	Logit                                    = 3,
	Normal                                   = 4,
	Sine                                     = 5,
	EUtilityAIResponseCurveType_MAX          = 6,
};

// Enum NubAI.EUtilityAIDecisionContextType
// NumValues: 0x0006
enum class EUtilityAIDecisionContextType : uint8
{
	StandAlone                               = 0,
	Self                                     = 1,
	SingleTarget                             = 2,
	SingleTargetOnSelf                       = 3,
	LocationTarget                           = 4,
	EUtilityAIDecisionContextType_MAX        = 5,
};

// Enum NubAI.EUtilityAIActionResult
// NumValues: 0x0005
enum class EUtilityAIActionResult : uint8
{
	Succeeded                                = 0,
	Failed                                   = 1,
	Aborted                                  = 2,
	InProgress                               = 3,
	EUtilityAIActionResult_MAX               = 4,
};

// ScriptStruct NubAI.InfluenceMapQueryParam
// 0x0038 (0x0038 - 0x0000)
struct FInfluenceMapQueryParam final
{
public:
	TSubclassOf<class UInfluenceMap>              MapClass;                                          // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInfluenceMapArithmeticOperationType          Operator;                                          // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Scale;                                             // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInverse;                                          // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNormalizeSelf;                                    // 0x0011(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2f                              NormalizeSelfInputRange;                           // 0x0014(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2f                              NormalizeSelfOutputRange;                          // 0x001C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNormalizeResult;                                  // 0x0024(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2f                              NormalizeResultInputRange;                         // 0x0028(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2f                              NormalizeResultOutputRange;                        // 0x0030(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FInfluenceMapQueryParam) == 0x000008, "Wrong alignment on FInfluenceMapQueryParam");
static_assert(sizeof(FInfluenceMapQueryParam) == 0x000038, "Wrong size on FInfluenceMapQueryParam");
static_assert(offsetof(FInfluenceMapQueryParam, MapClass) == 0x000000, "Member 'FInfluenceMapQueryParam::MapClass' has a wrong offset!");
static_assert(offsetof(FInfluenceMapQueryParam, Operator) == 0x000008, "Member 'FInfluenceMapQueryParam::Operator' has a wrong offset!");
static_assert(offsetof(FInfluenceMapQueryParam, Scale) == 0x00000C, "Member 'FInfluenceMapQueryParam::Scale' has a wrong offset!");
static_assert(offsetof(FInfluenceMapQueryParam, bInverse) == 0x000010, "Member 'FInfluenceMapQueryParam::bInverse' has a wrong offset!");
static_assert(offsetof(FInfluenceMapQueryParam, bNormalizeSelf) == 0x000011, "Member 'FInfluenceMapQueryParam::bNormalizeSelf' has a wrong offset!");
static_assert(offsetof(FInfluenceMapQueryParam, NormalizeSelfInputRange) == 0x000014, "Member 'FInfluenceMapQueryParam::NormalizeSelfInputRange' has a wrong offset!");
static_assert(offsetof(FInfluenceMapQueryParam, NormalizeSelfOutputRange) == 0x00001C, "Member 'FInfluenceMapQueryParam::NormalizeSelfOutputRange' has a wrong offset!");
static_assert(offsetof(FInfluenceMapQueryParam, bNormalizeResult) == 0x000024, "Member 'FInfluenceMapQueryParam::bNormalizeResult' has a wrong offset!");
static_assert(offsetof(FInfluenceMapQueryParam, NormalizeResultInputRange) == 0x000028, "Member 'FInfluenceMapQueryParam::NormalizeResultInputRange' has a wrong offset!");
static_assert(offsetof(FInfluenceMapQueryParam, NormalizeResultOutputRange) == 0x000030, "Member 'FInfluenceMapQueryParam::NormalizeResultOutputRange' has a wrong offset!");

// ScriptStruct NubAI.InfluenceMapQueryParams
// 0x0010 (0x0010 - 0x0000)
struct FInfluenceMapQueryParams final
{
public:
	TArray<struct FInfluenceMapQueryParam>        Params;                                            // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FInfluenceMapQueryParams) == 0x000008, "Wrong alignment on FInfluenceMapQueryParams");
static_assert(sizeof(FInfluenceMapQueryParams) == 0x000010, "Wrong size on FInfluenceMapQueryParams");
static_assert(offsetof(FInfluenceMapQueryParams, Params) == 0x000000, "Member 'FInfluenceMapQueryParams::Params' has a wrong offset!");

// ScriptStruct NubAI.InfluenceMapQuery
// 0x0018 (0x0018 - 0x0000)
struct FInfluenceMapQuery final
{
public:
	class UObject*                                Owner;                                             // 0x0000(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FInfluenceMapQueryParams               Params;                                            // 0x0008(0x0010)(Transient, Protected, NativeAccessSpecifierProtected)
};
static_assert(alignof(FInfluenceMapQuery) == 0x000008, "Wrong alignment on FInfluenceMapQuery");
static_assert(sizeof(FInfluenceMapQuery) == 0x000018, "Wrong size on FInfluenceMapQuery");
static_assert(offsetof(FInfluenceMapQuery, Owner) == 0x000000, "Member 'FInfluenceMapQuery::Owner' has a wrong offset!");
static_assert(offsetof(FInfluenceMapQuery, Params) == 0x000008, "Member 'FInfluenceMapQuery::Params' has a wrong offset!");

// ScriptStruct NubAI.InfluenceQueryResult
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FInfluenceQueryResult final
{
public:
	uint8                                         Pad_0[0x20];                                       // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FInfluenceQueryResult) == 0x000008, "Wrong alignment on FInfluenceQueryResult");
static_assert(sizeof(FInfluenceQueryResult) == 0x000020, "Wrong size on FInfluenceQueryResult");

// ScriptStruct NubAI.InfluenceSamplingResult
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FInfluenceSamplingResult final
{
public:
	uint8                                         Pad_0[0x20];                                       // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FInfluenceSamplingResult) == 0x000008, "Wrong alignment on FInfluenceSamplingResult");
static_assert(sizeof(FInfluenceSamplingResult) == 0x000020, "Wrong size on FInfluenceSamplingResult");

// ScriptStruct NubAI.UtilityAITarget
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) FUtilityAITarget final
{
public:
	uint8                                         Pad_0[0x28];                                       // 0x0000(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FUtilityAITarget) == 0x000008, "Wrong alignment on FUtilityAITarget");
static_assert(sizeof(FUtilityAITarget) == 0x000028, "Wrong size on FUtilityAITarget");

// ScriptStruct NubAI.UtilityAIDecisionContext
// 0x0040 (0x0040 - 0x0000)
struct FUtilityAIDecisionContext final
{
public:
	class UUtilityAIBrain*                        Brain;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUtilityAIBehavior*                     Behavior;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUtilityAITarget                       Target;                                            // 0x0010(0x0028)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                         CurrentTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUtilityAIDecisionContextType                 ContextType;                                       // 0x003C(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FUtilityAIDecisionContext) == 0x000008, "Wrong alignment on FUtilityAIDecisionContext");
static_assert(sizeof(FUtilityAIDecisionContext) == 0x000040, "Wrong size on FUtilityAIDecisionContext");
static_assert(offsetof(FUtilityAIDecisionContext, Brain) == 0x000000, "Member 'FUtilityAIDecisionContext::Brain' has a wrong offset!");
static_assert(offsetof(FUtilityAIDecisionContext, Behavior) == 0x000008, "Member 'FUtilityAIDecisionContext::Behavior' has a wrong offset!");
static_assert(offsetof(FUtilityAIDecisionContext, Target) == 0x000010, "Member 'FUtilityAIDecisionContext::Target' has a wrong offset!");
static_assert(offsetof(FUtilityAIDecisionContext, CurrentTime) == 0x000038, "Member 'FUtilityAIDecisionContext::CurrentTime' has a wrong offset!");
static_assert(offsetof(FUtilityAIDecisionContext, ContextType) == 0x00003C, "Member 'FUtilityAIDecisionContext::ContextType' has a wrong offset!");

// ScriptStruct NubAI.UtilityAIDecision
// 0x0048 (0x0048 - 0x0000)
struct FUtilityAIDecision final
{
public:
	struct FUtilityAIDecisionContext              Context;                                           // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                         Score;                                             // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FUtilityAIDecision) == 0x000008, "Wrong alignment on FUtilityAIDecision");
static_assert(sizeof(FUtilityAIDecision) == 0x000048, "Wrong size on FUtilityAIDecision");
static_assert(offsetof(FUtilityAIDecision, Context) == 0x000000, "Member 'FUtilityAIDecision::Context' has a wrong offset!");
static_assert(offsetof(FUtilityAIDecision, Score) == 0x000040, "Member 'FUtilityAIDecision::Score' has a wrong offset!");

// ScriptStruct NubAI.UtilityAIDecisionHistory
// 0x0048 (0x0048 - 0x0000)
struct FUtilityAIDecisionHistory final
{
public:
	class UUtilityAIBehavior*                     Behavior;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUtilityAITarget                       LastTarget;                                        // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                         LastScore;                                         // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 DecisionTimes;                                     // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FUtilityAIDecisionHistory) == 0x000008, "Wrong alignment on FUtilityAIDecisionHistory");
static_assert(sizeof(FUtilityAIDecisionHistory) == 0x000048, "Wrong size on FUtilityAIDecisionHistory");
static_assert(offsetof(FUtilityAIDecisionHistory, Behavior) == 0x000000, "Member 'FUtilityAIDecisionHistory::Behavior' has a wrong offset!");
static_assert(offsetof(FUtilityAIDecisionHistory, LastTarget) == 0x000008, "Member 'FUtilityAIDecisionHistory::LastTarget' has a wrong offset!");
static_assert(offsetof(FUtilityAIDecisionHistory, LastScore) == 0x000030, "Member 'FUtilityAIDecisionHistory::LastScore' has a wrong offset!");
static_assert(offsetof(FUtilityAIDecisionHistory, DecisionTimes) == 0x000038, "Member 'FUtilityAIDecisionHistory::DecisionTimes' has a wrong offset!");

// ScriptStruct NubAI.UtilityAIDecisionScoreEvaluator
// 0x0010 (0x0010 - 0x0000)
struct FUtilityAIDecisionScoreEvaluator final
{
public:
	TArray<class UUtilityAIConsideration*>        Considerations;                                    // 0x0000(0x0010)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
};
static_assert(alignof(FUtilityAIDecisionScoreEvaluator) == 0x000008, "Wrong alignment on FUtilityAIDecisionScoreEvaluator");
static_assert(sizeof(FUtilityAIDecisionScoreEvaluator) == 0x000010, "Wrong size on FUtilityAIDecisionScoreEvaluator");
static_assert(offsetof(FUtilityAIDecisionScoreEvaluator, Considerations) == 0x000000, "Member 'FUtilityAIDecisionScoreEvaluator::Considerations' has a wrong offset!");

// ScriptStruct NubAI.UtilityAIResponseCurve
// 0x0014 (0x0014 - 0x0000)
struct FUtilityAIResponseCurve final
{
public:
	EUtilityAIResponseCurveType                   Type;                                              // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         XShift;                                            // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         YShift;                                            // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Slope;                                             // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Exponent;                                          // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FUtilityAIResponseCurve) == 0x000004, "Wrong alignment on FUtilityAIResponseCurve");
static_assert(sizeof(FUtilityAIResponseCurve) == 0x000014, "Wrong size on FUtilityAIResponseCurve");
static_assert(offsetof(FUtilityAIResponseCurve, Type) == 0x000000, "Member 'FUtilityAIResponseCurve::Type' has a wrong offset!");
static_assert(offsetof(FUtilityAIResponseCurve, XShift) == 0x000004, "Member 'FUtilityAIResponseCurve::XShift' has a wrong offset!");
static_assert(offsetof(FUtilityAIResponseCurve, YShift) == 0x000008, "Member 'FUtilityAIResponseCurve::YShift' has a wrong offset!");
static_assert(offsetof(FUtilityAIResponseCurve, Slope) == 0x00000C, "Member 'FUtilityAIResponseCurve::Slope' has a wrong offset!");
static_assert(offsetof(FUtilityAIResponseCurve, Exponent) == 0x000010, "Member 'FUtilityAIResponseCurve::Exponent' has a wrong offset!");

// ScriptStruct NubAI.UtilityAIBrainArray
// 0x0010 (0x0010 - 0x0000)
struct FUtilityAIBrainArray final
{
public:
	TArray<class UUtilityAIBrain*>                Brains;                                            // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FUtilityAIBrainArray) == 0x000008, "Wrong alignment on FUtilityAIBrainArray");
static_assert(sizeof(FUtilityAIBrainArray) == 0x000010, "Wrong size on FUtilityAIBrainArray");
static_assert(offsetof(FUtilityAIBrainArray, Brains) == 0x000000, "Member 'FUtilityAIBrainArray::Brains' has a wrong offset!");

// ScriptStruct NubAI.UtilityAIActionMemory
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FUtilityAIActionMemory final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FUtilityAIActionMemory) == 0x000008, "Wrong alignment on FUtilityAIActionMemory");
static_assert(sizeof(FUtilityAIActionMemory) == 0x000008, "Wrong size on FUtilityAIActionMemory");

// ScriptStruct NubAI.UtilityAIActionContext
// 0x0058 (0x0058 - 0x0000)
struct FUtilityAIActionContext final
{
public:
	class UUtilityAIBrain*                        Brain;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUtilityAIBehavior*                     Behavior;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUtilityAITarget                       Target;                                            // 0x0010(0x0028)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                         DecisionScore;                                     // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DecisionTime;                                      // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExecutionTime;                                     // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x14];                                      // 0x0044(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FUtilityAIActionContext) == 0x000008, "Wrong alignment on FUtilityAIActionContext");
static_assert(sizeof(FUtilityAIActionContext) == 0x000058, "Wrong size on FUtilityAIActionContext");
static_assert(offsetof(FUtilityAIActionContext, Brain) == 0x000000, "Member 'FUtilityAIActionContext::Brain' has a wrong offset!");
static_assert(offsetof(FUtilityAIActionContext, Behavior) == 0x000008, "Member 'FUtilityAIActionContext::Behavior' has a wrong offset!");
static_assert(offsetof(FUtilityAIActionContext, Target) == 0x000010, "Member 'FUtilityAIActionContext::Target' has a wrong offset!");
static_assert(offsetof(FUtilityAIActionContext, DecisionScore) == 0x000038, "Member 'FUtilityAIActionContext::DecisionScore' has a wrong offset!");
static_assert(offsetof(FUtilityAIActionContext, DecisionTime) == 0x00003C, "Member 'FUtilityAIActionContext::DecisionTime' has a wrong offset!");
static_assert(offsetof(FUtilityAIActionContext, ExecutionTime) == 0x000040, "Member 'FUtilityAIActionContext::ExecutionTime' has a wrong offset!");

// ScriptStruct NubAI.UtilityAIActionInstance
// 0x0018 (0x0018 - 0x0000)
struct FUtilityAIActionInstance final
{
public:
	class UUtilityAIAction*                       Action;                                            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x10];                                       // 0x0008(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FUtilityAIActionInstance) == 0x000008, "Wrong alignment on FUtilityAIActionInstance");
static_assert(sizeof(FUtilityAIActionInstance) == 0x000018, "Wrong size on FUtilityAIActionInstance");
static_assert(offsetof(FUtilityAIActionInstance, Action) == 0x000000, "Member 'FUtilityAIActionInstance::Action' has a wrong offset!");

}

