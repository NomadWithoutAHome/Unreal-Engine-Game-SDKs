#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow.WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C
// 0x0080 (0x0368 - 0x02E8)
class UWBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C final : public UUserWidget
{
public:
	class UImage*                                 Image_Status_Icon;                                 // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Label;                                        // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Modifier;                                     // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Value;                                        // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateColor                            BaseColor;                                         // 0x0308(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            BuffColor;                                         // 0x031C(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            DebuffColor;                                       // 0x0330(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             BuffIcon;                                          // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             DebuffIcon;                                        // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FString                                 PostiveOrNegative;                                 // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ColorTextAndChangeIcon(bool IsBuff);
	void DisplayModifierIconAndImage(bool ShouldDisplay);
	void FormatModifierToText(double Modifer, bool IsBuff, bool Reversed, int32 MaxFractionDigits, class FText* CompletedText);
	void SetLabelAndValue(const class FText& Label, const class FText& Value, double Modifier, bool Reversed, int32 MaxFractionDigits);
	void ShouldDisplayModifierAndIsBuff(double Modifier, bool Reversed, bool* ShouldDisplay, bool* IsBuff);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C">();
	}
	static class UWBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C>();
	}
};
static_assert(alignof(UWBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C) == 0x000008, "Wrong alignment on UWBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C");
static_assert(sizeof(UWBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C) == 0x000368, "Wrong size on UWBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C");
static_assert(offsetof(UWBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C, Image_Status_Icon) == 0x0002E8, "Member 'UWBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C::Image_Status_Icon' has a wrong offset!");
static_assert(offsetof(UWBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C, Text_Label) == 0x0002F0, "Member 'UWBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C::Text_Label' has a wrong offset!");
static_assert(offsetof(UWBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C, Text_Modifier) == 0x0002F8, "Member 'UWBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C::Text_Modifier' has a wrong offset!");
static_assert(offsetof(UWBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C, Text_Value) == 0x000300, "Member 'UWBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C::Text_Value' has a wrong offset!");
static_assert(offsetof(UWBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C, BaseColor) == 0x000308, "Member 'UWBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C::BaseColor' has a wrong offset!");
static_assert(offsetof(UWBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C, BuffColor) == 0x00031C, "Member 'UWBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C::BuffColor' has a wrong offset!");
static_assert(offsetof(UWBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C, DebuffColor) == 0x000330, "Member 'UWBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C::DebuffColor' has a wrong offset!");
static_assert(offsetof(UWBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C, BuffIcon) == 0x000348, "Member 'UWBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C::BuffIcon' has a wrong offset!");
static_assert(offsetof(UWBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C, DebuffIcon) == 0x000350, "Member 'UWBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C::DebuffIcon' has a wrong offset!");
static_assert(offsetof(UWBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C, PostiveOrNegative) == 0x000358, "Member 'UWBP_SelectionDetails_InfoSlots_Attack_WeaponsList_Slot_StatRow_C::PostiveOrNegative' has a wrong offset!");

}

