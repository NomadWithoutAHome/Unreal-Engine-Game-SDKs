#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VehicleWreck_Vimana

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_VehicleWreck_Vimana.BP_VehicleWreck_Vimana_C.BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x0128 (0x0128 - 0x0000)
struct BP_VehicleWreck_Vimana_C_BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit_0;                                             // 0x0030(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_VehicleWreck_Vimana_C_BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_VehicleWreck_Vimana_C_BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(BP_VehicleWreck_Vimana_C_BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000128, "Wrong size on BP_VehicleWreck_Vimana_C_BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'BP_VehicleWreck_Vimana_C_BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_VehicleWreck_Vimana_C_BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_VehicleWreck_Vimana_C_BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'BP_VehicleWreck_Vimana_C_BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Hit_0) == 0x000030, "Member 'BP_VehicleWreck_Vimana_C_BndEvt__BP_VehicleWreck_Peacekeeper_SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Hit_0' has a wrong offset!");

// Function BP_VehicleWreck_Vimana.BP_VehicleWreck_Vimana_C.ExecuteUbergraph_BP_VehicleWreck_Vimana
// 0x02C8 (0x02C8 - 0x0000)
struct BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x0038(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x2];                                      // 0x0132(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue;       // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFXSystemComponent*                     CallFunc_SpawnEffectAtLocation_ReturnValue;        // 0x0230(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x026A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x026B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x026D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26E[0x2];                                      // 0x026E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<double>                                K2Node_MakeArray_Array;                            // 0x0270(0x0010)(ReferenceParm)
	TArray<bool>                                  K2Node_MakeArray_Array_1;                          // 0x0280(0x0010)(ReferenceParm)
	TArray<class UStaticMeshComponent*>           K2Node_MakeArray_Array_2;                          // 0x0290(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x02A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x02A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_DeltaTime_ImplicitCast;         // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_DeltaTime_ImplicitCast_1;       // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAngularDamping_InDamping_ImplicitCast; // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAngularDamping_InDamping_ImplicitCast_1; // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLinearDamping_InDamping_ImplicitCast;  // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana) == 0x000008, "Wrong alignment on BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana");
static_assert(sizeof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana) == 0x0002C8, "Wrong size on BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, EntryPoint) == 0x000000, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, K2Node_ComponentBoundEvent_HitComponent) == 0x000008, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000020, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, K2Node_ComponentBoundEvent_Hit) == 0x000038, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_BreakHitResult_bBlockingHit) == 0x000130, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_BreakHitResult_bInitialOverlap) == 0x000131, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_BreakHitResult_Time) == 0x000134, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_BreakHitResult_Distance) == 0x000138, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_BreakHitResult_Location) == 0x000140, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_BreakHitResult_ImpactPoint) == 0x000158, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_BreakHitResult_Normal) == 0x000170, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_BreakHitResult_ImpactNormal) == 0x000188, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_BreakHitResult_PhysMat) == 0x0001A0, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_BreakHitResult_HitActor) == 0x0001A8, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_BreakHitResult_HitComponent) == 0x0001B0, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_BreakHitResult_HitBoneName) == 0x0001B8, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_BreakHitResult_BoneName) == 0x0001C0, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_BreakHitResult_HitItem) == 0x0001C8, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_BreakHitResult_ElementIndex) == 0x0001CC, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_BreakHitResult_FaceIndex) == 0x0001D0, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_BreakHitResult_TraceStart) == 0x0001D8, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_BreakHitResult_TraceEnd) == 0x0001F0, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_GetCollisionObjectType_ReturnValue) == 0x000208, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_GetCollisionObjectType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000210, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, K2Node_SwitchEnum_CmpSuccess) == 0x000228, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_SpawnEffectAtLocation_ReturnValue) == 0x000230, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_SpawnEffectAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000238, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_FInterpTo_ReturnValue) == 0x000250, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_FInterpTo_ReturnValue_1) == 0x000258, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000260, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_BooleanOR_ReturnValue) == 0x000268, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000269, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x00026A, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x00026B, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_BooleanOR_ReturnValue_1) == 0x00026C, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_BooleanOR_ReturnValue_2) == 0x00026D, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, K2Node_MakeArray_Array) == 0x000270, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, K2Node_MakeArray_Array_1) == 0x000280, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, K2Node_MakeArray_Array_2) == 0x000290, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x0002A0, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x0002A1, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_BooleanOR_ReturnValue_3) == 0x0002A2, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_BooleanOR_ReturnValue_4) == 0x0002A3, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_FInterpTo_DeltaTime_ImplicitCast) == 0x0002A8, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_FInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_FInterpTo_DeltaTime_ImplicitCast_1) == 0x0002B0, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_FInterpTo_DeltaTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_SetAngularDamping_InDamping_ImplicitCast) == 0x0002B8, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_SetAngularDamping_InDamping_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_SetAngularDamping_InDamping_ImplicitCast_1) == 0x0002BC, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_SetAngularDamping_InDamping_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana, CallFunc_SetLinearDamping_InDamping_ImplicitCast) == 0x0002C0, "Member 'BP_VehicleWreck_Vimana_C_ExecuteUbergraph_BP_VehicleWreck_Vimana::CallFunc_SetLinearDamping_InDamping_ImplicitCast' has a wrong offset!");

// Function BP_VehicleWreck_Vimana.BP_VehicleWreck_Vimana_C.Initial VETI Aircraft Destruction Force
// 0x04C0 (0x04C0 - 0x0000)
struct BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force final
{
public:
	TArray<class FName>                           Bones_to_Hide_0;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class USkeletalMeshComponent*                 Skeletal_Mesh;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   Bone_Name;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Static_Mesh__TEMP_;                                // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Rotation_Force_Axis_0;                             // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Rotation_Force_Multiplier_0;                       // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<bool>                                  Rotation_Force_Locked_Axis_0;                      // 0x0048(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Forward_Force_Direction_0;                         // 0x0058(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Forward_Force_0;                                   // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<bool>                                  Apply_Forward_Force_to_Parts;                      // 0x0078(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<double>                                Forward_Force_to_Parts_Multiplier;                 // 0x0088(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class UStaticMeshComponent*>           Parts_Meshes;                                      // 0x0098(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	double                                        Parts_Meshes_Dir_Force_Angle;                      // 0x00A8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Parts_Meshes_Dir_Force_Multiplier;                 // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Parts_Meshes_Ang_Force_Multiplier;                 // 0x00B8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ForwardForceCache;                                 // 0x00C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DestructionLocation;                               // 0x00D8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             ActorTransform;                                    // 0x00F0(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x01A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue_1;                 // 0x01B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B6[0x2];                                      // 0x01B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue_2;                 // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_5;                // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue; // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TransformDirection_ReturnValue;           // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformDirection_ReturnValue_1;         // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformDirection_ReturnValue_2;         // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_3;        // 0x0390(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x03A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_4;      // 0x03C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_5;      // 0x03D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x03F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0408(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_428[0x8];                                      // 0x0428(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0430(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0498(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomUnitVectorInConeInDegrees_ConeHalfAngleInDegrees_ImplicitCast; // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force) == 0x000010, "Wrong alignment on BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force");
static_assert(sizeof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force) == 0x0004C0, "Wrong size on BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, Bones_to_Hide_0) == 0x000000, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::Bones_to_Hide_0' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, Skeletal_Mesh) == 0x000010, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::Skeletal_Mesh' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, Bone_Name) == 0x000018, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::Bone_Name' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, Static_Mesh__TEMP_) == 0x000020, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::Static_Mesh__TEMP_' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, Rotation_Force_Axis_0) == 0x000028, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::Rotation_Force_Axis_0' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, Rotation_Force_Multiplier_0) == 0x000040, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::Rotation_Force_Multiplier_0' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, Rotation_Force_Locked_Axis_0) == 0x000048, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::Rotation_Force_Locked_Axis_0' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, Forward_Force_Direction_0) == 0x000058, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::Forward_Force_Direction_0' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, Forward_Force_0) == 0x000070, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::Forward_Force_0' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, Apply_Forward_Force_to_Parts) == 0x000078, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::Apply_Forward_Force_to_Parts' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, Forward_Force_to_Parts_Multiplier) == 0x000088, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::Forward_Force_to_Parts_Multiplier' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, Parts_Meshes) == 0x000098, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::Parts_Meshes' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, Parts_Meshes_Dir_Force_Angle) == 0x0000A8, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::Parts_Meshes_Dir_Force_Angle' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, Parts_Meshes_Dir_Force_Multiplier) == 0x0000B0, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::Parts_Meshes_Dir_Force_Multiplier' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, Parts_Meshes_Ang_Force_Multiplier) == 0x0000B8, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::Parts_Meshes_Ang_Force_Multiplier' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, ForwardForceCache) == 0x0000C0, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::ForwardForceCache' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, DestructionLocation) == 0x0000D8, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::DestructionLocation' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, ActorTransform) == 0x0000F0, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::ActorTransform' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000150, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_GetComponentVelocity_ReturnValue) == 0x000168, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_GetSocketLocation_ReturnValue) == 0x000180, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_Array_Length_ReturnValue) == 0x000198, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, Temp_int_Array_Index_Variable) == 0x00019C, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, Temp_int_Loop_Counter_Variable) == 0x0001A0, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_Array_Get_Item) == 0x0001A4, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_Less_IntInt_ReturnValue) == 0x0001AC, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_Add_IntInt_ReturnValue) == 0x0001B0, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_RandomBool_ReturnValue) == 0x0001B4, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_RandomBool_ReturnValue_1) == 0x0001B5, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_RandomBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_SelectFloat_ReturnValue) == 0x0001B8, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_SelectFloat_ReturnValue_1) == 0x0001C0, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_SelectFloat_ReturnValue_2) == 0x0001C8, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_SelectFloat_ReturnValue_3) == 0x0001D0, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_RandomBool_ReturnValue_2) == 0x0001D8, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_RandomBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_SelectFloat_ReturnValue_4) == 0x0001E0, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0001E8, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_SelectFloat_ReturnValue_5) == 0x000200, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_MakeVector_ReturnValue) == 0x000208, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000220, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000238, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000240, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_Array_Length_ReturnValue_1) == 0x000258, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_RandomUnitVector_ReturnValue) == 0x000260, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000278, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, Temp_int_Loop_Counter_Variable_1) == 0x000290, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, Temp_int_Array_Index_Variable_1) == 0x000294, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_Less_IntInt_ReturnValue_1) == 0x000298, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_Array_Get_Item_1) == 0x0002A0, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0002A8, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0002C0, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue) == 0x0002D8, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x0002F0, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000308, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_Add_IntInt_ReturnValue_1) == 0x000320, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_TransformDirection_ReturnValue) == 0x000328, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_TransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_TransformDirection_ReturnValue_1) == 0x000340, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_TransformDirection_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x000358, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_TransformDirection_ReturnValue_2) == 0x000370, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_TransformDirection_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_VSize_ReturnValue) == 0x000388, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_Conv_DoubleToVector_ReturnValue_3) == 0x000390, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_Conv_DoubleToVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0003A8, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_Multiply_VectorVector_ReturnValue_4) == 0x0003C0, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_Multiply_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_Multiply_VectorVector_ReturnValue_5) == 0x0003D8, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_Multiply_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_Add_VectorVector_ReturnValue) == 0x0003F0, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_SelectVector_ReturnValue) == 0x000408, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_RandomFloatInRange_ReturnValue) == 0x000420, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_GetTransform_ReturnValue) == 0x000430, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000490, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000498, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force, CallFunc_RandomUnitVectorInConeInDegrees_ConeHalfAngleInDegrees_ImplicitCast) == 0x0004B0, "Member 'BP_VehicleWreck_Vimana_C_Initial_VETI_Aircraft_Destruction_Force::CallFunc_RandomUnitVectorInConeInDegrees_ConeHalfAngleInDegrees_ImplicitCast' has a wrong offset!");

// Function BP_VehicleWreck_Vimana.BP_VehicleWreck_Vimana_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_VehicleWreck_Vimana_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleWreck_Vimana_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_VehicleWreck_Vimana_C_ReceiveTick");
static_assert(sizeof(BP_VehicleWreck_Vimana_C_ReceiveTick) == 0x000004, "Wrong size on BP_VehicleWreck_Vimana_C_ReceiveTick");
static_assert(offsetof(BP_VehicleWreck_Vimana_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_VehicleWreck_Vimana_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

