#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TempestFieldProxy_PodClumps

#include "Basic.hpp"

#include "Tempest_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_TempestFieldProxy_PodClumps.BP_TempestFieldProxy_PodClumps_C.K2_InitializeElement
// 0x01D0 (0x01D0 - 0x0000)
struct BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement final
{
public:
	struct FRandomStream                          RandomStream;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     CallFunc_GetElementRandomTransforms_ReturnValue;   // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0030(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0xF];                                       // 0x0091(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFieldTileElementISMData               CallFunc_AddElementSMInstance_ReturnValue;         // 0x00A0(0x0070)(NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_158[0x8];                                      // 0x0158(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0160(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateInstanceTransform_ReturnValue;      // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement) == 0x000010, "Wrong alignment on BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement");
static_assert(sizeof(BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement) == 0x0001D0, "Wrong size on BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement, RandomStream) == 0x000000, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement::RandomStream' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement, CallFunc_GetElementRandomTransforms_ReturnValue) == 0x000018, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement::CallFunc_GetElementRandomTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement, CallFunc_AddElementSMInstance_ReturnValue) == 0x0000A0, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement::CallFunc_AddElementSMInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement, CallFunc_BreakTransform_Location) == 0x000110, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement, CallFunc_BreakTransform_Rotation) == 0x000128, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement, CallFunc_BreakTransform_Scale) == 0x000140, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement, CallFunc_MakeTransform_ReturnValue) == 0x000160, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement, CallFunc_UpdateInstanceTransform_ReturnValue) == 0x0001C0, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_InitializeElement::CallFunc_UpdateInstanceTransform_ReturnValue' has a wrong offset!");

// Function BP_TempestFieldProxy_PodClumps.BP_TempestFieldProxy_PodClumps_C.K2_ProcessTransition
// 0x01E0 (0x01E0 - 0x0000)
struct BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETempestFieldElementStage                     PrevStage;                                         // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETempestFieldElementStage                     NextStage;                                         // 0x0009(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionEntry_Progress_ImplicitCast;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFieldTileElementISMData>       CallFunc_GetElementSMInstances_ReturnValue;        // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class USceneComponent*>                CallFunc_GetElementComponents_ReturnValue;         // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FFieldTileElementISMData               CallFunc_Array_Get_Item;                           // 0x0060(0x0070)(NoDestructor, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_Array_Get_Item_1;                         // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0130(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateInstanceTransform_ReturnValue;      // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_196[0x2];                                      // 0x0196(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A2[0x2];                                      // 0x01A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSetRef_Target_ImplicitCast;         // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateInstancedSMTransform_Progress_ImplicitCast; // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateInstancedSMTransform_Progress_ImplicitCast_1; // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateInstancedSMTransform_Progress_ImplicitCast_2; // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateInstancedSMTransform_Progress_ImplicitCast_3; // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition) == 0x000010, "Wrong alignment on BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition");
static_assert(sizeof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition) == 0x0001E0, "Wrong size on BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, Progress) == 0x000000, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::Progress' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, DeltaTime) == 0x000004, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, PrevStage) == 0x000008, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::PrevStage' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, NextStage) == 0x000009, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::NextStage' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, CallFunc_FClamp_ReturnValue) == 0x000020, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, K2Node_FunctionEntry_Progress_ImplicitCast) == 0x00002C, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::K2Node_FunctionEntry_Progress_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, K2Node_SwitchEnum_CmpSuccess) == 0x000038, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, CallFunc_GetElementSMInstances_ReturnValue) == 0x000040, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::CallFunc_GetElementSMInstances_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, CallFunc_GetElementComponents_ReturnValue) == 0x000050, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::CallFunc_GetElementComponents_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, CallFunc_Array_Get_Item_1) == 0x0000D0, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, K2Node_DynamicCast_AsPrimitive_Component) == 0x0000D8, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, CallFunc_BreakTransform_Location) == 0x0000E8, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, CallFunc_BreakTransform_Rotation) == 0x000100, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, CallFunc_BreakTransform_Scale) == 0x000118, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, CallFunc_MakeTransform_ReturnValue) == 0x000130, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, CallFunc_Array_Length_ReturnValue) == 0x000190, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, CallFunc_UpdateInstanceTransform_ReturnValue) == 0x000194, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::CallFunc_UpdateInstanceTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, CallFunc_Less_IntInt_ReturnValue) == 0x000195, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, CallFunc_Array_Length_ReturnValue_1) == 0x000198, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, Temp_int_Loop_Counter_Variable_1) == 0x00019C, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, K2Node_SwitchEnum_CmpSuccess_1) == 0x0001A0, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001A1, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001A4, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0001A8, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, K2Node_VariableSetRef_Target_ImplicitCast) == 0x0001B0, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::K2Node_VariableSetRef_Target_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0001B8, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, CallFunc_UpdateInstancedSMTransform_Progress_ImplicitCast) == 0x0001C0, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::CallFunc_UpdateInstancedSMTransform_Progress_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, CallFunc_UpdateInstancedSMTransform_Progress_ImplicitCast_1) == 0x0001C8, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::CallFunc_UpdateInstancedSMTransform_Progress_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, CallFunc_UpdateInstancedSMTransform_Progress_ImplicitCast_2) == 0x0001D0, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::CallFunc_UpdateInstancedSMTransform_Progress_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition, CallFunc_UpdateInstancedSMTransform_Progress_ImplicitCast_3) == 0x0001D8, "Member 'BP_TempestFieldProxy_PodClumps_C_K2_ProcessTransition::CallFunc_UpdateInstancedSMTransform_Progress_ImplicitCast_3' has a wrong offset!");

// Function BP_TempestFieldProxy_PodClumps.BP_TempestFieldProxy_PodClumps_C.UpdateInstancedSMTransform
// 0x0240 (0x0240 - 0x0000)
struct BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform final
{
public:
	double                                        Progress;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TargetScale;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFieldTileElementISMData>       CallFunc_GetElementSMInstances_ReturnValue;        // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FFieldTileElementISMData               CallFunc_Array_Get_Item;                           // 0x0030(0x0070)(NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetInstanceTransform_OutInstanceTransform; // 0x00F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInstanceTransform_ReturnValue;         // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateInstanceTransform_ReturnValue;      // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VLerp_Alpha_ImplicitCast;                 // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform) == 0x000010, "Wrong alignment on BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform");
static_assert(sizeof(BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform) == 0x000240, "Wrong size on BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform, Progress) == 0x000000, "Member 'BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform::Progress' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform, TargetScale) == 0x000008, "Member 'BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform::TargetScale' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform, CallFunc_GetElementSMInstances_ReturnValue) == 0x000020, "Member 'BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform::CallFunc_GetElementSMInstances_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform, CallFunc_BreakTransform_Location) == 0x0000A8, "Member 'BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform, CallFunc_BreakTransform_Rotation) == 0x0000C0, "Member 'BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform, CallFunc_BreakTransform_Scale) == 0x0000D8, "Member 'BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform, CallFunc_GetInstanceTransform_OutInstanceTransform) == 0x0000F0, "Member 'BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform::CallFunc_GetInstanceTransform_OutInstanceTransform' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform, CallFunc_GetInstanceTransform_ReturnValue) == 0x000150, "Member 'BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform::CallFunc_GetInstanceTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform, CallFunc_BreakTransform_Location_1) == 0x000158, "Member 'BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform, CallFunc_BreakTransform_Rotation_1) == 0x000170, "Member 'BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform, CallFunc_BreakTransform_Scale_1) == 0x000188, "Member 'BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001A0, "Member 'BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform, CallFunc_VLerp_ReturnValue) == 0x0001B8, "Member 'BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform, CallFunc_MakeTransform_ReturnValue) == 0x0001D0, "Member 'BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform, CallFunc_UpdateInstanceTransform_ReturnValue) == 0x000230, "Member 'BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform::CallFunc_UpdateInstanceTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform, CallFunc_VLerp_Alpha_ImplicitCast) == 0x000234, "Member 'BP_TempestFieldProxy_PodClumps_C_UpdateInstancedSMTransform::CallFunc_VLerp_Alpha_ImplicitCast' has a wrong offset!");

}

