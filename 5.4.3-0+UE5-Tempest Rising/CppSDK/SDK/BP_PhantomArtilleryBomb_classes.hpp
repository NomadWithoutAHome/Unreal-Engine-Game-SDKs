#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PhantomArtilleryBomb

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Tempest_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PhantomArtilleryBomb.BP_PhantomArtilleryBomb_C
// 0x0030 (0x0490 - 0x0460)
class ABP_PhantomArtilleryBomb_C final : public ATedProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0460(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        SFX_Charge;                                        // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_PortalPhantomArtillery_01_BombSpawn;            // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      PS_ProjectilePhantomArtillery_01;                  // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_FlareVETPhantomArtilleryBomb_01;                // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         ExplosionDelay;                                    // 0x0488(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PhantomArtilleryBomb(int32 EntryPoint);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PhantomArtilleryBomb_C">();
	}
	static class ABP_PhantomArtilleryBomb_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PhantomArtilleryBomb_C>();
	}
};
static_assert(alignof(ABP_PhantomArtilleryBomb_C) == 0x000008, "Wrong alignment on ABP_PhantomArtilleryBomb_C");
static_assert(sizeof(ABP_PhantomArtilleryBomb_C) == 0x000490, "Wrong size on ABP_PhantomArtilleryBomb_C");
static_assert(offsetof(ABP_PhantomArtilleryBomb_C, UberGraphFrame) == 0x000460, "Member 'ABP_PhantomArtilleryBomb_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PhantomArtilleryBomb_C, SFX_Charge) == 0x000468, "Member 'ABP_PhantomArtilleryBomb_C::SFX_Charge' has a wrong offset!");
static_assert(offsetof(ABP_PhantomArtilleryBomb_C, PS_PortalPhantomArtillery_01_BombSpawn) == 0x000470, "Member 'ABP_PhantomArtilleryBomb_C::PS_PortalPhantomArtillery_01_BombSpawn' has a wrong offset!");
static_assert(offsetof(ABP_PhantomArtilleryBomb_C, PS_ProjectilePhantomArtillery_01) == 0x000478, "Member 'ABP_PhantomArtilleryBomb_C::PS_ProjectilePhantomArtillery_01' has a wrong offset!");
static_assert(offsetof(ABP_PhantomArtilleryBomb_C, PS_FlareVETPhantomArtilleryBomb_01) == 0x000480, "Member 'ABP_PhantomArtilleryBomb_C::PS_FlareVETPhantomArtilleryBomb_01' has a wrong offset!");
static_assert(offsetof(ABP_PhantomArtilleryBomb_C, ExplosionDelay) == 0x000488, "Member 'ABP_PhantomArtilleryBomb_C::ExplosionDelay' has a wrong offset!");

}

