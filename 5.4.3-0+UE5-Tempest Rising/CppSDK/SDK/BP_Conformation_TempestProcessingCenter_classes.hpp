#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Conformation_TempestProcessingCenter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Tempest_structs.hpp"
#include "Tempest_classes.hpp"
#include "SavedGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Conformation_TempestProcessingCenter.BP_Conformation_TempestProcessingCenter_C
// 0x0110 (0x1C10 - 0x1B00)
class ABP_Conformation_TempestProcessingCenter_C final : public ATedConformationBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1B00(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        FireSFX;                                           // 0x1B08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      PS_RepairTempestProcessingCenter;                  // 0x1B10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      PS_DestroyTempestProcessingCenter;                 // 0x1B18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Fire2;                                          // 0x1B20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Fire1;                                          // 0x1B28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         TL_Explosion_Dissolve_8D8547294DC37DD71A5029A8B8934C08; // 0x1B30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TL_Explosion_Explosion_8D8547294DC37DD71A5029A8B8934C08; // 0x1B34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL_Explosion__Direction_8D8547294DC37DD71A5029A8B8934C08; // 0x1B38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B39[0x7];                                     // 0x1B39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_Explosion;                                      // 0x1B40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Mesh_Deployed;                                     // 0x1B48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Mesh_Broken;                                       // 0x1B50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        DeployDuration;                                    // 0x1B58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATedVehicle*                            DeployingVehicle;                                  // 0x1B60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DebrisInitialLocation;                             // 0x1B68(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HitPart1;                                          // 0x1B80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HitPart2;                                          // 0x1B84(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HitPart3;                                          // 0x1B88(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HitLimit;                                          // 0x1B8C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnWaterSurface;                                    // 0x1B90(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B91[0x3];                                     // 0x1B91(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CreditsCaptureAward;                               // 0x1B94(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CreditsPerTick;                                    // 0x1B98(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9C[0x4];                                     // 0x1B9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CreditsTickFrequencySeconds;                       // 0x1BA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EverCaptured;                                      // 0x1BA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDestroyed;                                        // 0x1BA9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BAA[0x6];                                     // 0x1BAA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CachedActorLocation;                               // 0x1BB0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TH_VFX;                                            // 0x1BC8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Explosion_Slot_Array;                              // 0x1BD0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 Explosion_Slot_Current;                            // 0x1BE0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          Explosion_Slot_Found;                              // 0x1BF0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BF1[0x7];                                     // 0x1BF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Explosion_Radius;                                  // 0x1BF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Explosion_Falloff_Exp;                             // 0x1C00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Explosion_Strength;                                // 0x1C08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Add_Credits_To_Owning_Player(const int32 Amount);
	void AddCredits();
	void ExecuteUbergraph_BP_Conformation_TempestProcessingCenter(int32 EntryPoint);
	void ExplosionFXOnFoliage();
	void Found_Free_Explosion_Slot();
	void HideFXs();
	void OnCapturedCosmetic(ETedPlayerID NewPlayerID);
	void OnRequestChangeState(class AActor* InInstigator, const struct FGameplayTag& InState, const float InValue);
	void OnStateChangeCosmetic(const struct FGameplayTag& InState, const float InValue);
	void ReceiveBeginPlay();
	void ReceiveOnCaptured(ETedPlayerID NewPlayerID);
	void ReceiveOnDeath();
	void ReceiveUpdateHealthEffects(float HealthPct);
	void Repair();
	void SetDestroyedMesh();
	void SetDestroyedMeshOnVisibilityChange();
	void TL_Explosion__FinishedFunc();
	void TL_Explosion__UpdateFunc();
	void UpdateAddCredits();
	void UpdateBuildProgress(double InStateValue);

	bool CanChangeState(const class AActor* InInstigator, const struct FGameplayTag& InState, const float InValue) const;
	class UStreamableRenderAsset* GetConformationPreviewMesh(struct FTransform* Offset) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Conformation_TempestProcessingCenter_C">();
	}
	static class ABP_Conformation_TempestProcessingCenter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Conformation_TempestProcessingCenter_C>();
	}
};
static_assert(alignof(ABP_Conformation_TempestProcessingCenter_C) == 0x000010, "Wrong alignment on ABP_Conformation_TempestProcessingCenter_C");
static_assert(sizeof(ABP_Conformation_TempestProcessingCenter_C) == 0x001C10, "Wrong size on ABP_Conformation_TempestProcessingCenter_C");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, UberGraphFrame) == 0x001B00, "Member 'ABP_Conformation_TempestProcessingCenter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, FireSFX) == 0x001B08, "Member 'ABP_Conformation_TempestProcessingCenter_C::FireSFX' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, PS_RepairTempestProcessingCenter) == 0x001B10, "Member 'ABP_Conformation_TempestProcessingCenter_C::PS_RepairTempestProcessingCenter' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, PS_DestroyTempestProcessingCenter) == 0x001B18, "Member 'ABP_Conformation_TempestProcessingCenter_C::PS_DestroyTempestProcessingCenter' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, NS_Fire2) == 0x001B20, "Member 'ABP_Conformation_TempestProcessingCenter_C::NS_Fire2' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, NS_Fire1) == 0x001B28, "Member 'ABP_Conformation_TempestProcessingCenter_C::NS_Fire1' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, TL_Explosion_Dissolve_8D8547294DC37DD71A5029A8B8934C08) == 0x001B30, "Member 'ABP_Conformation_TempestProcessingCenter_C::TL_Explosion_Dissolve_8D8547294DC37DD71A5029A8B8934C08' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, TL_Explosion_Explosion_8D8547294DC37DD71A5029A8B8934C08) == 0x001B34, "Member 'ABP_Conformation_TempestProcessingCenter_C::TL_Explosion_Explosion_8D8547294DC37DD71A5029A8B8934C08' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, TL_Explosion__Direction_8D8547294DC37DD71A5029A8B8934C08) == 0x001B38, "Member 'ABP_Conformation_TempestProcessingCenter_C::TL_Explosion__Direction_8D8547294DC37DD71A5029A8B8934C08' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, TL_Explosion) == 0x001B40, "Member 'ABP_Conformation_TempestProcessingCenter_C::TL_Explosion' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, Mesh_Deployed) == 0x001B48, "Member 'ABP_Conformation_TempestProcessingCenter_C::Mesh_Deployed' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, Mesh_Broken) == 0x001B50, "Member 'ABP_Conformation_TempestProcessingCenter_C::Mesh_Broken' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, DeployDuration) == 0x001B58, "Member 'ABP_Conformation_TempestProcessingCenter_C::DeployDuration' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, DeployingVehicle) == 0x001B60, "Member 'ABP_Conformation_TempestProcessingCenter_C::DeployingVehicle' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, DebrisInitialLocation) == 0x001B68, "Member 'ABP_Conformation_TempestProcessingCenter_C::DebrisInitialLocation' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, HitPart1) == 0x001B80, "Member 'ABP_Conformation_TempestProcessingCenter_C::HitPart1' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, HitPart2) == 0x001B84, "Member 'ABP_Conformation_TempestProcessingCenter_C::HitPart2' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, HitPart3) == 0x001B88, "Member 'ABP_Conformation_TempestProcessingCenter_C::HitPart3' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, HitLimit) == 0x001B8C, "Member 'ABP_Conformation_TempestProcessingCenter_C::HitLimit' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, OnWaterSurface) == 0x001B90, "Member 'ABP_Conformation_TempestProcessingCenter_C::OnWaterSurface' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, CreditsCaptureAward) == 0x001B94, "Member 'ABP_Conformation_TempestProcessingCenter_C::CreditsCaptureAward' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, CreditsPerTick) == 0x001B98, "Member 'ABP_Conformation_TempestProcessingCenter_C::CreditsPerTick' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, CreditsTickFrequencySeconds) == 0x001BA0, "Member 'ABP_Conformation_TempestProcessingCenter_C::CreditsTickFrequencySeconds' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, EverCaptured) == 0x001BA8, "Member 'ABP_Conformation_TempestProcessingCenter_C::EverCaptured' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, bDestroyed) == 0x001BA9, "Member 'ABP_Conformation_TempestProcessingCenter_C::bDestroyed' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, CachedActorLocation) == 0x001BB0, "Member 'ABP_Conformation_TempestProcessingCenter_C::CachedActorLocation' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, TH_VFX) == 0x001BC8, "Member 'ABP_Conformation_TempestProcessingCenter_C::TH_VFX' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, Explosion_Slot_Array) == 0x001BD0, "Member 'ABP_Conformation_TempestProcessingCenter_C::Explosion_Slot_Array' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, Explosion_Slot_Current) == 0x001BE0, "Member 'ABP_Conformation_TempestProcessingCenter_C::Explosion_Slot_Current' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, Explosion_Slot_Found) == 0x001BF0, "Member 'ABP_Conformation_TempestProcessingCenter_C::Explosion_Slot_Found' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, Explosion_Radius) == 0x001BF8, "Member 'ABP_Conformation_TempestProcessingCenter_C::Explosion_Radius' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, Explosion_Falloff_Exp) == 0x001C00, "Member 'ABP_Conformation_TempestProcessingCenter_C::Explosion_Falloff_Exp' has a wrong offset!");
static_assert(offsetof(ABP_Conformation_TempestProcessingCenter_C, Explosion_Strength) == 0x001C08, "Member 'ABP_Conformation_TempestProcessingCenter_C::Explosion_Strength' has a wrong offset!");

}

