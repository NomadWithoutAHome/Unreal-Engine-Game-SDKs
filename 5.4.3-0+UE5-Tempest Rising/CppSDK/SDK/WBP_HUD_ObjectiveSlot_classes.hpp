#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HUD_ObjectiveSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Tempest_structs.hpp"
#include "Tempest_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_HUD_ObjectiveSlot.WBP_HUD_ObjectiveSlot_C
// 0x0270 (0x06B0 - 0x0440)
class UWBP_HUD_ObjectiveSlot_C final : public UTedObjectiveSlot
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0440(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_New;                                          // 0x0448(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Completed_Child;                              // 0x0450(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Completed_Parent;                             // 0x0458(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Failed;                                       // 0x0460(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Updated;                                      // 0x0468(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_HUD_ObjectiveSlot_Arrows_C*        ArrowsAnim;                                        // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_ArrowsIndent;                          // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_Checkbox;                              // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_Scale;                                 // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_MoviePlayer_Fill_C*                CheckboxAnim;                                      // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_IndentController;                    // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_CheckboxState;                               // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Glow;                                        // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Root;                                      // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Content;                                 // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Notification;                            // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	uint8                                         Pad_4C8[0x8];                                      // 0x04C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            StrikeBrush;                                       // 0x04D0(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateBrush                            NoStrikeBrush;                                     // 0x05A0(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            HoverTintColor;                                    // 0x0670(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            PressedTintColor;                                  // 0x0684(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            DefaultTintColor;                                  // 0x0698(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ClearStrikeThroughContentText();
	void Collapse();
	void ExecuteUbergraph_WBP_HUD_ObjectiveSlot(int32 EntryPoint);
	void GetWidgetAnimations(TArray<class UWidgetAnimation*>* OutAnimations);
	void GetWidgetAnimationTag(class UWidgetAnimation* InAnim, struct FGameplayTag* OutAnimTag);
	void OnActivateState(ETedContentSlotState InState, bool bInActivated);
	void OnAnimationFinished(const class UWidgetAnimation* Animation);
	void OnAnimationStarted(const class UWidgetAnimation* Animation);
	void OnPlayWidgetAnimation(const struct FGameplayTag& InAnim);
	void PlayWidgetAnimationImpl(const class UWidgetAnimation*& InAnim, const class FText& InText, const class UFileMediaSource* InCheckboxAnim, const struct FLinearColor& InGlowColor);
	void RefreshCheckbox();
	void RefreshPadding();
	void RefreshText();
	void RefreshTrackingVisuals();
	void RefreshUI();
	void ResetVisuals();
	void SequenceEvent__ENTRYPOINTWBP_HUD_ObjectiveSlot();
	void SequenceEvent__ENTRYPOINTWBP_HUD_ObjectiveSlot_0();
	void SequenceEvent__ENTRYPOINTWBP_HUD_ObjectiveSlot_1();
	void SequenceEvent__ENTRYPOINTWBP_HUD_ObjectiveSlot_2();
	void SetupCheckbox(bool bInVisible, bool bInChecked);
	void StopNotifications(class UWidgetAnimation* InExceptAnim);
	void StrikeThroughContentText();
	void UpdateSlotStateVisuals();

	void GetWidgetAnimation(const struct FGameplayTag& InAnimTag, class UWidgetAnimation** OutAnim) const;
	bool OnCanPlayWidgetAnimation(const struct FGameplayTag& InAnim) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_HUD_ObjectiveSlot_C">();
	}
	static class UWBP_HUD_ObjectiveSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_HUD_ObjectiveSlot_C>();
	}
};
static_assert(alignof(UWBP_HUD_ObjectiveSlot_C) == 0x000010, "Wrong alignment on UWBP_HUD_ObjectiveSlot_C");
static_assert(sizeof(UWBP_HUD_ObjectiveSlot_C) == 0x0006B0, "Wrong size on UWBP_HUD_ObjectiveSlot_C");
static_assert(offsetof(UWBP_HUD_ObjectiveSlot_C, UberGraphFrame) == 0x000440, "Member 'UWBP_HUD_ObjectiveSlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_ObjectiveSlot_C, Anim_New) == 0x000448, "Member 'UWBP_HUD_ObjectiveSlot_C::Anim_New' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_ObjectiveSlot_C, Anim_Completed_Child) == 0x000450, "Member 'UWBP_HUD_ObjectiveSlot_C::Anim_Completed_Child' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_ObjectiveSlot_C, Anim_Completed_Parent) == 0x000458, "Member 'UWBP_HUD_ObjectiveSlot_C::Anim_Completed_Parent' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_ObjectiveSlot_C, Anim_Failed) == 0x000460, "Member 'UWBP_HUD_ObjectiveSlot_C::Anim_Failed' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_ObjectiveSlot_C, Anim_Updated) == 0x000468, "Member 'UWBP_HUD_ObjectiveSlot_C::Anim_Updated' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_ObjectiveSlot_C, ArrowsAnim) == 0x000470, "Member 'UWBP_HUD_ObjectiveSlot_C::ArrowsAnim' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_ObjectiveSlot_C, CanvasPanel_ArrowsIndent) == 0x000478, "Member 'UWBP_HUD_ObjectiveSlot_C::CanvasPanel_ArrowsIndent' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_ObjectiveSlot_C, CanvasPanel_Checkbox) == 0x000480, "Member 'UWBP_HUD_ObjectiveSlot_C::CanvasPanel_Checkbox' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_ObjectiveSlot_C, CanvasPanel_Scale) == 0x000488, "Member 'UWBP_HUD_ObjectiveSlot_C::CanvasPanel_Scale' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_ObjectiveSlot_C, CheckboxAnim) == 0x000490, "Member 'UWBP_HUD_ObjectiveSlot_C::CheckboxAnim' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_ObjectiveSlot_C, HorizontalBox_IndentController) == 0x000498, "Member 'UWBP_HUD_ObjectiveSlot_C::HorizontalBox_IndentController' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_ObjectiveSlot_C, Image_CheckboxState) == 0x0004A0, "Member 'UWBP_HUD_ObjectiveSlot_C::Image_CheckboxState' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_ObjectiveSlot_C, Image_Glow) == 0x0004A8, "Member 'UWBP_HUD_ObjectiveSlot_C::Image_Glow' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_ObjectiveSlot_C, SizeBox_Root) == 0x0004B0, "Member 'UWBP_HUD_ObjectiveSlot_C::SizeBox_Root' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_ObjectiveSlot_C, TextBlock_Content) == 0x0004B8, "Member 'UWBP_HUD_ObjectiveSlot_C::TextBlock_Content' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_ObjectiveSlot_C, TextBlock_Notification) == 0x0004C0, "Member 'UWBP_HUD_ObjectiveSlot_C::TextBlock_Notification' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_ObjectiveSlot_C, StrikeBrush) == 0x0004D0, "Member 'UWBP_HUD_ObjectiveSlot_C::StrikeBrush' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_ObjectiveSlot_C, NoStrikeBrush) == 0x0005A0, "Member 'UWBP_HUD_ObjectiveSlot_C::NoStrikeBrush' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_ObjectiveSlot_C, HoverTintColor) == 0x000670, "Member 'UWBP_HUD_ObjectiveSlot_C::HoverTintColor' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_ObjectiveSlot_C, PressedTintColor) == 0x000684, "Member 'UWBP_HUD_ObjectiveSlot_C::PressedTintColor' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_ObjectiveSlot_C, DefaultTintColor) == 0x000698, "Member 'UWBP_HUD_ObjectiveSlot_C::DefaultTintColor' has a wrong offset!");

}

