#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VETI_Vehicle_RepairServitor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Tempest_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_VETI_Vehicle_RepairServitor.BP_VETI_Vehicle_RepairServitor_C
// 0x0050 (0x1D80 - 0x1D30)
class ABP_VETI_Vehicle_RepairServitor_C final : public ATedDrone
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1D30(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               PS_SmokeVETVehicleDamageLight;                     // 0x1D38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal_RepairRadius;                                // 0x1D40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_SmokeTempestLeaf_1;                             // 0x1D48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_SmokeHover_01;                                  // 0x1D50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          HitBox1;                                           // 0x1D58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Repair__Direction_89848D684615F3F1C77ADDA7720C0FA5; // 0x1D60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D61[0x7];                                     // 0x1D61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Repair;                                            // 0x1D68(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRepairing;                                       // 0x1D70(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void EventReceived_3E9E8D1C47DBD8AC69093DA048EAC8E3(const struct FGameplayEventData& Payload);
	void ExecuteUbergraph_BP_VETI_Vehicle_RepairServitor(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveOnDeath();
	void ReceiveUpdateHealthEffects(float HealthPct);
	void Repair__End_Repair__EventFunc();
	void Repair__FinishedFunc();
	void Repair__UpdateFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_VETI_Vehicle_RepairServitor_C">();
	}
	static class ABP_VETI_Vehicle_RepairServitor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_VETI_Vehicle_RepairServitor_C>();
	}
};
static_assert(alignof(ABP_VETI_Vehicle_RepairServitor_C) == 0x000010, "Wrong alignment on ABP_VETI_Vehicle_RepairServitor_C");
static_assert(sizeof(ABP_VETI_Vehicle_RepairServitor_C) == 0x001D80, "Wrong size on ABP_VETI_Vehicle_RepairServitor_C");
static_assert(offsetof(ABP_VETI_Vehicle_RepairServitor_C, UberGraphFrame) == 0x001D30, "Member 'ABP_VETI_Vehicle_RepairServitor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_VETI_Vehicle_RepairServitor_C, PS_SmokeVETVehicleDamageLight) == 0x001D38, "Member 'ABP_VETI_Vehicle_RepairServitor_C::PS_SmokeVETVehicleDamageLight' has a wrong offset!");
static_assert(offsetof(ABP_VETI_Vehicle_RepairServitor_C, Decal_RepairRadius) == 0x001D40, "Member 'ABP_VETI_Vehicle_RepairServitor_C::Decal_RepairRadius' has a wrong offset!");
static_assert(offsetof(ABP_VETI_Vehicle_RepairServitor_C, PS_SmokeTempestLeaf_1) == 0x001D48, "Member 'ABP_VETI_Vehicle_RepairServitor_C::PS_SmokeTempestLeaf_1' has a wrong offset!");
static_assert(offsetof(ABP_VETI_Vehicle_RepairServitor_C, PS_SmokeHover_01) == 0x001D50, "Member 'ABP_VETI_Vehicle_RepairServitor_C::PS_SmokeHover_01' has a wrong offset!");
static_assert(offsetof(ABP_VETI_Vehicle_RepairServitor_C, HitBox1) == 0x001D58, "Member 'ABP_VETI_Vehicle_RepairServitor_C::HitBox1' has a wrong offset!");
static_assert(offsetof(ABP_VETI_Vehicle_RepairServitor_C, Repair__Direction_89848D684615F3F1C77ADDA7720C0FA5) == 0x001D60, "Member 'ABP_VETI_Vehicle_RepairServitor_C::Repair__Direction_89848D684615F3F1C77ADDA7720C0FA5' has a wrong offset!");
static_assert(offsetof(ABP_VETI_Vehicle_RepairServitor_C, Repair) == 0x001D68, "Member 'ABP_VETI_Vehicle_RepairServitor_C::Repair' has a wrong offset!");
static_assert(offsetof(ABP_VETI_Vehicle_RepairServitor_C, IsRepairing) == 0x001D70, "Member 'ABP_VETI_Vehicle_RepairServitor_C::IsRepairing' has a wrong offset!");

}

