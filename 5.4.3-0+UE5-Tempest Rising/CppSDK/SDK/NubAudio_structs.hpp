#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NubAudio

#include "Basic.hpp"

#include "NubCore_structs.hpp"


namespace SDK
{

// Enum NubAudio.EAudioParamValueSeekType
// NumValues: 0x0004
enum class EAudioParamValueSeekType : uint8
{
	None                                     = 0,
	Symmetric                                = 1,
	Asymmetric                               = 2,
	EAudioParamValueSeekType_MAX             = 3,
};

// ScriptStruct NubAudio.AudioParam
// 0x0020 (0x0030 - 0x0010)
struct FAudioParam final : public FOwnedStruct
{
public:
	class FName                                   ParamName;                                         // 0x0010(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurrentValue;                                      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TargetValue;                                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAudioParamValueSeekType                      SeekType;                                          // 0x0020(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SeekSpeed;                                         // 0x0024(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AscendingSeekSpeed;                                // 0x0028(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DescendingSeekSpeed;                               // 0x002C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FAudioParam) == 0x000008, "Wrong alignment on FAudioParam");
static_assert(sizeof(FAudioParam) == 0x000030, "Wrong size on FAudioParam");
static_assert(offsetof(FAudioParam, ParamName) == 0x000010, "Member 'FAudioParam::ParamName' has a wrong offset!");
static_assert(offsetof(FAudioParam, CurrentValue) == 0x000018, "Member 'FAudioParam::CurrentValue' has a wrong offset!");
static_assert(offsetof(FAudioParam, TargetValue) == 0x00001C, "Member 'FAudioParam::TargetValue' has a wrong offset!");
static_assert(offsetof(FAudioParam, SeekType) == 0x000020, "Member 'FAudioParam::SeekType' has a wrong offset!");
static_assert(offsetof(FAudioParam, SeekSpeed) == 0x000024, "Member 'FAudioParam::SeekSpeed' has a wrong offset!");
static_assert(offsetof(FAudioParam, AscendingSeekSpeed) == 0x000028, "Member 'FAudioParam::AscendingSeekSpeed' has a wrong offset!");
static_assert(offsetof(FAudioParam, DescendingSeekSpeed) == 0x00002C, "Member 'FAudioParam::DescendingSeekSpeed' has a wrong offset!");

}

