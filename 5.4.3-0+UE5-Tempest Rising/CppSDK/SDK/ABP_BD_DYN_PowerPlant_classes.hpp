#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_BD_DYN_PowerPlant

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ABP_BD_DYN_PowerPlant_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Tempest_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_BD_DYN_PowerPlant.ABP_BD_DYN_PowerPlant_C
// 0x0170 (0x05A0 - 0x0430)
class UABP_BD_DYN_PowerPlant_C final : public UTedAnimInstance_Structure
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_BD_DYN_PowerPlant::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;        // 0x0438(0x0010)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0448(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0450(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0458(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0478(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x04C0(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0508(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0550(0x0048)()
	bool                                          DistributionModeActive;                            // 0x0598(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_BD_DYN_PowerPlant(int32 EntryPoint);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BD_DYN_PowerPlant_AnimGraphNode_SequencePlayer_7C55D5DF440B23A2A1A4DBBD08D5B70A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BD_DYN_PowerPlant_AnimGraphNode_SequencePlayer_1D361F464C1C32DDF5447CBD723769DD();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_BD_DYN_PowerPlant_C">();
	}
	static class UABP_BD_DYN_PowerPlant_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_BD_DYN_PowerPlant_C>();
	}
};
static_assert(alignof(UABP_BD_DYN_PowerPlant_C) == 0x000010, "Wrong alignment on UABP_BD_DYN_PowerPlant_C");
static_assert(sizeof(UABP_BD_DYN_PowerPlant_C) == 0x0005A0, "Wrong size on UABP_BD_DYN_PowerPlant_C");
static_assert(offsetof(UABP_BD_DYN_PowerPlant_C, UberGraphFrame) == 0x000430, "Member 'UABP_BD_DYN_PowerPlant_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_BD_DYN_PowerPlant_C, __AnimBlueprintMutables) == 0x000438, "Member 'UABP_BD_DYN_PowerPlant_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_BD_DYN_PowerPlant_C, AnimBlueprintExtension_PropertyAccess) == 0x000448, "Member 'UABP_BD_DYN_PowerPlant_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_BD_DYN_PowerPlant_C, AnimBlueprintExtension_Base) == 0x000450, "Member 'UABP_BD_DYN_PowerPlant_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_BD_DYN_PowerPlant_C, AnimGraphNode_Root) == 0x000458, "Member 'UABP_BD_DYN_PowerPlant_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_BD_DYN_PowerPlant_C, AnimGraphNode_Slot) == 0x000478, "Member 'UABP_BD_DYN_PowerPlant_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_BD_DYN_PowerPlant_C, AnimGraphNode_SequencePlayer_1) == 0x0004C0, "Member 'UABP_BD_DYN_PowerPlant_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_BD_DYN_PowerPlant_C, AnimGraphNode_BlendListByBool) == 0x000508, "Member 'UABP_BD_DYN_PowerPlant_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_BD_DYN_PowerPlant_C, AnimGraphNode_SequencePlayer) == 0x000550, "Member 'UABP_BD_DYN_PowerPlant_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_BD_DYN_PowerPlant_C, DistributionModeActive) == 0x000598, "Member 'UABP_BD_DYN_PowerPlant_C::DistributionModeActive' has a wrong offset!");

}

