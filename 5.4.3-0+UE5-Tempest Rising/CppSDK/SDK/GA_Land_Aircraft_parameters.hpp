#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Land_Aircraft

#include "Basic.hpp"


namespace SDK::Params
{

// Function GA_Land_Aircraft.GA_Land_Aircraft_C.ExecuteUbergraph_GA_Land_Aircraft
// 0x0030 (0x0030 - 0x0000)
struct GA_Land_Aircraft_C_ExecuteUbergraph_GA_Land_Aircraft final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ATedPawn*                               CallFunc_GetTedPawnFromActorInfo_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                   CallFunc_K2_GetAnimMontagesFromSet_ReturnValue;    // 0x0010(0x0010)(ReferenceParm)
	class UAnimMontage*                           CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MontagePlay_ReturnValue;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Land_Aircraft_C_ExecuteUbergraph_GA_Land_Aircraft) == 0x000008, "Wrong alignment on GA_Land_Aircraft_C_ExecuteUbergraph_GA_Land_Aircraft");
static_assert(sizeof(GA_Land_Aircraft_C_ExecuteUbergraph_GA_Land_Aircraft) == 0x000030, "Wrong size on GA_Land_Aircraft_C_ExecuteUbergraph_GA_Land_Aircraft");
static_assert(offsetof(GA_Land_Aircraft_C_ExecuteUbergraph_GA_Land_Aircraft, EntryPoint) == 0x000000, "Member 'GA_Land_Aircraft_C_ExecuteUbergraph_GA_Land_Aircraft::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Land_Aircraft_C_ExecuteUbergraph_GA_Land_Aircraft, K2Node_Event_bWasCancelled) == 0x000004, "Member 'GA_Land_Aircraft_C_ExecuteUbergraph_GA_Land_Aircraft::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_Land_Aircraft_C_ExecuteUbergraph_GA_Land_Aircraft, CallFunc_GetTedPawnFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_Land_Aircraft_C_ExecuteUbergraph_GA_Land_Aircraft::CallFunc_GetTedPawnFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Land_Aircraft_C_ExecuteUbergraph_GA_Land_Aircraft, CallFunc_K2_GetAnimMontagesFromSet_ReturnValue) == 0x000010, "Member 'GA_Land_Aircraft_C_ExecuteUbergraph_GA_Land_Aircraft::CallFunc_K2_GetAnimMontagesFromSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Land_Aircraft_C_ExecuteUbergraph_GA_Land_Aircraft, CallFunc_Array_Get_Item) == 0x000020, "Member 'GA_Land_Aircraft_C_ExecuteUbergraph_GA_Land_Aircraft::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Land_Aircraft_C_ExecuteUbergraph_GA_Land_Aircraft, CallFunc_MontagePlay_ReturnValue) == 0x000028, "Member 'GA_Land_Aircraft_C_ExecuteUbergraph_GA_Land_Aircraft::CallFunc_MontagePlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Land_Aircraft_C_ExecuteUbergraph_GA_Land_Aircraft, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'GA_Land_Aircraft_C_ExecuteUbergraph_GA_Land_Aircraft::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GA_Land_Aircraft.GA_Land_Aircraft_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Land_Aircraft_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Land_Aircraft_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Land_Aircraft_C_K2_OnEndAbility");
static_assert(sizeof(GA_Land_Aircraft_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Land_Aircraft_C_K2_OnEndAbility");
static_assert(offsetof(GA_Land_Aircraft_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Land_Aircraft_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

}

