#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DYN_Vehicle_Harvester

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_DYN_Vehicle_Harvester.BP_DYN_Vehicle_Harvester_C.ExecuteUbergraph_BP_DYN_Vehicle_Harvester
// 0x0140 (0x0140 - 0x0000)
struct BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Speed;                                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_MaxSpeed;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_HealthPct;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Temp_struct_Variable;                              // 0x0040(0x00D8)(ConstParm, ContainsInstancedReference)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11B[0x5];                                      // 0x011B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_1;       // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_2;       // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester) == 0x000008, "Wrong alignment on BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester");
static_assert(sizeof(BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester) == 0x000140, "Wrong size on BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester");
static_assert(offsetof(BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester, EntryPoint) == 0x000000, "Member 'BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester, K2Node_Event_Speed) == 0x000008, "Member 'BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester::K2Node_Event_Speed' has a wrong offset!");
static_assert(offsetof(BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester, K2Node_Event_MaxSpeed) == 0x00000C, "Member 'BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester::K2Node_Event_MaxSpeed' has a wrong offset!");
static_assert(offsetof(BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester, K2Node_Event_HealthPct) == 0x000030, "Member 'BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester::K2Node_Event_HealthPct' has a wrong offset!");
static_assert(offsetof(BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000034, "Member 'BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000035, "Member 'BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x000036, "Member 'BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester, CallFunc_Not_PreBool_ReturnValue) == 0x000037, "Member 'BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester, CallFunc_Not_PreBool_ReturnValue_1) == 0x000038, "Member 'BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester, CallFunc_BooleanAND_ReturnValue) == 0x000039, "Member 'BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester, CallFunc_BooleanAND_ReturnValue_1) == 0x00003A, "Member 'BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester, Temp_struct_Variable) == 0x000040, "Member 'BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000118, "Member 'BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000119, "Member 'BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x00011A, "Member 'BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000120, "Member 'BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000128, "Member 'BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester, CallFunc_Less_DoubleDouble_A_ImplicitCast_1) == 0x000130, "Member 'BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester::CallFunc_Less_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester, CallFunc_Less_DoubleDouble_A_ImplicitCast_2) == 0x000138, "Member 'BP_DYN_Vehicle_Harvester_C_ExecuteUbergraph_BP_DYN_Vehicle_Harvester::CallFunc_Less_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");

// Function BP_DYN_Vehicle_Harvester.BP_DYN_Vehicle_Harvester_C.ReceiveTickMovement
// 0x0008 (0x0008 - 0x0000)
struct BP_DYN_Vehicle_Harvester_C_ReceiveTickMovement final
{
public:
	float                                         Speed;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxSpeed;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DYN_Vehicle_Harvester_C_ReceiveTickMovement) == 0x000004, "Wrong alignment on BP_DYN_Vehicle_Harvester_C_ReceiveTickMovement");
static_assert(sizeof(BP_DYN_Vehicle_Harvester_C_ReceiveTickMovement) == 0x000008, "Wrong size on BP_DYN_Vehicle_Harvester_C_ReceiveTickMovement");
static_assert(offsetof(BP_DYN_Vehicle_Harvester_C_ReceiveTickMovement, Speed) == 0x000000, "Member 'BP_DYN_Vehicle_Harvester_C_ReceiveTickMovement::Speed' has a wrong offset!");
static_assert(offsetof(BP_DYN_Vehicle_Harvester_C_ReceiveTickMovement, MaxSpeed) == 0x000004, "Member 'BP_DYN_Vehicle_Harvester_C_ReceiveTickMovement::MaxSpeed' has a wrong offset!");

// Function BP_DYN_Vehicle_Harvester.BP_DYN_Vehicle_Harvester_C.ReceiveUpdateHealthEffects
// 0x0004 (0x0004 - 0x0000)
struct BP_DYN_Vehicle_Harvester_C_ReceiveUpdateHealthEffects final
{
public:
	float                                         HealthPct;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DYN_Vehicle_Harvester_C_ReceiveUpdateHealthEffects) == 0x000004, "Wrong alignment on BP_DYN_Vehicle_Harvester_C_ReceiveUpdateHealthEffects");
static_assert(sizeof(BP_DYN_Vehicle_Harvester_C_ReceiveUpdateHealthEffects) == 0x000004, "Wrong size on BP_DYN_Vehicle_Harvester_C_ReceiveUpdateHealthEffects");
static_assert(offsetof(BP_DYN_Vehicle_Harvester_C_ReceiveUpdateHealthEffects, HealthPct) == 0x000000, "Member 'BP_DYN_Vehicle_Harvester_C_ReceiveUpdateHealthEffects::HealthPct' has a wrong offset!");

// Function BP_DYN_Vehicle_Harvester.BP_DYN_Vehicle_Harvester_C.K2_OnResourceChange
// 0x0004 (0x0004 - 0x0000)
struct BP_DYN_Vehicle_Harvester_C_K2_OnResourceChange final
{
public:
	float                                         ResourceToMaxCapacityPct;                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DYN_Vehicle_Harvester_C_K2_OnResourceChange) == 0x000004, "Wrong alignment on BP_DYN_Vehicle_Harvester_C_K2_OnResourceChange");
static_assert(sizeof(BP_DYN_Vehicle_Harvester_C_K2_OnResourceChange) == 0x000004, "Wrong size on BP_DYN_Vehicle_Harvester_C_K2_OnResourceChange");
static_assert(offsetof(BP_DYN_Vehicle_Harvester_C_K2_OnResourceChange, ResourceToMaxCapacityPct) == 0x000000, "Member 'BP_DYN_Vehicle_Harvester_C_K2_OnResourceChange::ResourceToMaxCapacityPct' has a wrong offset!");

}

