#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DYN_Infantry_Machinist

#include "Basic.hpp"

#include "BP_Infantry_Base_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DYN_Infantry_Machinist.BP_DYN_Infantry_Machinist_C
// 0x00A0 (0x1C60 - 0x1BC0)
class ABP_DYN_Infantry_Machinist_C final : public ABP_Infantry_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1BC0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      PS_Repair_01_RepairTurret_Converted;               // 0x1BC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTedRangeDecalComponent*                DetectionDecal;                                    // 0x1BD0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        SpecialistDecal;                                   // 0x1BD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SearchLight_Sensor;                                // 0x1BE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal_RepairRadius;                                // 0x1BE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         TL_LightSensor_Emissive_C064D4BE4B374259C3ADFC9577414DFB; // 0x1BF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TL_LightSensor_Sensor_Color_Progress_C064D4BE4B374259C3ADFC9577414DFB; // 0x1BF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TL_LightSensor_Sensor_Atten_Radius_C064D4BE4B374259C3ADFC9577414DFB; // 0x1BF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TL_LightSensor_Sensor_Outer_Cone_C064D4BE4B374259C3ADFC9577414DFB; // 0x1BFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TL_LightSensor_Sensor_Intensity_C064D4BE4B374259C3ADFC9577414DFB; // 0x1C00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TL_LightSensor_Sensor_Scattering_C064D4BE4B374259C3ADFC9577414DFB; // 0x1C04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL_LightSensor__Direction_C064D4BE4B374259C3ADFC9577414DFB; // 0x1C08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C09[0x7];                                     // 0x1C09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_LightSensor;                                    // 0x1C10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Emissive_OFF_Emissive_027F0A3C4A6E3648AEB34D929F1CE336; // 0x1C18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Emissive_OFF__Direction_027F0A3C4A6E3648AEB34D929F1CE336; // 0x1C1C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1D[0x3];                                     // 0x1C1D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Emissive_OFF;                                      // 0x1C20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Decal_RepairRadius_Visibility;                     // 0x1C28(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Switching_Targets;                              // 0x1C29(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C2A[0x6];                                     // 0x1C2A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Old_Fire_Target;                                   // 0x1C30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Sensor_Idle_Color;                                 // 0x1C38(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Sensor_Target_Color;                               // 0x1C48(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isSearchlightCurrentWeapon;                        // 0x1C58(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isBeginPlay;                                       // 0x1C59(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCachedSelected;                                   // 0x1C5A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCachedHovered;                                    // 0x1C5B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Added_93E0BDE24D3D543AA92CF88BB4EDDA6B();
	void BndEvt__BP_DYN_Infantry_Machinist_DetectionDecal_K2Node_ComponentBoundEvent_2_RangeDecalDelegate__DelegateSignature();
	void BndEvt__BP_GDF_Infantry_CommsOfficer_DetectionDecal_K2Node_ComponentBoundEvent_1_RangeDecalDelegate__DelegateSignature();
	void CheckRangeDecals();
	void Emissive_OFF__FinishedFunc();
	void Emissive_OFF__UpdateFunc();
	void ExecuteUbergraph_BP_DYN_Infantry_Machinist(int32 EntryPoint);
	void K2_OnWeaponSwitched(class UTedWeapon* NewWeapon, class UTedWeapon* PreviousWeapon);
	void OnSelectionChanged_Blueprint(const bool bIsSelected, const bool bIsHovered);
	void ReceiveBeginPlay();
	void ReceiveOnDeath();
	void ReceiveTick(float DeltaSeconds);
	void Removed_DDC0912E43F85D9CA783A786260D7859();
	void TL_LightSensor__0__EventFunc();
	void TL_LightSensor__FinishedFunc();
	void TL_LightSensor__UpdateFunc();
	void Update_Sauron_s_Eye(bool HasTarget, bool ShutOff);
	void UpdateDetectionRangeDecal();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DYN_Infantry_Machinist_C">();
	}
	static class ABP_DYN_Infantry_Machinist_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DYN_Infantry_Machinist_C>();
	}
};
static_assert(alignof(ABP_DYN_Infantry_Machinist_C) == 0x000010, "Wrong alignment on ABP_DYN_Infantry_Machinist_C");
static_assert(sizeof(ABP_DYN_Infantry_Machinist_C) == 0x001C60, "Wrong size on ABP_DYN_Infantry_Machinist_C");
static_assert(offsetof(ABP_DYN_Infantry_Machinist_C, UberGraphFrame) == 0x001BC0, "Member 'ABP_DYN_Infantry_Machinist_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Infantry_Machinist_C, PS_Repair_01_RepairTurret_Converted) == 0x001BC8, "Member 'ABP_DYN_Infantry_Machinist_C::PS_Repair_01_RepairTurret_Converted' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Infantry_Machinist_C, DetectionDecal) == 0x001BD0, "Member 'ABP_DYN_Infantry_Machinist_C::DetectionDecal' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Infantry_Machinist_C, SpecialistDecal) == 0x001BD8, "Member 'ABP_DYN_Infantry_Machinist_C::SpecialistDecal' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Infantry_Machinist_C, SearchLight_Sensor) == 0x001BE0, "Member 'ABP_DYN_Infantry_Machinist_C::SearchLight_Sensor' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Infantry_Machinist_C, Decal_RepairRadius) == 0x001BE8, "Member 'ABP_DYN_Infantry_Machinist_C::Decal_RepairRadius' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Infantry_Machinist_C, TL_LightSensor_Emissive_C064D4BE4B374259C3ADFC9577414DFB) == 0x001BF0, "Member 'ABP_DYN_Infantry_Machinist_C::TL_LightSensor_Emissive_C064D4BE4B374259C3ADFC9577414DFB' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Infantry_Machinist_C, TL_LightSensor_Sensor_Color_Progress_C064D4BE4B374259C3ADFC9577414DFB) == 0x001BF4, "Member 'ABP_DYN_Infantry_Machinist_C::TL_LightSensor_Sensor_Color_Progress_C064D4BE4B374259C3ADFC9577414DFB' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Infantry_Machinist_C, TL_LightSensor_Sensor_Atten_Radius_C064D4BE4B374259C3ADFC9577414DFB) == 0x001BF8, "Member 'ABP_DYN_Infantry_Machinist_C::TL_LightSensor_Sensor_Atten_Radius_C064D4BE4B374259C3ADFC9577414DFB' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Infantry_Machinist_C, TL_LightSensor_Sensor_Outer_Cone_C064D4BE4B374259C3ADFC9577414DFB) == 0x001BFC, "Member 'ABP_DYN_Infantry_Machinist_C::TL_LightSensor_Sensor_Outer_Cone_C064D4BE4B374259C3ADFC9577414DFB' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Infantry_Machinist_C, TL_LightSensor_Sensor_Intensity_C064D4BE4B374259C3ADFC9577414DFB) == 0x001C00, "Member 'ABP_DYN_Infantry_Machinist_C::TL_LightSensor_Sensor_Intensity_C064D4BE4B374259C3ADFC9577414DFB' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Infantry_Machinist_C, TL_LightSensor_Sensor_Scattering_C064D4BE4B374259C3ADFC9577414DFB) == 0x001C04, "Member 'ABP_DYN_Infantry_Machinist_C::TL_LightSensor_Sensor_Scattering_C064D4BE4B374259C3ADFC9577414DFB' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Infantry_Machinist_C, TL_LightSensor__Direction_C064D4BE4B374259C3ADFC9577414DFB) == 0x001C08, "Member 'ABP_DYN_Infantry_Machinist_C::TL_LightSensor__Direction_C064D4BE4B374259C3ADFC9577414DFB' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Infantry_Machinist_C, TL_LightSensor) == 0x001C10, "Member 'ABP_DYN_Infantry_Machinist_C::TL_LightSensor' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Infantry_Machinist_C, Emissive_OFF_Emissive_027F0A3C4A6E3648AEB34D929F1CE336) == 0x001C18, "Member 'ABP_DYN_Infantry_Machinist_C::Emissive_OFF_Emissive_027F0A3C4A6E3648AEB34D929F1CE336' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Infantry_Machinist_C, Emissive_OFF__Direction_027F0A3C4A6E3648AEB34D929F1CE336) == 0x001C1C, "Member 'ABP_DYN_Infantry_Machinist_C::Emissive_OFF__Direction_027F0A3C4A6E3648AEB34D929F1CE336' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Infantry_Machinist_C, Emissive_OFF) == 0x001C20, "Member 'ABP_DYN_Infantry_Machinist_C::Emissive_OFF' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Infantry_Machinist_C, Decal_RepairRadius_Visibility) == 0x001C28, "Member 'ABP_DYN_Infantry_Machinist_C::Decal_RepairRadius_Visibility' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Infantry_Machinist_C, Is_Switching_Targets) == 0x001C29, "Member 'ABP_DYN_Infantry_Machinist_C::Is_Switching_Targets' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Infantry_Machinist_C, Old_Fire_Target) == 0x001C30, "Member 'ABP_DYN_Infantry_Machinist_C::Old_Fire_Target' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Infantry_Machinist_C, Sensor_Idle_Color) == 0x001C38, "Member 'ABP_DYN_Infantry_Machinist_C::Sensor_Idle_Color' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Infantry_Machinist_C, Sensor_Target_Color) == 0x001C48, "Member 'ABP_DYN_Infantry_Machinist_C::Sensor_Target_Color' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Infantry_Machinist_C, isSearchlightCurrentWeapon) == 0x001C58, "Member 'ABP_DYN_Infantry_Machinist_C::isSearchlightCurrentWeapon' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Infantry_Machinist_C, isBeginPlay) == 0x001C59, "Member 'ABP_DYN_Infantry_Machinist_C::isBeginPlay' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Infantry_Machinist_C, bCachedSelected) == 0x001C5A, "Member 'ABP_DYN_Infantry_Machinist_C::bCachedSelected' has a wrong offset!");
static_assert(offsetof(ABP_DYN_Infantry_Machinist_C, bCachedHovered) == 0x001C5B, "Member 'ABP_DYN_Infantry_Machinist_C::bCachedHovered' has a wrong offset!");

}

