#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HUD_Resources_Placeholder

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Tempest_structs.hpp"


namespace SDK::Params
{

// Function WBP_HUD_Resources_Placeholder.WBP_HUD_Resources_Placeholder_C.OnAnimationFinished
// 0x0018 (0x0018 - 0x0000)
struct WBP_HUD_Resources_Placeholder_C_OnAnimationFinished final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Local_PlayedAnim;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_Resources_Placeholder_C_OnAnimationFinished) == 0x000008, "Wrong alignment on WBP_HUD_Resources_Placeholder_C_OnAnimationFinished");
static_assert(sizeof(WBP_HUD_Resources_Placeholder_C_OnAnimationFinished) == 0x000018, "Wrong size on WBP_HUD_Resources_Placeholder_C_OnAnimationFinished");
static_assert(offsetof(WBP_HUD_Resources_Placeholder_C_OnAnimationFinished, Animation) == 0x000000, "Member 'WBP_HUD_Resources_Placeholder_C_OnAnimationFinished::Animation' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Resources_Placeholder_C_OnAnimationFinished, Local_PlayedAnim) == 0x000008, "Member 'WBP_HUD_Resources_Placeholder_C_OnAnimationFinished::Local_PlayedAnim' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Resources_Placeholder_C_OnAnimationFinished, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000010, "Member 'WBP_HUD_Resources_Placeholder_C_OnAnimationFinished::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");

// Function WBP_HUD_Resources_Placeholder.WBP_HUD_Resources_Placeholder_C.OnPlayWidgetAnimation
// 0x0020 (0x0020 - 0x0000)
struct WBP_HUD_Resources_Placeholder_C_OnPlayWidgetAnimation final
{
public:
	struct FGameplayTag                           InAnim;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_Resources_Placeholder_C_OnPlayWidgetAnimation) == 0x000008, "Wrong alignment on WBP_HUD_Resources_Placeholder_C_OnPlayWidgetAnimation");
static_assert(sizeof(WBP_HUD_Resources_Placeholder_C_OnPlayWidgetAnimation) == 0x000020, "Wrong size on WBP_HUD_Resources_Placeholder_C_OnPlayWidgetAnimation");
static_assert(offsetof(WBP_HUD_Resources_Placeholder_C_OnPlayWidgetAnimation, InAnim) == 0x000000, "Member 'WBP_HUD_Resources_Placeholder_C_OnPlayWidgetAnimation::InAnim' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Resources_Placeholder_C_OnPlayWidgetAnimation, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000008, "Member 'WBP_HUD_Resources_Placeholder_C_OnPlayWidgetAnimation::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Resources_Placeholder_C_OnPlayWidgetAnimation, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'WBP_HUD_Resources_Placeholder_C_OnPlayWidgetAnimation::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Resources_Placeholder_C_OnPlayWidgetAnimation, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000018, "Member 'WBP_HUD_Resources_Placeholder_C_OnPlayWidgetAnimation::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");

// Function WBP_HUD_Resources_Placeholder.WBP_HUD_Resources_Placeholder_C.OnResourcesChange_Handler
// 0x0058 (0x0058 - 0x0000)
struct WBP_HUD_Resources_Placeholder_C_OnResourcesChange_Handler final
{
public:
	class UTedPlayerData*                         InPlayerData;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTedPlayerDataResources                InPrevious;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FTedPlayerDataResources                InCurrent;                                         // 0x0028(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0048(0x0010)()
};
static_assert(alignof(WBP_HUD_Resources_Placeholder_C_OnResourcesChange_Handler) == 0x000008, "Wrong alignment on WBP_HUD_Resources_Placeholder_C_OnResourcesChange_Handler");
static_assert(sizeof(WBP_HUD_Resources_Placeholder_C_OnResourcesChange_Handler) == 0x000058, "Wrong size on WBP_HUD_Resources_Placeholder_C_OnResourcesChange_Handler");
static_assert(offsetof(WBP_HUD_Resources_Placeholder_C_OnResourcesChange_Handler, InPlayerData) == 0x000000, "Member 'WBP_HUD_Resources_Placeholder_C_OnResourcesChange_Handler::InPlayerData' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Resources_Placeholder_C_OnResourcesChange_Handler, InPrevious) == 0x000008, "Member 'WBP_HUD_Resources_Placeholder_C_OnResourcesChange_Handler::InPrevious' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Resources_Placeholder_C_OnResourcesChange_Handler, InCurrent) == 0x000028, "Member 'WBP_HUD_Resources_Placeholder_C_OnResourcesChange_Handler::InCurrent' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Resources_Placeholder_C_OnResourcesChange_Handler, CallFunc_Conv_IntToText_ReturnValue) == 0x000048, "Member 'WBP_HUD_Resources_Placeholder_C_OnResourcesChange_Handler::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_HUD_Resources_Placeholder.WBP_HUD_Resources_Placeholder_C.OnCanPlayWidgetAnimation
// 0x000C (0x000C - 0x0000)
struct WBP_HUD_Resources_Placeholder_C_OnCanPlayWidgetAnimation final
{
public:
	struct FGameplayTag                           InAnim;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HUD_Resources_Placeholder_C_OnCanPlayWidgetAnimation) == 0x000004, "Wrong alignment on WBP_HUD_Resources_Placeholder_C_OnCanPlayWidgetAnimation");
static_assert(sizeof(WBP_HUD_Resources_Placeholder_C_OnCanPlayWidgetAnimation) == 0x00000C, "Wrong size on WBP_HUD_Resources_Placeholder_C_OnCanPlayWidgetAnimation");
static_assert(offsetof(WBP_HUD_Resources_Placeholder_C_OnCanPlayWidgetAnimation, InAnim) == 0x000000, "Member 'WBP_HUD_Resources_Placeholder_C_OnCanPlayWidgetAnimation::InAnim' has a wrong offset!");
static_assert(offsetof(WBP_HUD_Resources_Placeholder_C_OnCanPlayWidgetAnimation, ReturnValue) == 0x000008, "Member 'WBP_HUD_Resources_Placeholder_C_OnCanPlayWidgetAnimation::ReturnValue' has a wrong offset!");

}

